"use strict";
(self.webpackJsonp = self.webpackJsonp || []).push([
  [18],
  [
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "c", function () {
        return S;
      }),
        n.d(t, "e", function () {
          return k;
        }),
        n.d(t, "l", function () {
          return L;
        }),
        n.d(t, "o", function () {
          return M;
        }),
        n.d(t, "w", function () {
          return A;
        }),
        n.d(t, "p", function () {
          return P;
        }),
        n.d(t, "v", function () {
          return T;
        }),
        n.d(t, "r", function () {
          return N;
        }),
        n.d(t, "q", function () {
          return U;
        }),
        n.d(t, "u", function () {
          return H;
        }),
        n.d(t, "t", function () {
          return q;
        }),
        n.d(t, "s", function () {
          return z;
        }),
        n.d(t, "j", function () {
          return W;
        }),
        n.d(t, "m", function () {
          return J;
        }),
        n.d(t, "g", function () {
          return Y;
        }),
        n.d(t, "n", function () {
          return Q;
        }),
        n.d(t, "d", function () {
          return Z;
        }),
        n.d(t, "k", function () {
          return X;
        }),
        n.d(t, "b", function () {
          return ee;
        }),
        n.d(t, "i", function () {
          return te;
        }),
        n.d(t, "f", function () {
          return ne;
        }),
        n.d(t, "h", function () {
          return re;
        }),
        n.d(t, "a", function () {
          return ie;
        });
      var r,
        i,
        a = n(8),
        o = n.n(a),
        u = n(37),
        s = n.n(u),
        l = n(24),
        c = n(9),
        d = n(84),
        f = n(227),
        _ = n(74),
        p = n(33),
        v = c.f.replace("@", ""),
        h = c.j.replace("@", ""),
        m = c.d.replace("@", ""),
        g = [236, 237, 238, 239],
        y = 248,
        b = 249,
        w = [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "-",
          ".",
          "�",
          "�",
          "�",
          "�",
        ],
        O = [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
        ],
        E = "",
        I = 1,
        S = { sentinel: "DROP_ATTR" },
        k = _.c.create(null, "g.us"),
        L = _.c.create(null, c.i),
        G = (_.c.create("status", "broadcast"), {}),
        M = class {
          constructor(e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : G,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : null;
            (this.tag = e), (this.attrs = t), (this.content = n);
          }
          toString() {
            var e = "<" + this.tag;
            e += (function (e) {
              for (var t = Object.keys(e), n = "", r = 0; r < t.length; r++) {
                var i = t[r];
                n += ` ${i}="${e[i].toString()}"`;
              }
              return n;
            })(this.attrs);
            var t = this.content;
            return (
              Array.isArray(t)
                ? (e += `>${t.map(String).join("")}</${this.tag}>`)
                : (e += t
                    ? `>${(function (e) {
                        return 0 === e.length
                          ? "\x3c!-- empty binary --\x3e"
                          : e.length < 50
                          ? (0, p.c)(e)
                          : `\x3c!-- ${e.length} bytes --\x3e`;
                      })(t)}</${this.tag}>`
                    : " />"),
              e
            );
          }
        },
        A = function (e, t, n) {
          var r = null;
          if (t && null != t.children)
            throw new Error(
              'Children should not be passed via props (see eslint check "react/no-children-props")'
            );
          if (Array.isArray(n)) r = n.filter(Boolean);
          else if ("string" == typeof n) r = l.a.build(n).readByteArray();
          else if (n instanceof ArrayBuffer) r = new Uint8Array(n);
          else if (n instanceof Uint8Array) r = n;
          else {
            for (var i = [], a = 2; a < arguments.length; a++) {
              var o = arguments[a];
              o && i.push(o);
            }
            r = i;
          }
          Array.isArray(r) && 0 === r.length && (r = null);
          var u = {};
          if (t) {
            var s = t;
            Object.keys(s).forEach((t) => {
              var n = s[t];
              if (null == n) throw new Error(`Attr ${t} in <${e}> is null`);
              n !== S && (u[t] = n);
            });
          }
          return new M(e, u, r);
        };
      function P(e) {
        return e instanceof _.c ? e.toString() : e;
      }
      function T(e) {
        var t = e.content;
        return (
          Array.isArray(t)
            ? (t = t.map(T))
            : "string" == typeof t && (t = l.a.build(t).readByteArray()),
          new M(e.tag, e.attrs || G, t)
        );
      }
      function N(e) {
        var t = e instanceof M ? e : T(e),
          n = new l.a();
        (function e(t, n) {
          if (null == t) n.writeUint8(0);
          else if (t instanceof M)
            (function t(n, r) {
              if (void 0 === n.tag)
                return r.writeUint8(y), void r.writeUint8(0);
              var i = 1;
              n.attrs && (i += 2 * Object.keys(n.attrs).length),
                n.content && i++,
                i < 256
                  ? (r.writeUint8(y), r.writeUint8(i))
                  : i < 65536 && (r.writeUint8(b), r.writeUint16(i)),
                e(n.tag, r),
                n.attrs &&
                  Object.keys(n.attrs).forEach((t) => {
                    R(t, r), e(n.attrs[t], r);
                  });
              var a = n.content;
              if (Array.isArray(a)) {
                a.length < 256
                  ? (r.writeUint8(y), r.writeUint8(a.length))
                  : a.length < 65536 &&
                    (r.writeUint8(b), r.writeUint16(a.length));
                for (var o = 0; o < a.length; o++) t(a[o], r);
              } else a && e(a, r);
            })(t, n);
          else if (t instanceof _.c)
            (function (t, n) {
              var r = t.getInnerJid();
              if (r.type === _.b.JID_U) {
                var i = r.user,
                  a = r.device,
                  o = r.domainType;
                n.writeUint8(247), n.writeUint8(o), n.writeUint8(a), e(i, n);
              } else if (r.type === _.b.JID_FB) {
                var u = r.user,
                  s = r.device;
                n.writeUint8(246), e(u, n), n.writeUint16(s), e(h, n);
              } else {
                var l = r.user,
                  c = r.server;
                n.writeUint8(250),
                  null != l ? e(l, n) : n.writeUint8(0),
                  e(c, n);
              }
            })(t, n);
          else if ("string" == typeof t) R(t, n);
          else {
            if (!(t instanceof Uint8Array))
              throw new Error("Invalid payload type " + typeof t);
            (function (e, t) {
              D(e.length, t), t.writeByteArray(e);
            })(t, n);
          }
        })(t, n);
        var r = n.readByteArray(),
          i = new Uint8Array(1 + r.length);
        return (i[0] = 0), i.set(r, 1), i;
      }
      function C(e) {
        for (var t = new Map(), n = 0; n < e.length; n++) t.set(e[n], n);
        return t;
      }
      function R(e, t) {
        if ("" === e) return t.writeUint8(252), void t.writeUint8(0);
        null == r && (r = C(f.c));
        var n = r.get(e);
        if (null == n) {
          if (null == i) {
            i = [];
            for (var a = 0; a < f.a.length; ++a) i.push(C(f.a[a]));
          }
          for (var o = 0; o < i.length; ++o) {
            var u = i[o].get(e);
            if (null != u) return t.writeUint8(g[o]), void t.writeUint8(u);
          }
          var s = (0, l.c)(e);
          if (s < 128) {
            if (!/[^0-9.-]+?/.exec(e)) return void x(e, 255, t);
            if (!/[^0-9A-F]+?/.exec(e)) return void x(e, 251, t);
          }
          D(s, t), t.writeString(e);
        } else t.writeUint8(n + 1);
      }
      function x(e, t, n) {
        var r = e.length % 2 == 1;
        n.writeUint8(t);
        var i = Math.ceil(e.length / 2);
        r && (i |= 128), n.writeUint8(i);
        for (var a = 0, o = 0; o < e.length; o++) {
          var u = e.charCodeAt(o),
            s = null;
          if (
            (48 <= u && u <= 57
              ? (s = u - 48)
              : 255 === t
              ? 45 === u
                ? (s = 10)
                : 46 === u && (s = 11)
              : 251 === t && 65 <= u && u <= 70 && (s = u - 55),
            null == s)
          )
            throw new Error("Cannot nibble encode " + u);
          o % 2 == 0
            ? ((a = s << 4), o === e.length - 1 && ((a |= 15), n.writeUint8(a)))
            : ((a |= s), n.writeUint8(a));
        }
      }
      function D(e, t) {
        if (e < 256) t.writeUint8(252), t.writeUint8(e);
        else if (e < 1048576)
          t.writeUint8(253),
            t.writeUint8((e >>> 16) & 255),
            t.writeUint8((e >>> 8) & 255),
            t.writeUint8(255 & e);
        else {
          if (!(e < 4294967296))
            throw new Error(
              `Binary with length ${e} is too big for WAP protocol`
            );
          t.writeUint8(254), t.writeUint32(e);
        }
      }
      function U(e, t) {
        var n = new l.a(e);
        return 2 & n.readUint8()
          ? (__LOG__(2)`Decoding compressed stanza`,
            t(n.readByteArray()).then((e) => F(new l.a(e))))
          : Promise.resolve(F(n));
      }
      function j(e, t) {
        var n,
          r,
          i,
          a = e.readUint8();
        if (0 === a) return null;
        if (a === y) return $(e, e.readUint8());
        if (a === b) return $(e, e.readUint16());
        if (252 === a) {
          var o = e.readUint8();
          return V(e, o, t);
        }
        if (253 === a) {
          var u = e.readUint8(),
            s = e.readUint8(),
            l = e.readUint8();
          return V(e, ((15 & u) << 16) + (s << 8) + l, t);
        }
        if (254 === a) {
          var c = e.readUint32();
          return V(e, c, t);
        }
        if (250 === a)
          return (
            (r = (function (e) {
              var t = j(e, !0);
              if (null != t && "string" != typeof t)
                throw new Error(
                  "WAWap:decodeNullableString got invalid value, string expected"
                );
              return t;
            })((n = e))),
            (i = B(n)),
            _.c.create(r, i)
          );
        if (246 === a)
          return (function (e) {
            var t = B(e),
              n = e.readUint16();
            return B(e), _.c.createFbJid(t, n);
          })(e);
        if (247 === a)
          return (function (e) {
            var t = null,
              n = e.readUint8();
            if (0 === n) t = _.a.WHATSAPP;
            else {
              if (1 !== n)
                throw new Error(
                  "decodeJidU - Invalid domain type encoding " + n
                );
              t = _.a.LID;
            }
            var r = e.readUint8(),
              i = B(e);
            return _.c.createJidU(i, t, r);
          })(e);
        if (255 === a) {
          var d = e.readUint8();
          return K(e, w, d >>> 7, 127 & d);
        }
        if (251 === a) {
          var p = e.readUint8();
          return K(e, O, p >>> 7, 127 & p);
        }
        if (a <= 0 || a >= 240) throw new Error("Unable to decode WAP buffer");
        if (a >= 236 && a <= 239) {
          var v = a - 236,
            h = f.a[v];
          if (void 0 === h) throw new Error("Missing WAP dictionary " + v);
          var m = e.readUint8(),
            g = h[m];
          if (void 0 === g)
            throw new Error(`Invalid value index ${m} in dict ${v}`);
          return g;
        }
        var E = f.c[a - 1];
        if (void 0 === E) throw new Error("Undefined token with index " + a);
        return E;
      }
      function $(e, t) {
        for (var n = [], r = 0; r < t; r++) n.push(F(e));
        return n;
      }
      function F(e) {
        var t,
          n = e.readUint8();
        if (n === y) t = e.readUint8();
        else {
          if (n !== b)
            throw new Error(
              `Failed to decode node since type byte ${String(n)} is invalid`
            );
          t = e.readUint16();
        }
        var r = void 0,
          i = null;
        if (0 === t)
          throw new Error("Failed to decode node, list cannot be empty");
        var a = B(e);
        for (t -= 1; t > 1; ) {
          r || (r = {});
          var o = B(e),
            u = j(e, !0);
          (r[o] = u), (t -= 2);
        }
        return (
          1 === t && (i = j(e, !1)) instanceof _.c && (i = String(i)),
          new M(a, r, i)
        );
      }
      function B(e) {
        var t = j(e, !0);
        if ("string" != typeof t)
          throw new Error(
            "WAWap:decodeString got invalid value, string expected"
          );
        return t;
      }
      function V(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        return n ? e.readString(t) : e.readByteArray(t);
      }
      function K(e, t, n, r) {
        for (var i = new Array(2 * r - n), a = 0; a < i.length - 1; a += 2) {
          var o = e.readUint8();
          (i[a] = t[o >>> 4]), (i[a + 1] = t[15 & o]);
        }
        if (n) {
          var u = e.readUint8();
          i[i.length - 1] = t[u >>> 4];
        }
        return i.join("");
      }
      function H() {
        if (!E) {
          var e = new Uint16Array(2);
          self.crypto.getRandomValues(e),
            (E = `${String(e[0])}.${String(e[1])}-`);
        }
        return `${E}${I++}`;
      }
      function q(e) {
        switch (e.type) {
          case "group":
            return e.groupJid;
          case "status":
            return c.h;
          case "device":
            return e.deviceJid;
          default:
            return e.type, e.broadcastJid;
        }
      }
      function z(e) {
        switch (e.type) {
          case "group":
          case "status":
          case "broadcast":
            return e.author;
          default:
            return e.type, null;
        }
      }
      function W(e) {
        return "status" === e.type ||
          "group" === e.type ||
          "broadcast" === e.type
          ? Y(e.author)
          : S;
      }
      function J(e) {
        return Y(q(e));
      }
      function Y(e) {
        var t = (0, c.U)(e);
        if (null != t)
          return (function (e) {
            return "s.whatsapp.net" === e ? L : "g.us" === e ? k : (0, s.a)(e);
          })(t);
        var n = e.split("@"),
          r = o()(n, 2),
          i = r[0],
          a = r[1],
          u = null,
          l = null;
        if ((a === h || a === v || a === m) && -1 !== i.indexOf(":")) {
          var d = i.split(":"),
            f = o()(d, 2);
          (i = f[0]), (u = f[1]), (l = parseInt(u, 10));
        }
        if (a === v) return _.c.createFbJid(i, l);
        var p = a === m ? _.a.LID : _.a.WHATSAPP;
        return null != l && 0 !== l
          ? _.c.createJidU(i, p, l)
          : _.c.create(i, a);
      }
      function Q(e) {
        return Y(e);
      }
      function Z(e) {
        return Y(e);
      }
      function X(e) {
        return e;
      }
      function ee(e) {
        return e;
      }
      function te(e) {
        return null == e ? S : e;
      }
      function ne(e) {
        return e.toString();
      }
      function re(e) {
        return (0, d.c)(e);
      }
      function ie(e) {
        for (
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 4,
            n = e,
            r = new Uint8Array(t),
            i = t - 1;
          i >= 0;
          i--
        )
          (r[i] = 255 & n), (n >>>= 8);
        return r;
      }
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "d", function () {
        return d;
      }),
        n.d(t, "c", function () {
          return f;
        }),
        n.d(t, "e", function () {
          return _;
        }),
        n.d(t, "f", function () {
          return p;
        }),
        n.d(t, "g", function () {
          return v;
        }),
        n.d(t, "b", function () {
          return h;
        }),
        n.d(t, "a", function () {
          return m;
        });
      var r = n(5),
        i = n(81),
        a = n(119),
        o = n(12),
        u = n(39),
        s = null,
        l = null;
      function c(e) {
        if (s) return s;
        throw new Error(`Storage::${e} called before startStorage`);
      }
      function d(e, t) {
        var n = c("onMsgProcessingThread");
        return n.Aq.enqueue(() => n.Ar.enqueue(e, t));
      }
      function f(e, t, n) {
        return c(e).runThenUpdate(t, (e) => n(e, (0, u.b)(), o.a));
      }
      function _(e, t) {
        return t(c(e).Ao);
      }
      function p(e, t) {
        return t(c(e).Ao.table);
      }
      function v(e) {
        if (l) return l;
        var t = new (class {
          constructor(e) {
            (this.Ap = new i.a()),
              (this.Aq = new i.a(5e3)),
              (this.Ar = new i.b(5e3)),
              (this.Ao = e);
          }
          runThenUpdate(e, t) {
            return this.Ap.enqueueHandlers(e(this.Ao), t);
          }
        })(new e());
        return (
          (s = t),
          (l = t.Ao.verifyRegisteredUser().then((t) => {
            if (!t) return h().then(() => ((l = null), v(e)));
          }))
        );
      }
      function h() {
        var e = s;
        return e
          ? ((s = null),
            (0, r.i)(
              (0, r.c)([
                e.Ao.table.stores.delete(),
                (0, a.getChunkTable)().stores.delete(),
              ])
            ))
          : Promise.resolve();
      }
      function m() {
        var e = s;
        e && ((s = null), e.Ao.table.close(), (0, a.getChunkTable)().close());
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "c", function () {
        return u;
      }),
        n.d(t, "e", function () {
          return s;
        }),
        n.d(t, "f", function () {
          return l;
        }),
        n.d(t, "b", function () {
          return c;
        }),
        n.d(t, "g", function () {
          return d;
        }),
        n.d(t, "d", function () {
          return f;
        }),
        n.d(t, "h", function () {
          return _;
        }),
        n.d(t, "i", function () {
          return p;
        }),
        n.d(t, "j", function () {
          return v;
        }),
        n.d(t, "a", function () {
          return h;
        });
      var r = null,
        i = !1,
        a = null,
        o = null,
        u = (e, t, n) => {
          if (!r) throw new Error("fireAndForget called before setApi!");
          r.fireAndForget(e, t, n);
        },
        s = (e, t, n) => {
          if (!r) throw new Error("sendAndReceive called before setApi!");
          return r.sendAndReceive(e, t, n);
        };
      function l(e) {
        r = e;
      }
      function c() {
        f() || null == o || o();
      }
      function d(e) {
        o = e;
      }
      function f() {
        return i;
      }
      function _(e) {
        i = e;
      }
      function p(e) {
        a = e;
      }
      function v() {
        if (null == a)
          throw new Error(
            "Called shutdown without having a shutdown function assigned"
          );
        a();
      }
      var h = { fireAndForget: u, sendAndReceive: s };
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "q", function () {
        return _e.e;
      }),
        n.d(t, "t", function () {
          return pe;
        }),
        n.d(t, "H", function () {
          return ve;
        }),
        n.d(t, "o", function () {
          return he;
        }),
        n.d(t, "tb", function () {
          return me;
        }),
        n.d(t, "sb", function () {
          return ge;
        }),
        n.d(t, "i", function () {
          return ye;
        }),
        n.d(t, "Qc", function () {
          return be;
        }),
        n.d(t, "Tc", function () {
          return we;
        }),
        n.d(t, "Pc", function () {
          return Ee;
        }),
        n.d(t, "y", function () {
          return Ie;
        }),
        n.d(t, "W", function () {
          return Se;
        }),
        n.d(t, "z", function () {
          return ke;
        }),
        n.d(t, "V", function () {
          return Le;
        }),
        n.d(t, "G", function () {
          return Ge;
        }),
        n.d(t, "D", function () {
          return Me;
        }),
        n.d(t, "Cb", function () {
          return Ae;
        }),
        n.d(t, "xc", function () {
          return Pe;
        }),
        n.d(t, "Db", function () {
          return Te;
        }),
        n.d(t, "Ab", function () {
          return Ne;
        }),
        n.d(t, "Mb", function () {
          return Ce;
        }),
        n.d(t, "K", function () {
          return Re;
        }),
        n.d(t, "nb", function () {
          return xe;
        }),
        n.d(t, "mb", function () {
          return De;
        }),
        n.d(t, "B", function () {
          return Ue;
        }),
        n.d(t, "v", function () {
          return je;
        }),
        n.d(t, "x", function () {
          return $e;
        }),
        n.d(t, "w", function () {
          return Fe;
        }),
        n.d(t, "dc", function () {
          return Be;
        }),
        n.d(t, "ec", function () {
          return Ve;
        }),
        n.d(t, "b", function () {
          return Ke;
        }),
        n.d(t, "Tb", function () {
          return He;
        }),
        n.d(t, "X", function () {
          return qe;
        }),
        n.d(t, "Lb", function () {
          return ze;
        }),
        n.d(t, "fc", function () {
          return We;
        }),
        n.d(t, "Bb", function () {
          return Je;
        }),
        n.d(t, "Sb", function () {
          return Ye;
        }),
        n.d(t, "tc", function () {
          return Qe;
        }),
        n.d(t, "yc", function () {
          return Ze;
        }),
        n.d(t, "Q", function () {
          return Xe;
        }),
        n.d(t, "R", function () {
          return et;
        }),
        n.d(t, "M", function () {
          return tt;
        }),
        n.d(t, "L", function () {
          return nt;
        }),
        n.d(t, "A", function () {
          return rt;
        }),
        n.d(t, "c", function () {
          return it;
        }),
        n.d(t, "Kc", function () {
          return at;
        }),
        n.d(t, "Hc", function () {
          return ot;
        }),
        n.d(t, "Vb", function () {
          return ut;
        }),
        n.d(t, "Ic", function () {
          return st;
        }),
        n.d(t, "Jc", function () {
          return lt;
        }),
        n.d(t, "d", function () {
          return ct;
        }),
        n.d(t, "nc", function () {
          return dt;
        }),
        n.d(t, "sc", function () {
          return ft;
        }),
        n.d(t, "oc", function () {
          return _t;
        }),
        n.d(t, "Hb", function () {
          return vt;
        }),
        n.d(t, "bc", function () {
          return ht;
        }),
        n.d(t, "ic", function () {
          return mt;
        }),
        n.d(t, "Gb", function () {
          return gt;
        }),
        n.d(t, "r", function () {
          return yt;
        }),
        n.d(t, "jc", function () {
          return bt;
        }),
        n.d(t, "lc", function () {
          return wt;
        }),
        n.d(t, "kc", function () {
          return Ot;
        }),
        n.d(t, "F", function () {
          return Et;
        }),
        n.d(t, "Y", function () {
          return It;
        }),
        n.d(t, "Oc", function () {
          return St;
        }),
        n.d(t, "zc", function () {
          return kt;
        }),
        n.d(t, "O", function () {
          return Lt;
        }),
        n.d(t, "N", function () {
          return Gt;
        }),
        n.d(t, "mc", function () {
          return Mt;
        }),
        n.d(t, "Rb", function () {
          return At;
        }),
        n.d(t, "Ib", function () {
          return Pt;
        }),
        n.d(t, "Dc", function () {
          return Tt;
        }),
        n.d(t, "m", function () {
          return Nt;
        }),
        n.d(t, "n", function () {
          return Ct;
        }),
        n.d(t, "j", function () {
          return Rt;
        }),
        n.d(t, "pb", function () {
          return xt;
        }),
        n.d(t, "xb", function () {
          return Dt;
        }),
        n.d(t, "gb", function () {
          return Ut;
        }),
        n.d(t, "hb", function () {
          return jt;
        }),
        n.d(t, "u", function () {
          return $t;
        }),
        n.d(t, "qb", function () {
          return Ft;
        }),
        n.d(t, "vb", function () {
          return Bt;
        }),
        n.d(t, "Bc", function () {
          return Vt;
        }),
        n.d(t, "fb", function () {
          return Kt;
        }),
        n.d(t, "Fb", function () {
          return Ht;
        }),
        n.d(t, "Mc", function () {
          return qt;
        }),
        n.d(t, "Ac", function () {
          return zt;
        }),
        n.d(t, "k", function () {
          return Wt;
        }),
        n.d(t, "kb", function () {
          return Jt;
        }),
        n.d(t, "J", function () {
          return Yt;
        }),
        n.d(t, "P", function () {
          return Qt;
        }),
        n.d(t, "cc", function () {
          return Zt;
        }),
        n.d(t, "pc", function () {
          return Xt;
        }),
        n.d(t, "Nb", function () {
          return en;
        }),
        n.d(t, "Ub", function () {
          return tn;
        }),
        n.d(t, "Xb", function () {
          return nn;
        }),
        n.d(t, "jb", function () {
          return rn;
        }),
        n.d(t, "p", function () {
          return an;
        }),
        n.d(t, "Cc", function () {
          return on;
        }),
        n.d(t, "Lc", function () {
          return un;
        }),
        n.d(t, "Z", function () {
          return sn;
        }),
        n.d(t, "lb", function () {
          return ln;
        }),
        n.d(t, "h", function () {
          return cn;
        }),
        n.d(t, "s", function () {
          return dn;
        }),
        n.d(t, "l", function () {
          return fn;
        }),
        n.d(t, "f", function () {
          return _n;
        }),
        n.d(t, "ac", function () {
          return pn;
        }),
        n.d(t, "yb", function () {
          return vn;
        }),
        n.d(t, "ab", function () {
          return hn;
        }),
        n.d(t, "rb", function () {
          return mn;
        }),
        n.d(t, "wb", function () {
          return gn;
        }),
        n.d(t, "db", function () {
          return yn;
        }),
        n.d(t, "ob", function () {
          return bn;
        }),
        n.d(t, "cb", function () {
          return wn;
        }),
        n.d(t, "ub", function () {
          return On;
        }),
        n.d(t, "bb", function () {
          return En;
        }),
        n.d(t, "eb", function () {
          return In;
        }),
        n.d(t, "hc", function () {
          return Sn;
        }),
        n.d(t, "rc", function () {
          return kn;
        }),
        n.d(t, "Jb", function () {
          return Ln;
        }),
        n.d(t, "ib", function () {
          return Gn;
        }),
        n.d(t, "Rc", function () {
          return Mn;
        }),
        n.d(t, "Sc", function () {
          return An;
        }),
        n.d(t, "Zb", function () {
          return Cn;
        }),
        n.d(t, "Yb", function () {
          return Rn;
        }),
        n.d(t, "Uc", function () {
          return xn;
        }),
        n.d(t, "Ob", function () {
          return Un;
        }),
        n.d(t, "Kb", function () {
          return jn;
        }),
        n.d(t, "wc", function () {
          return $n;
        }),
        n.d(t, "S", function () {
          return Fn;
        }),
        n.d(t, "I", function () {
          return Bn;
        }),
        n.d(t, "T", function () {
          return Vn;
        }),
        n.d(t, "vc", function () {
          return Kn;
        }),
        n.d(t, "e", function () {
          return Hn;
        }),
        n.d(t, "Eb", function () {
          return qn;
        }),
        n.d(t, "gc", function () {
          return zn;
        }),
        n.d(t, "Wb", function () {
          return Wn;
        }),
        n.d(t, "Qb", function () {
          return Jn;
        }),
        n.d(t, "U", function () {
          return Yn;
        }),
        n.d(t, "qc", function () {
          return Qn;
        }),
        n.d(t, "Fc", function () {
          return Zn;
        }),
        n.d(t, "Ec", function () {
          return Xn;
        }),
        n.d(t, "C", function () {
          return er;
        }),
        n.d(t, "zb", function () {
          return tr;
        }),
        n.d(t, "a", function () {
          return nr;
        }),
        n.d(t, "uc", function () {
          return rr;
        }),
        n.d(t, "Pb", function () {
          return ir;
        }),
        n.d(t, "Nc", function () {
          return ar;
        }),
        n.d(t, "g", function () {
          return or;
        }),
        n.d(t, "Gc", function () {
          return ur;
        }),
        n.d(t, "E", function () {
          return sr;
        });
      var r = n(8),
        i = n.n(r),
        a = n(10),
        o = n(79),
        u = n(2),
        s = n(20),
        l = n(15),
        c = n(9),
        d = n(3),
        f = n(5),
        _ = n(12),
        p = n(66),
        v = n(105),
        h = n(54),
        m = n(39),
        g = n(16),
        y = n(70),
        b = n(49),
        w = n(82),
        O = n(58),
        E = n(38),
        I = n(117),
        S = n(272),
        k = n(7),
        L = n(71),
        G = n(35),
        M = n(212),
        A = n(177);
      function P(e, t, n) {
        return e.table
          .markChatAsBizRoleChanged(t)
          .then(() => e.addSystemMsgToChatInTransaction(t, n));
      }
      var T = n(14),
        N = n(312),
        C = n(11),
        R = n(36),
        x = n(109),
        D = n(62),
        U = n(223),
        j = n(96),
        $ = n(25),
        F = n(336),
        B = n(95),
        V = n(187),
        K = n(185),
        H = n(84),
        q = n(168);
      function z(e, t, n) {
        return e
          .getOrphanedMsgsInTransaction(t.externalId, t.author, n)
          .then((r) => {
            if (!r.revoke)
              return e
                .deleteOrphanedMsgsInTransaction(t.externalId, t.author, n)
                .then(() => {
                  var n = t.ts,
                    r = t.chatJid,
                    i = t.externalId,
                    a = t.author;
                  if ("@system" === a)
                    return (
                      __LOG__(
                        4
                      )`maybeStoreOrphanRevokeMsgInTransaction unexpected system msg`,
                      (0, f.e)()
                    );
                  var o = {
                    type: "revoke",
                    ts: n,
                    chatJid: r,
                    externalId: i,
                    content: t,
                    author: a,
                  };
                  return e.stores.orphanedStanzas.add(o);
                });
            if (t.ts > r.revoke.ts) {
              var i = Object.assign({}, r.revoke, { ts: t.ts });
              return e.stores.orphanedStanzas.put(i);
            }
          });
      }
      function W(e, t) {
        return e.ts < t.ts
          ? -1
          : e.ts > t.ts
          ? 1
          : e.author < t.author
          ? -1
          : e.author > t.author ||
            (0, H.b)(e.content.senderTimestampMs, t.content.senderTimestampMs)
          ? 1
          : e.content.senderTimestampMs === t.content.senderTimestampMs
          ? 0
          : -1;
      }
      var J = n(219),
        Y = n(17),
        Q = n(33);
      function Z(e, t, n) {
        var r = [
          "contacts",
          "groups",
          "groupParticipantsInfo",
          "chats",
          "msgs",
          "receipts",
          "media",
          "previews",
          "meta",
          "status",
          "orphanedStanzas",
          "reactions",
        ];
        return (
          r.push("pollUpdates"),
          e.table.transact("rw", r, () =>
            (function (e, t, n) {
              return null == t.outgoingTo
                ? (function (e, t) {
                    var n = t.content,
                      r = n.msg.quoted;
                    if (null == r) return (0, f.e)(t);
                    var i = r.remoteJid,
                      a = r.externalId,
                      o = r.author;
                    if (null == a) return (0, f.e)(t);
                    var u = null != i ? i : t.jid,
                      s = (0, k.z)(u, {
                        user: (e) => ({
                          type: "user",
                          jid: e,
                          author: o,
                          externalId: a,
                        }),
                        group: (e) => ({
                          type: "group",
                          jid: e,
                          author: o,
                          externalId: a,
                        }),
                        status: () => ({
                          type: "status",
                          author: o,
                          externalId: a,
                        }),
                      });
                    return (0, R.m)(e.table.stores, s).then((e) => {
                      if (null == e) return t;
                      var i = e.dbMsg;
                      return (0, C.j)(t, {
                        content: (0, C.j)(n, {
                          msg: (0, C.j)(n.msg, {
                            quoted: (0, C.j)(r, { id: i.id, ts: i.ts }),
                          }),
                        }),
                      });
                    });
                  })(e, t)
                : null == n
                ? (0, f.e)(t)
                : (function (e, t, n) {
                    return (function (e, t, n) {
                      return e.table.getQuotableMsg(t).then((t) => {
                        if (null == t) return null;
                        if ("@system" === t.author || "@psa" === t.author)
                          return null;
                        var r,
                          a,
                          o = t.author;
                        return (
                          (0, G.e)(t) && t.media && (r = b.n(e, t.media)),
                          (0, G.k)(t) && t.hasPreview && (a = b.i(e, t)),
                          (0, f.c)([r, a]).then((e) => {
                            var r,
                              a,
                              s,
                              l = i()(e, 2),
                              c = l[0],
                              d = l[1];
                            if (c) {
                              var f = c.mediaEntries[t.id];
                              c.plaintextHash &&
                                f &&
                                ("mms3" === f.version ||
                                  "mms4" === f.version) &&
                                (a = {
                                  plaintextHash: c.plaintextHash,
                                  mediaEntry: f,
                                });
                            }
                            switch (
                              (d && (s = { quotedMediaPreview: d }), t.type)
                            ) {
                              case u.f.TEXT:
                                r = {
                                  type: u.f.TEXT,
                                  text: t.text,
                                  linkPreview: t.linkPreview,
                                  bg: t.bg,
                                };
                                break;
                              case u.f.VCARD:
                                r = { type: u.f.VCARD, contacts: t.contacts };
                                break;
                              case u.f.LOCATION:
                                r = {
                                  type: u.f.LOCATION,
                                  degreesLatitude: t.degreesLatitude,
                                  degreesLongitude: t.degreesLongitude,
                                  name: t.name,
                                  address: t.address,
                                  url: t.url,
                                  bg: t.bg,
                                };
                                break;
                              case u.f.STICKER:
                                r = {
                                  type: u.f.STICKER,
                                  size: t.size,
                                  width: t.width,
                                  height: t.height,
                                  media: a,
                                };
                                break;
                              case u.f.IMAGE:
                                (r = {
                                  type: u.f.IMAGE,
                                  size: t.size,
                                  text: t.text,
                                  width: t.width,
                                  height: t.height,
                                  bg: t.bg,
                                  media: a,
                                }),
                                  null != t.viewOnceState &&
                                    (r.viewOnceState = t.viewOnceState);
                                break;
                              case u.f.PTT:
                                r = {
                                  type: u.f.PTT,
                                  size: t.size,
                                  duration: t.duration,
                                  mimetype: t.mimetype,
                                  media: a,
                                };
                                break;
                              case u.f.AUDIO:
                                r = {
                                  type: u.f.AUDIO,
                                  size: t.size,
                                  duration: t.duration,
                                  mimetype: t.mimetype,
                                  media: a,
                                };
                                break;
                              case u.f.VIDEO:
                                (r = {
                                  type: u.f.VIDEO,
                                  size: t.size,
                                  duration: t.duration,
                                  width: t.width,
                                  height: t.height,
                                  mimetype: t.mimetype,
                                  text: t.text,
                                  rotation: t.rotation,
                                  frame: t.frame,
                                  bg: t.bg,
                                  media: a,
                                }),
                                  null != t.viewOnceState &&
                                    (r.viewOnceState = t.viewOnceState);
                                break;
                              case u.f.GIF:
                                r = {
                                  type: u.f.GIF,
                                  size: t.size,
                                  duration: t.duration,
                                  width: t.width,
                                  height: t.height,
                                  mimetype: t.mimetype,
                                  text: t.text,
                                  rotation: t.rotation,
                                  frame: t.frame,
                                  bg: t.bg,
                                  gifAttribution: t.gifAttribution,
                                  media: a,
                                };
                                break;
                              case u.f.GROUP_INVITE:
                                r = {
                                  type: u.f.GROUP_INVITE,
                                  groupJid: t.groupJid,
                                  inviteCode: t.inviteCode,
                                  inviteExpiration: t.inviteExpiration,
                                  groupName: t.groupName,
                                  caption: t.caption,
                                  bg: t.bg,
                                };
                                break;
                              case u.f.RICH_HSM:
                                r = {
                                  type: u.f.RICH_HSM,
                                  title: t.title,
                                  content: t.content,
                                  footer: t.footer,
                                  richContent: t.richContent,
                                  buttons: t.buttons,
                                  bg: t.bg,
                                  media: a,
                                };
                                break;
                              case u.f.HSM_BUTTON_REPLY:
                                r = {
                                  type: u.f.HSM_BUTTON_REPLY,
                                  selectedDisplayText: t.selectedDisplayText,
                                  payload: t.payload,
                                  selectedButtonIndex: t.selectedButtonIndex,
                                };
                                break;
                              case u.f.DOCUMENT:
                                r = t.isVCard
                                  ? {
                                      type: u.f.DOCUMENT,
                                      mimetype: "text/vcard",
                                      isVCard: !0,
                                      size: t.size,
                                      fileName: t.fileName,
                                      contactsCount: t.contactsCount,
                                      uiVCards: t.uiVCards,
                                      media: a,
                                    }
                                  : {
                                      type: u.f.DOCUMENT,
                                      mimetype: t.mimetype,
                                      size: t.size,
                                      fileName: t.fileName,
                                      pages: t.pages,
                                      bg: t.bg,
                                      media: a,
                                    };
                                break;
                              case u.f.POLL:
                                r = {
                                  type: u.f.POLL,
                                  name: t.name,
                                  options: t.options,
                                  selectableOptionsCount:
                                    t.selectableOptionsCount,
                                };
                                break;
                              case u.f.REVOKED:
                                return null;
                              default:
                                return (
                                  t.type,
                                  __LOG__(4)`Cannot quote msg type ${t.type}`,
                                  SEND_LOGS("quote-wrong-msg-type"),
                                  null
                                );
                            }
                            return {
                              quoted: {
                                externalId: t.externalId,
                                id: t.id,
                                ts: t.ts,
                                remoteJid: n,
                                author: o,
                                content: r,
                                hasPreview: t.hasPreview ? "quoted" : void 0,
                                mentionedJids: t.mentionedJids,
                              },
                              quotedData: s,
                            };
                          })
                        );
                      });
                    })(e, n.msgId, n.remoteJid).then((e) => {
                      if (null == e) return t;
                      var n = t.content,
                        r = e.quoted,
                        i = e.quotedData;
                      return (0, C.j)(t, {
                        content: (0, C.j)(n, {
                          msg: (0, C.j)(n.msg, { quoted: r }),
                          quotedData: i,
                        }),
                      });
                    });
                  })(e, t, n);
            })(e, t, n).then((t) => ee(e, t))
          )
        );
      }
      function X(e, t, n) {
        var r = [
          "groups",
          "groupParticipantsInfo",
          "contacts",
          "msgs",
          "receipts",
          "chats",
          "media",
          "previews",
          "status",
          "orphanedStanzas",
          "reactions",
        ];
        return (
          r.push("pollUpdates"),
          e.table.transact("rw", r, () => {
            var r = n.map((e) => e.msgId),
              i = n.length > 1;
            return e.table.getMsgsToForward(r).then((r) => {
              var a = [];
              return n
                .reduce(
                  (n, o) =>
                    n
                      .then(() => {
                        var n = r[o.msgId];
                        if (!n) return null;
                        var a = (0, N.c)(n, o.externalId, t, i);
                        if (!a) return null;
                        var u = o.jid,
                          s = o.outgoingTo;
                        return ee(e, { jid: u, outgoingTo: s, content: a });
                      })
                      .then((e) => {
                        e && a.push(e);
                      }),
                  (0, f.e)()
                )
                .then(() => a);
            });
          })
        );
      }
      function ee(e, t) {
        return (0, k.x)(t.jid, {
          user: (n) =>
            (function (e, t, n) {
              var r,
                i = n.outgoingTo,
                a = n.content,
                s = !!i;
              return e.table.getContact(t).then((n) => {
                var l = n;
                !s && a.isHsm && (l = (0, o.n)(l, n, t)),
                  s && (l = (0, o.l)(l, n, t)),
                  !s && a.pushname && (l = (0, o.m)(l, n, t, a.pushname));
                var c = (0, U.c)(l, n, t, s, a.msg);
                if (c.dropMsg)
                  return null != c.contact
                    ? (__LOG__(
                        2
                      )`maybeUpdateEphemeralSetting ephemeralSettingTimestamp only`,
                      e.table.stores.contacts.put(c.contact).then(() => null))
                    : null;
                var _ = c.contact;
                return (
                  null == _.chatId
                    ? te(e, t, _, a)
                    : e.table.getChatInTransaction(_.chatId).then((n) => {
                        var r;
                        return null == n
                          ? te(e, t, _, a)
                          : (function (e, t, n, r, i) {
                              var a;
                              if (!i.changedByMsg || null == r)
                                return (0, f.e)();
                              __LOG__(
                                2
                              )`Ephemeral settings changed by incoming msg`;
                              var o = (0, d.D)(),
                                s = {
                                  type: u.f.EPHEMERAL,
                                  subtype: "setting",
                                  externalId: "/ephemeral/" + o,
                                  ts: o,
                                  author: t,
                                  ack: u.a.RECEIVED,
                                  ephemeralExpiration: r,
                                  altIndex: "",
                                };
                              return (
                                (null == (a = i.overrideExpiration)
                                  ? void 0
                                  : a.updated) && (s.updated = !0),
                                e.addSystemMsgWithResult(n, s)
                              );
                            })(
                              e,
                              t,
                              n.id,
                              null == (r = _.ephemeral) ? void 0 : r.expiration,
                              c
                            ).then((e) => ({
                              result: "existing-chat",
                              chat: n,
                              contact: _,
                              addPreResult: e,
                            }));
                      })
                ).then((t) => {
                  var s, l, d;
                  switch (t.result) {
                    case "store-orphan-only":
                      return null;
                    case "new-chat":
                      var f = t.createResult;
                      (s = f[0]),
                        (l = f[1]),
                        (d = f[2]),
                        (r = t.newSidelistChat);
                      break;
                    default:
                      t.result;
                      var _ = t.addPreResult;
                      (s = t.chat), (l = t.contact), (d = null != _ ? [_] : []);
                  }
                  var p = (0, A.f)(l, null != i, a);
                  return ne(e, i, s, p, null, !0, c).then((e) => {
                    if (e) {
                      l &&
                        e.dbMsg.type === u.f.EPHEMERAL &&
                        "fail" === e.dbMsg.subtype &&
                        (l.ephemeral = null == n ? void 0 : n.ephemeral);
                      var t = (0, o.s)(e, l);
                      return (
                        (t.notifications = [
                          ...(t.notifications || []),
                          ...(d || []),
                        ].filter(Boolean)),
                        r && (t.newSidelistChat = r),
                        t
                      );
                    }
                    return (0, o.o)(d || []);
                  });
                });
              });
            })(e, n, t),
          group: (n) =>
            (function (e, t, n) {
              var r = n.content,
                a = n.outgoingTo,
                u = !!a,
                s = h.i(r.msg.author);
              return (0, f.c)([
                s ? e.table.getContact(s) : null,
                e.table.getChatAndGroupInTransaction(t),
              ]).then((t) => {
                var n,
                  l = i()(t, 2),
                  c = l[0],
                  d = l[1];
                if (!d) return null;
                var _,
                  p = d.dbChat,
                  v = d.dbGroup;
                if (!v) return null;
                (null == (n = v.groupInfo) ? void 0 : n.isCAG) &&
                  v.groupInfo.isAdmin &&
                  (0, Y.a)("admin_include_message_secret_in_cag") &&
                  (r.msg.secret = (0, Q.k)((0, Q.l)(32))),
                  s && r.pushname && (_ = (0, o.m)(_, c, s, r.pushname));
                var h = null;
                return (
                  u &&
                    !v.groupInfo.messaged &&
                    ((v.groupInfo.messaged = !0),
                    (h = e.table.setGroupInfo(v.groupInfo))),
                  (0, f.c)([ne(e, a, p, r, v, !0, null), h]).then((e) => {
                    var t = i()(e, 1)[0];
                    if (t) return (0, o.s)(t, _ || void 0);
                  })
                );
              });
            })(e, n, t),
        })
          .then((t) =>
            t && t.updatedContact
              ? e.table.stores.contacts.put(t.updatedContact).then(() => t)
              : t
          )
          .then((n) =>
            n && "new" === n.result
              ? (function (e, t, n, r) {
                  return (0, $.d)(
                    e.table.stores.meta,
                    $.a.WAM_CHATS_CACHE
                  ).then((i) => {
                    var a = (0, o.j)(i),
                      u = a.startTs,
                      s = a.chats,
                      l = s.get(t);
                    l ||
                      (l = {
                        sent: 0,
                        received: 0,
                        starred: 0,
                        ephemeralSent: 0,
                        ephemeralReceived: 0,
                        viewOnceOpened: 0,
                        viewOnceReceived: 0,
                        viewOnceSent: 0,
                      });
                    var c = null != r.expiration && r.expiration > T.k,
                      d = r && (0, G.q)(r);
                    return (
                      "sent" === n
                        ? ((l.sent += 1),
                          (l.ephemeralSent += c ? 1 : 0),
                          (l.viewOnceSent = (l.viewOnceSent || 0) + d ? 1 : 0))
                        : ((l.received += 1),
                          (l.ephemeralReceived += c ? 1 : 0),
                          (l.viewOnceReceived =
                            (l.viewOnceReceived || 0) + d ? 1 : 0)),
                      s.set(t, l),
                      e.table.stores.meta
                        .put({
                          key: $.a.WAM_CHATS_CACHE,
                          value: { startTs: u, chats: s },
                        })
                        .then(() => {})
                    );
                  });
                })(
                  e,
                  t.jid,
                  null == t.outgoingTo ? "received" : "sent",
                  n.dbMsg
                ).then(() => n)
              : n
          );
      }
      function te(e, t, n, r) {
        if (r.msg.type === u.f.REVOKED)
          return z(e.table, r.msg, r.msg.chatJid).then((e) => ({
            result: "store-orphan-only",
          }));
        var i = null == n.phonebookPhone;
        return e
          .createUserChatInTransaction(t, n)
          .then((e) => ({
            result: "new-chat",
            createResult: e,
            newSidelistChat: i,
          }));
      }
      function ne(e, t, n, r, a, s, c) {
        var _ = r.msg,
          p = r.media,
          v = r.quotedData,
          h = !!t,
          m = _,
          g = n.id,
          y = null;
        if (s) {
          var w = m.author;
          y =
            null != m.placeholderId
              ? e.table
                  .getMsgFromExternalId(g, w, m.placeholderId)
                  .then(
                    (t) => t || e.table.getMsgFromExternalId(g, w, m.externalId)
                  )
              : e.table.getMsgFromExternalId(g, w, m.externalId);
        } else y = (0, f.e)();
        return y.then((r) => {
          if (m.type === u.f.REVOKED && r && r.type !== u.f.REVOKED)
            return (
              __LOG__(2)`_addMsgToChatInTransaction revoking msg ${r.id}`,
              (0, J.d)(e, n, a, r, m)
            );
          if (
            r &&
            ((0, G.i)(r) || r.type === u.f.FUTUREPROOF) &&
            r.type !== m.type
          )
            return (
              __LOG__(
                2
              )`_addMsgToChatInTransaction clearing placeholder ${r.id}`,
              (function (e, t, n, r, a, o, s, c) {
                (0, G.i)(r) &&
                  WAM.log("regular", 1980, void 0, [
                    2,
                    0,
                    3,
                    3,
                    0,
                    null == n ? 1 : 2,
                    4,
                    0,
                    (0, d.A)(r.ts),
                    1,
                    0,
                    r.type === u.f.CIPHERTEXT ? 1 : 3,
                  ]);
                var _,
                  p = ie(!1, t.jid, a, n, c, r),
                  v = Object.assign({}, p, {
                    rowId: r.rowId,
                    id: r.id,
                    ts: r.ts,
                    author: r.author,
                    chat: r.chat,
                    altIndex: p.altIndex || r.altIndex,
                  }),
                  h = b.A(
                    e,
                    (0, l.E)(r.id),
                    (s && s.quotedMediaPreview) || null
                  ),
                  m = (0, x.maybeMutateChatMsgPreview)(t, v)
                    ? e.table.updateChat(t).then(() => t)
                    : (0, f.e)(t);
                return (
                  (_ = o
                    ? b.v(e.table.stores, r.id, v, o).then((t) => {
                        var n = t.toStore;
                        return e.table.stores.msgs.put(n);
                      })
                    : e.table.stores.msgs.put(v)),
                  (0, f.c)([m, _, h]).then((t) => {
                    var r = i()(t, 1)[0];
                    return re(e, {
                      result: "modified",
                      dbChat: r,
                      dbGroup: n,
                      dbMsg: v,
                      outgoingTo: null,
                    });
                  })
                );
              })(e, n, a, r, m, p, v, c)
            );
          if (r) {
            var s = r;
            return (0, f.e)()
              .then(() => (h ? e.table.getReceipt(r.id) : null))
              .then((t) =>
                re(e, {
                  result: "deduped",
                  dbChat: n,
                  dbGroup: a,
                  dbMsg: s,
                  outgoingTo: t && (0, D.g)(t),
                })
              );
          }
          return null == m.viewOnceState || (0, j.b)(m)
            ? m.type === u.f.REVOKED
              ? z(e.table, m, n.jid).then((e) => null)
              : (function (e, t, n, r, a) {
                  return e.table
                    .getOrphanedMsgsInTransaction(r.externalId, r.author, t.jid)
                    .then((o) => {
                      if (o.revoke) {
                        o.revoke, o.reactions, o.keepInChat;
                        var s = o.revoke,
                          l = s.id;
                        return e.nextMsgChecker(t).then((a) => {
                          var o = s.content,
                            c = s.chatJid,
                            d = s.externalId,
                            _ = o.deviceId,
                            p = o.adminJid,
                            v = {
                              type: u.f.REVOKED,
                              altIndex: (0, R.c)("revoked", a),
                              deviceId: _,
                              chatJid: c,
                              ts: r.ts,
                              author: r.author,
                              externalId: d,
                              revokedExternalId: d,
                              ack: u.a.RECEIVED,
                              id: a,
                              chat: t.id,
                            };
                          return (
                            null != p && (v.adminJid = p),
                            (0, f.c)([
                              e.table.stores.msgs.add(v),
                              e.table.stores.orphanedStanzas.delete(l),
                            ]).then((r) => {
                              var a = i()(r, 1)[0],
                                o = Object.assign({}, v, { rowId: a });
                              return (
                                (0, q.c)(t, o),
                                e.table
                                  .updateChat(t)
                                  .then(() => ({
                                    result: "new",
                                    dbChat: t,
                                    dbGroup: n,
                                    outgoingTo: null,
                                    shouldDownloadMmsThumb: !1,
                                    dbMsg: o,
                                  }))
                              );
                            })
                          );
                        });
                      }
                      o.revoke, o.reactions, o.keepInChat;
                      var c = o.reactions,
                        d = o.keepInChat;
                      return 0 === c.size && 0 === d.length
                        ? a()
                        : a().then((t) => {
                            var n = t.dbMsg,
                              r = [];
                            if (c.size > 0) {
                              var a = (function (e, t, n) {
                                return [
                                  () =>
                                    (0, V.a)(e.table.stores, t, n).then(
                                      (e) => ({ updatedMsg: e })
                                    ),
                                  () =>
                                    e.table.stores.orphanedStanzas
                                      .bulkDelete(
                                        Array.from(n.values()).map((e) => e.id)
                                      )
                                      .then(() => {}),
                                ];
                              })(e, n.id, c);
                              r.push(...a);
                            }
                            if (d.length > 0) {
                              d.sort(W);
                              var o = (function (e, t, n) {
                                var r = [];
                                if ("@system" !== t.author) {
                                  var a = {
                                    msgAuthor: t.author,
                                    msgExternalId: t.externalId,
                                  };
                                  n.forEach((t) => {
                                    var n = { msgRef: a, content: t.content };
                                    r.push(() =>
                                      (0, K.i)(e.table.stores, n).then((e) => {
                                        if (null != e) {
                                          var t = i()(e, 3);
                                          return {
                                            updatedMsg: t[0],
                                            updatedChat: t[1],
                                            updatedGroup: t[2],
                                          };
                                        }
                                      })
                                    );
                                  });
                                }
                                return (
                                  r.push(() =>
                                    e.table.stores.orphanedStanzas
                                      .bulkDelete(n.map((e) => e.id))
                                      .then(() => {})
                                  ),
                                  r
                                );
                              })(e, n, d);
                              r.push(...o);
                            }
                            return (0, f.f)(r).then((e) => {
                              var r = t.dbChat,
                                i = t.dbGroup;
                              return (function (e, t, n, r, i) {
                                var a = i.reduce(
                                    (e, t) => {
                                      if (null == t) return e;
                                      var n = t.updatedMsg,
                                        r = t.updatedChat,
                                        i = t.updatedGroup,
                                        a = t.notifications;
                                      return (
                                        null != n && (e.updatedMsg = n),
                                        null != r && (e.updatedChat = r),
                                        null != i && (e.updatedGroup = i),
                                        null != a && e.notifications.push(...a),
                                        e
                                      );
                                    },
                                    {
                                      updatedMsg: t,
                                      updatedChat: n,
                                      updatedGroup: r,
                                      notifications: [],
                                    }
                                  ),
                                  o = a.updatedMsg,
                                  u = a.updatedChat,
                                  s = a.updatedGroup,
                                  l = a.notifications,
                                  c = Object.assign({}, e, {
                                    dbMsg: o,
                                    dbChat: u,
                                    dbGroup: s,
                                  });
                                return (
                                  l.length > 0 &&
                                    (null == c.notifications &&
                                      (c.notifications = []),
                                    c.notifications.push(...l)),
                                  c
                                );
                              })(t, n, r, i, e);
                            });
                          });
                    });
                })(e, n, a, m, () =>
                  (function (e) {
                    var t = e.db,
                      n = e.unstoredContent,
                      r = n.msg,
                      a = n.media,
                      s = n.quotedData,
                      c = e.group,
                      _ = e.chat,
                      p = e.outgoingTo,
                      v = e.ephemeralInfo,
                      h = !!p,
                      m = r;
                    return (
                      (m = ie(h, _.jid, m, c, v, null)),
                      (m = (0, F.b)(m)),
                      (0, G.i)(m) && (0, o.b)(m, null != c),
                      t
                        .nextMsgChecker(_)
                        .then((e) =>
                          (function (e, t, n, r, a, o) {
                            var u, s;
                            if (o && o.quotedMediaPreview) {
                              var c = o.quotedMediaPreview;
                              r.quoted
                                ? ((r.quoted.hasPreview = "quoted"),
                                  (u = b.A(e, (0, l.E)(t), c)))
                                : __LOG__(
                                    3
                                  )`Quoted preview received without quoted content`;
                            }
                            return (
                              (s = a
                                ? b.v(e.table.stores, t, r, a).then((r) => {
                                    var i = r.toStore;
                                    return e.table.addMsg(t, n, i);
                                  })
                                : e.table.addMsg(t, n, r)),
                              (0, f.c)([s, u]).then((e) => i()(e, 1)[0])
                            );
                          })(t, e, _.id, m, a, s)
                        )
                        .then((e) => {
                          (0, q.c)(_, e);
                          var n = null;
                          return (
                            p &&
                              (n = t.table.stores.receipts.add(
                                (0, D.q)(
                                  (0, D.j)(e.id, _.jid, e.ts, (0, G.r)(e, h), p)
                                )
                              )),
                            null != _.notStarted &&
                              (__LOG__(
                                2
                              )`chat ${_.id} conversation has started`,
                              delete _.notStarted),
                            (0, f.c)([t.table.updateChat(_), n])
                              .then(() => {
                                var n,
                                  r = (0, k.q)(_.jid);
                                return (
                                  e.type === u.f.GROUP_INVITE &&
                                    r &&
                                    (h
                                      ? (__LOG__(
                                          2
                                        )`_addContentMsgInTransaction: adding invitation for ${e.groupJid}`,
                                        (n = t.table
                                          .addInvitationToGroupInTransaction(
                                            e.groupJid,
                                            {
                                              jid: r,
                                              expiration: e.inviteExpiration,
                                              code: e.inviteCode,
                                            }
                                          )
                                          .then((t) => {
                                            var n = [];
                                            if (t) {
                                              n.push({
                                                result: "updated_chat",
                                                chat: (0, O.a)(
                                                  t.dbChat,
                                                  t.dbGroup
                                                ),
                                              });
                                              var r = t.revokes;
                                              r &&
                                                n.push({
                                                  result:
                                                    "revoked_group_invites",
                                                  groupJid: e.groupJid,
                                                  outgoing: h,
                                                  revokes: r,
                                                });
                                            }
                                            return { notifications: n };
                                          })))
                                      : (__LOG__(
                                          2
                                        )`_addContentMsgInTransaction: received invitation for ${e.groupJid}`,
                                        (n = t.table
                                          .revokeGroupInvitesInTransaction(
                                            e.groupJid,
                                            !1,
                                            [
                                              {
                                                user: r,
                                                expiresBefore: (0, d.w)(
                                                  1,
                                                  e.inviteExpiration
                                                ),
                                              },
                                            ]
                                          )
                                          .then((t) => ({
                                            notifications: [
                                              {
                                                result: "revoked_group_invites",
                                                groupJid: e.groupJid,
                                                outgoing: h,
                                                revokes: t,
                                              },
                                            ],
                                          }))))),
                                  n
                                );
                              })
                              .then((n) => {
                                var r;
                                return (
                                  n && (r = n.notifications),
                                  re(t, {
                                    result: "new",
                                    dbChat: _,
                                    dbGroup: c,
                                    dbMsg: e,
                                    outgoingTo: p,
                                    notifications: r,
                                  })
                                );
                              })
                          );
                        })
                    );
                  })({
                    chat: n,
                    db: e,
                    ephemeralInfo: c,
                    group: a,
                    outgoingTo: t,
                    unstoredContent: { msg: _, media: p, quotedData: v },
                  })
                )
            : null;
        });
      }
      function re(e, t) {
        var n = t.dbMsg;
        return (0, B.c)(n) && n.media
          ? b
              .n(e, n.media)
              .then((e) =>
                Object.assign({}, t, {
                  shouldDownloadMmsThumb: null != e && (0, B.b)(e, t.dbMsg.id),
                })
              )
          : Object.assign({}, t, { shouldDownloadMmsThumb: !1 });
      }
      function ie(e, t, n, r, i, a) {
        if (n.type === u.f.EPHEMERAL && "setting" === n.subtype && null != a) {
          var o,
            s =
              (null == i || null == (o = i.overrideExpiration)
                ? void 0
                : o.expiration) ||
              n.ephemeralExpiration ||
              0;
          return {
            type: u.f.EPHEMERAL,
            subtype: "fail",
            expiration: s,
            ts: a.ts,
            externalId: a.externalId,
            author: a.author,
            deviceId: a.deviceId,
            ack: u.a.RECEIVED,
            altIndex: a.altIndex,
          };
        }
        if (r) {
          __LOG__(2)`_maybeUpdateEphemeralMsgInTransaction group`;
          var l = (0, U.a)(e, n, r);
          if (l) return (0, C.j)(n, l);
        } else if (
          (__LOG__(2)`_maybeUpdateEphemeralMsgInTransaction contacts`,
          (0, k.q)(t) && i && !i.dropMsg)
        ) {
          var c,
            d = (0, U.b)(
              e,
              n,
              i.contact,
              null == i || null == (c = i.overrideExpiration)
                ? void 0
                : c.expiration
            );
          if (d) return (0, C.j)(n, d);
        }
        return n;
      }
      var ae = n(42),
        oe = n(251),
        ue = n(65),
        se = n(286),
        le = n(184),
        ce = n(46),
        de = n(32),
        fe = n(186),
        _e = n(40);
      function pe() {
        return (0, a.e)("getAddressbookWhatsAppSize", (e) =>
          e.getAddressbookWhatsAppSize()
        );
      }
      function ve() {
        return (0, a.e)("getEverything", (e) => e.getEverything());
      }
      function he(e) {
        return (0, a.e)("doesMsgExist", (t) => t.doesMsgExist(e));
      }
      function me(e, t, n) {
        return (0, a.e)("loadMsgRange", (r) => r.loadMsgRange(e, t, n));
      }
      function ge(e) {
        return (0, a.e)("loadMsgContentVCards", (t) =>
          t.loadMsgContentVCards(e)
        );
      }
      function ye(e) {
        return (0, a.c)(
          "createUserChat",
          (t) =>
            t.createUserChat(e).then((e) => {
              if ("new" === e.type) {
                var t = e.chat,
                  n = e.contact;
                if ("ONE_TO_ONE" === t.type && null == n.phonebookPhone) {
                  var r = t.jid;
                  return (0, m.b)()
                    .waitUntilPersisted(g.e.addContactToSidelist(r))
                    .then(() => e);
                }
              }
              return e;
            }),
          ue.b
        );
      }
      function be(e, t) {
        return (
          __LOG__(2)`writeIncomingMsg ${(0, oe.a)(t.msg.externalId)}`,
          (0, se.a)(t).then((t) =>
            (0, a.c)(
              "writeIncomingMsg",
              (n) =>
                Z(n, { jid: e, outgoingTo: null, content: t })
                  .then(Oe)
                  .then(le.h),
              (t, n) => {
                if (t) {
                  var r = t.msg,
                    i = t.dbMsg,
                    a = t.chat,
                    o = t.updatedContact,
                    s = t.notifications;
                  (function (e) {
                    var t;
                    ((t = e.dbMsg.type) === u.f.IMAGE ||
                      t === u.f.STICKER ||
                      t === u.f.AUDIO ||
                      t === u.f.PTT ||
                      t === u.f.VIDEO ||
                      t === u.f.GIF ||
                      t === u.f.DOCUMENT) &&
                      (0, m.b)().fireAndForget(
                        g.e.downloadMedia(e.dbMsg.id, "autodownload")
                      ),
                      e.shouldDownloadMmsThumb &&
                        (0, m.b)().fireAndForget(
                          g.e.downloadMediaThumb(e.dbMsg.id, e.dbMsg.media)
                        );
                  })(t),
                    (function (e) {
                      "revoked" === e.result &&
                        (0, m.b)().fireAndForget(
                          g.e.removeDeadMediaContent("remote-revoke-msg")
                        );
                    })(t),
                    (0, ue.c)(t),
                    We(a.id, !1),
                    (function (e) {
                      var t = e.content,
                        n = t.type;
                      ("image" === n ||
                        "video" === n ||
                        "gif" === n ||
                        ("document" === n && null != t.preview) ||
                        ("text" === n && t.linkPreview) ||
                        (e.quoted && e.quoted.preview)) &&
                        (0, m.b)().fireAndForget(g.e.setMsgBg(e.id));
                    })(r),
                    (0, I.l)(i, e, o),
                    "ONE_TO_ONE" === a.type && o && (0, I.r)(o),
                    null != s &&
                      s.forEach((e) => {
                        "group_update" === e.result &&
                          "ONE_TO_ONE" !== a.type &&
                          (0, fe.m)(
                            n,
                            e.action,
                            a.jid,
                            a.groupInfo.participants
                          );
                      });
                }
              }
            )
          )
        );
      }
      function we(e, t, n, r) {
        return (
          __LOG__(2)`writeOutgoingMsg jid ${e}`,
          (0, a.c)(
            "writeOutgoingMsg",
            (i) => Z(i, { jid: e, outgoingTo: r, content: t }, n).then(Oe),
            (e) => {
              if (e) return (0, ue.c)(e), We(e.chat.id, !1), e;
            }
          )
        );
      }
      function Oe(e) {
        if (e) {
          if (e.newSidelistChat && "ONE_TO_ONE" === e.chat.type) {
            var t = e.chat.jid;
            return (0, m.b)()
              .waitUntilPersisted(g.e.addContactToSidelist(t))
              .then(() => e);
          }
          return Promise.resolve(e);
        }
      }
      function Ee(e, t, n) {
        return (0, a.c)(
          "writeForwardedMsgs",
          (r) =>
            Promise.all([
              t.length > 0 ? X(r, e, t) : [],
              n.length > 0 ? w.z(r, e, n) : null,
            ]),
          (e) => {
            var t = i()(e, 2),
              n = t[0],
              r = t[1],
              a = [];
            return (
              a.push(...n),
              (0, ue.d)(n),
              r &&
                (a.push(...r.results),
                (0, _.c)("event", "statusAuthorMeUpdated", {
                  author: (0, v.b)(r.author, (0, d.D)()),
                })),
              a
            );
          }
        );
      }
      function Ie(e) {
        return (0, a.e)("getChatFromId", (t) =>
          t.getChatWithGroup(e).then((e) => {
            if (e) {
              var t = e.dbChat,
                n = e.dbGroup;
              return (0, O.a)(t, n);
            }
          })
        );
      }
      function Se(e) {
        return (0, a.e)("getRecipientsForMsgId", (t) =>
          t.getRecipientsForMsgId(e)
        );
      }
      function ke(e) {
        return (0, a.e)("getChatJid", (t) => t.getChatJid(e));
      }
      function Le(e) {
        return (0, a.e)("getRecipientsForJid", (t) => t.getRecipientsForJid(e));
      }
      function Ge(e) {
        return (0, a.f)("getDevices", (t) =>
          (0, f.i)(t.getDevicesInTransaction(e)).then((e) =>
            (0, s.m)(Array.from(e))
          )
        );
      }
      function Me() {
        return (0, a.e)("getDeadMedia", (e) => (0, f.i)(b.g(e)));
      }
      function Ae(e) {
        return (
          __LOG__(2)`markDeadMediaPurged for media ${e}`,
          (0, a.e)("markDeadMediaPurged", (t) => (0, f.i)(b.w(t, e)))
        );
      }
      function Pe(e, t, n) {
        return (0, a.e)("unreadMsgs", (r) =>
          r.msgsInRangeInclusive(t, n).then((t) => {
            if (0 === t.length) return null;
            for (
              var n = null,
                r = t[0],
                i = r.id,
                a = r.chat,
                o = (0, k.x)(e, {
                  user: (e) => ({
                    type: "user",
                    userJid: e,
                    unread: [],
                    broadcast: {},
                    upTo: i,
                    chatId: a,
                  }),
                  group: (e) => ({
                    type: "group",
                    groupJid: e,
                    unread: {},
                    upTo: i,
                    chatId: a,
                  }),
                }),
                s = 0;
              s < t.length;
              s++
            ) {
              var l = t[s],
                c = (0, h.i)(l.author);
              if (
                c &&
                !(0, ae.i)(l.ack) &&
                ((!n || l.id > n) && (n = l.id),
                l.type !== u.f.GROUP_NOTIFICATION &&
                  l.type !== u.f.BUSINESS_NOTIFICATION &&
                  l.type !== u.f.FUTUREPROOF &&
                  l.type !== u.f.IDENTITY_CHANGE &&
                  l.type !== u.f.PRIVACY_CHANGE &&
                  l.type !== u.f.CIPHERTEXT &&
                  l.type !== u.f.MD_PLACEHOLDER &&
                  l.type !== u.f.HSM_BUTTON_REPLY &&
                  l.type !== u.f.EPHEMERAL &&
                  l.type !== u.f.CONTACT_BLOCK_CHANGE)
              ) {
                var d = l.externalId;
                if ("group" === o.type)
                  o.unread.hasOwnProperty(c)
                    ? o.unread[c].push(d)
                    : (o.unread[c] = [d]);
                else if ("user" === o.type)
                  if (l.broadcastJid) {
                    var f = l.broadcastJid;
                    o.broadcast.hasOwnProperty(f)
                      ? o.broadcast[f].push(d)
                      : (o.broadcast[f] = [d]);
                  } else o.unread.push(d);
              }
            }
            return n ? ((o.upTo = n), o) : null;
          })
        );
      }
      function Te(e, t) {
        return (0, a.e)("markGroupAsMessaged", (n) =>
          n.markGroupAsMessaged(e, t)
        );
      }
      function Ne(e, t) {
        return (0, a.c)(
          "markChatAsRead",
          (n) => n.markChatAsRead(e, t),
          (e) => {
            e &&
              (0, _.c)("event", "chatRead", {
                chatId: e.id,
                oldestUnread: e.oldestUnread,
                unreadMsgCount: e.unreadMsgCount,
              });
          }
        );
      }
      function Ce() {
        return (0, a.e)("purgeContactsLastKnownName", (e) =>
          e.purgeContactsLastKnownName()
        );
      }
      function Re(e) {
        return (0, a.e)("getGroup", (t) =>
          t
            .getGroupInfoWithParticipants(e)
            .then((e) =>
              e && "parent" !== e.groupInfo.groupType ? (0, h.e)(e) : null
            )
        );
      }
      function xe(e) {
        return (0, a.e)("instantiateParentGroup", (t) =>
          t.instantiateParentGroup(e)
        );
      }
      function De(e, t) {
        return (0, a.c)(
          "instantiateGroupChat",
          (t) => t.instantiateGroupChat(e),
          (n) => {
            n && (0, ue.d)(n),
              (0, y.getProfilePicTable)()
                .deleteRecord(e.jid)
                .then(() => {
                  (0, _.c)("event", "avatarsUpdated", { cleared: [e.jid] }),
                    t &&
                      (0, _.c)("event", "openChatWithGroup", { group: e.jid });
                });
            var r = e.participants.map((e) => e.jid);
            (0, m.b)().fireAndForget(g.e.syncDeviceList((0, s.m)(r)));
          }
        );
      }
      function Ue(e) {
        return (0, a.e)("getCommunityInfo", (t) => t.getCommunityInfo(e));
      }
      function je() {
        return (0, a.e)("getBlocklist", (e) => e.getBlocklist());
      }
      function $e() {
        return (0, a.f)("getBlocklistDHash", (e) =>
          (0, f.i)(e.getBlocklistDHash())
        );
      }
      function Fe() {
        return (0, a.f)("getBlocklistAndDHash", (e) =>
          e.getBlocklistAndDHash()
        );
      }
      function Be(e) {
        return (0, a.c)(
          "setBlocklist",
          (t) => (0, f.i)(t.setBlocklist(e)),
          () => {
            (0, _.c)("event", "blockList", { blocked: e });
          }
        );
      }
      function Ve(e, t, n) {
        return (0, a.c)(
          "setBlocklistAndDHash",
          (r) => r.table.setBlocklistAndDHash(e, t, n),
          (t) => {
            "success" === t
              ? (__LOG__(2)`setBlocklistAndDHash blocklist info updated`,
                (0, _.c)("event", "blockList", { blocked: e }))
              : (__LOG__(
                  2
                )`setBlocklistAndDHash hash mismatched, firing new getBlocklistV2 job`,
                (0, m.b)().fireAndForget(g.e.getBlocklistV2()));
          }
        );
      }
      function Ke(e) {
        return (0, a.c)(
          "addToBlocklist",
          (t) => t.addToBlocklist(e),
          (e) => {
            var t = i()(e, 2),
              n = t[0],
              r = t[1];
            (0, _.c)("event", "blockList", { blocked: n }), r && (0, ue.d)([r]);
          }
        );
      }
      function He(e) {
        return (0, a.c)(
          "removeFromBlocklist",
          (t) => t.removeFromBlocklist(e),
          (e) => {
            var t = i()(e, 2),
              n = t[0],
              r = t[1];
            (0, _.c)("event", "blockList", { blocked: n }), r && (0, ue.d)([r]);
          }
        );
      }
      function qe(e, t) {
        return (0, a.e)("getSentGroupInvitations", (n) =>
          n.getSentGroupInvitations(e, t)
        );
      }
      function ze(e, t) {
        return (0, a.c)(
          "muteChat",
          (n) => n.muteChat(e, t),
          (e) => {
            e && (0, _.c)("event", "chatModified", { chat: e });
          }
        );
      }
      function We(e, t) {
        return (0, a.c)(
          "setChatArchivedState",
          (n) => n.setChatArchivedState(e, t),
          (e) => {
            e && (0, _.c)("event", "chatModified", { chat: e });
          }
        );
      }
      function Je(e) {
        return (0, a.c)(
          "markChatAsUnread",
          (t) => t.markChatAsUnread(e),
          (e) => {
            e && (0, _.c)("event", "chatModified", { chat: e });
          }
        );
      }
      function Ye(e) {
        return (0, a.c)(
          "removeChatUnreadMark",
          (t) => t.removeChatUnreadMark(e),
          (e) => {
            e && (0, _.c)("event", "chatModified", { chat: e });
          }
        );
      }
      function Qe(e, t) {
        return (0, a.c)(
          "starMessagesFromChat",
          (n) => n.starMessagesFromChat(e, t),
          (e) => {
            if (e) {
              var t = e.msgs,
                n = e.chat;
              (0, _.c)("event", "msgsReceived", {
                changedMsgs: t.map((e) => ({ msg: e, recent: !1 })),
                affectedChats: [n],
                newMsgs: [],
              });
              var r = t
                .filter((e) => "gif" === e.content.type)
                .map((e) => e.id);
              r.length > 0 &&
                (0, m.b)().fireAndForget(g.e.addFavoriteGifsFromChat(r));
            }
          }
        );
      }
      function Ze(e, t) {
        return (0, a.c)(
          "unstarMessagesFromChat",
          (n) => n.unstarMessagesFromChat(e, t),
          (e) => {
            if (e) {
              var t = e.msgs,
                n = e.chat;
              (0, _.c)("event", "msgsReceived", {
                changedMsgs: t.map((e) => ({ msg: e, recent: !1 })),
                affectedChats: [n],
                newMsgs: [],
              });
            }
          }
        );
      }
      function Xe(e) {
        return (0, a.e)("getMsgwithMedia", (t) => b.s(t, e));
      }
      function et(e) {
        return (0, a.e)("getMsgWithMediaFromExternalMsgRef", (t) => b.t(t, e));
      }
      function tt(e) {
        return (0, a.e)("getMediaMsg", (t) =>
          (0, ce.a)(t.table, "r", ["chats", "msgs", "status"], (t) => b.o(t, e))
        );
      }
      function nt(e) {
        return (0, a.e)("getMediaById", (t) => (0, f.i)(b.k(t, e)));
      }
      function rt(e) {
        return (0, a.e)("getChatWithGroup", (t) => t.getChatWithGroup(e));
      }
      function it(e, t, n) {
        return (0, a.c)(
          "attachHashToMsgMedia",
          (r) =>
            b.b(r, e, t, n).then((e) => {
              if (e) {
                var t = e.dbMsg,
                  n = e.dbMedia;
                return (0, G.c)(t)
                  ? { type: "chat", dbMsg: t, dbMedia: n }
                  : w
                      .w(r)
                      .then((e) => ({
                        type: "status",
                        dbMsg: t,
                        dbMedia: n,
                        dbAuthor: e,
                      }));
              }
            }),
          (e) => {
            if (e)
              return (
                "status" === e.type
                  ? ((0, _.c)("event", "statusAuthorMeUpdated", {
                      author: (0, v.b)(e.dbAuthor, (0, d.D)()),
                    }),
                    (0, _.c)("event", "mediaUpdated", {
                      chatMsgs: [],
                      statusMsgs: [(0, v.e)(e.dbMsg)],
                      deleted: !1,
                    }))
                  : (0, _.c)("event", "mediaUpdated", {
                      chatMsgs: [(0, p.c)(e.dbMsg)],
                      statusMsgs: [],
                      deleted: !1,
                    }),
                e.dbMedia
              );
          }
        );
      }
      function at(e) {
        return (0, a.c)(
          "updateMmsThumbLastDownloadAttempt",
          (t) => b.U(t, e),
          (e) => {
            if (e) return pt(e.dbMsgs), e.dbMedia;
          }
        );
      }
      function ot(e) {
        return (0, a.e)("updateLastDownloadAttempt", (t) => b.R(t, e));
      }
      function ut(e, t) {
        return (0, a.e)("resetMediaDirectPath", (n) => b.B(n, e, t));
      }
      function st(e) {
        return (0, a.e)("updateLastUploadAttempt", (t) => b.S(t, e));
      }
      function lt(e, t) {
        return (0, a.c)("updateMediaPlaintext", (n) => b.T(n, e, t), pt);
      }
      function ct(e) {
        return (0, a.c)(
          "attachMediaPlaintext",
          (t) => b.c(t, e),
          (e) => (e ? pt(e) : void 0)
        );
      }
      function dt(e, t, n) {
        return (0, a.c)(
          "setMediaPlaintext",
          (r) => b.L(r, e, t, n),
          (e) => {
            if (e) {
              var t = e.dbMedia;
              return pt(e.dbMsgs), t;
            }
          }
        );
      }
      function ft(e, t) {
        return (0, a.c)("setUndefinedMediaFields", (n) => b.O(n, e, t), pt);
      }
      function _t(e, t) {
        return (0, a.e)("setMediaProgressiveDetails", (n) => b.M(n, e, t));
      }
      function pt(e) {
        for (var t = [], n = [], r = 0; r < e.length; r++) {
          var i = e[r];
          void 0 !== i.chat ? t.push((0, p.c)(i)) : n.push((0, v.e)(i));
        }
        (0, _.c)("event", "mediaUpdated", {
          chatMsgs: t,
          statusMsgs: n,
          deleted: !1,
        });
      }
      function vt(e) {
        return (0, a.c)(
          "markMmsMediaPreviewForMsg",
          (t) => b.z(t, e),
          (e) => {
            e && pt([e]);
          }
        );
      }
      function ht(e, t, n) {
        return (0, a.c)(
          "saveDownloadedMediaMMSPreview",
          (r) => b.D(r, e, t, n),
          (e) => {
            var t = e.dbMsgs,
              n = e.dbAuthors;
            if (n && n.length > 0) {
              var r = (0, d.D)();
              (0, _.c)("event", "statusAuthorsUpdated", {
                authors: n.map((e) => (0, v.c)(e, r)).filter(Boolean),
              });
            }
            0 !== t.length && pt(t);
          }
        );
      }
      function mt(e, t, n) {
        return (0, a.e)("setMediaEntry", (r) => b.G(r, e, t, n));
      }
      function gt(e, t, n) {
        return (0, a.e)("markMediaEntryValid", (r) => b.y(r, e, t, n));
      }
      function yt(e) {
        return (0, a.f)("filterParticipantsInGroup", (t) =>
          (0, f.i)(t.filterParticipantsInGroup(e))
        );
      }
      function bt(e, t, n, r, i) {
        return (0, a.e)("setMediaEntryDirectPath", (a) =>
          b.H(a, e, t, n, r, i)
        );
      }
      function wt(e, t, n) {
        return (0, a.e)("setMediaEntryThumbDirectPath", (r) => b.J(r, e, t, n));
      }
      function Ot(e, t, n) {
        return (0, a.e)("setMediaEntryMmsThumbInfo", (r) => b.I(r, e, t, n));
      }
      function Et(e) {
        return (0, a.e)("getDeleteExpiredJobInfoAndContact", (t) =>
          t.getDeleteExpiredJobInfoAndContact(e)
        );
      }
      function It() {
        return (0, a.e)("getSidelistJids", (e) => e.getSidelistJids());
      }
      function St(e, t) {
        return (0, a.c)(
          "verifyUser",
          (n) =>
            (function (e, t, n) {
              return (
                __LOG__(2)`verifyUser ${t}`,
                e.table.transact("rw", ["contacts", "chats", "msgs"], () =>
                  e.table.getContact(t).then((r) => {
                    var a = r || { jid: t },
                      u = a.chatId,
                      s = [];
                    if (null != u) {
                      var l = (0, A.b)(a, n);
                      l && s.push(() => P(e, u, l));
                      var c = (0, A.e)(a, n);
                      c &&
                        s.push(() => e.addSystemMsgToChatInTransaction(u, c));
                    }
                    var d = Object.assign({}, a, { verifiedInfo: n });
                    return (0, f.c)([
                      (0, f.f)(s),
                      e.table.stores.contacts.put(d),
                    ]).then((e) => {
                      var t = i()(e, 1)[0];
                      return {
                        contact: d,
                        msgs: t.reduce(
                          (e, t) => (t && e.push((0, o.r)(t, d)), e),
                          []
                        ),
                      };
                    });
                  })
                )
              );
            })(n, e, t),
          (e) => {
            var t = e.contact,
              n = e.msgs;
            t &&
              ((0, _.c)("event", "contactsModified", { changed: [t] }),
              (0, ue.d)(n));
          }
        );
      }
      function kt(e) {
        return (0, a.c)(
          "unverifyUser",
          (t) =>
            (function (e, t) {
              return (
                __LOG__(2)`unverifyUser ${t}`,
                e.table.transact("rw", ["contacts", "chats", "msgs"], () =>
                  e.table.getContact(t).then((t) => {
                    if (null != t && null != t.verifiedInfo) {
                      var n = null,
                        r = Object.assign({}, t, { verifiedInfo: void 0 }),
                        a = t.chatId;
                      if (null != a) {
                        var u = (0, A.a)(t);
                        u && (n = P(e, a, u));
                      }
                      return (0, f.c)([n, e.table.stores.contacts.put(r)]).then(
                        (e) => {
                          var t = i()(e, 1)[0];
                          return {
                            updatedContact: r,
                            msgs: t ? [(0, o.r)(t, r)] : [],
                          };
                        }
                      );
                    }
                  })
                )
              );
            })(t, e),
          (e) => {
            if (e) {
              var t = e.updatedContact,
                n = e.msgs;
              t && (0, _.c)("event", "contactsModified", { changed: [t] }),
                n && (0, ue.d)(n);
            }
          }
        );
      }
      function Lt(e) {
        return (0, a.e)("getMsgInfo", (t) => t.getMsgInfo(e));
      }
      function Gt(e) {
        return (0, a.e)("getMediaMsglikelyOnServerFrom", (t) => b.p(t, e));
      }
      function Mt(e, t) {
        return (0, a.e)("setMediaFilesystemPath", (n) => b.K(n, e, t));
      }
      function At(e, t) {
        return (0, a.c)(
          "recordKeyChange",
          (n) => n.recordKeyChange(e, t),
          (e) => {
            if (e) {
              var t = e.newMsgs,
                n = e.updatedContact;
              n && (0, _.c)("event", "contactsModified", { changed: [n] }),
                (0, ue.d)(t);
            }
          }
        );
      }
      function Pt(e) {
        return (0, a.c)(
          "markPlayed",
          (t) => t.markPlayed(e),
          (e) => {
            var t = e.msg,
              n = e.updatedChat;
            return (
              t &&
                "viewed" === t.content.viewOnceState &&
                (0, _.c)("event", "msgsReceived", {
                  newMsgs: [],
                  changedMsgs: [{ msg: t, recent: !1 }],
                  affectedChats: n ? [n] : [],
                }),
              t &&
                t.content &&
                t.content.mediaStatus &&
                (0, _.c)("event", "msgMediaStatusUpdated", {
                  msgId: t.id,
                  mediaStatus: t.content.mediaStatus,
                }),
              e
            );
          }
        );
      }
      function Tt(e, t, n) {
        return (0, a.c)(
          "updateContactEphemeralSettings",
          (r) => r.updateContactEphemeralSettings(e, t, n),
          (e) => {
            e && (0, _.c)("event", "contactsModified", { changed: [e] });
          }
        );
      }
      function Nt(e, t, n) {
        return (0, a.c)(
          "deleteChatMsgs",
          (n) => (0, J.a)(n, e, t),
          (e) => {
            if (null != e) {
              var t = e.chat,
                r = e.msgIds,
                i = e.deletedMediaStats;
              r.length > 0 &&
                ((0, _.c)("event", "msgsDeleted", {
                  chat: t,
                  msgIds: r,
                  reason: n,
                }),
                i.numFiles > 0 &&
                  (0, m.b)().fireAndForget(
                    g.e.removeDeadMediaContent("delete-msgs")
                  ));
            }
          }
        );
      }
      function Ct(e, t) {
        return (0, a.c)(
          "deleteMsgsFromStorageSetting",
          (t) => (0, J.b)(t, e),
          (e) => {
            (0, _.c)("event", "msgsDeletedFromManyChats", {
              chats: e
                .filter((e) => (e.chat, e.msgIds.length > 0))
                .map((e) => ({ chat: e.chat, msgIds: e.msgIds, reason: t })),
            }),
              (0, m.b)().fireAndForget(
                g.e.removeDeadMediaContent("delete-msgs")
              );
            var n = { size: 0, numFiles: 0 };
            return (
              e.forEach((e) => {
                (n.size += e.deletedMediaStats.size),
                  (n.numFiles += e.deletedMediaStats.numFiles);
              }),
              { deletedMediaStats: n }
            );
          }
        );
      }
      function Rt(e) {
        return (0, a.e)("deleteAllExpiredMsgsForChat", (t) =>
          t.deleteAllExpiredMsgsForChat(e)
        );
      }
      function xt(e) {
        return (0, a.e)("loadChatMedias", (t) =>
          t.getChatMediaMsgs(e).then((e) => ({ msgs: e.map(p.c) }))
        );
      }
      function Dt(e) {
        return (0, a.e)("loadStorageSettingMediaMsgs", (t) =>
          t.getStorageSettingMediaMsgs(e).then((e) => ({ msgs: e.map(p.c) }))
        );
      }
      function Ut() {
        return (0, a.e)("getStorageSettingChatsMediaSizes", (e) =>
          e.getStorageSettingChatsMediaSizes()
        );
      }
      function jt() {
        return (0, a.e)("getStorageSettingTotalMediaSize", (e) =>
          e.getStorageSettingTotalMediaSize()
        );
      }
      function $t(e) {
        return (0, a.e)("getAllMediaMsgIds", (t) => t.getAllMediaMsgIds(e));
      }
      function Ft(e, t, n) {
        return (0, a.e)("loadChatStarredMsgs", (r) =>
          r.loadChatStarredMsgs(e, t, n).then((e) => ({ msgs: e.map(p.c) }))
        );
      }
      function Bt(e, t) {
        return (0, a.e)("loadStarredMsgs", (n) =>
          n.loadStarredMsgs(e, t).then((e) => ({ msgs: e.map(p.c) }))
        );
      }
      function Vt(e, t) {
        return (0, a.e)("updateChatLastNotified", (n) =>
          n.updateChatLastNotified(e, t)
        );
      }
      function Kt(e) {
        return (0, a.e)("getStickerMsgMediaRefs", (t) =>
          (0, f.i)(b.m(t, e)).then((t) =>
            t && t.plaintext
              ? { frame: t.frame, plaintext: t.plaintext }
              : (__LOG__(2)`getMsgMedia: non-existent media for msg ${e}`, null)
          )
        );
      }
      function Ht(e) {
        return (0, a.c)(
          "markMediaContentAsDeleted",
          (t) => b.x(t, e),
          (e) => {
            if (0 !== e.length) {
              for (var t = [], n = [], r = 0; r < e.length; r++) {
                var i = e[r];
                void 0 !== i.chat ? t.push((0, p.c)(i)) : n.push((0, v.e)(i));
              }
              (0, _.c)("event", "mediaUpdated", {
                chatMsgs: t,
                statusMsgs: n,
                deleted: !0,
              });
            }
          }
        );
      }
      function qt(e, t) {
        return (0, a.c)(
          "updatePushname",
          (n) => n.updatePushname(e, t),
          (e) => {
            e && (0, _.c)("event", "contactsModified", { changed: [e] });
          }
        );
      }
      function zt(e, t) {
        return (0, a.c)(
          "updateAbout",
          (n) => n.updateAbout(e, t),
          (e) => {
            e && (0, _.c)("event", "contactsModified", { changed: [e] });
          }
        );
      }
      function Wt(e) {
        return (0, a.e)("deleteAllMedia", (t) =>
          b
            .e(t, e)
            .then(() =>
              (0, m.b)().waitUntilPersisted(
                g.e.removeDeadMediaContent("delete-all-media")
              )
            )
        );
      }
      function Jt(e) {
        return (0, a.e)("hasMediaMmsPreview", (t) => b.u(t, e));
      }
      function Yt(e) {
        return (0, a.e)("getFullMsgPreview", (t) => b.h(t, e));
      }
      function Qt(e) {
        return (0, a.e)("getMsgPreviews", (t) => b.r(t, e));
      }
      function Zt(e, t, n, r) {
        return (0, a.e)("saveMediaThumbs", (i) => b.E(i, e, t, n, r));
      }
      function Xt(e, t, n) {
        return (0, de.I)(e, {
          chat: (e) =>
            (0, a.c)(
              "setMsgBgs",
              (r) => b.F(r, e, t, n),
              (e) => {
                e &&
                  (0, _.c)("event", "msgBgUpdated", {
                    msg: (0, p.c)(e.updatedMsg),
                  });
              }
            ),
          status: (e) =>
            (0, a.c)(
              "setMsgBgs",
              (n) => b.N(n, e, t),
              (e) => {
                e && Tn(e.updatedAuthor, [e.updatedMsg]);
              }
            ),
        });
      }
      function en(e) {
        return (0, a.c)(
          "purgeExpiredInvitations",
          (t) => t.purgeExpiredInvitations(e),
          (e) => {
            e && (0, _.c)("event", "chatModified", { chat: e });
          }
        );
      }
      function tn(e, t) {
        return (0, a.c)(
          "removeGroupInvitations",
          (n) => n.removeGroupInvitations(e, t),
          (e) => {
            if (e) {
              var t = e.updatedGroup,
                n = e.revokedInvites;
              t && (0, _.c)("event", "chatModified", { chat: t }), (0, ue.a)(n);
            }
          }
        );
      }
      function nn(e, t, n) {
        return (0, a.c)(
          "revokeReceivedGroupInvites",
          (r) => r.revokeGroupInvites(e, t, n),
          (e) => {
            var t = e.updatedGroup,
              n = e.revokeResult;
            t && (0, _.c)("event", "chatModified", { chat: t }), (0, ue.a)(n);
          }
        );
      }
      function rn(e, t, n) {
        return (0, a.c)(
          "handleDevicesInfo",
          (r) =>
            r.handleDevicesInfo(e, t).then((i) => {
              var a = (0, L.d)(i.updatedContact);
              return i.contactWasUpdated
                ? ((0, _.c)("event", "identityVerificationChanged", { jid: e }),
                  t.identity && a.includes(t.identity.deviceId)
                    ? (0, m.b)()
                        .waitUntilPersisted(g.e.syncDeviceList((0, s.l)(e)))
                        .then(() => i.notificationMsgs)
                    : (0, S.b)(e, a)
                        .then((t) =>
                          n && n !== t
                            ? (0, m.b)().waitUntilPersisted(
                                g.e.syncDeviceList((0, s.l)(e))
                              )
                            : r.updatePHashIfMatches(e, a, t).then(() => {
                                if (i.requestDeviceSync)
                                  return (0, m.b)().waitUntilPersisted(
                                    g.e.syncDeviceList((0, s.l)(e))
                                  );
                              })
                        )
                        .then(() => i.notificationMsgs))
                : (i.requestDeviceSync &&
                    (0, m.b)().fireAndForget(g.e.syncDeviceList((0, s.l)(e))),
                  i.updatedContact.phash
                    ? i.notificationMsgs
                    : (0, S.b)(e, a).then((t) =>
                        r.updatePHashIfMatches(e, a, t)
                      ));
            }),
          ue.d
        );
      }
      function an(e) {
        return (0, a.c)(
          "expireContacts",
          (t) => t.expireContacts(e),
          (e) => {
            var t = e.updatedJids,
              n = e.notificationMsgs;
            t.forEach((e) => {
              (0, _.c)("event", "identityVerificationChanged", { jid: e });
            }),
              (0, ue.d)(n);
          }
        );
      }
      function on(e, t, n, r) {
        return (0, a.e)("updateContactADVTimestamps", (i) =>
          i.updateContactADVTimestamps(e, t, n, r)
        );
      }
      function un(e, t, n) {
        return (0, a.e)("removeContactDevices", (r) =>
          r.updatePHashIfMatches(e, t, n)
        );
      }
      function sn() {
        return (0, a.e)("getSortedCallLogs", (e) => e.getSortedCallLogs());
      }
      function ln(e, t) {
        return (0, a.e)("initializeCallLog", (n) => n.initializeCallLog(e, t));
      }
      function cn(e, t) {
        return (0, a.e)("createMissedCallLog", (n) =>
          n.createMissedCallLog(e, t)
        );
      }
      function dn(e, t, n, r) {
        return (0, a.e)("finalizeCallLog", (i) =>
          i.finalizeCallLog(e, t, n, r)
        );
      }
      function fn(e) {
        return (0, a.e)("deleteCallLogs", (t) => t.deleteCallLogs(e));
      }
      function _n() {
        return (0, a.e)("clearAllCallLogs", (e) => e.clearAllCallLogs());
      }
      function pn(e, t) {
        return (0, a.c)(
          "saveDocumentMediaVCards",
          (n) => b.C(n, e, t),
          (e) => {
            if (e) {
              var t = e.updatedChats,
                n = e.updatedMsgs;
              (0, _.c)("event", "msgsReceived", {
                newMsgs: [],
                changedMsgs: n.map((e) => ({ msg: (0, p.c)(e), recent: !1 })),
                affectedChats: t.map((e) => {
                  var t = e.dbChat,
                    n = e.dbGroup;
                  return (0, O.a)(t, n);
                }),
              });
            }
          }
        );
      }
      function vn() {
        return (0, a.e)("logChatMessageCountsCacheAndPurge", (e) =>
          (0, o.k)(e)
        );
      }
      function hn() {
        return (0, a.e)("getStatusDailyStats", (e) => w.g(e));
      }
      function mn() {
        return (0, a.c)(
          "loadLastUnreadStatusMsg",
          (e) => w.e(e),
          (e) => {
            if (e) {
              var t = {
                msgId: e.id,
                ts: e.ts,
                campaignDuration: e.campaignDuration,
              };
              (0, _.c)("event", "statusLastUnreadMsgLoaded", {
                lastUnreadMsg: t,
              });
            }
          }
        );
      }
      function gn() {
        return (0, a.c)(
          "loadStatusPrivacySettings",
          (e) => w.k(e),
          (e) => {
            e
              ? (0, _.c)("event", "statusSettingsUpdated", { settings: e })
              : (0, m.b)().fireAndForget(g.e.initLocalSettingsFromServer());
          }
        );
      }
      function yn() {
        return (0, a.e)("getStatusPrivacySettings", (e) => w.k(e));
      }
      function bn() {
        return (0, a.c)(
          "loadAllAuthors",
          (e) => w.d(e),
          (e) => {
            var t = e.authors,
              n = e.me,
              r = e.psa,
              i = (0, d.D)(),
              a = [];
            if (
              (t.forEach((e) => {
                var t = (0, v.c)(e, i);
                t && a.push(t);
              }),
              r)
            ) {
              var o = (0, v.c)(r, i);
              o && a.push(o);
            }
            (0, _.c)("event", "statusAuthorsLoaded", {
              authors: a,
              me: n && (0, v.b)(n, i),
            });
          }
        );
      }
      function wn() {
        return (0, a.e)("getStatusMmsThumbnailsToDownload", (e) =>
          w.j(e).then((e) => {
            if (e)
              return {
                previewMsgIds: e.previewMsgIds,
                otherMmsThumbnails: e.otherMmsThumbnails,
              };
          })
        );
      }
      function On() {
        return (0, a.e)("loadSentStatusInfo", (e) => w.f(e));
      }
      function En(e) {
        return (0, a.e)("getStatusFromIds", (t) =>
          (0, ce.b)(t.table, (t) => w.i(t, e)).then((e) =>
            e.map((e) => (0, v.e)(e))
          )
        );
      }
      function In(e) {
        return (0, a.c)(
          "getStatusWithAuthorFromId",
          (t) => w.l(t, e),
          (e) => {
            if (null != e) {
              var t = e.dbStatus,
                n = e.dbStatusAuthor,
                r = (0, v.d)(n, (0, d.D)());
              if (null != r) return { author: r, status: (0, v.e)(t) };
            }
          }
        );
      }
      function Sn(e) {
        return (0, a.c)(
          "setInitialStatusPrivacy",
          (t) => w.t(t, e),
          (e) => (
            (0, _.c)("event", "statusSettingsUpdated", { settings: e }), e
          )
        );
      }
      function kn(e) {
        return (0, a.c)(
          "setStatusPrivacy",
          (t) => w.u(t, e),
          (e) => (
            e && (0, _.c)("event", "statusSettingsUpdated", { settings: e }), e
          )
        );
      }
      function Ln(e, t, n) {
        return (0, a.c)(
          "markStatusAsSeen",
          (r) => w.n(r, e, t, n),
          (e) => {
            e && Tn(e.updatedAuthor, e.updatedMsgs);
          }
        );
      }
      function Gn(e, t) {
        return (0, a.e)("getUnreadStatusExternalIdUpTo", (n) =>
          w
            .m(n, e, t)
            .then((e) =>
              e.map((e) => ({ msgId: e.id, externalId: e.externalId }))
            )
        );
      }
      function Mn(e) {
        return (0, a.c)(
          "writeIncomingPSAStatusMsg",
          (t) => w.A(t, e),
          (e) => (
            e.forEach((e) => {
              if (e) {
                var t = e.dbMsg;
                Dn(t), Pn(e), (0, I.o)(t, c.h);
              }
            }),
            e
          )
        );
      }
      function An(e, t) {
        return (0, a.c)(
          "writeIncomingStatusMsg",
          (n) => w.B(n, e, t),
          (e) => {
            if (e) {
              var t = e.dbMsg,
                n = e.author;
              __LOG__(2)`Received status from author ${n.jid}`,
                Pn(e),
                "revoked" === e.result &&
                  (0, m.b)().fireAndForget(
                    g.e.removeDeadMediaContent("remote-revoke-msg")
                  ),
                Nn(n),
                Dn(t),
                (0, I.o)(t, c.h);
            }
          }
        );
      }
      function Pn(e) {
        e.shouldAutodownload &&
          (0, m.b)().fireAndForget(
            g.e.downloadMedia(e.dbMsg.id, "autodownload")
          ),
          e.shouldDownloadMmsThumb &&
            (0, m.b)().fireAndForget(
              g.e.downloadMediaThumb(e.dbMsg.id, e.dbMsg.media)
            );
      }
      function Tn(e, t) {
        var n = (0, v.c)(e, (0, d.D)());
        if (n)
          (0, _.c)("event", "statusMsgsUpdated", {
            msgs: t.map(v.e),
            author: n,
          });
        else {
          var r = e.jid === E.b ? E.b : (0, h.i)(e.jid);
          r && (0, _.c)("event", "statusAuthorsCleared", { authors: [r] });
        }
      }
      function Nn(e) {
        if (e) {
          var t = (0, v.c)(e, (0, d.D)());
          if (t) (0, _.c)("event", "statusAuthorUpdated", { author: t });
          else {
            var n = e.jid === E.b ? E.b : (0, h.i)(e.jid);
            n && (0, _.c)("event", "statusAuthorsCleared", { authors: [n] });
          }
        }
      }
      function Cn(e) {
        return (0, a.c)(
          "revokeStatusPSACampaign",
          (t) => w.s(t, e),
          (e) => {
            e &&
              (Nn(e.author),
              (0, m.b)().fireAndForget(
                g.e.removeDeadMediaContent("revoke-status-psa")
              ));
          }
        );
      }
      function Rn(e) {
        return (0, a.c)(
          "revokeStatusMsg",
          (t) => w.r(t, e),
          (e) => {
            if (e)
              return (
                (0, _.c)("event", "statusMsgRemoved", {
                  statusMsgId: e.dbMsg.id,
                  author: (0, v.b)(e.author, (0, d.D)()),
                }),
                (0, m.b)().fireAndForget(
                  g.e.removeDeadMediaContent("revoke-status-msgs")
                ),
                e
              );
          }
        );
      }
      function xn(e) {
        return (0, a.c)(
          "writeOutgoingStatusMsg",
          (t) => w.C(t, e),
          (e) => {
            if (e)
              return (
                (0, _.c)("event", "statusAuthorMeUpdated", {
                  author: (0, v.b)(e.author, (0, d.D)()),
                }),
                e
              );
          }
        );
      }
      function Dn(e) {
        var t = e.type;
        (t !== u.f.IMAGE && t !== u.f.VIDEO && t !== u.f.GIF) ||
          (0, m.b)().fireAndForget(g.e.setMsgBg(e.id));
      }
      function Un() {
        return (0, a.c)(
          "purgeExpiredStatusMsgs",
          (e) => w.p(e),
          (e) => {}
        );
      }
      function jn(e) {
        return (0, a.c)(
          "muteAuthor",
          (t) => w.o(t, e),
          (e) => Nn(e)
        );
      }
      function $n(e) {
        return (0, a.c)(
          "unmuteAuthor",
          (t) => w.v(t, e),
          (e) => Nn(e)
        );
      }
      function Fn() {
        return (0, a.e)("getNextExpirationTimestamp", (e) =>
          (0, f.i)(e.getNextExpirationTimestamp())
        );
      }
      function Bn() {
        return (0, a.e)("getExpiredMessages", (e) =>
          (0, f.i)(e.getExpiredMessages())
        );
      }
      function Vn() {
        return (0, a.e)("getNextViewOnceExpirationTimestamp", (e) =>
          (0, f.i)(e.getNextViewOnceExpirationTimestamp())
        );
      }
      function Kn(e) {
        return (0, a.c)(
          "unlinkViewOnceMsgsMedia",
          (t) => (0, f.i)(t.unlinkViewOnceMsgsMedia(e)),
          (e) => (
            (0, m.b)().fireAndForget(
              g.e.removeDeadMediaContent("viewonce-unlink")
            ),
            e
          )
        );
      }
      function Hn() {
        return (0, a.e)("cleanViewOnceMessages", (e) =>
          (0, f.i)(e.cleanViewOnceMessages())
        );
      }
      function qn(e, t) {
        return (0, a.c)(
          "markHsmButtonPressed",
          (n) => n.markHsmButtonPressed(e, t),
          (e) => {
            if (e) return (0, _.c)("event", "hsmButtonPressed", { msg: e }), e;
          }
        );
      }
      function zn(e, t) {
        return (0, a.c)(
          "setChatWallpaper",
          (n) => n.setChatWallpaper(e, t),
          (e) => {
            e && (0, ue.e)(e);
          }
        );
      }
      function Wn() {
        return (0, a.c)(
          "resetWallpaperInAllChats",
          (e) => e.resetWallpaperInAllChats(),
          (e) => {
            (0, ue.f)(e);
          }
        );
      }
      function Jn(e) {
        return (0, a.c)(
          "recomputeSuspiciousCharacters",
          (t) => t.recomputeSuspiciousCharacters(e),
          (e) => {
            null != e &&
              "updated" === e.type &&
              (0, _.c)("event", "msgsReceived", {
                newMsgs: [],
                changedMsgs: [{ msg: e.msg, recent: !1 }],
                affectedChats: [e.chat],
              });
          }
        );
      }
      function Yn() {
        return (0, a.e)("getRecentEmojis", (e) => e.getRecentEmojis());
      }
      function Qn(e) {
        return (0, a.e)("setRecentEmojis", (t) => t.setRecentEmojis(e));
      }
      function Zn(e) {
        return (0, a.e)("updateCurrentUserNotice", (t) =>
          t.updateCurrentUserNotice(e).then((e) => {
            if (e) {
              if (null != e.needsSendAccept) {
                var t = e.needsSendAccept.version;
                return (0, m.b)().waitUntilPersisted(
                  g.e.syncUserNoticeState(e.id, l.q.EXPIRED, t)
                );
              }
              if (e.needsDownload)
                return (0, m.b)().waitUntilPersisted(
                  g.e.downloadUserNoticeContent(e.id)
                );
            }
          })
        );
      }
      function Xn(e, t) {
        return (0, a.e)("updateContentForUserNotice", (n) =>
          n
            .updateContentForUserNotice(e, t)
            .then((t) => {
              var n;
              return t && t.currentState === l.q.FETCHED
                ? (0, m.b)()
                    .waitUntilPersisted(
                      g.e.syncUserNoticeState(
                        e,
                        t.currentState,
                        null == (n = t.content) ? void 0 : n.version
                      )
                    )
                    .then(() => t)
                : t;
            })
            .then((e) => {
              if (e) return rr();
            })
        );
      }
      function er() {
        return (0, a.e)("getDbUserNotice", (e) => e.getDbUserNotice());
      }
      function tr(e, t) {
        return (0, a.e)("logUserNoticeDisplayed", (n) =>
          n.logUserNoticeDisplayed(e, t)
        );
      }
      function nr(e, t, n, r) {
        return (0, a.e)("acceptUserNotice", (i) =>
          "deep-link-modal" === r
            ? e === T.Y
              ? (WAM.log("regular", 2472, void 0, [3, 0, 6, 1, 0, e, 2, 0, t]),
                (0, m.b)().waitUntilPersisted(
                  g.e.syncUserNoticeState(e, l.q.EXPIRED, t)
                ))
              : (__LOG__(
                  4
                )`acceptUserNotice: unexpected attempt to accept ToS Deep Link for id: ${e}`,
                SEND_LOGS("accept-user-notice-deep-link-modal-unexpected-id"),
                Promise.resolve())
            : i.acceptUserNotice(e, t, n, r).then((n) => {
                if (n)
                  return (0, m.b)().waitUntilPersisted(
                    g.e.syncUserNoticeState(e, l.q.EXPIRED, t)
                  );
              })
        );
      }
      function rr() {
        return (0, M.b)()
          ? (0, a.e)("timeTransitionUserNotice", (e) =>
              e.timeTransitionUserNotice().then((e) => {
                if (e)
                  return (0, m.b)().waitUntilPersisted(
                    g.e.syncUserNoticeState(e.id, e.state, e.version)
                  );
              })
            )
          : (__LOG__(
              2
            )`timeTransitionUserNotice: User Notice Framework is disabled`,
            Promise.resolve());
      }
      function ir(e) {
        return (0, a.e)("purgeUserNotice", (t) => t.purgeUserNotice(e));
      }
      function ar(e, t, n) {
        return (0, a.e)("updateStaleUserNotice", (r) =>
          r.updateStaleUserNotice(e, t, n)
        );
      }
      function or(e) {
        return (
          __LOG__(2)`convertFutureproofMessage ${e}`,
          (0, a.c)(
            "convertFutureproofMessage",
            (t) => t.convertFutureproofMessage(e),
            (e) => {
              null != e &&
                ("updated" === e.type
                  ? (0, _.c)("event", "msgsReceived", {
                      newMsgs: [],
                      changedMsgs: [{ msg: e.msg, recent: !1 }],
                      affectedChats: [e.chat],
                    })
                  : (e.type,
                    (0, _.c)("event", "msgsDeleted", {
                      chat: e.chat,
                      msgIds: [e.msgId],
                      reason: "futureproof-broken",
                    })));
            }
          )
        );
      }
      function ur(e) {
        return (0, a.e)("updateDeleteExpiredDevicesJobInfo", (t) =>
          t.updateDeleteExpiredDevicesJobInfo(e)
        );
      }
      function sr() {
        return (0, a.e)("getDeleteExpiredDevicesJobInfo", (e) =>
          e.getDeleteExpiredDevicesJobInfo()
        );
      }
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return a;
      }),
        n.d(t, "c", function () {
          return o;
        }),
        n.d(t, "d", function () {
          return l;
        }),
        n.d(t, "a", function () {
          return c;
        });
      var r = n(26),
        i = n.n(r);
      function a(e) {
        return { success: !1, error: e };
      }
      function o(e) {
        return { success: !0, value: e };
      }
      function u() {
        return (u = i()(function* (e, t) {
          return e.success ? o(yield t(e.value)) : a(e.error);
        })).apply(this, arguments);
      }
      function s() {
        return (s = i()(function* (e, t) {
          return e.success ? o(e.value) : a(yield t(e.error));
        })).apply(this, arguments);
      }
      function l(e) {
        return (t) =>
          (function (e, t) {
            return u.apply(this, arguments);
          })(t, e);
      }
      function c(e) {
        return (function () {
          var t = i()(function* (t) {
            yield (function (e, t) {
              return s.apply(this, arguments);
            })(t, e);
          });
          return function (e) {
            return t.apply(this, arguments);
          };
        })();
      }
    },
    function (e, t, n) {
      n.d(t, "s", function () {
        return s;
      }),
        n.d(t, "a", function () {
          return l;
        }),
        n.d(t, "e", function () {
          return c;
        }),
        n.d(t, "g", function () {
          return d;
        }),
        n.d(t, "d", function () {
          return f;
        }),
        n.d(t, "b", function () {
          return _;
        }),
        n.d(t, "c", function () {
          return p;
        }),
        n.d(t, "p", function () {
          return v;
        }),
        n.d(t, "q", function () {
          return h;
        }),
        n.d(t, "k", function () {
          return m;
        }),
        n.d(t, "n", function () {
          return g;
        }),
        n.d(t, "o", function () {
          return y;
        }),
        n.d(t, "r", function () {
          return b;
        }),
        n.d(t, "l", function () {
          return w;
        }),
        n.d(t, "m", function () {
          return O;
        }),
        n.d(t, "f", function () {
          return E;
        }),
        n.d(t, "h", function () {
          return I;
        }),
        n.d(t, "i", function () {
          return S;
        }),
        n.d(t, "j", function () {
          return M;
        }),
        n(43);
      var r = n(24),
        i = (n(120), n(254), n(112)),
        a = n(28);
      function o(e) {
        return e;
      }
      var u = n(74),
        s = (0, a.c)();
      function l(e, t) {
        return e.tag !== t ? S(e, `to be <${t}>`) : s;
      }
      function c(e, t) {
        return k(e, t)
          ? (function (e, t) {
              return t instanceof u.c
                ? (0, a.c)(t.toString())
                : "string" == typeof t
                ? (0, a.c)(t)
                : S(
                    e,
                    `decodeAsString: attribute is ${typeof t} not a string: ${String(
                      t
                    )}`
                  );
            })(e, e.attrs[t])
          : S(e, `to have attribute "${t}"`);
      }
      function d(e, t, n, r) {
        var i = c(e, t);
        if (!i.success) return i;
        var o = n(i.value);
        return null != o
          ? (0, a.c)(o)
          : S(e, `to have "${t}"={${r}}, but instead has "${i.value}"`);
      }
      function f(e, t) {
        return d(e, t, o, "stanzaID");
      }
      function _(e, t) {
        return d(e, t, L, "integer");
      }
      function p(e, t, n, r) {
        var i = _(e, t);
        if (!i.success) return i;
        var o = i.value;
        return void 0 !== n && o < n
          ? S(e, `to have "${t}"={at least ${n}} but has value ${o}`)
          : void 0 !== r && o > r
          ? S(e, `to have "${t}"={at most ${r}} but has value ${o}`)
          : (0, a.c)(o);
      }
      function v(e, t) {
        var n = G(e);
        if (!n.success) return n;
        var r = n.value;
        if (null == r) return s;
        for (var i = null, o = 0; o < r.length; o++) {
          var u = r[o];
          if (u.tag === t) {
            if (null != i)
              return S(e, `to have 1 child <${t}>, but found more than 1`);
            i = u;
          }
        }
        return (0, a.c)(i);
      }
      function h(e, t, n) {
        var r = v(e, t);
        return r.success ? (null == r.value ? s : n(r.value)) : r;
      }
      function m(e, t) {
        var n = v(e, t);
        return n.success
          ? null == n.value
            ? S(e, `to have 1 child <${t}>, but found 0`)
            : (0, a.c)(n.value)
          : n;
      }
      function g(e, t, n, r, i) {
        var o = (function (e, t, n, r) {
          var i = G(e);
          if (!i.success) return i;
          var o = i.value;
          if (null == o)
            return 0 !== n
              ? S(e, `to have at least ${n} <${t}> children, but found 0`)
              : (0, a.c)([]);
          for (var u = [], s = 0; s < o.length; s++) {
            var l = o[s];
            l.tag === t && u.push(l);
          }
          var c = u.length;
          return c < n
            ? S(e, `to have at least ${n} <${t}> children, but found ${c}`)
            : c > r
            ? S(e, `to have at most ${r} <${t}> children, but found ${c}`)
            : (0, a.c)(u);
        })(e, t, n, r);
        if (!o.success) return o;
        for (var u = [], s = 0; s < o.value.length; s++) {
          var l = i(o.value[s]);
          if (!l.success) return l;
          u.push(l.value);
        }
        return (0, a.c)(u);
      }
      function y(e, t, n, r, i) {
        return k(t, n) ? e(t, n, r, i) : s;
      }
      function b(e, t, n, r) {
        if (null == r) return s;
        var i = y(e, t, n);
        return i.success
          ? i.value === r
            ? (0, a.c)(r)
            : null == i.value
            ? s
            : S(t, `to have "${n}"={${r}}, but instead has "${i.value}"`)
          : i;
      }
      function w(e, t, n, r) {
        var i = e(t, n);
        return i.success
          ? i.value === r
            ? (0, a.c)(r)
            : S(t, `to have "${n}"={${r}}, but instead has "${i.value}"`)
          : i;
      }
      function O(e, t, n) {
        var r = e(t);
        return r.success
          ? r.value === n
            ? (0, a.c)(n)
            : S(t, `to have content "${n}", but instead has "${r.value}"`)
          : r;
      }
      function E(e, t, n) {
        var r = c(e, t);
        if (!r.success) return r;
        var i = n[r.value];
        return null != i
          ? (0, a.c)(i)
          : S(
              e,
              `to have "${t}"={${Object.values(n).join(
                "|"
              )}}, but instead has "${r.value}"`
            );
      }
      function I(e) {
        var t = (function (e) {
          var t = e.content;
          return null == t
            ? S(e, "to have content")
            : Array.isArray(t)
            ? S(e, "to have content, but has children instead")
            : (0, a.c)(t);
        })(e);
        if (!t.success) return t;
        try {
          var n = new r.a(t.value),
            i = n.readString(n.size());
          return (0, a.c)(i);
        } catch (t) {
          return S(
            e,
            "to have string content, but run into decoding error: " + t.message
          );
        }
      }
      function S(e, t) {
        return (0, a.b)(`expected <${e.tag}>: ${t}`);
      }
      function k(e, t) {
        return (0, i.a)(e.attrs, t);
      }
      function L(e) {
        var t = parseInt(e, 10);
        return Number.isNaN(t) ? null : t;
      }
      function G(e) {
        var t = e.content;
        return t instanceof Uint8Array ? S(e, "to have children") : (0, a.c)(t);
      }
      function M(e, t, n) {
        var r = t.map((e, t) => `${e}: ${n[t].error}`);
        return S(
          e,
          [
            `to match any of following mixins: ${t.join(
              ", "
            )}, but all mixins failed.`,
            ...r,
          ].join(" ")
        );
      }
    },
    function (e, t, n) {
      n.d(t, "l", function () {
        return k;
      }),
        n.d(t, "n", function () {
          return L;
        }),
        n.d(t, "i", function () {
          return M;
        }),
        n.d(t, "h", function () {
          return A;
        }),
        n.d(t, "j", function () {
          return T;
        }),
        n.d(t, "o", function () {
          return N;
        }),
        n.d(t, "g", function () {
          return C;
        }),
        n.d(t, "f", function () {
          return R;
        }),
        n.d(t, "a", function () {
          return x;
        }),
        n.d(t, "b", function () {
          return U;
        }),
        n.d(t, "c", function () {
          return j;
        }),
        n.d(t, "k", function () {
          return $;
        }),
        n.d(t, "d", function () {
          return F;
        }),
        n.d(t, "e", function () {
          return B;
        }),
        n.d(t, "m", function () {
          return V;
        });
      var r = n(26),
        i = n.n(r),
        a = n(9),
        o = new (n(51).a)(
          "ack",
          (e) => (
            e.assertTag("ack"),
            {
              id: e.attrString("id"),
              ts: e.maybeAttrString("t"),
              class: e.attrString("class"),
              type: e.maybeAttrString("type"),
              from: e.attrJidWithType(),
              participant: e.hasAttr("participant")
                ? e.attrDeviceJid("participant")
                : null,
            }
          )
        );
      function u(e, t) {
        var n = e.pop();
        t < e.length && (e[t] = n);
      }
      var s = n(86),
        l = n(4);
      function c(e, t, n) {
        var r = e.content;
        if (r && Array.isArray(r) && r[0]) {
          var i = r[0];
          if ("error" === i.tag) {
            var a,
              o = i.attrs || {};
            n && (a = "function" == typeof n ? n(e) : n.parseOrThrow(i));
            var u = a;
            return {
              success: !1,
              errorCode: parseInt(o.code, 10),
              errorText: (0, l.p)(o.text) || "",
              errorType: (0, l.p)(o.type) || "",
              errorBackoff: parseInt(o.backoff, 10),
              toString: d,
              customError: u,
            };
          }
        }
        return "function" == typeof t
          ? { success: !0, result: t(e) }
          : { success: !0, result: t.parseOrThrow(e) };
      }
      function d() {
        return `IqError ${this.errorCode}: ${this.errorText}`;
      }
      var f = n(249),
        _ = n(68),
        p = n(28),
        v = n(78),
        h = { validators: [a.U, a.X], typeName: "DomainJid|UserJid" },
        m = n(374),
        g = n(208),
        y = n(29),
        b = n(193),
        w = n(294),
        O = n(3),
        E = null,
        I = null,
        S = 1;
      function k(e, t, n) {
        E ||
          ((E = new (class {
            constructor(e, t, n) {
              var r, a;
              (this.nextSocketId = 1),
                (this.pendingIqs = new Map()),
                (this.ackHandlers = []),
                (this.pendingSmaxStanzas = new Map()),
                (this.U = new _.a()),
                (this.activePing = null),
                (this.V = new Set()),
                (this.socketId = 0),
                (this.socket = null),
                (this.softCloseSocket = null),
                (this.handleStanza = (e, t, n) => {
                  var r = (0, y.e)(e, "id");
                  if (r.success) {
                    var i = r.value,
                      a = this.pendingSmaxStanzas.get(i);
                    if (a)
                      return (
                        this.pendingSmaxStanzas.delete(i),
                        a.resolve(e),
                        this.maybeScheduleHealthCheck(),
                        "NO_ACK"
                      );
                  }
                  var o = H(e);
                  if (null != o) {
                    var u = this.pendingIqs.get(o);
                    u
                      ? (this.pendingIqs.delete(o),
                        u.resolve(e),
                        this.maybeScheduleHealthCheck())
                      : (__LOG__(3)`handleIq no handler for iq with id ${o}`,
                        __LOG__(4)`handleIq no handler for iq`);
                  } else {
                    if ("ack" !== e.tag)
                      return "failure" === e.tag &&
                        this.config.shouldBlockReceivingUntilSuccess
                        ? this.T(e, t, n)
                        : this.U.promise.then(() => this.T(e, t, n));
                    this.handleAck(e);
                  }
                  return "NO_ACK";
                }),
                (this.healthCheckTimer = new v.a(() => {
                  this.socketId && this.sendPing();
                })),
                (this.deadSocketTimer = new v.a((e) => {
                  __LOG__(2)`Comms: Socket ${e} expired`,
                    e === this.socketId &&
                      this.softCloseSocket &&
                      this.softCloseSocket();
                })),
                (this.sendPing = i()(function* () {
                  var e = K("sendPing");
                  if (!e.socketId)
                    return (
                      __LOG__(2)`sendPing when socket dead`, Promise.resolve()
                    );
                  if (e.activePing && e.activePing.socketId === e.socketId)
                    return (
                      __LOG__(2)`sendPing ping still pending`, Promise.resolve()
                    );
                  e.activePing && e.activePing.handler.resolve();
                  var t,
                    n,
                    r =
                      ((t = (0, b.a)("iq", {
                        id: (0, l.u)(),
                        type: "get",
                        xmlns: "w:p",
                      })),
                      (n = (0, b.a)("iq", { to: l.l })),
                      (0, w.a)(t, n)),
                    i = r.attrs.id;
                  if ("string" != typeof i)
                    return (
                      __LOG__(4)`No stanzaId in ping request stanza`,
                      Promise.resolve()
                    );
                  var a = new _.a();
                  (e.activePing = {
                    socketId: e.socketId,
                    stanzaId: i,
                    handler: a,
                  }),
                    e.callStanza(r);
                  var o = yield a.promise;
                  if (o) {
                    var u = (function (e, t) {
                      var n = (0, y.a)(e, "iq");
                      if (!n.success) return n;
                      var r = (0, m.b)(e, "from", h);
                      if (!r.success) return r;
                      var i = (0, y.l)(y.e, e, "type", "result");
                      if (!i.success) return i;
                      var a = (0, g.b)(t, ["id"]);
                      if (!a.success) return a;
                      var o = (0, y.l)(y.e, e, "id", a.value);
                      if (!o.success) return o;
                      var u = (0, y.b)(e, "t");
                      return u.success
                        ? (0, p.c)({ from: r.value, type: i.value, t: u.value })
                        : u;
                    })(o, r);
                    if (u.success) {
                      var s = (0, O.i)(u.value.t),
                        c = Math.round(Date.now() / 1e3 - s);
                      null == e.config.handlers.onClockSkewUpdate ||
                        e.config.handlers.onClockSkewUpdate(c);
                    }
                  }
                })),
                (this.T = e),
                (this.onConnectionChange = (function (e, t) {
                  var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 15e3,
                    r = {
                      timeoutID: null,
                      connectionStatus: "disconnected",
                      optimismLevel: "optimist",
                    },
                    i = () => {
                      var e = r.optimismLevel,
                        i = r.connectionStatus;
                      "optimist" === e
                        ? (r.timeoutID = setTimeout(() => {
                            (r.optimismLevel = "realist"), t(i);
                          }, n))
                        : t(i);
                    };
                  return (n) => {
                    (r.connectionStatus = n),
                      "disconnected" === n || "in_handshake" === n
                        ? i()
                        : (null != r.timeoutID &&
                            (clearTimeout(r.timeoutID), (r.timeoutID = null)),
                          t(n)),
                      e(n);
                  };
                })(
                  null != (r = t.handlers.onConnectionChange) ? r : () => {},
                  null != (a = t.handlers.onOptimisticConnectionChange)
                    ? a
                    : () => {}
                )),
                (this.gzipInflate = n),
                (this.config = t),
                (this.socketLoop = new f.a({
                  name: "MainSocketLoop",
                  code: P,
                  timer: {
                    jitter: 0.1,
                    max: t.maxSocketLoopWaitTime,
                    algo: { type: "fibonacci", first: 1e4, second: 1e4 },
                    relativeDelay: !0,
                  },
                  resetDelay: 3e4,
                }));
            }
            filterPending(e) {
              var t = [];
              function n(n) {
                e(n) && t.push(n);
              }
              return (
                this.pendingIqs.forEach(n),
                this.ackHandlers.forEach(n),
                this.pendingSmaxStanzas.forEach(n),
                t
              );
            }
            sendPendingStanza(e) {
              var t = e.timeoutId;
              null != t && (clearTimeout(t), (e.timeoutId = void 0)),
                this.callStanza(e.stanza);
            }
            maybeSendPendingStanza(e) {
              this.socket
                ? this.sendPendingStanza(e)
                : __LOG__(
                    2
                  )`Comms has no open socket, will resend stanza when socket opens`;
            }
            callStanzaAsync(e) {
              var t = this;
              return i()(function* () {
                return yield t.callStanza(e);
              })();
            }
            callStanza(e) {
              var t = this.castStanza(e);
              return (
                this.deadSocketTimer.onOrBefore(
                  this.config.deadSocketTime,
                  this.socketId
                ),
                this.healthCheckTimer.cancel(),
                t
              );
            }
            castStanzaAsync(e) {
              var t = this;
              return i()(function* () {
                return yield t.castStanza(e);
              })();
            }
            castStanza(e) {
              try {
                var t,
                  n,
                  r =
                    null ==
                    (t = (n = this.config.handlers).onBeforeCastStanzaForE2E)
                      ? void 0
                      : t.call(n, e);
                if (null != r)
                  return (
                    this.handleStanza(r, this.socketId, 0),
                    __LOG__(
                      4
                    )`Dropping stanza since onBeforeCastStanza matched. (This is not expected in a non-E2E build!)`,
                    Promise.resolve()
                  );
              } catch (e) {}
              var i = this.socketOrThrow("castStanza");
              try {
                return i
                  .sendFrame((0, l.r)(e))
                  .then(() => {
                    var t, n;
                    null == (t = (n = this.config.handlers).onCastStanza) ||
                      t.call(n, e);
                  })
                  .catch((e) => {
                    if (
                      (__LOG__(4)`castStanza async error ${e}`,
                      e instanceof s.a)
                    )
                      return Promise.reject(e);
                  });
              } catch (e) {
                __LOG__(4)`castStanza error ${e}`;
              }
              return Promise.resolve();
            }
            socketOrThrow(e) {
              var t = this.socket;
              if (t) return t;
              throw new Error(`Comms.${e} called while no socket`);
            }
            startHandlingRequests() {
              return (
                __LOG__(2)`Comms.startHandlingRequests`,
                this.U.resolve(),
                this.U.promise.then(() => {})
              );
            }
            parseAndHandleStanza(e, t) {
              e === this.socketId &&
                (this.deadSocketTimer.cancel(), I && (I.resolve(), (I = null)));
              var n = (0, l.q)(t, this.gzipInflate)
                .catch((e) => {
                  throw (__LOG__(4)`Failure parsing stanza!`, e);
                })
                .then((n) => {
                  var r, i;
                  null == (r = (i = this.config.handlers).onHandleStanza) ||
                    r.call(i, n, e, t.byteLength);
                  var a = this.activePing;
                  return a && a.socketId === e && a.stanzaId === H(n)
                    ? ((this.activePing = null),
                      a.handler.resolve(n),
                      this.maybeScheduleHealthCheck(),
                      "NO_ACK")
                    : this.handleStanza(n, e, t.byteLength);
                })
                .then((t) => {
                  if (e === this.socketId) {
                    if ("CLOSE_SOCKET" === t) {
                      __LOG__(2)`Comms: job response is CLOSE_SOCKET`;
                      var n = this.socket;
                      n && n.close();
                    } else "NO_ACK" === t || this.castStanza(t);
                    return "NO_ACK";
                  }
                });
              this.V.add(n),
                n.finally(() => {
                  this.V.delete(n);
                });
            }
            handleAck(e) {
              for (
                var t = this.ackHandlers, n = -1, r = null;
                !r && ++n < t.length;

              )
                r = t[n].parseAndTest(e);
              if (r) {
                var i,
                  a,
                  o = t[n];
                u(t, n),
                  null == (i = (a = this.config.handlers).onHandleAck) ||
                    i.call(a, e),
                  o.resolve(r),
                  this.maybeScheduleHealthCheck();
              } else __LOG__(3)`handleAck: unrecognized ${e}`;
            }
            removeHandler(e) {
              if ("iq" === e.type || "smax" === e.type) {
                var t = e.stanza.attrs.id;
                if (!t || "string" != typeof t) return;
                if (
                  ("iq" === e.type && !this.pendingIqs.delete(t)) ||
                  ("smax" === e.type && !this.pendingSmaxStanzas.delete(t))
                )
                  return;
              } else {
                e.type;
                var n = this.ackHandlers.indexOf(e);
                if (-1 === n) return;
                u(this.ackHandlers, n);
              }
              e.resolve(Promise.reject(new s.b()));
            }
            maybeScheduleHealthCheck() {
              if (
                !this.healthCheckTimer.isScheduled() &&
                !(
                  this.activePing ||
                  this.ackHandlers.length ||
                  this.pendingIqs.size ||
                  this.pendingSmaxStanzas.size
                )
              ) {
                var e = this.config.healthCheckInterval,
                  t = Math.ceil(1e3 * e * (1 + Math.random()));
                this.healthCheckTimer.onOrBefore(t);
              }
            }
          })(e, t, n)),
          setTimeout(G, 0));
      }
      function L() {
        var e = K("stopComms");
        e.socketLoop.endWithValue(), e.socket && e.socket.close(), (E = null);
      }
      function G() {
        K("openSocketLoop").socketLoop.start();
      }
      function M() {
        A() || K("maybeResetSocketLoop").socketLoop.reset();
      }
      function A() {
        var e;
        return !!(null == (e = E) ? void 0 : e.socket);
      }
      function P() {
        var e = K("socketLoopIteration"),
          t = e.nextSocketId++;
        return (
          __LOG__(2)`Comms: Socket ${t} opening`,
          null == e.config.handlers.onSocketLoopIteration ||
            e.config.handlers.onSocketLoopIteration(),
          e.config
            .openChatSocket(() => {
              e.onConnectionChange("in_handshake");
            })
            .then(
              (0, p.d)((n) => {
                null == e.config.handlers.onSocketOpen ||
                  e.config.handlers.onSocketOpen();
                var r = new _.a();
                return (
                  __LOG__(2)`Comms: Socket ${t} opened`,
                  (e.socketId = t),
                  (e.socket = n),
                  (e.softCloseSocket = () => {
                    (e.softCloseSocket = null),
                      e.socket &&
                        e.config.shouldCloseStaleSocket &&
                        (e.socket.close(), (e.socket = null)),
                      r.resolve();
                  }),
                  e.socketLoop.resetTimeoutAfter(1e4),
                  e.deadSocketTimer.cancel(),
                  e.maybeScheduleHealthCheck(),
                  n.setOnFrame((n) => e.parseAndHandleStanza(t, n)),
                  n.setOnClose(() => {
                    __LOG__(2)`Comms: Socket ${t} closed`,
                      e.activePing &&
                        t === e.activePing.socketId &&
                        (e.activePing.handler.resolve(), (e.activePing = null)),
                      e
                        .filterPending((e) => e.attachedToSocketId === t)
                        .forEach((t) => {
                          e.removeHandler(t);
                        }),
                      t === e.socketId &&
                        ((e.socketId = 0),
                        (e.socket = null),
                        e.onConnectionChange("disconnected"),
                        null == e.config.handlers.onDisconnect ||
                          e.config.handlers.onDisconnect(),
                        r.resolve());
                  }),
                  e.onConnectionChange("connected"),
                  null == e.config.handlers.onConnect ||
                    e.config.handlers.onConnect(),
                  e
                    .filterPending((e) => !e.attachedToSocketId)
                    .sort((e, t) => e.orderedId - t.orderedId)
                    .forEach((t) => {
                      switch (t.type) {
                        case "smax":
                        case "iq":
                          e.sendPendingStanza(t);
                          break;
                        case "ack":
                          e.callStanza(t.stanza);
                          break;
                        default:
                          t.type;
                      }
                    }),
                  r.promise
                );
              })
            )
            .then(
              (0, p.a)((e) => {
                switch (e) {
                  case "max-hunters":
                    __LOG__(
                      3
                    )`socketLoopIteration socket closed while in noise handshake using treasureHunt strategy`;
                    break;
                  case "disconnected":
                    __LOG__(
                      3
                    )`socketLoopIteration socket disconnected while in noise handshake`;
                    break;
                  default:
                    return;
                }
              })
            )
            .catch((e) => {
              e instanceof s.b
                ? __LOG__(
                    2
                  )`socketLoopIteration socket closed while in noise handshake`
                : __LOG__(4)`socketLoopIteration failed ${e}`;
            })
        );
      }
      function T() {
        K("onStreamErrorReceived").socketLoop.cancelReset();
      }
      function N() {
        return (
          K("waitForConnection").sendPing(), I || (I = new _.a()), I.promise
        );
      }
      function C(e, t) {
        return R(e, t).then(() => {});
      }
      function R(e, t) {
        return new Promise((n) => {
          var r = K("deprecatedSendStanzaAndWaitForAck"),
            i = {
              type: "ack",
              parseAndTest: (e) => {
                var n,
                  r,
                  i = o.parse(e);
                return i.error ||
                  ((n = i.success),
                  (r = t),
                  n.id !== r.id ||
                    (void 0 !== r.class && n.class !== r.class) ||
                    (void 0 !== r.type && n.type !== r.type) ||
                    (void 0 !== r.from &&
                      !(function (e, t) {
                        if ((0, a.t)(e) === t) return !0;
                        if (null != e.userJid) return (0, a.p)(e.userJid) === t;
                        if (null != e.deviceJid) {
                          var n = e.deviceJid;
                          return 0 === (0, a.s)(n) && (0, a.w)(n) === t;
                        }
                        return !1;
                      })(n.from, r.from)) ||
                    (void 0 !== r.participant &&
                      n.participant !== r.participant) ||
                    (void 0 !== r.ts && n.ts !== r.ts))
                  ? null
                  : e;
              },
              resolve: n,
              stanza: e,
              attachedToSocketId: 0,
              orderedId: S++,
            };
          r.ackHandlers.push(i),
            r.socket
              ? r.callStanza(e).catch((e) => {
                  var t = r.ackHandlers.indexOf(i);
                  -1 !== t &&
                    (u(r.ackHandlers, t), i.resolve(Promise.reject(e)));
                })
              : __LOG__(
                  2
                )`Comms has no open socket, will send stanza when socket opens`;
        });
      }
      function x(e) {
        (function (e) {
          var t = K("castStanza");
          t.socket ? t.castStanza(e) : __LOG__(2)`Comms has no open socket`;
        })(e);
      }
      function D(e, t) {
        var n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
          r =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : "iq";
        return new Promise((i) => {
          var a = K("sendIq"),
            o = e.attrs.id;
          if (!o || "string" != typeof o)
            throw new Error("Comms:sendIq given iq without id: " + String(e));
          var u = a.socketId;
          if (!t || u) {
            var l;
            n > 0 &&
              (l = setTimeout(() => {
                var e =
                  "iq" === r
                    ? a.pendingIqs.get(o)
                    : a.pendingSmaxStanzas.get(o);
                e
                  ? a.removeHandler(e)
                  : i(
                      Promise.reject(
                        new Error(
                          "Comms:_sendIq unexisting stanza to be cancelled: " +
                            o
                        )
                      )
                    );
              }, 1e3 * n));
            var c = {
              resolve: i,
              stanza: e,
              attachedToSocketId: t ? u : 0,
              orderedId: S++,
              timeoutId: l,
            };
            if ("iq" === r) {
              var d = Object.assign({ type: r }, c);
              a.pendingIqs.set(o, d),
                null == a.config.handlers.onSendIq ||
                  a.config.handlers.onSendIq(e),
                a.maybeSendPendingStanza(d);
            } else {
              var f = Object.assign({ type: r }, c);
              a.pendingSmaxStanzas.set(o, f), a.maybeSendPendingStanza(f);
            }
          } else i(Promise.reject(new s.c()));
        });
      }
      function U(e, t) {
        return D(e, !1).then((e) => c(e, t));
      }
      function j(e, t, n) {
        return D(e, !1).then((e) => c(e, t, n));
      }
      function $(e, t) {
        var n, r;
        return D(
          e,
          null != (n = null == t ? void 0 : t.withoutRetry) && n,
          null != (r = null == t ? void 0 : t.timeoutSeconds) ? r : 0,
          "smax"
        );
      }
      function F(e, t, n) {
        return D(e, !1, n).then((e) => c(e, t));
      }
      function B(e, t) {
        return D(e, !0).then((e) => c(e, t));
      }
      function V() {
        return K("startHandlingRequests").startHandlingRequests();
      }
      function K(e) {
        if (E) return E;
        throw new Error(`Comms::${e} called before startComms`);
      }
      function H(e) {
        if ("iq" === e.tag) {
          var t = e.attrs.type;
          if ("result" === t || "error" === t)
            return (0, l.p)(e.attrs.id) || null;
        }
        return null;
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "d", function () {
        return r;
      }),
        n.d(t, "c", function () {
          return i;
        }),
        n.d(t, "b", function () {
          return a;
        }),
        n.d(t, "a", function () {
          return o;
        });
      var r = {
          IMAGE: 1,
          STICKER: 2,
          PTT: 4,
          AUDIO: 8,
          DOCUMENT: 16,
          VIDEO: 32,
          GIF: 64,
          RICH_HSM: 128,
          MD_HISTORY: 256,
          THUMBNAIL_IMAGE: 512,
          THUMBNAIL_VIDEO: 1024,
          THUMBNAIL_GIF: 2048,
          THUMBNAIL_DOCUMENT: 4096,
          THUMBNAIL_LINK: 8192,
          MD_APP_STATE: 16384,
        },
        i = -1,
        a = 7,
        o = 8;
    },
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return L;
      }),
        n.d(t, "e", function () {
          return G;
        }),
        n.d(t, "c", function () {
          return M;
        }),
        n.d(t, "C", function () {
          return A;
        }),
        n.d(t, "z", function () {
          return P;
        }),
        n.d(t, "p", function () {
          return T;
        }),
        n.d(t, "t", function () {
          return N;
        }),
        n.d(t, "o", function () {
          return C;
        }),
        n.d(t, "B", function () {
          return R;
        }),
        n.d(t, "s", function () {
          return x;
        }),
        n.d(t, "j", function () {
          return D;
        }),
        n.d(t, "k", function () {
          return U;
        }),
        n.d(t, "q", function () {
          return j;
        }),
        n.d(t, "v", function () {
          return $;
        }),
        n.d(t, "f", function () {
          return F;
        }),
        n.d(t, "i", function () {
          return B;
        }),
        n.d(t, "h", function () {
          return V;
        }),
        n.d(t, "g", function () {
          return K;
        }),
        n.d(t, "D", function () {
          return H;
        }),
        n.d(t, "r", function () {
          return q;
        }),
        n.d(t, "a", function () {
          return z;
        }),
        n.d(t, "x", function () {
          return W;
        }),
        n.d(t, "l", function () {
          return J;
        }),
        n.d(t, "m", function () {
          return Y;
        }),
        n.d(t, "y", function () {
          return Q;
        }),
        n.d(t, "w", function () {
          return Z;
        }),
        n.d(t, "n", function () {
          return X;
        }),
        n.d(t, "A", function () {
          return ee;
        }),
        n.d(t, "u", function () {
          return te;
        });
      var r = n(8),
        i = n.n(r),
        a = n(109),
        o = n(25),
        u = n(5),
        s = n(2),
        l = n(62),
        c = n(15),
        d = n(32),
        f = n(14),
        _ = n(9),
        p = n(7),
        v = n(11),
        h = n(34),
        m = n(314),
        g = n(6),
        y = n(12),
        b = n(3),
        w = n(143),
        O = n(54),
        E = n(71),
        I = n(50),
        S = n(20),
        k = class extends a.BaseContentTable {
          constructor() {
            super(), (0, y.d)() && this.updateLastAppWrite();
          }
          transact(e, t, n) {
            var r = t,
              a = n;
            return (
              "rw" === e &&
                (r.includes("meta") || (r = [...t, "meta"]),
                (a = (0, y.d)()
                  ? () =>
                      (0, u.c)([n(), this.updateLastAppWrite()]).then(
                        (e) => i()(e, 1)[0]
                      )
                  : () =>
                      (0, u.c)([n(), this.Es()]).then((e) => i()(e, 1)[0]))),
              super.transact(e, r, a)
            );
          }
          Es() {
            return (0, o.d)(this.stores.meta, o.a.APPWRITE_META_KEY).then(
              (e) => {
                if (null != this.Er) {
                  if ((null == e ? void 0 : e.value) !== this.Er)
                    throw (
                      (__LOG__(
                        3
                      )`The last app write value has changed, shutting down`,
                      (0, y.j)(),
                      new Error("shutdown"))
                    );
                } else if (null != e) {
                  var t = (0, b.E)();
                  if (Math.abs(t - e.value) <= 500)
                    throw (
                      (__LOG__(
                        3
                      )`There was a very recent write in the content table, shutting down`,
                      (0, y.j)(),
                      new Error("shutdown"))
                    );
                  this.Er = e.value;
                }
              }
            );
          }
          getRegisteredUser() {
            return (0, o.d)(this.stores.meta, o.a.REGISTERED).then((e) =>
              e ? (0, p.q)(e.value) : null
            );
          }
          setRegisteredUser(e) {
            return this.stores.meta.put({ key: o.a.REGISTERED, value: e });
          }
          getContact(e) {
            return J(this.stores, e);
          }
          getDevicesInTransaction(e) {
            return X(this.stores, e);
          }
          getGroupInfo(e) {
            return T(this.stores, e);
          }
          setGroupInfo(e) {
            return __LOG__(2)`setGroup`, this.stores.groups.put(e);
          }
          filterParticipantsInGroup(e) {
            return (0, u.k)(this.stores.groupParticipantsInfo, "participants")
              .anyOf(e)
              .toArray()
              .then((t) => {
                var n = new Set(e),
                  r = new Set();
                return (
                  t.forEach((e) => {
                    e.jid !== _.h &&
                      e.participants.forEach((e) => {
                        n.has(e) && r.add(e);
                      });
                  }),
                  Array.from(r)
                );
              });
          }
          getParticipantsInfoInTransaction(e) {
            return N(this.stores, e);
          }
          setParticipantsInfo(e) {
            return this.stores.groupParticipantsInfo.put(e);
          }
          getGroupInfoWithParticipantsInTransaction(e) {
            return C(this.stores, e);
          }
          getLinkedGroupsWithParticipants(e) {
            return this.stores.groups
              .filter((t) => "parent" !== t.groupType && t.linkedParent === e)
              .toArray()
              .then((e) => {
                var t = [];
                return (
                  e.forEach((e) => {
                    t.push(N(this.stores, e.jid));
                  }),
                  (0, u.c)(t).then((t) => {
                    var n = [];
                    return (
                      e.forEach((e, r) => {
                        var i = t[r];
                        null != i &&
                          (0, s.h)(i) &&
                          n.push({ groupInfo: e, participantsInfo: i });
                      }),
                      n
                    );
                  })
                );
              });
          }
          markSenderKeysForRotationInTransaction(e) {
            return this.stores.groupParticipantsInfo
              .where("jid")
              .anyOf(e)
              .toArray()
              .then((e) =>
                this.stores.groupParticipantsInfo.bulkPut(
                  e.map((e) => (0, v.j)(e, { rotateSenderKey: !0 }))
                )
              );
          }
          revokeGroupInvitesInTransaction(e, t, n) {
            return this.getGroupInviteRevokes().then((r) => {
              __LOG__(2)`Revoke group invites for ${e}`;
              var i = r.filter((e) => (0, b.o)(e.expiresBefore)),
                a = [];
              return (
                n.forEach((n) => {
                  if ((0, b.o)(n.expiresBefore)) {
                    var r = i.find(
                      (r) =>
                        r.group === e && r.outgoing === t && r.user === n.user
                    );
                    r
                      ? (__LOG__(2)`Revoke group invite found. Updating`,
                        n.expiresBefore > r.expiresBefore &&
                          (r.expiresBefore = n.expiresBefore),
                        a.push({
                          user: r.user,
                          expiresBefore: r.expiresBefore,
                        }))
                      : (__LOG__(2)`Revoke group invite not found. Adding.`,
                        i.push({
                          group: e,
                          outgoing: t,
                          user: n.user,
                          expiresBefore: n.expiresBefore,
                        }),
                        a.push({
                          user: n.user,
                          expiresBefore: n.expiresBefore,
                        }));
                  }
                }),
                this.replaceGroupInviteRevokes(i).then(() => a)
              );
            });
          }
          addInvitationToGroupInTransaction(e, t) {
            return this.getChatAndGroupInTransaction(e).then((n) => {
              if (!n || !n.dbGroup)
                return (
                  __LOG__(
                    3
                  )`Tried to add invitation to non-existent group ${e}`,
                  void SEND_LOGS("add-invitation-group-not-exists")
                );
              __LOG__(2)`Add invitation to group ${e}`;
              var r = n.dbChat,
                a = n.dbGroup,
                o = a.participantsInfo.invitations || [],
                s = this.revokeGroupInvitesInTransaction(e, !0, [
                  { user: t.jid, expiresBefore: (0, b.w)(1, t.expiration) },
                ]),
                l = o.find((e) => e.jid === t.jid);
              return (
                l
                  ? (__LOG__(2)`Updating existing invitation`,
                    (l.code = t.code),
                    (l.expiration = t.expiration))
                  : (__LOG__(2)`Creating new invitation`, o.push(t)),
                o.sort((e, t) => e.expiration - t.expiration),
                (a.participantsInfo.invitations = o),
                (0, u.c)([
                  s,
                  this.setParticipantsInfo(a.participantsInfo),
                ]).then((e) => {
                  var t = i()(e, 1)[0];
                  return { dbChat: r, dbGroup: a, revokes: t };
                })
              );
            });
          }
          userParticipantsInfo(e) {
            return this.getParticipantsInfoWithUserInTransaction(e).then(
              (e) => {
                var t,
                  n = [],
                  r = {};
                return (
                  e.forEach((e) => {
                    var i = (0, O.g)(e);
                    if (i) {
                      var a = i.jid;
                      n.push(a), (r[a] = i);
                    } else t = (0, O.h)(e);
                  }),
                  this.stores.groups
                    .where("jid")
                    .anyOf(n)
                    .toArray()
                    .then((e) => ({
                      groups: e
                        .map((e) => {
                          if ("parent" !== e.groupType)
                            return { groupInfo: e, participantsInfo: r[e.jid] };
                        })
                        .filter(Boolean),
                      status: t,
                    }))
                );
              }
            );
          }
          resetReceiptsOnRevokedInTransaction(e) {
            return ee(this.stores, e);
          }
          addReceiptsOnAdminRevokedInTransaction(e, t, n) {
            var r = t.map((t) => {
              var r = t.msgId,
                i = t.ts;
              return (0, l.q)((0, l.j)(r, e, i, !1, n));
            });
            return this.stores.receipts.bulkPut(r).then(() => r.map(l.p));
          }
          getMsgFromExternalId(e, t, n) {
            return j(this.stores, e, t, n);
          }
          getOrphanedMsgsInTransaction(e, t, n) {
            return x(this.stores, e, t, n);
          }
          deleteOrphanedMsgsInTransaction(e, t, n) {
            return this.stores.orphanedStanzas
              .where("externalId")
              .equals(e)
              .filter((e) => e.chatJid === n && e.author === t)
              .delete();
          }
          getChatIdFromJid(e) {
            return D(this.stores, e);
          }
          getAllMsgsFromIds(e) {
            return F(this.stores, e);
          }
          getAllMsgsFromOrderedIds(e) {
            return this.getAllMsgsFromIds(e).then((t) => {
              var n = [],
                r = {};
              return (
                e.forEach((e, t) => {
                  r[e] = t;
                }),
                t.forEach((e) => {
                  n[r[e.id]] = e;
                }),
                n
              );
            });
          }
          getMsgFromId(e) {
            return q(this.stores, e);
          }
          getMsgsToForward(e) {
            var t = [],
              n = [];
            return (
              e.forEach((e) => {
                (0, d.H)(e, {
                  chat: (e) => {
                    t.push(e);
                  },
                  status: (e) => {
                    n.push(e);
                  },
                });
              }),
              (0, u.c)([
                this.stores.msgs.where("id").anyOf(t).toArray(),
                this.stores.status.where("id").anyOf(n).toArray(),
                this.stores.previews.where("previewId").anyOf(e).toArray(),
                (0, u.l)(this.stores.media, "msgIds").anyOf(e).toArray(),
              ]).then((e) => {
                var t = i()(e, 4),
                  n = t[0],
                  r = t[1],
                  a = t[2],
                  o = t[3],
                  u = {};
                n.forEach((e) => {
                  u[e.id] = {
                    type: "chat",
                    msg: e,
                    preview: null,
                    media: null,
                  };
                }),
                  r.forEach((e) => {
                    u[e.id] = {
                      type: "status",
                      msg: e,
                      preview: null,
                      media: null,
                    };
                  }),
                  a.forEach((e) => {
                    var t = (0, d.e)(e.previewId);
                    if (t) {
                      var n = u[t];
                      n && (n.preview = e.preview);
                    }
                  });
                var s = new Map();
                if (
                  (o.forEach((e) => {
                    s.set((0, c.B)(e.mediaId), e.msgIds),
                      e.msgIds.forEach((t) => {
                        var n = u[t];
                        n && (n.media = e);
                      });
                  }),
                  s.size > 0)
                ) {
                  var l = Array.from(s.keys());
                  return this.stores.previews
                    .where("previewId")
                    .anyOf(l)
                    .toArray()
                    .then(
                      (e) => (
                        e.forEach((e) => {
                          var t = e.previewId,
                            n = s.get(t);
                          n &&
                            n.forEach((t) => {
                              var n = u[t];
                              n && (n.preview = e.preview);
                            });
                        }),
                        u
                      )
                    );
                }
                return u;
              })
            );
          }
          getChatInTransaction(e) {
            return U(this.stores, e);
          }
          getChatAndGroupFromId(e) {
            return V(this.stores, e);
          }
          getChatAndGroupInTransaction(e) {
            return B(this.stores, e);
          }
          getAllChatsAndGroupInfosInTransaction(e) {
            var t = [];
            e.forEach((e) => {
              var n = (0, p.p)(e);
              n && t.push(n);
            });
            var n = this.stores.groups.where("jid").anyOf(t).toArray();
            return (0, u.c)([
              this.stores.chats.where("jid").anyOf(e).toArray(),
              n,
              this.stores.groupParticipantsInfo.where("jid").anyOf(t).toArray(),
            ]).then((e) => {
              var t = i()(e, 3),
                n = t[0],
                r = t[1],
                a = t[2],
                o = (0, v.t)(r, (e) => e.jid),
                u = {},
                s = {};
              return (
                n.forEach((e) => {
                  (0, p.x)(e.jid, {
                    user: (t) => {
                      s[t] = e;
                    },
                    group: (t) => {
                      s[t] = e;
                      var n = o[t],
                        r = a.find((e) => e.jid === t),
                        i = r ? r.participants.length : null;
                      n &&
                        "parent" !== n.groupType &&
                        (u[t] = Object.assign({}, n, { groupSize: i }));
                    },
                  });
                }),
                { chats: s, groupInfos: u }
              );
            });
          }
          getAllStarredMsgIdsInTransaction() {
            var e = [];
            return this.stores.msgs
              .orderBy("starred")
              .each((t) => {
                e.push(t.id);
              })
              .then(() => e)
              .catch(() => []);
          }
          updateChat(e) {
            return H(this.stores, e);
          }
          markChatAsBizRoleChanged(e) {
            return this.stores.chats
              .get(e)
              .then((e) =>
                e && !e.bizRoleChanged
                  ? ((e.bizRoleChanged = !0),
                    this.stores.chats.put(e).then(() => e))
                  : e
              );
          }
          addMsg(e, t, n) {
            return z(this.stores, e, t, n);
          }
          getMediaMsgIds(e, t, n) {
            var r = [];
            return (0, u.l)(this.stores.media, "msgIds")
              .between(e, t, !1, !1)
              .filterIdx((e, t) => {
                var n = t;
                return (
                  !!(function (e, t) {
                    if (null == e.plaintext) return !1;
                    var n = e.mediaEntries[t];
                    return (
                      !!n &&
                      !!(
                        n.type &
                        (h.d.IMAGE | h.d.AUDIO | h.d.VIDEO | h.d.GIF)
                      ) &&
                      !n.isViewOnce
                    );
                  })(e, n) && (r.push(n), !0)
                );
              })
              .reverse()
              .limit(n)
              .toArray()
              .then(() => r);
          }
          getStorageSettingSortedMediaMsgIds(e) {
            var t = [],
              n = null;
            return (
              (n =
                "chat" === e.type
                  ? (0, u.l)(this.stores.media, "msgIds").between(
                      L(e.chatId),
                      G(e.chatId),
                      !1,
                      !1
                    )
                  : (0, u.h)(this.stores.media, "msgIds")).filterIdx((n, r) => {
                var i = (0, c.r)(r);
                return !(
                  null == i ||
                  !A(n) ||
                  ("largeFiles" === e.type && P(n) < f.v) ||
                  (t.push(i), 0)
                );
              }),
              n.toArray().then((e) => {
                var n = e.map((e, n) => ({
                  mediaId: e.mediaId,
                  size: P(e),
                  msgId: t[n],
                }));
                return (
                  n.sort(
                    (e, t) =>
                      (e.mediaId === t.mediaId ? 0 : 1) * (t.size - e.size)
                  ),
                  n
                    .filter((e, t) => 0 === t || e.mediaId !== n[t - 1].mediaId)
                    .map((e) => e.msgId)
                );
              })
            );
          }
          replaceGroupInviteRevokes(e) {
            return this.stores.meta.put({
              key: o.a.GROUP_INVITE_REVOKES,
              value: e,
            });
          }
          setBlocklistAndDHash(e, t, n) {
            return this.transact("rw", ["meta"], () =>
              (0, o.d)(this.stores.meta, o.a.BLOCKLIST_DHASH).then((r) => {
                if (r && r.value) {
                  if (r.value !== n) return "hash-mismatch";
                } else if (n) return "hash-mismatch";
                return this.stores.meta
                  .bulkPut([
                    { key: o.a.BLOCKED, value: e },
                    { key: o.a.BLOCKLIST_DHASH, value: t },
                  ])
                  .then(() => "success");
              })
            );
          }
          getSortedCallLogs() {
            return this.stores.callLogs
              .orderBy("ts")
              .reverse()
              .limit(200)
              .toArray()
              .then((e) => (0, w.b)(e));
          }
          getCallLog(e) {
            var t = e.callId,
              n = e.peer,
              r = e.isFromMe;
            return this.stores.callLogs
              .where("callId")
              .equals(t)
              .toArray()
              .then((e) => {
                var i = e.filter((e) => e.peer === n && e.isFromMe === r);
                return 0 === i.length
                  ? null
                  : (i.length > 1 &&
                      (__LOG__(
                        4
                      )`getCallLog: multiple call logs in db for callId: ${t} with same peer and same direction`,
                      SEND_LOGS("call-log-key-collision")),
                    i[0]);
              });
          }
          getOrInitializeCallLog(e, t) {
            return this.transact("rw", ["callLogs"], () =>
              this.getCallLog(e).then((n) => {
                if (null != n) return n;
                var r = {
                  callId: e.callId,
                  peer: e.peer,
                  isFromMe: e.isFromMe,
                  ts: t,
                  duration: null,
                  bytesTransfered: null,
                  callResult: null,
                };
                return this.stores.callLogs
                  .add(r)
                  .then((e) => Object.assign({}, r, { id: e }));
              })
            );
          }
          createMissedCallLog(e, t) {
            return this.transact("rw", ["callLogs"], () =>
              this.getCallLog(e).then((n) => {
                if (null != n) return n;
                var r = {
                  callId: e.callId,
                  peer: e.peer,
                  isFromMe: e.isFromMe,
                  ts: t,
                  duration: null,
                  bytesTransfered: null,
                  callResult: "missed",
                };
                return this.stores.callLogs
                  .add(r)
                  .then((e) => Object.assign({}, r, { id: e }));
              })
            );
          }
          finalizeCallLog(e, t, n, r) {
            return this.transact("rw", ["callLogs"], () =>
              this.getCallLog(e).then((e) => {
                if (null == e) return null;
                var i = (0, v.j)(e, {
                  callResult: t,
                  duration: n,
                  bytesTransfered: r,
                });
                return this.stores.callLogs
                  .update(e.id, {
                    callResult: t,
                    duration: n,
                    bytesTransfered: r,
                  })
                  .then(() => i);
              })
            );
          }
          deleteCallLogs(e) {
            return this.stores.callLogs.bulkDelete(e);
          }
          clearAllCallLogs() {
            return this.stores.callLogs.clear();
          }
          getReceipt(e) {
            return this.stores.receipts.get(e).then(l.r);
          }
          getQuotableMsg(e) {
            return (0, d.H)(e, {
              chat: (e) => this.getMsgFromId(e),
              status: (e) => this.stores.status.where("id").equals(e).first(),
            });
          }
        };
      function L(e) {
        return e.toString(16) + "_!";
      }
      function G(e) {
        return e.toString(16) + "_g";
      }
      function M(e, t) {
        return `${e || "x"}-${t}`;
      }
      function A(e) {
        if (null == e.plaintext) return !1;
        if (null == e.filesystemPath && !(0, I.l)(e.plaintext)) return !1;
        var t = e.mediaEntries[e.msgIds[0]];
        return (
          !!t &&
          !!(t.type & (h.d.IMAGE | h.d.AUDIO | h.d.VIDEO | h.d.GIF)) &&
          !t.isViewOnce
        );
      }
      function P(e) {
        var t, n;
        return null !=
          (t = e.progressiveJpegScanNumber
            ? e.partialSize
            : null == (n = e.mediaEntries[e.msgIds[0]])
            ? void 0
            : n.size)
          ? t
          : 0;
      }
      function T(e, t) {
        return e.groups.get(t);
      }
      function N(e, t) {
        return e.groupParticipantsInfo.get(t).then((t) => {
          if (t) {
            var n = (0, m.a)(t, g.t.get());
            return n === t
              ? n
              : (__LOG__(3)`Fixing participantInfo`,
                SEND_LOGS("fix-participants-info-single"),
                e.groupParticipantsInfo.put(n).then(() => n));
          }
        });
      }
      function C(e, t) {
        var n = T(e, t);
        return (0, u.c)([n, N(e, t)]).then((e) => {
          var t = i()(e, 2),
            n = t[0],
            r = t[1],
            a = r && (0, O.g)(r);
          if (n && a) return { groupInfo: n, participantsInfo: a };
        });
      }
      function R(e, t) {
        return e.groupParticipantsInfo.put(t);
      }
      function x(e, t, n, r) {
        var i;
        return e.orphanedStanzas
          .where("externalId")
          .equals(t)
          .filter(
            (e) =>
              e.chatJid === r &&
              e.author === n &&
              ("revoke" === e.type
                ? (i &&
                    __LOG__(
                      4
                    )`getOrphanedMsgsInTransaction more than one orphaned revoke`,
                  (i = e),
                  !1)
                : (e.type, !0))
          )
          .toArray()
          .then((e) => {
            if (i) return { revoke: i };
            var t = new Map(),
              n = [],
              r = [];
            return (
              e.forEach((e) => {
                "reaction" === e.type
                  ? t.set(e.author, e)
                  : "keep-in-chat" === e.type
                  ? n.push(e)
                  : "poll-update" === e.type
                  ? r.push(e)
                  : e.type;
              }),
              { reactions: t, keepInChat: n, pollUpdates: r }
            );
          });
      }
      function D(e, t) {
        return e.chats
          .where("jid")
          .equals(t)
          .toArray()
          .then((e) => (e.length > 0 ? e[0].id : null));
      }
      function U(e, t) {
        return e.chats.get(t);
      }
      function j(e, t, n, r) {
        return e.msgs
          .where("externalId")
          .equals(r)
          .filter((e) => e.chat === t && e.author === n)
          .first();
      }
      function $(e, t, n) {
        return D(e, n).then((n) =>
          null == n
            ? []
            : e.msgs
                .where("externalId")
                .anyOf(t)
                .filter((e) => e.chat === n && e.author === s.b)
                .toArray()
        );
      }
      function F(e, t) {
        return e.msgs.where("id").anyOf(t).toArray();
      }
      function B(e, t) {
        var n = (0, p.p)(t),
          r = null != n ? C(e, n) : null;
        return (0, u.c)([e.chats.where("jid").equals(t).first(), r]).then(
          (e) => {
            var t = i()(e, 2),
              n = t[0],
              r = t[1];
            return n ? (r ? { dbChat: n, dbGroup: r } : { dbChat: n }) : null;
          }
        );
      }
      function V(e, t) {
        return e.chats.get(t).then((n) => {
          if (n) {
            var r = (0, p.p)(n.jid);
            return r
              ? C(e, r).then((e) =>
                  e
                    ? { dbChat: n, dbGroup: e }
                    : (__LOG__(4)`Group chat without group info`,
                      SEND_LOGS("chat-without-group"),
                      null)
                )
              : { dbChat: n };
          }
          __LOG__(3)`Chat ${t} is gone`;
        });
      }
      function K(e, t) {
        return e.chats.get(t).then((n) => {
          if (n)
            return (0, p.x)(n.jid, {
              user: (t) => J(e, t).then((e) => ({ dbChat: n, dbContact: e })),
              group: (t) =>
                C(e, t).then((e) =>
                  e
                    ? { dbChat: n, dbGroup: e }
                    : (__LOG__(4)`Group chat without group info`,
                      SEND_LOGS("chat-without-group"),
                      null)
                ),
            });
          __LOG__(3)`Chat ${t} is gone`;
        });
      }
      function H(e, t) {
        return (
          __LOG__(
            2
          )`Updating chat ${t.id} jid ${t.jid} increment ${t.increment} msgCount ${t.msgCount}`,
          e.chats.put(t)
        );
      }
      function q(e, t) {
        return e.msgs.where("id").equals(t).first();
      }
      function z(e, t, n, r) {
        var i = Object.assign({}, (0, v.v)(r), {
          id: t,
          chat: n,
          altIndex: M(r.altIndex, t),
        });
        return e.msgs.add(i).then((e) => {
          var t = i;
          return (t.rowId = e), t;
        });
      }
      function W(e, t, n) {
        return (0, u.j)(e.msgs, ["id", "starred"])
          .between([t, c.j], [n, c.i])
          .keys()
          .then((e) =>
            e.map((e) => {
              var t = i()(e, 2),
                n = t[0];
              return t[1], n;
            })
          )
          .catch(() => (0, S.e)());
      }
      function J(e, t) {
        return e.contacts.get(t);
      }
      function Y(e, t) {
        return "status" === t.type
          ? Q(e, t.author, t.externalId).then((e) =>
              e ? { type: "status", dbMsg: e } : null
            )
          : (t.type,
            D(e, t.jid)
              .then((n) => {
                if (null != n) return j(e, n, t.author, t.externalId);
              })
              .then((e) => {
                if (e)
                  return "user" === t.type
                    ? { type: "user", jid: t.jid, dbMsg: e }
                    : (t.type, { type: "group", jid: t.jid, dbMsg: e });
              }));
      }
      function Q(e, t, n) {
        return e.status
          .where("externalId")
          .equals(n)
          .filter((e) => e.author === t)
          .first();
      }
      function Z(e, t) {
        return e.status
          .where("externalId")
          .anyOf(t)
          .filter((e) => e.author === s.b)
          .toArray();
      }
      function X(e, t) {
        return e.contacts
          .where("jid")
          .anyOf(t)
          .toArray()
          .then((e) => {
            var n = new Set(t.map(p.d));
            return (
              e.forEach((e) => {
                (0, E.c)(e).forEach((e) => {
                  n.add(e);
                });
              }),
              n
            );
          });
      }
      function ee(e, t) {
        return e.receipts
          .where("msgId")
          .anyOf(t)
          .toArray()
          .then((t) => {
            var n = t.map(l.o);
            return e.receipts.bulkPut(n).then(() => n.map(l.p));
          });
      }
      function te(e, t) {
        return (0, p.z)(t, {
          user: (t) =>
            J(e, t).then((e) =>
              e && e.devices && 0 !== e.devices.length
                ? (0, S.m)((0, E.c)(e))
                : (0, S.l)((0, p.e)(t))
            ),
          group: (t) =>
            N(e, t).then((e) => {
              if (!e) return (0, S.f)();
              var t = Array.from(e.knowsSenderKey.keys());
              return (0, S.m)(t);
            }),
          status: () =>
            N(e, _.h).then((e) => {
              if (!e) return (0, S.f)();
              var t = Array.from(e.knowsSenderKey.keys()),
                n = (0, p.e)(g.t.get()),
                r = t.filter((e) => e !== n);
              return (0, S.m)(r);
            }),
        });
      }
      t.d = k;
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "d", function () {
        return f;
      }),
        n.d(t, "c", function () {
          return p;
        }),
        n.d(t, "a", function () {
          return v;
        }),
        n.d(t, "b", function () {
          return h;
        });
      var r = n(16),
        i = n(133),
        a = n(12),
        o = n(97),
        u = new Promise(() => {}),
        s = !1,
        l = null;
      function c(e, t, n) {
        var i = (0, r.c)(t, n);
        i &&
          (0, a.c)("event", "uiJobUpdated", {
            jobName: t,
            key: i,
            status: { status: "running" },
          });
      }
      function d(e, t, n, i) {
        var o = (0, r.c)(t, n);
        return (
          o &&
            (0, a.c)("event", "uiJobUpdated", {
              jobName: t,
              key: o,
              status: { status: "finished", result: i },
            }),
          (0, r.f)(t, i)
        );
      }
      function f(e) {
        l = new i.c({
          isRestartAfterCrash: e,
          accessors: {
            readPersistedJob: (e) => (0, o.jobsTable)().loadBookmark(e),
            loadAllJobs: () => (0, o.jobsTable)().loadAllBookmarks(),
            updatePersistedJob: (e) =>
              s
                ? u
                : (0, a.d)()
                ? (0, o.jobsTable)().saveBookmarkAsPage(e)
                : (0, o.jobsTable)()
                    .saveBookmarkIfNoPage(e)
                    .then((e) => {
                      if (e)
                        return (
                          (s = !0),
                          __LOG__(2)`saveBookmark shutdown system`,
                          (0, a.j)(),
                          u
                        );
                    }),
            deletePersistedJob: (e) => (0, o.jobsTable)().removeJob(e),
            maybeCreateJob: _,
          },
          unfinishedJobEntries: (0, o.jobsTable)().loadAllBookmarks(),
          listeners: { onJobStarted: c, onJobFinished: d },
          deprecatedJobs: (0, r.b)(),
        });
      }
      function _(e) {
        return (0, o.jobsTable)()
          .maybeCreateJob(e)
          .then((t) => {
            var n = t.newlyCreated,
              i = t.jobId;
            return (
              n &&
                (0, r.d)(e.type) &&
                (0, a.c)("event", "uiJobScheduled", { jobId: i, jobInfo: e }),
              { id: i, newlyCreated: n }
            );
          });
      }
      function p(e) {
        return h().loadAndRunJobFromId(e);
      }
      function v(e) {
        return (0, o.jobsTable)().removeFinishedJob(e);
      }
      function h() {
        if (null == l) throw new Error("jobs manager has not been initialized");
        return l;
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "A", function () {
        return k;
      }),
        n.d(t, "a", function () {
          return G;
        }),
        n.d(t, "M", function () {
          return M;
        }),
        n.d(t, "C", function () {
          return P;
        }),
        n.d(t, "d", function () {
          return T;
        }),
        n.d(t, "z", function () {
          return N;
        }),
        n.d(t, "m", function () {
          return C;
        }),
        n.d(t, "N", function () {
          return R;
        }),
        n.d(t, "r", function () {
          return x;
        }),
        n.d(t, "b", function () {
          return D;
        }),
        n.d(t, "B", function () {
          return U;
        }),
        n.d(t, "y", function () {
          return j;
        }),
        n.d(t, "q", function () {
          return $;
        }),
        n.d(t, "l", function () {
          return F;
        }),
        n.d(t, "k", function () {
          return B;
        }),
        n.d(t, "w", function () {
          return V;
        }),
        n.d(t, "G", function () {
          return K;
        }),
        n.d(t, "H", function () {
          return H;
        }),
        n.d(t, "E", function () {
          return q;
        }),
        n.d(t, "x", function () {
          return W;
        }),
        n.d(t, "L", function () {
          return J;
        }),
        n.d(t, "K", function () {
          return Y;
        }),
        n.d(t, "t", function () {
          return Q;
        }),
        n.d(t, "j", function () {
          return Z;
        }),
        n.d(t, "f", function () {
          return X;
        }),
        n.d(t, "g", function () {
          return ee;
        }),
        n.d(t, "J", function () {
          return te;
        }),
        n.d(t, "I", function () {
          return ne;
        }),
        n.d(t, "i", function () {
          return re;
        }),
        n.d(t, "F", function () {
          return ie;
        }),
        n.d(t, "D", function () {
          return ae;
        }),
        n.d(t, "u", function () {
          return oe;
        }),
        n.d(t, "v", function () {
          return ue;
        }),
        n.d(t, "s", function () {
          return se;
        }),
        n.d(t, "c", function () {
          return le;
        }),
        n.d(t, "n", function () {
          return ce;
        }),
        n.d(t, "h", function () {
          return de;
        }),
        n.d(t, "e", function () {
          return fe;
        }),
        n.d(t, "p", function () {
          return _e;
        }),
        n.d(t, "o", function () {
          return pe;
        });
      var r = n(26),
        i = n.n(r),
        a = n(8),
        o = n.n(a),
        u = n(282),
        s = n(5),
        l = n(57),
        c = n(6),
        d = n(3),
        f = n(81),
        _ = n(68),
        p = n(7),
        v = n(9),
        h = n(167),
        m = n(172),
        g = n(55);
      function y(e) {
        return e.reduce(
          (e, t) => (t.deviceId !== v.c && e.push(t.address), e),
          []
        );
      }
      function b(e) {
        return { name: (0, p.h)(e), deviceId: (0, p.f)(e) };
      }
      var w = null,
        O = new _.a(),
        E = new _.a();
      (0, m.f)(O.promise, E.promise);
      var I = new f.a(),
        S = new Set();
      function k(e) {
        return O.promise.then(() => S.has(e));
      }
      function L(e) {
        if (!S.has(e))
          throw new Error(`Feature "${e}" is not supported by daemon`);
      }
      var G = { generateIdentityKeyPair: m.b, calculateAgreement: m.a };
      function M() {
        __LOG__(2)`startSignal::startSignal`,
          w ||
            (w = (0, h.a)("signal", {
              onConnect: A,
              onDisconnect() {
                (O = new _.a()),
                  (E = new _.a()),
                  (S = new Set()),
                  (0, m.f)(O.promise, E.promise);
              },
            }));
      }
      function A(e) {
        var t = new (class {
          constructor() {
            (this.w = new Map()), (this.x = new Map()), (this.y = new f.b());
          }
          z(e) {
            var t = this.w.get(e);
            if (t) return t;
            var n = null,
              r = this.v
                .session_cipher(ge(e), this.u, (e) => {
                  if (!n)
                    return (
                      __LOG__(4)`Signal.sessionCipher no decrypt callback`,
                      Promise.resolve()
                    );
                  var t = n;
                  return (n = null), t(e);
                })
                .then((t) => {
                  var r = this.y,
                    i = (0, p.h)(e),
                    a = this.p,
                    o = (e) => (a, o) =>
                      r.enqueue(i, () =>
                        (function (e, r, i) {
                          var a,
                            o = r.ciphertext;
                          return (
                            (n = (e) =>
                              (a = (0, u.a)(i, null, e)).then(() => {})),
                            ("pkmsg" === r.type
                              ? t.decrypt_pre_key_message(o)
                              : t.decrypt_message(o)
                            ).then(
                              () => a,
                              (e) => a || Promise.reject(e)
                            )
                          );
                        })(0, { type: e, ciphertext: a }, o)
                      );
                  return {
                    decrypt_pre_key_message: o("pkmsg"),
                    decrypt_message: o("msg"),
                    remote_registration_id: () =>
                      r.enqueue(i, () => t.remote_registration_id()),
                    encrypt: (n) =>
                      r.enqueue(i, () =>
                        a.getIdentityId(ge(e)).then((e) =>
                          (function (e) {
                            return t
                              .encrypt(e)
                              .then((e) => ({
                                type: 3 === e.messageType ? "pkmsg" : "msg",
                                ciphertext: e.serialized,
                              }));
                          })(n).then((t) =>
                            Object.assign({}, t, { identityId: e })
                          )
                        )
                      ),
                    encryptIfIdentityIdMatches: (n, o, u) =>
                      r.enqueue(i, () =>
                        a
                          .getIdentityId(ge(u ? (0, p.e)((0, p.h)(e)) : e))
                          .then((e) =>
                            e !== o
                              ? null
                              : t
                                  .encrypt(n)
                                  .then((e) =>
                                    Object.assign({}, e, { identityId: o })
                                  )
                          )
                      ),
                    create_signal_session: (t) =>
                      r.enqueue(i, () =>
                        (0, m.g)(e, t.info).then((e) => {
                          if (!e.success) throw be(e.error);
                        })
                      ),
                  };
                });
            return this.w.set(e, r), r;
          }
          AA(e, t) {
            var n = JSON.stringify([e, t]),
              r = this.x.get(n);
            if (r) return r;
            var i = null,
              a = this.v
                .group_cipher(this.u, ye(e, t), (e) => {
                  if (!i)
                    return (
                      __LOG__(4)`Signal.groupCipher no decrypt callback`,
                      Promise.resolve()
                    );
                  var t = i;
                  return (i = null), t(e);
                })
                .then((e) => {
                  var t = new f.a();
                  return {
                    decrypt: (n, r) =>
                      t.enqueue(() => {
                        var t;
                        return (
                          (i = (e) =>
                            (t = (0, u.a)(r, null, e)).then(() => {})),
                          e.decrypt(n).then(
                            () => t,
                            (e) => t || Promise.reject(e)
                          )
                        );
                      }),
                    encrypt: (n) => t.enqueue(() => e.encrypt(n)),
                  };
                });
            return this.x.set(n, a), a;
          }
          AB() {
            return this.v.group_session_builder(this.u);
          }
          AC(e) {
            return this.AB().then((t) =>
              t.create_session(ye(e, (0, p.e)(c.t.get())))
            );
          }
          deleteSignalInfoForDevices(e, t) {
            return this.y
              .enqueue(e, () => {
                var n = [],
                  r = [];
                return (
                  t.forEach((t) => {
                    var i = (0, l.encodeAddress)({ name: e, deviceId: t });
                    n.push(i), t !== v.c && r.push(i);
                  }),
                  this.o.transact("rw", ["sessions", "identities"], () =>
                    (0, s.c)([
                      this.o.stores.sessions.bulkDelete(n),
                      this.o.stores.identities.bulkDelete(r),
                    ])
                  )
                );
              })
              .then(() => {});
          }
          handleADVInfo(e, t) {
            return this.y.enqueue(e, () =>
              (function (e, t, n) {
                return n.transact("rw", ["identities", "sessions"], () =>
                  n.stores.identities
                    .where("jid")
                    .equals(e)
                    .toArray()
                    .then((e) => {
                      var r = (function (e, t) {
                        switch (t.type) {
                          case "adv_list":
                          case "device_added_notification":
                            return (function (e, t) {
                              var n = t.rawId,
                                r = t.validIndexes,
                                i = t.currentIndex,
                                a = new Set(r),
                                o = [];
                              return (
                                e.forEach((e) => {
                                  if (e.deviceId !== v.c)
                                    if (e.rawId === n) {
                                      var t = e.keyIndex;
                                      null != t
                                        ? !a.has(e.keyIndex) &&
                                          t <= i &&
                                          o.push(e.address)
                                        : o.push(e.address);
                                    } else o.push(e.address);
                                }),
                                o
                              );
                            })(e, t.adv);
                          case "adv_list_and_devices":
                            return (function (e, t, n) {
                              var r = t.rawId,
                                i = t.validIndexes,
                                a = t.currentIndex,
                                o = new Set(i),
                                u = n.filter((e) => {
                                  var t = e.index;
                                  return o.has(t) || t > a;
                                }),
                                s = [];
                              return (
                                e.forEach((e) => {
                                  var t = e.keyIndex,
                                    n = e.deviceId;
                                  n !== v.c &&
                                    (e.rawId === r && null != t
                                      ? t > a ||
                                        (!u.some((e) => {
                                          var r = e.id,
                                            i = e.index;
                                          return r === n && t === i;
                                        }) &&
                                          s.push(e.address))
                                      : s.push(e.address));
                                }),
                                s
                              );
                            })(e, t.adv, t.devices);
                          case "device_removed_notification":
                            return (function (e, t) {
                              var n = [];
                              return (
                                e.forEach((e) => {
                                  var r = e.address,
                                    i = e.deviceId,
                                    a = e.keyIndex;
                                  t.some((e) => {
                                    var t = e.id,
                                      n = e.index;
                                    return t === i && a === n;
                                  }) && n.push(r);
                                }),
                                n
                              );
                            })(e, t.devicesToRemove);
                          case "adv_devices_reset":
                            return y(e);
                          default:
                            return t.type, y(e);
                        }
                      })(
                        e.map((e) => ({
                          deviceId: e.deviceId,
                          address: e.address,
                          rawId: e.rawId,
                          keyIndex: e.keyIndex,
                        })),
                        t
                      );
                      if (0 !== r.length)
                        return (0, s.c)([
                          n.stores.identities.bulkDelete(r),
                          n.stores.sessions.bulkDelete(r),
                        ]).then(() => {});
                    })
                );
              })(e, t, this.o)
            );
          }
          saveSignalIdentities(e) {
            return Promise.all(
              e.map((e) => {
                var t = o()(e, 2),
                  n = t[0],
                  r = t[1];
                return this.y.enqueue(n, () =>
                  this.p.save_identity(ge((0, p.e)(n)), r)
                );
              })
            ).then(() => {});
          }
          saveIdentityForCompanionDevice(e, t, n, r) {
            return this.y.enqueue(e, () =>
              this.p.save_identity(ge(e), t, { rawId: n, keyIndex: r })
            );
          }
          createSignalSessionForCompanionDevice(e, t) {
            var n = (0, p.h)(e.jid);
            return this.y.enqueue(n, () =>
              this.p
                .save_identity(ge(e.jid), e.info.identity.subarray(1), t)
                .then(() => (0, m.g)(e.jid, e.info))
                .then((e) => {
                  if (!e.success) throw be(e.error);
                })
            );
          }
          signalContexts() {
            return { context: this.v, storeContext: this.u };
          }
        })();
        __LOG__(2)`Signal::onSessionConnected invoked`,
          O.resolve(
            lib_libsignal.libsignal.get(e).then(
              (e) => (
                (function (e) {
                  "function" == typeof e.start_hmac_sha256 &&
                    S.add("hmacSha256"),
                    "function" == typeof e.download_and_decrypt &&
                      S.add("downloadAndDecrypt");
                })(e),
                e
              )
            )
          );
        var r = O.promise
          .then(
            (e) => (
              __LOG__(2)`Signal::onSessionConnected got server #${e.id}`,
              e.new_global_context()
            )
          )
          .then(
            (e) => (
              __LOG__(2)`Signal::onSessionConnected got context`,
              (t.v = e),
              e.new_store_context()
            )
          )
          .then((e) => {
            __LOG__(2)`Signal::onSessionConnected got store context`, (t.u = e);
            var r = t.v,
              i = r.session,
              a = (0, l.getSignalTable)();
            function o(t) {
              var n,
                o,
                u = ((n = a), (o = new t(i.next_id, i, n)), i.track(o), o);
              return u.set_ids(r.service_id, e.id), u;
            }
            return (
              (t.o = a),
              (t.p = o(n(484).default)),
              (t.q = o(n(475).default)),
              (t.r = o(n(476).default)),
              (t.s = o(n(477).default)),
              (t.t = o(n(478).default)),
              Promise.all([
                e.set_identity_key_store(t.p),
                e.set_session_store(t.q),
                e.set_pre_key_store(t.r),
                e.set_signed_pre_key_store(t.s),
                e.set_sender_key_store(t.t),
              ])
            );
          })
          .then(() => (__LOG__(2)`Signal::onSessionConnected completed`, t));
        E.promise.catch((e) => {
          __LOG__(4)`Signal::onSessionConnected error ${e}`;
        }),
          E.resolve(r);
      }
      function P() {
        return (0, s.i)((0, l.getSignalTable)().stores.delete());
      }
      function T() {
        var e = (0, l.getSignalTableIfInitialized)();
        e && e.close();
      }
      function N(e, t) {
        return he(
          "hmacSha256",
          (n) => (
            L("hmacSha256"),
            n.start_hmac_sha256(e).then((e) => {
              var n = t.map((t) => e.update(t));
              return (
                n.unshift(e.finalize()),
                Promise.all(n).then((e) => o()(e, 1)[0])
              );
            })
          )
        );
      }
      function C(e, t, n, r, i, a, o) {
        return O.promise.then(
          (u) => (
            L("downloadAndDecrypt"), u.download_and_decrypt(e, t, n, r, i, a, o)
          )
        );
      }
      function R(e, t, n) {
        return he("verifySignature", (r) => r.curve_verify_signature(e, t, n));
      }
      function x() {
        var e = c.I.get().maxKeys;
        ve("generatePreKeys", (t) => t.r.generatePreKeys(e));
      }
      function D() {
        return ve("allRemainingPreKeys", (e) => e.r.allRemainingPreKeys());
      }
      function U(e) {
        return ve("markUploadedUpToKey", (t) => t.r.markUploadedUpToKey(e));
      }
      function j(e) {
        return ve("hasSignalSession", (t) =>
          t.q.contains({ name: (0, p.h)(e), deviceId: (0, p.f)(e) })
        );
      }
      function $(e) {
        var t = e.map((e) => ({ name: (0, p.h)(e), deviceId: (0, p.f)(e) }));
        return ve(
          "filterJidsWithSession",
          (function () {
            var e = i()(function* (e) {
              return yield (0, s.i)(e.q.bulkGetJidsWithSessions(t));
            });
            return function (t) {
              return e.apply(this, arguments);
            };
          })()
        );
      }
      function F(e, t) {
        return ve("deleteSignalInfoForDevices", (n) =>
          n.deleteSignalInfoForDevices(e, t)
        );
      }
      function B(e) {
        return F((0, p.h)(e), [(0, p.f)(e)]);
      }
      function V(e, t) {
        return ve("handleADVInfo", (n) => n.handleADVInfo(e, t));
      }
      function K() {
        return ve("resetSignal", (e) => {
          var t = (0, m.d)()
            .then((t) => e.o.setRegistrationInfo(t))
            .then(() => H());
          return (
            t.then(() => {
              x();
            }),
            t
          );
        });
      }
      function H() {
        return me("rotateSignedPreKey", (e) =>
          e.o
            .transact("r", ["meta"], () =>
              (0, s.c)([e.o.getMyStaticKeyPair(), e.s.nextSignedPreKeyId()])
            )
            .then((e) => {
              var t = o()(e, 2),
                n = t[0],
                r = t[1];
              return (0, m.e)(r, (0, d.E)(), n);
            })
            .then((t) => {
              var n = t.plainObject,
                r = t.record,
                i = {
                  id: n.id,
                  keyPair: n.keyPair,
                  signature: n.signature,
                  timestamp: n.ts,
                  record: r,
                };
              return e.s.putAll([i]).then(() => i);
            })
        );
      }
      function q() {
        return me("publicSignalInfo", (e) => z(e));
      }
      function z(e) {
        return e.o.transact("r", ["meta", "signedPreKeys"], () =>
          (0, s.c)([
            e.o.getMyRegId(),
            e.o.getMyStaticKeyPair(),
            e.s.loadLatestSignedPreKeyInTransaction(),
          ]).then((e) => {
            var t = o()(e, 3),
              n = t[0],
              r = t[1],
              i = t[2];
            return { regId: n, staticPublicKey: r.publicKey, signedPreKey: i };
          })
        );
      }
      function W() {
        return me("publicSignalInfo", (e) => {
          return (
            (t = e.o),
            (n = e.s),
            t.transact("r", ["meta", "signedPreKeys"], () =>
              (0, s.c)([
                t.maybeRegId(),
                t.maybeStaticKeyPair(),
                n.hasSignedPreKeys(),
              ]).then((e) => {
                var t = o()(e, 3),
                  n = t[0],
                  r = t[1],
                  i = t[2];
                return null != n && null != r && i;
              })
            )
          );
          var t, n;
        });
      }
      function J() {
        return me("signalInfoForRetry", (e) =>
          Promise.all([e.r.unusedPreKey(), z(e)]).then((e) => {
            var t = o()(e, 2),
              n = t[0],
              r = t[1];
            return Object.assign({}, r, { preKey: n });
          })
        );
      }
      function Y(e) {
        return me("signalInfoForPreKeyDigest", (t) =>
          Promise.all([z(t), (0, s.i)(t.r.loadFullKeys(e))]).then((e) => {
            var t = o()(e, 2),
              n = t[0],
              r = t[1];
            return Object.assign({}, n, { preKeys: r });
          })
        );
      }
      function Q() {
        return ve("getPreKeyGenerations", (e) => e.r.getAllPreKeyGenerations());
      }
      function Z(e) {
        return ve("getPreKeyGenerations", (t) =>
          t.r.deletePreKeysBelowOrEqual(e)
        ).then(() => {});
      }
      function X(e) {
        return (0, p.r)(e.jid)
          ? ve("createSignalSession", (t) =>
              t.z(e.jid).then((t) => t.create_signal_session(e))
            )
          : (__LOG__(
              2
            )`Signal::createSignalSession was called for companion device ${e.jid}`,
            Promise.reject(
              new Error(
                "createSignalSession was called for companion device " + e.jid
              )
            ));
      }
      function ee(e, t) {
        return ve("createSignalSession", (n) =>
          n.createSignalSessionForCompanionDevice(e, t)
        );
      }
      function te(e) {
        return ve("saveSignalIdentities", (t) => t.saveSignalIdentities(e));
      }
      function ne(e, t, n) {
        var r = n.rawId,
          i = n.keyIndex;
        return ve("saveIdentityForCompanionDevice", (n) =>
          n.saveIdentityForCompanionDevice(e, t, r, i)
        );
      }
      function re(e, t, n, r) {
        return ve("decryptSignalProto", (i) =>
          i
            .z(e)
            .then((e) => {
              switch (t) {
                case "pkmsg":
                  return e.decrypt_pre_key_message(n, r.onSuccess);
                case "msg":
                  return e.decrypt_message(n, r.onSuccess);
                default:
                  throw new Error("Received unsupported msg type: " + t);
              }
            })
            .catch((e) =>
              e &&
              "call_failure" === e.reason &&
              e.value &&
              "number" == typeof e.value.result
                ? (__LOG__(2)`decryptSignalProto error code ${e.value.result}`,
                  r.onDecryptFailure(e.value.result))
                : (__LOG__(4)`decryptSignalProto js error ${e}`,
                  Promise.reject(e))
            )
        );
      }
      function ie() {
        return ve("regId", (e) => e.o.getMyRegId());
      }
      function ae(e) {
        return ve("otherRegId", (t) =>
          t.z(e).then((e) => e.remote_registration_id())
        );
      }
      function oe(e) {
        return ve("getPublicKey", (t) => t.p.getPublicKey(ge(e)));
      }
      function ue(e) {
        return ve("getPublicKeys", (t) =>
          t.p.getPublicKeys(e.map(ge)).then((e) => {
            var t = new Map();
            return (
              e.forEach((e) => {
                var n = e.jid,
                  r = e.deviceId,
                  i = e.publicKey;
                t.set((0, p.B)(n, r), i);
              }),
              t
            );
          })
        );
      }
      function se(e) {
        return ve("getKnownIdentityIds", (t) =>
          (function (e, t) {
            return t.getKnownIdentityIds(e.map(b)).then((e) => {
              var t = new Map();
              return (
                e.forEach((e) => {
                  var n = e.jid,
                    r = e.deviceId,
                    i = e.identityId;
                  t.set((0, v.O)(n, r), i);
                }),
                t
              );
            });
          })(e, t.p)
        );
      }
      function le(e) {
        return ve("clearGroupSenderKey", (t) =>
          t.t.delete(ye(e, (0, p.e)(c.t.get())))
        ).then(() => {});
      }
      function ce(e, t) {
        return ve("encryptGroupSignalProto", (n) =>
          n.AC(e).then((r) => {
            var i = r.serialized;
            return n
              .AA(e, (0, p.e)(c.t.get()))
              .then((e) => e.encrypt(t))
              .then((e) => ({
                type: "skmsg",
                ciphertext: e,
                senderKeyBytes: i,
              }));
          })
        );
      }
      function de(e, t, n, r) {
        return ve("decryptGroupSignalProto", (i) =>
          i
            .AA(e, t)
            .then((e) => e.decrypt(n, r.onSuccess))
            .catch((e) =>
              e &&
              "call_failure" === e.reason &&
              e.value &&
              "number" == typeof e.value.result
                ? (__LOG__(
                    2
                  )`decryptGroupSignalProto error code ${e.value.result}`,
                  r.onDecryptFailure(e.value.result))
                : (__LOG__(4)`decryptGroupSignalProto js error ${e}`,
                  Promise.reject(e))
            )
        );
      }
      function fe(e) {
        var t = e.group,
          n = e.sender,
          r = e.skdist;
        return ve("createGroupSenderSignalSession", (e) =>
          e
            .AB()
            .then((e) =>
              e.process_session(ye(t, n), { serialized: new Uint8Array(r) })
            )
        ).finally(() => {
          __LOG__(2)`createGroupSenderSignalSession finished ${t}/${n}`;
        });
      }
      function _e(e, t, n, r) {
        return ve("encryptSignalProtoIfIdentityIdMatches", (i) =>
          i
            .z(e)
            .then((e) => {
              var i = n;
              return e.encryptIfIdentityIdMatches(t, i, r);
            })
            .then((e) =>
              e
                ? {
                    type: 3 === e.messageType ? "pkmsg" : "msg",
                    ciphertext: e.serialized,
                    identityId: e.identityId,
                  }
                : null
            )
        );
      }
      function pe(e, t) {
        return ve("encryptSignalProto", (n) =>
          n.z(e).then((e) => e.encrypt(t))
        );
      }
      function ve(e, t) {
        return E.promise
          .then(t)
          .catch((n) =>
            n && "session_closed" === n.reason
              ? (__LOG__(2)`Signal::run retrying ${e}`, ve(e, t))
              : Promise.reject(n)
          );
      }
      function he(e, t) {
        return O.promise
          .then(t)
          .catch((n) =>
            n && "session_closed" === n.reason
              ? (__LOG__(2)`Signal::run retrying ${e}`, he(e, t))
              : Promise.reject(n)
          );
      }
      function me(e, t) {
        return I.enqueue(() => ve(e, t));
      }
      function ge(e) {
        return lib_libsignal.protos.Address.create({
          name: (0, p.h)(e),
          deviceId: (0, p.f)(e),
        });
      }
      function ye(e, t) {
        return lib_libsignal.protos.SenderKeyName.create({
          groupId: e,
          sender: ge(t),
        });
      }
      function be(e) {
        var t = g.a[e];
        return null != t
          ? { reason: "call_failure", value: { result: t } }
          : new Error(e);
      }
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return i;
      }),
        n.d(t, "b", function () {
          return a;
        });
      var r = n(5);
      function i(e, t, n, r) {
        return e.transact(t, n, () => r(e.stores));
      }
      function a(e, t) {
        return (0, r.i)(t(e.stores));
      }
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return k;
      }),
        n.d(t, "s", function () {
          return L;
        }),
        n.d(t, "o", function () {
          return M;
        }),
        n.d(t, "t", function () {
          return P;
        }),
        n.d(t, "e", function () {
          return T;
        }),
        n.d(t, "G", function () {
          return N;
        }),
        n.d(t, "y", function () {
          return C;
        }),
        n.d(t, "H", function () {
          return R;
        }),
        n.d(t, "I", function () {
          return x;
        }),
        n.d(t, "J", function () {
          return D;
        }),
        n.d(t, "T", function () {
          return U;
        }),
        n.d(t, "c", function () {
          return j;
        }),
        n.d(t, "O", function () {
          return $;
        }),
        n.d(t, "M", function () {
          return F;
        }),
        n.d(t, "L", function () {
          return B;
        }),
        n.d(t, "x", function () {
          return V;
        }),
        n.d(t, "m", function () {
          return K;
        }),
        n.d(t, "R", function () {
          return H;
        }),
        n.d(t, "S", function () {
          return q;
        }),
        n.d(t, "B", function () {
          return z;
        }),
        n.d(t, "K", function () {
          return W;
        }),
        n.d(t, "b", function () {
          return J;
        }),
        n.d(t, "Q", function () {
          return Y;
        }),
        n.d(t, "P", function () {
          return Q;
        }),
        n.d(t, "v", function () {
          return ee;
        }),
        n.d(t, "A", function () {
          return ne;
        }),
        n.d(t, "z", function () {
          return ie;
        }),
        n.d(t, "u", function () {
          return ae;
        }),
        n.d(t, "r", function () {
          return oe;
        }),
        n.d(t, "h", function () {
          return ue;
        }),
        n.d(t, "i", function () {
          return se;
        }),
        n.d(t, "j", function () {
          return le;
        }),
        n.d(t, "E", function () {
          return ce;
        }),
        n.d(t, "U", function () {
          return de;
        }),
        n.d(t, "D", function () {
          return fe;
        }),
        n.d(t, "g", function () {
          return _e;
        }),
        n.d(t, "w", function () {
          return pe;
        }),
        n.d(t, "N", function () {
          return ve;
        }),
        n.d(t, "F", function () {
          return he;
        }),
        n.d(t, "C", function () {
          return me;
        }),
        n.d(t, "p", function () {
          return ge;
        }),
        n.d(t, "k", function () {
          return ye;
        }),
        n.d(t, "l", function () {
          return be;
        }),
        n.d(t, "n", function () {
          return we;
        }),
        n.d(t, "q", function () {
          return Oe;
        }),
        n.d(t, "d", function () {
          return Me;
        }),
        n.d(t, "f", function () {
          return Ae;
        });
      var r = n(8),
        i = n.n(r),
        a = n(2),
        o = n(110),
        u = n(35),
        s = n(95),
        l = n(32),
        c = n(228),
        d = n(7),
        f = n(5),
        _ = n(15),
        p = n(20),
        v = n(242),
        h = n(11),
        m = n(36),
        g = n(109),
        y = n(90),
        b = n(50),
        w = n(3),
        O = n(119),
        E = n(25),
        I = n(87),
        S = n(46),
        k = 50;
      function L(e, t) {
        return (0, S.a)(
          e.table,
          "r",
          ["msgs", "media", "chats", "status", "groups", "contacts"],
          (e) => G(e, t)
        );
      }
      function G(e, t) {
        return M(e, t).then((t) => {
          if (t) {
            var n = t.dbMsg.media;
            if (n)
              return be(e, n).then((e) => {
                if (e)
                  return (
                    "status" === t.type || "user" === t.type || t.type,
                    Object.assign({}, t, { dbMedia: e })
                  );
              });
          }
        });
      }
      function M(e, t) {
        return A(e, t).then((t) => {
          if (t) {
            if ("status" === t.type) return t;
            t.type;
            var n = t.dbMsg;
            return e.chats.get(n.chat).then((e) => {
              if (e)
                return (0, d.x)(e.jid, {
                  user: (e) => ({ type: "user", dbMsg: n, jid: e }),
                  group: (e) => ({ type: "group", dbMsg: n, jid: e }),
                });
              __LOG__(3)`getMediaMsgWithJid chat not found`;
            });
          }
        });
      }
      function A(e, t) {
        return (0, l.I)(t, {
          chat: (t) =>
            e.msgs
              .where("id")
              .equals(t)
              .first()
              .then((e) =>
                e && (0, u.e)(e) ? { type: "chat", dbMsg: e } : void 0
              ),
          status: (t) =>
            e.status
              .where("id")
              .equals(t)
              .first()
              .then((e) =>
                e && (0, u.e)(e) ? { type: "status", dbMsg: e } : void 0
              ),
        });
      }
      function P(e, t) {
        return (0, S.a)(
          e.table,
          "r",
          ["msgs", "chats", "media", "status"],
          (e) =>
            (0, m.m)(e, t).then((t) => {
              if (t) {
                var n = t.dbMsg;
                if ((0, u.e)(n) && n.media)
                  return be(e, n.media).then((e) => {
                    if (e)
                      return "status" === t.type
                        ? (0, u.e)(t.dbMsg)
                          ? { type: "status", dbMsg: t.dbMsg, dbMedia: e }
                          : null
                        : "user" === t.type
                        ? (0, u.e)(t.dbMsg)
                          ? {
                              type: "user",
                              jid: t.jid,
                              dbMsg: t.dbMsg,
                              dbMedia: e,
                            }
                          : null
                        : (t.type,
                          (0, u.e)(t.dbMsg)
                            ? {
                                type: "group",
                                jid: t.jid,
                                dbMsg: t.dbMsg,
                                dbMedia: e,
                              }
                            : null);
                    __LOG__(3)`getMediaMsgFromExternalId: no media found`;
                  });
                __LOG__(3)`getMsgWithMediaFromExternalId: msg is not media`;
              } else
                __LOG__(3)`getMsgWithMediaFromExternalId: msg was not found`;
            })
        );
      }
      function T(e, t) {
        var n = 0,
          r = 0,
          i = (a, u) =>
            (u.length > 0
              ? (0, f.l)(e.table.stores.media, "msgIds")
                  .noneOf(u)
                  .offset(n)
                  .limit(k)
                  .toArray()
              : e.table.stores.media.offset(n).limit(k).toArray()
            )
              .then((n) => {
                var r = [],
                  i = [];
                return (
                  n.forEach((n) => {
                    (null != t &&
                      (null == n.lastDownloadAttempt ||
                        n.lastDownloadAttempt > t)) ||
                      (null == n.frame && null == n.plaintext) ||
                      (r.push(
                        (0, O.getChunkTable)().dexieDeleteAllByMedia(n.mediaId)
                      ),
                      i.push(
                        (function (e, t) {
                          var n = !1;
                          if (
                            (null != t.frame && ((t.frame = void 0), (n = !0)),
                            null != t.plaintext &&
                              ((t.plaintext = void 0), (n = !0)),
                            n)
                          )
                            return e.table.transact(
                              "rw",
                              ["msgs", "media", "status"],
                              () => {
                                var n = Se(e, t.msgIds, (e) => {
                                  Me(e);
                                });
                                return (0, f.c)([n, Ee(e, t)]).then(() => {});
                              }
                            );
                        })(e, n)
                      ));
                  }),
                  (0, f.c)(r).then(() => ({
                    resultLength: n.length,
                    unlinkPromises: i,
                  }))
                );
              })
              .then((e) => {
                var t = e.resultLength,
                  n = e.unlinkPromises;
                return (r += n.length), Promise.all(n).then(() => t);
              })
              .then((e) => {
                if (e === k) return (n += k), i(25, u);
              })
              .catch((e) => {
                if (
                  !e ||
                  ("QuotaExceededError" !== e.name && "AbortError" !== e.name)
                )
                  throw e;
                if (a > 0) return (0, o.a)(1e3).then(() => i(a - 1, u));
              });
        return (0, f.i)(
          e.table
            .getAllStarredMsgIdsInTransaction()
            .then((e) =>
              i(25, e).then(() => {
                if (0 === r)
                  return (
                    __LOG__(
                      2
                    )`deleteAllMedia removing starred media to free storage space`,
                    (n = 0),
                    i(25, [])
                  );
              })
            )
            .then(() =>
              (function (e) {
                return (0, E.d)(e.table.stores.meta, E.a.RECENT_GIFS).then(
                  (t) => {
                    if (t) {
                      var n = t.value,
                        r = n.recentGifs,
                        i = n.toDelete;
                      return (
                        r.forEach((e) => {
                          var t = e.plaintextHash;
                          null != e.contentPath && i.push(e.contentPath),
                            r.set(
                              t,
                              (0, h.j)(e, { contentPath: void 0, info: void 0 })
                            );
                        }),
                        e.table.stores.meta
                          .put({
                            key: E.a.RECENT_GIFS,
                            value: { recentGifs: r, toDelete: i },
                          })
                          .then(() => {})
                      );
                    }
                  }
                );
              })(e)
            )
        );
      }
      function N(e, t, n, r) {
        return e.table.transact("rw", ["media"], () =>
          ye(e, t).then((i) => {
            if (i) {
              if (i.msgIds.includes(n))
                return (i.mediaEntries[n] = r), Ee(e, i).then(() => {});
              __LOG__(3)`setMediaEntry: msg ${n} is not linked with media ${t}`;
            } else __LOG__(3)`setMediaEntry: Media ${t} does no longer exist`;
          })
        );
      }
      function C(e, t, n, r) {
        return e.table.transact("rw", ["media"], () =>
          ye(e, t).then((i) => {
            if (i)
              if (i.msgIds.includes(n)) {
                var a = i.mediaEntries[n];
                if (a)
                  if ("mms4" === a.version) {
                    if (null != a.uploadToken)
                      return (a.validatedTs = r), Ee(e, i).then(() => {});
                    __LOG__(
                      4
                    )`markMediaEntryValid: ${n} entry is not an upload`;
                  } else
                    __LOG__(4)`markMediaEntryValid: msg ${n} entry is not mms4`;
                else
                  __LOG__(
                    3
                  )`markMediaEntryValid: msg ${n} has no entry for media ${t}`;
              } else
                __LOG__(
                  3
                )`markMediaEntryValid: msg ${n} is not linked with media ${t}`;
            else
              __LOG__(3)`markMediaEntryValid: Media ${t} does no longer exist`;
          })
        );
      }
      function R(e, t, n, r, i, a) {
        return e.table.transact("rw", ["media"], () =>
          ye(e, t).then((o) => {
            if (o)
              if (o.msgIds.includes(n)) {
                var u = o.mediaEntries[n];
                if (u)
                  if ("mms4" === u.version) {
                    if (void 0 !== u.uploadToken)
                      return (
                        r && !u.directPath && (u.directPath = r),
                        i && !u.url && (u.url = i),
                        a && (u.validatedTs = a),
                        Ee(e, o).then(() => {})
                      );
                    __LOG__(4)`Msg ${n} entry is not upload`;
                  } else __LOG__(4)`Msg ${n} entry is not mms4`;
                else __LOG__(3)`Msg ${n} has no entry for media ${t}`;
              } else __LOG__(3)`Msg ${n} is not linked with media ${t}`;
            else __LOG__(3)`Media ${t} does no longer exist`;
          })
        );
      }
      function x(e, t, n, r) {
        return e.table.transact("rw", ["media"], () =>
          ye(e, t).then((i) => {
            if (i)
              if (i.msgIds.includes(n)) {
                var a = i.mediaEntries[n];
                if (a)
                  if ("mms4" === a.version)
                    if (void 0 !== a.uploadToken) {
                      if (void 0 === a.mmsThumb)
                        return (
                          (a.mmsThumb = { ciphertextHash: r }),
                          Ee(e, i).then(() => {})
                        );
                      __LOG__(3)`Entry for ${n} already have mmsThumb info`;
                    } else __LOG__(4)`Msg ${n} entry is not upload`;
                  else __LOG__(4)`Msg ${n} entry is not mms4`;
                else __LOG__(3)`Msg ${n} has no entry for media ${t}`;
              } else __LOG__(3)`Msg ${n} is not linked with media ${t}`;
            else __LOG__(3)`Media ${t} does no longer exist`;
          })
        );
      }
      function D(e, t, n, r) {
        return e.table.transact("rw", ["media"], () =>
          ye(e, t).then((i) => {
            if (i)
              if (i.msgIds.includes(n)) {
                var a = i.mediaEntries[n];
                if (a)
                  if ("mms4" === a.version)
                    if (void 0 !== a.uploadToken) {
                      if (void 0 !== a.mmsThumb)
                        return (
                          (a.mmsThumb.directPath = r), Ee(e, i).then(() => {})
                        );
                      __LOG__(4)`Tried to set mms thumb path without hash`;
                    } else __LOG__(4)`Msg ${n} entry is not upload`;
                  else __LOG__(4)`Msg ${n} entry is not mms4`;
                else __LOG__(3)`Msg ${n} has no entry for media ${t}`;
              } else __LOG__(3)`Msg ${n} is not linked with media ${t}`;
            else __LOG__(3)`Media ${t} does no longer exist`;
          })
        );
      }
      function U(e, t, n) {
        return (
          __LOG__(2)`updateMediaPlaintext(mediaId=${t}, plaintext=${n})`,
          e.table.transact("rw", ["msgs", "media", "meta", "status"], () =>
            ye(e, t).then((r) => {
              if (!r)
                return (
                  __LOG__(2)`updateMediaPlaintext: non-existent id ${t}`, []
                );
              if (r.plaintext === n)
                return (
                  __LOG__(
                    3
                  )`updateMediaPlaintext: Tried to update to same plaintext`,
                  []
                );
              r.plaintext = n;
              var a = Se(e, r.msgIds, (e) => {
                e.plaintext &&
                  r.plaintext &&
                  (e.plaintext = (0, b.d)(r.plaintext, (0, y.h)(e)));
              });
              return (0, f.c)([a, Ee(e, r)]).then((e) => i()(e, 1)[0]);
            })
          )
        );
      }
      function j(e, t) {
        return (0, S.a)(
          e.table,
          "rw",
          ["msgs", "media", "meta", "chats", "status", "groups", "contacts"],
          (n) =>
            G(n, t).then((n) => {
              if (n) {
                var r = n.dbMedia,
                  i = n.dbMsg,
                  a = r.plaintext;
                if (a) {
                  var o = (0, b.d)(a, (0, y.h)(i));
                  return (
                    i.plaintext &&
                      (__LOG__(
                        2
                      )`attachMediaPlaintext msg already have plaintext ref`,
                      i.plaintext !== o &&
                        (__LOG__(
                          4
                        )`attachMediaPlaintext msg plaintext is different than media`,
                        SEND_LOGS("msg-media-plaintext-mismatch"))),
                    Se(e, r.msgIds, (e) => {
                      e.plaintext = o;
                    })
                  );
                }
                __LOG__(3)`attachMediaPlaintext media have no plaintext ref`;
              } else
                __LOG__(3)`attachMediaPlaintext media for msg is gone ${t}`;
            })
        );
      }
      function $(e, t, n) {
        return (
          __LOG__(2)`setUndefinedMediaFields(mediaId=${t}, fieldsToSet=${n})`,
          e.table.transact("rw", ["msgs", "media", "meta", "status"], () =>
            ye(e, t).then((r) => {
              if (!r)
                return (
                  __LOG__(2)`setUndefinedMediaFields: non-existent id ${t}`,
                  e.table.stores.meta.put(X(t, null)).then(() => [])
                );
              if (!(0, h.f)(r, n))
                return (
                  __LOG__(
                    2
                  )`setUndefinedMediaFields: mediaId ${t} nothing changed/nothing to set`,
                  []
                );
              var a = Se(e, r.msgIds, (e) => {
                Ge(e, r);
              });
              return (0, f.c)([a, Ee(e, r)]).then((e) => i()(e, 1)[0]);
            })
          )
        );
      }
      function F(e, t, n) {
        return (
          __LOG__(
            2
          )`setMediaProgressiveDetails(mediaId=${t}, progressiveDetails: ${!!n})`,
          e.table.transact("rw", ["media"], () =>
            ye(e, t).then((r) => {
              if (r)
                return n
                  ? ((r.partialPlaintextHash = n.partialPlaintextHash),
                    (r.partialSize = n.partialSize),
                    (r.progressiveJpegScanNumber = n.progressiveJpegScanNumber),
                    Ee(e, r).then(() => {}))
                  : (delete r.partialPlaintextHash,
                    delete r.partialSize,
                    delete r.progressiveJpegScanNumber,
                    Ee(e, r).then(() => {}));
              __LOG__(3)`setMediaProgressiveDetails media ${t} not found`;
            })
          )
        );
      }
      function B(e, t, n, r) {
        return (
          __LOG__(2)`setMediaPlaintext(mediaId=${t}, plaintext=${n})`,
          e.table.transact("rw", ["msgs", "media", "meta", "status"], () =>
            ye(e, t).then((a) => {
              if (!a)
                return (
                  __LOG__(2)`setMediaPlaintext: non-existent id ${t}`,
                  e.table.stores.meta.put(X(t, null)).then(() => {})
                );
              if (!a.plaintext) {
                a.plaintext = n;
                var o = Se(e, a.msgIds, (e) => {
                  "save" === r && (e.plaintext = (0, b.d)(n, (0, y.h)(e)));
                });
                return (0, f.c)([o, Ee(e, a)]).then((e) => {
                  var t = i()(e, 1)[0];
                  return { dbMedia: a, dbMsgs: t };
                });
              }
              __LOG__(
                2
              )`setMediaPlaintext: mediaId ${t} already have plaintext ${a.plaintext}`;
            })
          )
        );
      }
      function V(e, t) {
        return e.table.transact("rw", ["msgs", "media", "status"], () =>
          K(e, t).then((n) => {
            if (!n)
              return (
                __LOG__(
                  2
                )`markMediaContentAsDeleted: non-existent media for msg ${t}`,
                []
              );
            if (!n.plaintext) return [];
            delete n.plaintext;
            var r = Se(e, n.msgIds, (e) => {
              delete e.plaintext;
            });
            return (0, f.c)([r, Ee(e, n)]).then((e) => i()(e, 1)[0]);
          })
        );
      }
      function K(e, t) {
        return A(e.table.stores, t).then((t) =>
          t && null != t.dbMsg.media
            ? ye(e, t.dbMsg.media)
            : (__LOG__(2)`getMediaFromMsgId: message not found or not media`,
              null)
        );
      }
      function H(e, t) {
        return (
          __LOG__(2)`updateLastDownloadAttempt(mediaId=${t})`,
          e.table.transact("rw", ["media"], () =>
            ye(e, t).then((t) =>
              t
                ? ((t.lastDownloadAttempt = (0, w.D)()),
                  Ee(e, t).then((e) => t))
                : (__LOG__(
                    3
                  )`Tried to update download attempt for non-existing media`,
                  null)
            )
          )
        );
      }
      function q(e, t) {
        return (
          __LOG__(2)`updateLastUploadAttempt(mediaId=${t})`,
          e.table.transact("rw", ["media"], () =>
            ye(e, t).then((n) =>
              n
                ? ((n.lastUploadAttempt = (0, w.D)()), Ee(e, n).then((e) => n))
                : (__LOG__(
                    4
                  )`Tried to update upload attempt for non-existing media ${t}`,
                  null)
            )
          )
        );
      }
      function z(e, t, n) {
        return (
          __LOG__(2)`resetMediaDirectPath(mediaId=${n})`,
          e.table.transact("rw", ["media"], () =>
            ye(e, n).then((r) => {
              if (r) {
                var i = r.mediaEntries[t];
                if (i) {
                  if ("mms3" !== i.version) {
                    var a = (0, h.v)(i);
                    return (
                      delete a.directPath,
                      (r.mediaEntries[t] = a),
                      Ee(e, r).then(() => {})
                    );
                  }
                  __LOG__(4)`reset media msg ${t} entry is not upload`;
                } else
                  __LOG__(
                    3
                  )`Media ${n} does not have media entry for message ${t}`;
              } else
                __LOG__(
                  4
                )`Tried to reset media direct path for non-existing media ${n}`;
            })
          )
        );
      }
      function W(e, t, n) {
        return e.table.transact("rw", ["msgs", "media"], () =>
          ye(e, t).then((r) =>
            r
              ? n === r.filesystemPath
                ? (__LOG__(3)`setMediaFilesystemPath: path unchanged ${n}`, n)
                : Ee(e, Object.assign({}, r, { filesystemPath: n })).then(
                    () => n
                  )
              : (__LOG__(2)`setMediaFilesystemPath non-existent media id ${t}`,
                null)
          )
        );
      }
      function J(e, t, n, r) {
        return (0, S.a)(
          e.table,
          "rw",
          ["status", "msgs", "media", "previews"],
          (e) =>
            A(e, t).then((t) => {
              if (t) {
                var i = t.dbMsg;
                return null != i.media
                  ? Oe(e, i.media).then((e) => ({ dbMsg: i, dbMedia: e }))
                  : te(e, i.id, i.type, n, null, r, null).then((t) => {
                      var n,
                        r = t.dbMedia,
                        a = t.hasPreview;
                      return (
                        null == r.uiVCards &&
                          (0, u.d)(i) &&
                          void 0 !== i.uiVCards &&
                          ((r.uiVCards = i.uiVCards),
                          (r.contactsCount = i.contactsCount),
                          (n = (function (e, t) {
                            return e.media.put(t);
                          })(e, r))),
                        Ge(i, r),
                        a &&
                          (0, u.f)(i) &&
                          ("mms" === a && (0, s.g)(i)
                            ? (i.hasPreview = "mms")
                            : "media" === a && (i.hasPreview = "media")),
                        (0, f.c)([n, Ie(e, i)]).then(() =>
                          r ? { dbMsg: i, dbMedia: r } : null
                        )
                      );
                    });
              }
              __LOG__(
                2
              )`attachHashToMsgMedia msg deleted or changed away from media`;
            })
        );
      }
      function Y(e, t, n) {
        var r = [],
          i = new Set();
        return (
          t.forEach((e) => {
            null != e.media && (r.push(e.media), i.add(e.id));
          }),
          __LOG__(2)`unlinkMsgsMediaInTransaction: msgs ${t.map((e) => e.id)}`,
          (function (e, t) {
            return e.media.where("mediaId").anyOf(t).toArray();
          })(e, r).then((t) => Q(e, t, (e) => i.has(e), n))
        );
      }
      function Q(e, t, n, r) {
        __LOG__(2)`unlinkMediaInTransaction: media ids ${t.map(
          (e) => e.mediaId
        )}`;
        var i = [],
          a = [];
        t.forEach((e) => {
          var t = (0, p.f)(),
            r = {};
          if (
            (e.msgIds.forEach((i) => {
              if (!n(i)) {
                t.push(i);
                var a = e.mediaEntries[i];
                a && (r[i] = a);
              }
            }),
            (0, p.i)(t))
          )
            i.push(e);
          else {
            var o = (0, h.j)(e, { msgIds: t, mediaEntries: r });
            a.push(o);
          }
        });
        var o = { size: 0, numFiles: 0 };
        return (
          r ||
            i.forEach((e) => {
              e.filesystemPath && ((o.size += (0, m.z)(e)), o.numFiles++);
            }),
          (0, f.c)([
            i.length > 0 ? Z(e, i, r) : null,
            a.length > 0 ? e.media.bulkPut(a) : null,
          ]).then(() => o)
        );
      }
      function Z(e, t, n) {
        var r = t.map((e) => {
            var t;
            return (
              !e.filesystemPath ||
                (!(0, I.k)(e.filesystemPath) && n) ||
                (t = e.filesystemPath),
              X(e.mediaId, t)
            );
          }),
          i = [],
          a = [];
        return (
          t.forEach((e) => {
            a.push(e.mediaId), i.push((0, _.B)(e.mediaId), (0, _.A)(e.mediaId));
          }),
          (0, f.c)([
            e.media.bulkDelete(a),
            e.previews.bulkDelete(i),
            e.meta.bulkPut(r),
          ])
        );
      }
      function X(e, t) {
        return { key: (0, E.b)(e), value: { id: e, fsPath: t } };
      }
      function ee(e, t, n, r) {
        var i = (0, h.v)(n);
        if ((0, u.e)(i)) {
          var a = r.plaintextHash;
          return null == a
            ? (0, f.e)({ toStore: i })
            : te(
                e,
                t,
                i.type,
                a,
                r.entry,
                r.preview,
                r.mmsThumbInfo,
                r.stickerInfo
              ).then((e) => {
                var r = e.dbMedia,
                  a = e.hasPreview;
                return (
                  Ge(i, r),
                  r.plaintext &&
                    (i.plaintext = (0, b.d)(r.plaintext, (0, y.h)(i))),
                  a &&
                    (0, u.f)(i) &&
                    ("mms" === a && (0, s.h)(t, n)
                      ? (i.hasPreview = "mms")
                      : "media" === a && (i.hasPreview = "media")),
                  { toStore: i }
                );
              });
        }
        return r.preview && (0, u.h)(i)
          ? re(e, t, r.preview).then(
              () => ((i.hasPreview = "msg"), { toStore: i })
            )
          : (0, f.e)({ toStore: i });
      }
      function te(e, t, n, r, i, a, o, u) {
        return (function (e, t) {
          return e.media
            .where("plaintextHash")
            .equals(t)
            .toArray()
            .then((e) => (e.length ? e[0] : null));
        })(e, r).then((s) => {
          if (s) {
            __LOG__(2)`linkMediaAndPreview: link ${t} with stored media ${
              s.mediaId
            } with entry ${!!i}`;
            var l,
              c,
              d = t,
              v = i
                ? Object.assign({}, s.mediaEntries, { [d]: i })
                : s.mediaEntries,
              h = Object.assign({}, s, {
                msgIds: (0, p.a)(s.msgIds, t),
                mediaEntries: v,
                types: s.types | (0, y.i)(n),
              });
            if (o && null == s.mmsThumb) {
              var m = { thumbPlaintextHash: o.hash };
              if (o.blob) {
                var g = o.blob;
                (l = re(e, (0, _.A)(s.mediaId), g)), (m.hasPreview = "mms");
              }
              h.mmsThumb = m;
            }
            return (
              null != u &&
                (null == h.stickerInfo && (h.stickerInfo = {}),
                null != u.firstFrameLength &&
                  (null == (c = s.stickerInfo)
                    ? void 0
                    : c.firstFrameLength) !== u.firstFrameLength &&
                  (h.stickerInfo.firstFrameLength = u.firstFrameLength),
                null != u.firstFrameSidecar &&
                  (h.stickerInfo.firstFrameSidecar = u.firstFrameSidecar)),
              (0, f.c)([e.media.put(h), l]).then(() => {
                var e;
                return (null == (e = h.mmsThumb) ? void 0 : e.hasPreview)
                  ? { dbMedia: h, hasPreview: "mms" }
                  : { dbMedia: h, hasPreview: null != a ? "media" : void 0 };
              })
            );
          }
          __LOG__(
            2
          )`linkMediaAndPreview: creating new media for ${t} with entry ${!!i}`;
          var b = {};
          i && (b[t] = i);
          var w = {
            plaintextHash: r,
            msgIds: (0, p.l)(t),
            mediaEntries: b,
            types: (0, y.i)(n),
          };
          if (o) {
            var O = { thumbPlaintextHash: o.hash };
            o.blob && (O.hasPreview = "mms"), (w.mmsThumb = O);
          }
          return (
            null != u &&
              ((w.stickerInfo = {}),
              null != u.firstFrameLength &&
                (w.stickerInfo.firstFrameLength = u.firstFrameLength),
              null != u.firstFrameSidecar &&
                (w.stickerInfo.firstFrameSidecar = u.firstFrameSidecar)),
            e.media.add(w).then((t) => {
              var n,
                r,
                i,
                u = Object.assign({}, w, { mediaId: t });
              if (
                (a &&
                  (__LOG__(
                    2
                  )`linkMediaAndPreview: new media ${u.mediaId} comes with preview, storing.`,
                  (n = re(e, (0, _.B)(t), a)),
                  (i = "media")),
                o && o.blob)
              ) {
                var s = o.blob;
                (r = re(e, (0, _.A)(t), s)), (i = "mms");
              }
              return (0, f.c)([n, r]).then(() => ({
                dbMedia: u,
                hasPreview: i,
              }));
            })
          );
        });
      }
      function ne(e, t, n) {
        return re(e.table.stores, t, n);
      }
      function re(e, t, n) {
        return n
          ? e.previews
              .put({
                previewId: t,
                preview: new Blob([n], { type: "image/jpeg" }),
              })
              .then(() => !0)
          : e.previews.delete(t).then(() => !1);
      }
      function ie(e, t) {
        return (
          __LOG__(2)`markMmsMediaPreviewForMsg for ${t}`,
          (0, S.a)(e.table, "rw", ["msgs", "status"], (e) =>
            A(e, t).then((t) => {
              if (t) {
                var n = t.dbMsg;
                if ((0, u.k)(n) && (0, s.g)(n))
                  return (n.hasPreview = "mms"), Ie(e, n);
              }
            })
          )
        );
      }
      function ae(e, t) {
        return (0, f.i)(
          e.table.stores.previews.get((0, _.A)(t)).then((e) => null != e)
        );
      }
      function oe(e, t) {
        return (0, S.a)(e.table, "r", ["msgs", "previews", "status"], (e) => {
          var n = (0, l.I)(t, {
            chat: (t) =>
              e.previews
                .get((0, _.E)(t))
                .then((e) => (null == e ? void 0 : e.preview)),
            status: () => null,
          });
          return (0, f.c)([
            A(e, t).then((t) => (t ? le(e, t.dbMsg) : null)),
            n,
          ]).then((e) => {
            var t = i()(e, 2);
            return { msg: t[0], quote: t[1] };
          });
        });
      }
      function ue(e, t) {
        return (0, S.a)(e.table, "r", ["msgs", "status", "previews"], (e) =>
          A(e, t).then((n) => {
            if (n) return le(e, n.dbMsg);
            __LOG__(3)`getMsgPreview no msg found ${t}`;
          })
        );
      }
      function se(e, t) {
        return le(e.table.stores, t);
      }
      function le(e, t) {
        return t.hasPreview
          ? ((0, u.f)(t) ? (n = (0, u.a)(t)) : (0, u.h)(t) && (n = (0, u.b)(t)),
            n
              ? e.previews.get(n).then((e) => (null == e ? void 0 : e.preview))
              : (0, f.e)())
          : (0, f.e)();
        var n;
      }
      function ce(e, t, n, r, i) {
        return (0, S.a)(
          e.table,
          "rw",
          ["msgs", "media", "status", "previews"],
          (a) =>
            A(a, t).then((a) => {
              if (a && "media" === a.dbMsg.hasPreview) {
                var o = a.dbMsg.media;
                if (o)
                  return ye(e, o).then((t) => {
                    if (t)
                      return (
                        (t.mmsThumb = {
                          thumbPlaintextHash: n,
                          hasPreview: "mms",
                        }),
                        (0, f.c)([
                          Ee(e, t),
                          ne(e, (0, _.A)(o), i.blob),
                          "skip" !== r ? ne(e, (0, _.B)(o), r) : null,
                        ])
                          .then(() =>
                            (0, f.c)(
                              Se(e, t.msgIds, (e) => {
                                (0, s.g)(e) &&
                                  ((e.hasPreview = "mms"),
                                  (0, s.a)(e) &&
                                    null != i.height &&
                                    null != i.width &&
                                    (e.mmsThumb = {
                                      height: i.height,
                                      width: i.width,
                                    }));
                              })
                            )
                          )
                          .then(() => {})
                      );
                    __LOG__(3)`saveMediaThumbs no media found ${o}`;
                  });
                __LOG__(3)`saveMediaThumbs invalid non-media msg ${t}`;
              } else
                __LOG__(
                  3
                )`saveMediaThumbs no msg with 'media' preview found ${t}`;
            })
        );
      }
      function de(e, t) {
        return e.table.transact("rw", ["msgs", "status", "media"], () =>
          ye(e, t).then((n) => {
            if (n) {
              var r = (0, w.D)();
              n.lastThumbDownloadAttempt = r;
              var a = Se(e, n.msgIds, (e) => {
                (0, s.a)(e) &&
                  e.mmsThumb &&
                  (e.mmsThumb.lastThumbDownloadAttempt = r);
              });
              return (0, f.c)([a, Ee(e, n)]).then((e) => {
                var t = i()(e, 1)[0];
                return { dbMedia: n, dbMsgs: t };
              });
            }
            __LOG__(
              2
            )`updateMmsThumbLastDownloadAttempt non-existent media id ${t}`;
          })
        );
      }
      function fe(e, t, n, r) {
        return e.table.transact(
          "rw",
          ["msgs", "media", "previews", "status", "authors"],
          () =>
            ye(e, t).then((a) => {
              if (!a)
                return (
                  __LOG__(
                    2
                  )`saveDownloadedMediaMMSPreview non-existent media id ${t}`,
                  { dbMsgs: [] }
                );
              if (a.mmsThumb && a.mmsThumb.thumbPlaintextHash !== r)
                return (
                  __LOG__(
                    4
                  )`saveDownloadedMediaMMSPreview: unexpected thumb plaintext hash changed`,
                  { dbMsgs: [] }
                );
              var o =
                null != a.mmsThumb ? a.mmsThumb : { thumbPlaintextHash: r };
              a.mmsThumb = Object.assign({}, o, { hasPreview: "mms" });
              var l = Se(e, a.msgIds, (e) => {
                (0, s.g)(e) && (e.hasPreview = "mms");
              });
              return (0, f.c)([l, Ee(e, a), ne(e, (0, _.A)(t), n)]).then(
                (t) => {
                  var n = i()(t, 1)[0],
                    r = new Set(),
                    a = {};
                  return (
                    n.forEach((e) => {
                      (0, u.m)(e) && (r.add((0, _.t)(e.id)), (a[e.id] = e));
                    }),
                    0 === r.size
                      ? { dbMsgs: n }
                      : e.table.stores.authors
                          .where("id")
                          .anyOf(Array.from(r))
                          .toArray()
                          .then((t) => {
                            var r = [];
                            return (
                              t.forEach((e) => {
                                var t,
                                  n =
                                    null == (t = e.previewMsg) ? void 0 : t.id;
                                if (n) {
                                  var i = a[n];
                                  i &&
                                    ((e.previewMsg = (0, v.a)(i) || void 0),
                                    r.push(e));
                                }
                              }),
                              r.length > 0
                                ? e.table.stores.authors
                                    .bulkPut(r)
                                    .then(() => ({ dbMsgs: n, dbAuthors: t }))
                                : { dbMsgs: n, dbAuthors: t }
                            );
                          })
                  );
                }
              );
            })
        );
      }
      function _e(e) {
        return (0, E.c)(e.table.stores.meta, 10).then((e) => ({
          media: e.map((e) =>
            "object" == typeof e.value ? e.value : { id: e.value, fsPath: null }
          ),
          maybeMore: 10 === e.length,
        }));
      }
      function pe(e, t) {
        return e.table.stores.meta.delete((0, E.b)(t));
      }
      function ve(e, t, n) {
        return n
          ? e.table.transact("rw", ["status", "authors"], () =>
              (0, f.c)([
                e.table.stores.status.where("id").equals(t).first(),
                e.table.stores.authors.get((0, _.t)(t)),
              ]).then((r) => {
                var a = i()(r, 2),
                  o = a[0],
                  s = a[1];
                if (o)
                  if (s) {
                    var l = !1;
                    if (((0, u.k)(o) && n && ((o.bg = n), (l = !0)), l))
                      return e.table.stores.status.put(o).then(() => {
                        var t = (function (e, t) {
                          if (e.previewMsg && e.previewMsg.id === t.id) {
                            var n = (0, v.a)(t) || void 0;
                            return Object.assign({}, e, { previewMsg: n });
                          }
                          return e;
                        })(s, o);
                        return e.table.stores.authors
                          .put(t)
                          .then(() => ({ updatedMsg: o, updatedAuthor: t }));
                      });
                    __LOG__(2)`setStatusMsgBg: No update required for ${t}`;
                  } else __LOG__(3)`setStatusMsgBg: no author for ${t}`;
                else __LOG__(3)`setStatusMsgBg: No status msg found ${t}`;
              })
            )
          : Promise.resolve();
      }
      function he(e, t, n, r) {
        return n || r
          ? e.table.transact("rw", ["msgs"], () =>
              e.table.getMsgFromId(t).then((i) => {
                if (i) {
                  var a = !1;
                  if (
                    ((0, u.k)(i) && n && ((i.bg = n), (a = !0)),
                    r &&
                      i.quoted &&
                      i.quoted.hasPreview &&
                      ((i.quoted.bg = r), (a = !0)),
                    a)
                  )
                    return e.table.stores.msgs
                      .put(i)
                      .then(() => ({ updatedMsg: i }));
                  __LOG__(2)`setChatMsgBgs: No update required for ${t}`;
                } else __LOG__(3)`setChatMsgBgs: No chat msg found ${t}`;
              })
            )
          : Promise.resolve();
      }
      function me(e, t, n) {
        return e.table.transact(
          "rw",
          ["msgs", "media", "chats", "groups", "groupParticipantsInfo"],
          () =>
            ye(e, t).then((r) => {
              if (r) {
                var o = (0, c.e)(n),
                  s = n.length;
                (r.uiVCards = o), (r.contactsCount = s);
                var l = Se(e, r.msgIds, (e) => {
                  e.type === a.f.DOCUMENT &&
                    e.isVCard &&
                    ((e.uiVCards = o), (e.contactsCount = s));
                });
                return (0, f.c)([l, Ee(e, r)]).then((n) => {
                  var r = i()(n, 1)[0],
                    a = [],
                    o = [];
                  return (
                    r.forEach((n) => {
                      (0, u.c)(n)
                        ? (o.push(n),
                          a.push(
                            e.table.getChatAndGroupFromId(n.chat).then((t) => {
                              if (t) {
                                var r = t.dbChat,
                                  i = t.dbGroup;
                                return (0, g.maybeMutateChatMsgPreview)(r, n)
                                  ? e.table
                                      .updateChat(r)
                                      .then(() => ({ dbChat: r, dbGroup: i }))
                                  : t;
                              }
                            })
                          ))
                        : __LOG__(
                            4
                          )`saveDocumentMediaVCards non media message found ${t}: ${n.id}`;
                    }),
                    (0, f.c)(a).then((e) => ({
                      updatedChats: e.filter(Boolean),
                      updatedMsgs: o,
                    }))
                  );
                });
              }
              __LOG__(2)`saveDocumentVCards: media ${t} gone`;
            })
        );
      }
      function ge(e, t) {
        return (0, S.a)(e.table, "r", ["msgs", "status", "media"], (n) =>
          A(n, t).then((n) => {
            if (n && n.dbMsg.media)
              return ye(e, n.dbMsg.media).then((e) => {
                if (e) {
                  var n = e.mediaEntries[t];
                  if (n && "mms4" === n.version && null != n.mediaKeyTs)
                    return {
                      mediaId: e.mediaId,
                      likelyOnServerFrom: n.validatedTs || n.mediaKeyTs,
                    };
                }
              });
          })
        );
      }
      function ye(e, t) {
        return be(e.table.stores, t);
      }
      function be(e, t) {
        return e.media.get(t);
      }
      function we(e, t) {
        return Oe(e.table.stores, t);
      }
      function Oe(e, t) {
        return e.media.get(t).then((e) => {
          if (!e)
            throw (
              (__LOG__(4)`Media ${t} is not in db`,
              new Error("The media is not in db"))
            );
          return e;
        });
      }
      function Ee(e, t) {
        return e.table.stores.media.put(t);
      }
      function Ie(e, t) {
        return (0, u.c)(t)
          ? e.msgs.put(t).then(() => t)
          : e.status.put(t).then(() => t);
      }
      function Se(e, t, n) {
        var r = [],
          a = [];
        return (
          t.forEach((e) => {
            (0, l.I)(e, {
              chat: (e) => {
                r.push(e);
              },
              status: (e) => {
                a.push(e);
              },
            });
          }),
          (0, f.c)([ke(e, r, n), Le(e, a, n)]).then((e) => {
            var t = i()(e, 2),
              n = t[0],
              r = t[1];
            return n.concat(r);
          })
        );
      }
      function ke(e, t, n) {
        return 0 === t.length
          ? (0, f.e)([])
          : e.table.getAllMsgsFromIds(t).then((t) => {
              var r = [];
              return (
                t.forEach((e) => {
                  (0, u.e)(e) && (n(e), r.push(e));
                }),
                e.table.stores.msgs.bulkPut(r).then(() => r)
              );
            });
      }
      function Le(e, t, n) {
        return 0 === t.length
          ? (0, f.e)([])
          : e.table.stores.status
              .where("id")
              .anyOf(t)
              .toArray()
              .then((t) => {
                var r = [];
                return (
                  t.forEach((e) => {
                    (0, u.e)(e) && (n(e), r.push(e));
                  }),
                  e.table.stores.status.bulkPut(r).then(() => r)
                );
              });
      }
      function Ge(e, t) {
        (e.media = t.mediaId),
          (0, u.o)(e) && null != t.frame && (e.frame = t.frame),
          (0, u.p)(e) &&
            (null != t.frame && (e.frame = t.frame),
            null != t.rotation && (e.rotation = t.rotation)),
          (0, u.d)(e) &&
            (null != t.uiVCards && (e.uiVCards = t.uiVCards),
            null != t.contactsCount && (e.contactsCount = t.contactsCount));
      }
      function Me(e) {
        null != e.plaintext && (e.plaintext = void 0),
          (0, u.p)(e) && null != e.frame && (e.frame = void 0);
      }
      function Ae(e, t) {
        return t
          ? e.chats.get(t.chat).then((n) => {
              var r;
              if (n) {
                var a,
                  o = n.jid,
                  l = (0, u.e)(t) && t.media,
                  c = (0, u.k)(t) && t.hasPreview,
                  d = null == (r = t.quoted) ? void 0 : r.hasPreview;
                if (!l && !c && !d)
                  return (0, f.e)({
                    jid: o,
                    dbMsg: t,
                    preview: null,
                    dbMedia: null,
                    quotePreview: null,
                  });
                a =
                  l && (0, s.e)(t)
                    ? e.previews
                        .get((0, _.B)(l))
                        .then((n) => (n ? n.preview : le(e, t)))
                    : le(e, t);
                var p = l ? be(e, l) : null,
                  v = d ? e.previews.get((0, _.E)(t.id)) : null;
                return (0, f.c)([p, a, v]).then((e) => {
                  var n = i()(e, 3),
                    r = n[0],
                    a = n[1],
                    u = n[2];
                  return {
                    jid: o,
                    dbMsg: t,
                    dbMedia: r,
                    preview: a,
                    quotePreview: null == u ? void 0 : u.preview,
                  };
                });
              }
            })
          : (0, f.e)(null);
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return i;
      });
      var r = n(289),
        i = class {
          constructor(e, t) {
            (this.BJ = e), (this.BK = t);
          }
          parse(e) {
            var t = new r.a(this.BJ, e);
            try {
              return { success: this.BK(t) };
            } catch (e) {
              if (e instanceof r.b) return { error: e };
              throw e;
            }
          }
          parseOrThrow(e) {
            var t = this.parse(e);
            if (t.error) throw new Error(String(t.error));
            return t.success;
          }
        };
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return r;
      }),
        n.d(t, "a", function () {
          return i;
        });
      var r = {
          SUCCESS: 0,
          ERR_NOMEM: -12,
          ERR_INVAL: -22,
          ERR_UNKNOWN: -1e3,
          ERR_DUPLICATE_MESSAGE: -1001,
          ERR_INVALID_KEY: -1002,
          ERR_INVALID_KEY_ID: -1003,
          ERR_INVALID_MAC: -1004,
          ERR_INVALID_MESSAGE: -1005,
          ERR_INVALID_VERSION: -1006,
          ERR_LEGACY_MESSAGE: -1007,
          ERR_NO_SESSION: -1008,
          ERR_STALE_KEY_EXCHANGE: -1009,
          ERR_UNTRUSTED_IDENTITY: -1010,
          ERR_VRF_SIG_VERIF_FAILED: -1011,
          ERR_INVALID_MAC_INVALID_CIPHER_KEY: -1012,
          ERR_INVALID_MAC_INVALID_CIPHER_KEY_NEW_CHAIN: -1013,
          ERR_UNKNOWN_INVALID_CIPHER_KEY: -1014,
          ERR_INVALID_PROTO_BUF: -1100,
          ERR_FP_VERSION_MISMATCH: -1200,
          ERR_FP_IDENT_MISMATCH: -1201,
          ERR_INVALID_SIGNED_PRE_KEY: -1300,
          ERR_SIGNED_PRE_KEY_ID_MISMATCH: -1301,
          ERR_INVALID_ONE_TIME_KEY: -1302,
          ERR_SIGNED_PRE_KEY_DESERIALIZATION: -1303,
          ERR_ONE_TIME_KEY_ID_MISMATCH: -1304,
          ERR_ONE_TIME_KEY_DESERIALIZATION: -1305,
          ERR_DECRYPTION_FAILED: -1306,
          ERR_DESERIALIZE_INVALID_PROTO_FORMAT: -1307,
          ERR_DESERIALIZE_RATCHET_KEY_BAD_FORMAT: -1308,
          ERR_DESERIALIZE_PK_INVALID_PROTO_FORMAT: -1309,
          ERR_DESERIALZE_PK_KEY_BAD_FORMAT: -1310,
          ERR_TOO_MANY_MESSAGES_IN_FUTURE: -1311,
          ERR_EMPTY_VERSION_CONTENT_SUFFIX: -1312,
          ERR_CONTENT_EXCEEDED_EXPECTED_LENGTH: -1313,
          ERR_GRP_INVALID_PROTO_FORMAT: -1314,
          ERR_GRP_INVALID_KEY_FORMAT: -1315,
          ERR_GRP_VERSION_CONTENT_EMPTY: -1316,
          ERR_GRP_INVALID_VERSION_CONTENT_LENGTH: -1317,
          ERR_GRP_SENDER_KEY_INVALID_PROTO_FORMAT: -1318,
          ERR_GRP_SENDER_KEY_PROTO_ERROR: -1319,
          ERR_GRP_TOO_MANY_MESSAGES_IN_FUTURE: -1320,
        },
        i = {
          errSignalNoSession: r.ERR_NO_SESSION,
          errSignalInvalidMsg: r.ERR_INVALID_MESSAGE,
          errSignalInvalidVersion: r.ERR_INVALID_VERSION,
          errSignalLegacyMsg: r.ERR_LEGACY_MESSAGE,
          errDuplicateMsg: r.ERR_DUPLICATE_MESSAGE,
          errSignalInvalidKey: r.ERR_INVALID_KEY,
          errSignalInvalidKeyId: r.ERR_INVALID_KEY_ID,
          errSignalInvalidSignedPreKey: r.ERR_INVALID_SIGNED_PRE_KEY,
          errSignalSignedPreKeyIdMismatch: r.ERR_SIGNED_PRE_KEY_ID_MISMATCH,
          errSignalSignedPreKeyDeserialization:
            r.ERR_SIGNED_PRE_KEY_DESERIALIZATION,
          errSignalInvalidOneTimeKey: r.ERR_INVALID_ONE_TIME_KEY,
          errSignalOneTimeKeyMismatch: r.ERR_ONE_TIME_KEY_ID_MISMATCH,
          errSignalOneTimeKeyDeserialization:
            r.ERR_ONE_TIME_KEY_DESERIALIZATION,
          errInvalidMacWithDecryptedPlaintext: r.ERR_INVALID_MAC,
          errInvalidMacInvalidCipherKey: r.ERR_INVALID_MAC_INVALID_CIPHER_KEY,
          errInvalidMacInvalidCipherKeyNewChain:
            r.ERR_INVALID_MAC_INVALID_CIPHER_KEY_NEW_CHAIN,
          errUnknownInvalidCipherKey: r.ERR_UNKNOWN_INVALID_CIPHER_KEY,
          errRequestKeysNoKeys: r.ERR_NO_SESSION,
          errRequestKeysParsingFailed: r.ERR_UNKNOWN,
          errSignalDecryptionFailed: r.ERR_DECRYPTION_FAILED,
          errSignalDeserializeInvalidProtoFormat:
            r.ERR_DESERIALIZE_INVALID_PROTO_FORMAT,
          errSignalDeserializeRatchetKeyBadFormat:
            r.ERR_DESERIALIZE_RATCHET_KEY_BAD_FORMAT,
          errSignalDeserializePkInvalidProtoFormat:
            r.ERR_DESERIALIZE_PK_INVALID_PROTO_FORMAT,
          errSignalDeserializePkKeyBadFormat:
            r.ERR_DESERIALZE_PK_KEY_BAD_FORMAT,
          errSignalTooManyMessagesInFuture: r.ERR_TOO_MANY_MESSAGES_IN_FUTURE,
          errSignalEmptyVersionContentSuffix:
            r.ERR_EMPTY_VERSION_CONTENT_SUFFIX,
          errSignalContentExceededExpectedLength:
            r.ERR_CONTENT_EXCEEDED_EXPECTED_LENGTH,
          errSignalGrpInvalidProtoFormat: r.ERR_GRP_INVALID_PROTO_FORMAT,
          errSignalGrpInvalidKeyFormat: r.ERR_GRP_INVALID_KEY_FORMAT,
          errSignalGrpVersionContentEmpty: r.ERR_GRP_VERSION_CONTENT_EMPTY,
          errSignalGrpInvalidVersionContentLength:
            r.ERR_GRP_INVALID_VERSION_CONTENT_LENGTH,
          errSignalGrpSenderKeyInvalidProtoFormat:
            r.ERR_GRP_SENDER_KEY_INVALID_PROTO_FORMAT,
          errSignalGrpSenderKeyProtoError: r.ERR_GRP_SENDER_KEY_PROTO_ERROR,
          errSignalGrpTooManyMessagesInFuture:
            r.ERR_GRP_TOO_MANY_MESSAGES_IN_FUTURE,
          errTooManySessionSaveRetries: r.ERR_NO_SESSION,
          errCryptoDeserialization: r.ERR_DECRYPTION_FAILED,
          errLoadSenderKeySession: r.ERR_NO_SESSION,
        };
    },
    function (e, t, n) {
      n.d(t, "d", function () {
        return u;
      }),
        n.d(t, "e", function () {
          return s;
        }),
        n.d(t, "a", function () {
          return c;
        }),
        n.d(t, "c", function () {
          return d;
        }),
        n.d(t, "h", function () {
          return f;
        }),
        n.d(t, "g", function () {
          return v;
        }),
        n.d(t, "f", function () {
          return ue;
        }),
        n.d(t, "i", function () {
          return lt;
        }),
        n.d(t, "b", function () {
          return ft;
        });
      var r = n(0),
        i = n(136),
        a = n(439),
        o = {
          UPLOAD_STICKER: 0,
          SEND_RECENT_STICKER_BOOTSTRAP: 1,
          GENERATE_LINK_PREVIEW: 2,
        },
        u = {
          REVOKE: 0,
          EPHEMERAL_SETTING: 3,
          EPHEMERAL_SYNC_RESPONSE: 4,
          HISTORY_SYNC_NOTIFICATION: 5,
          APP_STATE_SYNC_KEY_SHARE: 6,
          APP_STATE_SYNC_KEY_REQUEST: 7,
          MSG_FANOUT_BACKFILL_REQUEST: 8,
          INITIAL_SECURITY_NOTIFICATION_SETTING_SYNC: 9,
          APP_STATE_FATAL_EXCEPTION_NOTIFICATION: 10,
          SHARE_PHONE_NUMBER: 11,
          MESSAGE_EDIT: 14,
          PEER_DATA_OPERATION_REQUEST_MESSAGE: 16,
          PEER_DATA_OPERATION_REQUEST_RESPONSE_MESSAGE: 17,
        },
        s = { NONE: 0, GIPHY: 1, TENOR: 2 },
        l = { DEFAULT: 0, PARENT: 1, SUB: 2, DEFAULT_SUB: 3 },
        c = { CHANGED_IN_CHAT: 0, INITIATED_BY_ME: 1, INITIATED_BY_OTHER: 2 },
        d = { UNKNOWN: 0, KEEP_FOR_ALL: 1, UNDO_KEEP_FOR_ALL: 2 },
        f = Object.assign({}, null),
        _ = Object.assign({}, null),
        p = Object.assign({}, null),
        v = Object.assign({}, null),
        h = Object.assign({}, null),
        m = Object.assign({}, null),
        g = Object.assign({}, null),
        y = Object.assign({}, null),
        b = Object.assign({}, null),
        w = Object.assign({}, null),
        O = Object.assign({}, null),
        E = Object.assign({}, null),
        I = Object.assign({}, null),
        S = Object.assign({}, null),
        k = Object.assign({}, null),
        L = Object.assign({}, null),
        G = Object.assign({}, null),
        M = Object.assign({}, null),
        A = Object.assign({}, null),
        P = Object.assign({}, null),
        T = Object.assign({}, null),
        N = Object.assign({}, null),
        C = Object.assign({}, null),
        R = Object.assign({}, null),
        x = Object.assign({}, null),
        D = Object.assign({}, null),
        U = Object.assign({}, null),
        j = Object.assign({}, null),
        $ = Object.assign({}, null),
        F = Object.assign({}, null),
        B = Object.assign({}, null),
        V = Object.assign({}, null),
        K = Object.assign({}, null),
        H = Object.assign({}, null),
        q = Object.assign({}, null),
        z = Object.assign({}, null),
        W = Object.assign({}, null),
        J = Object.assign({}, null),
        Y = Object.assign({}, null),
        Q = Object.assign({}, null),
        Z = Object.assign({}, null),
        X = Object.assign({}, null),
        ee = Object.assign({}, null),
        te = Object.assign({}, null),
        ne = Object.assign({}, null),
        re = Object.assign({}, null),
        ie = Object.assign({}, null),
        ae = Object.assign({}, null),
        oe = Object.assign({}, null),
        ue = Object.assign({}, null),
        se = Object.assign({}, null),
        le = Object.assign({}, null),
        ce = Object.assign({}, null),
        de = Object.assign({}, null),
        fe = Object.assign({}, null),
        _e = Object.assign({}, null),
        pe = Object.assign({}, null),
        ve = Object.assign({}, null),
        he = Object.assign({}, null),
        me = Object.assign({}, null),
        ge = Object.assign({}, null),
        ye = Object.assign({}, null),
        be = Object.assign({}, null),
        we = Object.assign({}, null),
        Oe = Object.assign({}, null),
        Ee = Object.assign({}, null),
        Ie = Object.assign({}, null),
        Se = Object.assign({}, null),
        ke = Object.assign({}, null),
        Le = Object.assign({}, null),
        Ge = Object.assign({}, null),
        Me = Object.assign({}, null),
        Ae = Object.assign({}, null),
        Pe = Object.assign({}, null),
        Te = Object.assign({}, null),
        Ne = Object.assign({}, null),
        Ce = Object.assign({}, null),
        Re = Object.assign({}, null),
        xe = Object.assign({}, null),
        De = Object.assign({}, null),
        Ue = Object.assign({}, null),
        je = Object.assign({}, null),
        $e = Object.assign({}, null),
        Fe = Object.assign({}, null),
        Be = Object.assign({}, null),
        Ve = Object.assign({}, null),
        Ke = Object.assign({}, null),
        He = Object.assign({}, null),
        qe = Object.assign({}, null),
        ze = Object.assign({}, null),
        We = Object.assign({}, null),
        Je = Object.assign({}, null),
        Ye = Object.assign({}, null),
        Qe = Object.assign({}, null),
        Ze = Object.assign({}, null),
        Xe = Object.assign({}, null),
        et = Object.assign({}, null),
        tt = Object.assign({}, null),
        nt = Object.assign({}, null),
        rt = Object.assign({}, null),
        it = Object.assign({}, null),
        at = Object.assign({}, null),
        ot = Object.assign({}, null),
        ut = Object.assign({}, null),
        st = Object.assign({}, null),
        lt = Object.assign({}, null),
        ct = Object.assign({}, null),
        dt = Object.assign({}, null),
        ft = Object.assign({}, null),
        _t = Object.assign({}, null);
      (f.internalSpec = {
        conversation: [1, r.d.STRING],
        senderKeyDistributionMessage: [2, r.d.MESSAGE, qe],
        imageMessage: [3, r.d.MESSAGE, He],
        contactMessage: [4, r.d.MESSAGE, Ve],
        locationMessage: [5, r.d.MESSAGE, Be],
        extendedTextMessage: [6, r.d.MESSAGE, Fe],
        documentMessage: [7, r.d.MESSAGE, $e],
        audioMessage: [8, r.d.MESSAGE, je],
        videoMessage: [9, r.d.MESSAGE, Ue],
        call: [10, r.d.MESSAGE, De],
        chat: [11, r.d.MESSAGE, xe],
        protocolMessage: [12, r.d.MESSAGE, Re],
        contactsArrayMessage: [13, r.d.MESSAGE, ye],
        highlyStructuredMessage: [14, r.d.MESSAGE, _e],
        fastRatchetKeySenderKeyDistributionMessage: [15, r.d.MESSAGE, qe],
        sendPaymentMessage: [16, r.d.MESSAGE, fe],
        liveLocationMessage: [18, r.d.MESSAGE, ue],
        requestPaymentMessage: [22, r.d.MESSAGE, de],
        declinePaymentRequestMessage: [23, r.d.MESSAGE, ce],
        cancelPaymentRequestMessage: [24, r.d.MESSAGE, le],
        templateMessage: [25, r.d.MESSAGE, re],
        stickerMessage: [26, r.d.MESSAGE, oe],
        groupInviteMessage: [28, r.d.MESSAGE, P],
        templateButtonReplyMessage: [29, r.d.MESSAGE, ne],
        productMessage: [30, r.d.MESSAGE, X],
        deviceSentMessage: [31, r.d.MESSAGE, M],
        messageContextInfo: [35, r.d.MESSAGE, Ye],
        listMessage: [36, r.d.MESSAGE, H],
        viewOnceMessage: [37, r.d.MESSAGE, G],
        orderMessage: [38, r.d.MESSAGE, Z],
        listResponseMessage: [39, r.d.MESSAGE, V],
        ephemeralMessage: [40, r.d.MESSAGE, G],
        invoiceMessage: [41, r.d.MESSAGE, Ke],
        buttonsMessage: [42, r.d.MESSAGE, I],
        buttonsResponseMessage: [43, r.d.MESSAGE, E],
        paymentInviteMessage: [44, r.d.MESSAGE, se],
        interactiveMessage: [45, r.d.MESSAGE, R],
        reactionMessage: [46, r.d.MESSAGE, O],
        stickerSyncRmrMessage: [47, r.d.MESSAGE, w],
        interactiveResponseMessage: [48, r.d.MESSAGE, T],
        pollCreationMessage: [49, r.d.MESSAGE, y],
        pollUpdateMessage: [50, r.d.MESSAGE, g],
        keepInChatMessage: [51, r.d.MESSAGE, p],
        documentWithCaptionMessage: [53, r.d.MESSAGE, G],
        requestPhoneNumberMessage: [54, r.d.MESSAGE, A],
        viewOnceMessageV2: [55, r.d.MESSAGE, G],
        encReactionMessage: [56, r.d.MESSAGE, _],
        editedMessage: [58, r.d.MESSAGE, G],
        viewOnceMessageV2Extension: [59, r.d.MESSAGE, G],
      }),
        (_.internalSpec = {
          targetMessageKey: [1, r.d.MESSAGE, i.a],
          encPayload: [2, r.d.BYTES],
          encIv: [3, r.d.BYTES],
        }),
        (p.internalSpec = {
          key: [1, r.d.MESSAGE, i.a],
          keepType: [2, r.d.ENUM, d],
          timestampMs: [3, r.d.INT64],
        }),
        (v.internalSpec = { selectedOptions: [1, r.b.REPEATED | r.d.BYTES] }),
        (h.internalSpec = {
          encPayload: [1, r.d.BYTES],
          encIv: [2, r.d.BYTES],
        }),
        (m.internalSpec = {}),
        (g.internalSpec = {
          pollCreationMessageKey: [1, r.d.MESSAGE, i.a],
          vote: [2, r.d.MESSAGE, h],
          metadata: [3, r.d.MESSAGE, m],
          senderTimestampMs: [4, r.d.INT64],
        }),
        (y.internalSpec = {
          encKey: [1, r.d.BYTES],
          name: [2, r.d.STRING],
          options: [3, r.b.REPEATED | r.d.MESSAGE, b],
          selectableOptionsCount: [4, r.d.UINT32],
          contextInfo: [5, r.d.MESSAGE, ze],
        }),
        (b.internalSpec = { optionName: [1, r.d.STRING] }),
        (w.internalSpec = {
          filehash: [1, r.b.REPEATED | r.d.STRING],
          rmrSource: [2, r.d.STRING],
          requestTimestamp: [3, r.d.INT64],
        }),
        (O.internalSpec = {
          key: [1, r.d.MESSAGE, i.a],
          text: [2, r.d.STRING],
          groupingKey: [3, r.d.STRING],
          senderTimestampMs: [4, r.d.INT64],
        }),
        (E.internalSpec = {
          selectedButtonId: [1, r.d.STRING],
          selectedDisplayText: [2, r.d.STRING],
          contextInfo: [3, r.d.MESSAGE, ze],
          type: [4, r.d.ENUM, { UNKNOWN: 0, DISPLAY_TEXT: 1 }],
          __oneofs__: { response: ["selectedDisplayText"] },
        }),
        (I.internalSpec = {
          text: [1, r.d.STRING],
          documentMessage: [2, r.d.MESSAGE, $e],
          imageMessage: [3, r.d.MESSAGE, He],
          videoMessage: [4, r.d.MESSAGE, Ue],
          locationMessage: [5, r.d.MESSAGE, Be],
          contentText: [6, r.d.STRING],
          footerText: [7, r.d.STRING],
          contextInfo: [8, r.d.MESSAGE, ze],
          buttons: [9, r.b.REPEATED | r.d.MESSAGE, S],
          headerType: [
            10,
            r.d.ENUM,
            {
              UNKNOWN: 0,
              EMPTY: 1,
              TEXT: 2,
              DOCUMENT: 3,
              IMAGE: 4,
              VIDEO: 5,
              LOCATION: 6,
            },
          ],
          __oneofs__: {
            header: [
              "text",
              "documentMessage",
              "imageMessage",
              "videoMessage",
              "locationMessage",
            ],
          },
        }),
        (S.internalSpec = {
          buttonId: [1, r.d.STRING],
          buttonText: [2, r.d.MESSAGE, L],
          type: [3, r.d.ENUM, { UNKNOWN: 0, RESPONSE: 1, NATIVE_FLOW: 2 }],
          nativeFlowInfo: [4, r.d.MESSAGE, k],
        }),
        (k.internalSpec = {
          name: [1, r.d.STRING],
          paramsJson: [2, r.d.STRING],
        }),
        (L.internalSpec = { displayText: [1, r.d.STRING] }),
        (G.internalSpec = { message: [1, r.d.MESSAGE, f] }),
        (M.internalSpec = {
          destinationJid: [1, r.d.STRING],
          message: [2, r.d.MESSAGE, f],
          phash: [3, r.d.STRING],
        }),
        (A.internalSpec = { contextInfo: [1, r.d.MESSAGE, ze] }),
        (P.internalSpec = {
          groupJid: [1, r.d.STRING],
          inviteCode: [2, r.d.STRING],
          inviteExpiration: [3, r.d.INT64],
          groupName: [4, r.d.STRING],
          jpegThumbnail: [5, r.d.BYTES],
          caption: [6, r.d.STRING],
          contextInfo: [7, r.d.MESSAGE, ze],
          groupType: [8, r.d.ENUM, { DEFAULT: 0, PARENT: 1 }],
        }),
        (T.internalSpec = {
          body: [1, r.d.MESSAGE, C],
          nativeFlowResponseMessage: [2, r.d.MESSAGE, N],
          contextInfo: [15, r.d.MESSAGE, ze],
          __oneofs__: {
            interactiveResponseMessage: ["nativeFlowResponseMessage"],
          },
        }),
        (N.internalDefaults = { version: 1 }),
        (N.internalSpec = {
          name: [1, r.d.STRING],
          paramsJson: [2, r.d.STRING],
          version: [3, r.d.INT32],
        }),
        (C.internalSpec = { text: [1, r.d.STRING] }),
        (R.internalSpec = {
          header: [1, r.d.MESSAGE, B],
          body: [2, r.d.MESSAGE, F],
          footer: [3, r.d.MESSAGE, $],
          shopStorefrontMessage: [4, r.d.MESSAGE, j],
          collectionMessage: [5, r.d.MESSAGE, U],
          nativeFlowMessage: [6, r.d.MESSAGE, x],
          contextInfo: [15, r.d.MESSAGE, ze],
          __oneofs__: {
            interactiveMessage: [
              "shopStorefrontMessage",
              "collectionMessage",
              "nativeFlowMessage",
            ],
          },
        }),
        (x.internalDefaults = { messageVersion: 1 }),
        (x.internalSpec = {
          buttons: [1, r.b.REPEATED | r.d.MESSAGE, D],
          messageParamsJson: [2, r.d.STRING],
          messageVersion: [3, r.d.INT32],
        }),
        (D.internalSpec = {
          name: [1, r.d.STRING],
          buttonParamsJson: [2, r.d.STRING],
        }),
        (U.internalDefaults = { messageVersion: 1 }),
        (U.internalSpec = {
          bizJid: [1, r.d.STRING],
          id: [2, r.d.STRING],
          messageVersion: [3, r.d.INT32],
        }),
        (j.internalDefaults = { messageVersion: 1 }),
        (j.internalSpec = {
          id: [1, r.d.STRING],
          surface: [2, r.d.ENUM, { UNKNOWN_SURFACE: 0, FB: 1, IG: 2, WA: 3 }],
          messageVersion: [3, r.d.INT32],
        }),
        ($.internalSpec = { text: [1, r.d.STRING] }),
        (F.internalSpec = { text: [1, r.d.STRING] }),
        (B.internalSpec = {
          title: [1, r.d.STRING],
          subtitle: [2, r.d.STRING],
          documentMessage: [3, r.d.MESSAGE, $e],
          imageMessage: [4, r.d.MESSAGE, He],
          jpegThumbnail: [6, r.d.BYTES],
          videoMessage: [7, r.d.MESSAGE, Ue],
          hasMediaAttachment: [5, r.d.BOOL],
          __oneofs__: {
            media: [
              "documentMessage",
              "imageMessage",
              "jpegThumbnail",
              "videoMessage",
            ],
          },
        }),
        (V.internalSpec = {
          title: [1, r.d.STRING],
          listType: [2, r.d.ENUM, { UNKNOWN: 0, SINGLE_SELECT: 1 }],
          singleSelectReply: [3, r.d.MESSAGE, K],
          contextInfo: [4, r.d.MESSAGE, ze],
          description: [5, r.d.STRING],
        }),
        (K.internalSpec = { selectedRowId: [1, r.d.STRING] }),
        (H.internalSpec = {
          title: [1, r.d.STRING],
          description: [2, r.d.STRING],
          buttonText: [3, r.d.STRING],
          listType: [
            4,
            r.d.ENUM,
            { UNKNOWN: 0, SINGLE_SELECT: 1, PRODUCT_LIST: 2 },
          ],
          sections: [5, r.b.REPEATED | r.d.MESSAGE, Y],
          productListInfo: [6, r.d.MESSAGE, q],
          footerText: [7, r.d.STRING],
          contextInfo: [8, r.d.MESSAGE, ze],
        }),
        (q.internalSpec = {
          productSections: [1, r.b.REPEATED | r.d.MESSAGE, W],
          headerImage: [2, r.d.MESSAGE, z],
          businessOwnerJid: [3, r.d.STRING],
        }),
        (z.internalSpec = {
          productId: [1, r.d.STRING],
          jpegThumbnail: [2, r.d.BYTES],
        }),
        (W.internalSpec = {
          title: [1, r.d.STRING],
          products: [2, r.b.REPEATED | r.d.MESSAGE, J],
        }),
        (J.internalSpec = { productId: [1, r.d.STRING] }),
        (Y.internalSpec = {
          title: [1, r.d.STRING],
          rows: [2, r.b.REPEATED | r.d.MESSAGE, Q],
        }),
        (Q.internalSpec = {
          title: [1, r.d.STRING],
          description: [2, r.d.STRING],
          rowId: [3, r.d.STRING],
        }),
        (Z.internalSpec = {
          orderId: [1, r.d.STRING],
          thumbnail: [2, r.d.BYTES],
          itemCount: [3, r.d.INT32],
          status: [4, r.d.ENUM, { INQUIRY: 1 }],
          surface: [5, r.d.ENUM, { CATALOG: 1 }],
          message: [6, r.d.STRING],
          orderTitle: [7, r.d.STRING],
          sellerJid: [8, r.d.STRING],
          token: [9, r.d.STRING],
          totalAmount1000: [10, r.d.INT64],
          totalCurrencyCode: [11, r.d.STRING],
          contextInfo: [17, r.d.MESSAGE, ze],
        }),
        (X.internalSpec = {
          product: [1, r.d.MESSAGE, ee],
          businessOwnerJid: [2, r.d.STRING],
          catalog: [4, r.d.MESSAGE, te],
          body: [5, r.d.STRING],
          footer: [6, r.d.STRING],
          contextInfo: [17, r.d.MESSAGE, ze],
        }),
        (ee.internalSpec = {
          productImage: [1, r.d.MESSAGE, He],
          productId: [2, r.d.STRING],
          title: [3, r.d.STRING],
          description: [4, r.d.STRING],
          currencyCode: [5, r.d.STRING],
          priceAmount1000: [6, r.d.INT64],
          retailerId: [7, r.d.STRING],
          url: [8, r.d.STRING],
          productImageCount: [9, r.d.UINT32],
          firstImageId: [11, r.d.STRING],
          salePriceAmount1000: [12, r.d.INT64],
        }),
        (te.internalSpec = {
          catalogImage: [1, r.d.MESSAGE, He],
          title: [2, r.d.STRING],
          description: [3, r.d.STRING],
        }),
        (ne.internalSpec = {
          selectedId: [1, r.d.STRING],
          selectedDisplayText: [2, r.d.STRING],
          contextInfo: [3, r.d.MESSAGE, ze],
          selectedIndex: [4, r.d.UINT32],
        }),
        (re.internalSpec = {
          fourRowTemplate: [1, r.d.MESSAGE, ae],
          hydratedFourRowTemplate: [2, r.d.MESSAGE, ie],
          interactiveMessageTemplate: [5, r.d.MESSAGE, R],
          contextInfo: [3, r.d.MESSAGE, ze],
          hydratedTemplate: [4, r.d.MESSAGE, ie],
          templateId: [9, r.d.STRING],
          __oneofs__: {
            format: [
              "fourRowTemplate",
              "hydratedFourRowTemplate",
              "interactiveMessageTemplate",
            ],
          },
        }),
        (ie.internalSpec = {
          documentMessage: [1, r.d.MESSAGE, $e],
          hydratedTitleText: [2, r.d.STRING],
          imageMessage: [3, r.d.MESSAGE, He],
          videoMessage: [4, r.d.MESSAGE, Ue],
          locationMessage: [5, r.d.MESSAGE, Be],
          hydratedContentText: [6, r.d.STRING],
          hydratedFooterText: [7, r.d.STRING],
          hydratedButtons: [8, r.b.REPEATED | r.d.MESSAGE, at],
          templateId: [9, r.d.STRING],
          __oneofs__: {
            title: [
              "documentMessage",
              "hydratedTitleText",
              "imageMessage",
              "videoMessage",
              "locationMessage",
            ],
          },
        }),
        (ae.internalSpec = {
          documentMessage: [1, r.d.MESSAGE, $e],
          highlyStructuredMessage: [2, r.d.MESSAGE, _e],
          imageMessage: [3, r.d.MESSAGE, He],
          videoMessage: [4, r.d.MESSAGE, Ue],
          locationMessage: [5, r.d.MESSAGE, Be],
          content: [6, r.d.MESSAGE, _e],
          footer: [7, r.d.MESSAGE, _e],
          buttons: [8, r.b.REPEATED | r.d.MESSAGE, tt],
          __oneofs__: {
            title: [
              "documentMessage",
              "highlyStructuredMessage",
              "imageMessage",
              "videoMessage",
              "locationMessage",
            ],
          },
        }),
        (oe.internalSpec = {
          url: [1, r.d.STRING],
          fileSha256: [2, r.d.BYTES],
          fileEncSha256: [3, r.d.BYTES],
          mediaKey: [4, r.d.BYTES],
          mimetype: [5, r.d.STRING],
          height: [6, r.d.UINT32],
          width: [7, r.d.UINT32],
          directPath: [8, r.d.STRING],
          fileLength: [9, r.d.UINT64],
          mediaKeyTimestamp: [10, r.d.INT64],
          firstFrameLength: [11, r.d.UINT32],
          firstFrameSidecar: [12, r.d.BYTES],
          isAnimated: [13, r.d.BOOL],
          pngThumbnail: [16, r.d.BYTES],
          contextInfo: [17, r.d.MESSAGE, ze],
          stickerSentTs: [18, r.d.INT64],
          isAvatar: [19, r.d.BOOL],
        }),
        (ue.internalSpec = {
          degreesLatitude: [1, r.d.DOUBLE],
          degreesLongitude: [2, r.d.DOUBLE],
          accuracyInMeters: [3, r.d.UINT32],
          speedInMps: [4, r.d.FLOAT],
          degreesClockwiseFromMagneticNorth: [5, r.d.UINT32],
          caption: [6, r.d.STRING],
          sequenceNumber: [7, r.d.INT64],
          timeOffset: [8, r.d.UINT32],
          jpegThumbnail: [16, r.d.BYTES],
          contextInfo: [17, r.d.MESSAGE, ze],
        }),
        (se.internalSpec = {
          serviceType: [1, r.d.ENUM, { UNKNOWN: 0, FBPAY: 1, NOVI: 2, UPI: 3 }],
          expiryTimestamp: [2, r.d.INT64],
        }),
        (le.internalSpec = { key: [1, r.d.MESSAGE, i.a] }),
        (ce.internalSpec = { key: [1, r.d.MESSAGE, i.a] }),
        (de.internalSpec = {
          noteMessage: [4, r.d.MESSAGE, f],
          currencyCodeIso4217: [1, r.d.STRING],
          amount1000: [2, r.d.UINT64],
          requestFrom: [3, r.d.STRING],
          expiryTimestamp: [5, r.d.INT64],
          amount: [6, r.d.MESSAGE, lt],
          background: [7, r.d.MESSAGE, ct],
        }),
        (fe.internalSpec = {
          noteMessage: [2, r.d.MESSAGE, f],
          requestMessageKey: [3, r.d.MESSAGE, i.a],
          background: [4, r.d.MESSAGE, ct],
        }),
        (_e.internalSpec = {
          namespace: [1, r.d.STRING],
          elementName: [2, r.d.STRING],
          params: [3, r.b.REPEATED | r.d.STRING],
          fallbackLg: [4, r.d.STRING],
          fallbackLc: [5, r.d.STRING],
          localizableParams: [6, r.b.REPEATED | r.d.MESSAGE, pe],
          deterministicLg: [7, r.d.STRING],
          deterministicLc: [8, r.d.STRING],
          hydratedHsm: [9, r.d.MESSAGE, re],
        }),
        (pe.internalSpec = {
          default: [1, r.d.STRING],
          currency: [2, r.d.MESSAGE, ge],
          dateTime: [3, r.d.MESSAGE, ve],
          __oneofs__: { paramOneof: ["currency", "dateTime"] },
        }),
        (ve.internalSpec = {
          component: [1, r.d.MESSAGE, me],
          unixEpoch: [2, r.d.MESSAGE, he],
          __oneofs__: { datetimeOneof: ["component", "unixEpoch"] },
        }),
        (he.internalSpec = { timestamp: [1, r.d.INT64] }),
        (me.internalSpec = {
          dayOfWeek: [
            1,
            r.d.ENUM,
            {
              MONDAY: 1,
              TUESDAY: 2,
              WEDNESDAY: 3,
              THURSDAY: 4,
              FRIDAY: 5,
              SATURDAY: 6,
              SUNDAY: 7,
            },
          ],
          year: [2, r.d.UINT32],
          month: [3, r.d.UINT32],
          dayOfMonth: [4, r.d.UINT32],
          hour: [5, r.d.UINT32],
          minute: [6, r.d.UINT32],
          calendar: [7, r.d.ENUM, { GREGORIAN: 1, SOLAR_HIJRI: 2 }],
        }),
        (ge.internalSpec = {
          currencyCode: [1, r.d.STRING],
          amount1000: [2, r.d.INT64],
        }),
        (ye.internalSpec = {
          displayName: [1, r.d.STRING],
          contacts: [2, r.b.REPEATED | r.d.MESSAGE, Ve],
          contextInfo: [17, r.d.MESSAGE, ze],
        }),
        (be.internalSpec = { securityNotificationEnabled: [1, r.d.BOOL] }),
        (we.internalSpec = {
          peerDataOperationRequestType: [1, r.d.ENUM, o],
          stanzaId: [2, r.d.STRING],
          peerDataOperationResult: [3, r.b.REPEATED | r.d.MESSAGE, Oe],
        }),
        (Oe.internalSpec = {
          mediaUploadResult: [1, r.d.ENUM, a.a],
          stickerMessage: [2, r.d.MESSAGE, oe],
          linkPreviewResponse: [3, r.d.MESSAGE, Ee],
        }),
        (Ee.internalSpec = {
          url: [1, r.d.STRING],
          title: [2, r.d.STRING],
          description: [3, r.d.STRING],
          thumbData: [4, r.d.BYTES],
          canonicalUrl: [5, r.d.STRING],
          matchText: [6, r.d.STRING],
          previewType: [7, r.d.STRING],
        }),
        (Ie.internalSpec = {
          peerDataOperationRequestType: [1, r.d.ENUM, o],
          requestStickerReupload: [2, r.b.REPEATED | r.d.MESSAGE, ke],
          requestUrlPreview: [3, r.b.REPEATED | r.d.MESSAGE, Se],
        }),
        (Se.internalSpec = { url: [1, r.d.STRING] }),
        (ke.internalSpec = { fileSha256: [1, r.d.STRING] }),
        (Le.internalSpec = {
          collectionNames: [1, r.b.REPEATED | r.d.STRING],
          timestamp: [2, r.d.INT64],
        }),
        (Ge.internalSpec = { keyIds: [1, r.b.REPEATED | r.d.MESSAGE, Te] }),
        (Me.internalSpec = { keys: [1, r.b.REPEATED | r.d.MESSAGE, Ne] }),
        (Ae.internalSpec = {
          keyData: [1, r.d.BYTES],
          fingerprint: [2, r.d.MESSAGE, Pe],
          timestamp: [3, r.d.INT64],
        }),
        (Pe.internalSpec = {
          rawId: [1, r.d.UINT32],
          currentIndex: [2, r.d.UINT32],
          deviceIndexes: [3, r.b.REPEATED | r.b.PACKED | r.d.UINT32],
        }),
        (Te.internalSpec = { keyId: [1, r.d.BYTES] }),
        (Ne.internalSpec = {
          keyId: [1, r.d.MESSAGE, Te],
          keyData: [2, r.d.MESSAGE, Ae],
        }),
        (Ce.internalSpec = {
          fileSha256: [1, r.d.BYTES],
          fileLength: [2, r.d.UINT64],
          mediaKey: [3, r.d.BYTES],
          fileEncSha256: [4, r.d.BYTES],
          directPath: [5, r.d.STRING],
          syncType: [
            6,
            r.d.ENUM,
            {
              INITIAL_BOOTSTRAP: 0,
              INITIAL_STATUS_V3: 1,
              FULL: 2,
              RECENT: 3,
              PUSH_NAME: 4,
              NON_BLOCKING_DATA: 5,
            },
          ],
          chunkOrder: [7, r.d.UINT32],
          originalMessageId: [8, r.d.STRING],
          progress: [9, r.d.UINT32],
          oldestMsgInChunkTimestampSec: [10, r.d.INT64],
        }),
        (Re.internalSpec = {
          key: [1, r.d.MESSAGE, i.a],
          type: [2, r.d.ENUM, u],
          ephemeralExpiration: [4, r.d.UINT32],
          ephemeralSettingTimestamp: [5, r.d.INT64],
          historySyncNotification: [6, r.d.MESSAGE, Ce],
          appStateSyncKeyShare: [7, r.d.MESSAGE, Me],
          appStateSyncKeyRequest: [8, r.d.MESSAGE, Ge],
          initialSecurityNotificationSettingSync: [9, r.d.MESSAGE, be],
          appStateFatalExceptionNotification: [10, r.d.MESSAGE, Le],
          disappearingMode: [11, r.d.MESSAGE, ft],
          editedMessage: [14, r.d.MESSAGE, f],
          timestampMs: [15, r.d.INT64],
          peerDataOperationRequestMessage: [16, r.d.MESSAGE, Ie],
          peerDataOperationRequestResponseMessage: [17, r.d.MESSAGE, we],
        }),
        (xe.internalSpec = {
          displayName: [1, r.d.STRING],
          id: [2, r.d.STRING],
        }),
        (De.internalSpec = {
          callKey: [1, r.d.BYTES],
          conversionSource: [2, r.d.STRING],
          conversionData: [3, r.d.BYTES],
          conversionDelaySeconds: [4, r.d.UINT32],
        }),
        (Ue.internalSpec = {
          url: [1, r.d.STRING],
          mimetype: [2, r.d.STRING],
          fileSha256: [3, r.d.BYTES],
          fileLength: [4, r.d.UINT64],
          seconds: [5, r.d.UINT32],
          mediaKey: [6, r.d.BYTES],
          caption: [7, r.d.STRING],
          gifPlayback: [8, r.d.BOOL],
          height: [9, r.d.UINT32],
          width: [10, r.d.UINT32],
          fileEncSha256: [11, r.d.BYTES],
          interactiveAnnotations: [12, r.b.REPEATED | r.d.MESSAGE, Ze],
          directPath: [13, r.d.STRING],
          mediaKeyTimestamp: [14, r.d.INT64],
          jpegThumbnail: [16, r.d.BYTES],
          contextInfo: [17, r.d.MESSAGE, ze],
          streamingSidecar: [18, r.d.BYTES],
          gifAttribution: [19, r.d.ENUM, s],
          viewOnce: [20, r.d.BOOL],
          thumbnailDirectPath: [21, r.d.STRING],
          thumbnailSha256: [22, r.d.BYTES],
          thumbnailEncSha256: [23, r.d.BYTES],
          staticUrl: [24, r.d.STRING],
        }),
        (je.internalSpec = {
          url: [1, r.d.STRING],
          mimetype: [2, r.d.STRING],
          fileSha256: [3, r.d.BYTES],
          fileLength: [4, r.d.UINT64],
          seconds: [5, r.d.UINT32],
          ptt: [6, r.d.BOOL],
          mediaKey: [7, r.d.BYTES],
          fileEncSha256: [8, r.d.BYTES],
          directPath: [9, r.d.STRING],
          mediaKeyTimestamp: [10, r.d.INT64],
          contextInfo: [17, r.d.MESSAGE, ze],
          streamingSidecar: [18, r.d.BYTES],
          waveform: [19, r.d.BYTES],
          backgroundArgb: [20, r.d.FIXED32],
        }),
        ($e.internalSpec = {
          url: [1, r.d.STRING],
          mimetype: [2, r.d.STRING],
          title: [3, r.d.STRING],
          fileSha256: [4, r.d.BYTES],
          fileLength: [5, r.d.UINT64],
          pageCount: [6, r.d.UINT32],
          mediaKey: [7, r.d.BYTES],
          fileName: [8, r.d.STRING],
          fileEncSha256: [9, r.d.BYTES],
          directPath: [10, r.d.STRING],
          mediaKeyTimestamp: [11, r.d.INT64],
          contactVcard: [12, r.d.BOOL],
          thumbnailDirectPath: [13, r.d.STRING],
          thumbnailSha256: [14, r.d.BYTES],
          thumbnailEncSha256: [15, r.d.BYTES],
          jpegThumbnail: [16, r.d.BYTES],
          contextInfo: [17, r.d.MESSAGE, ze],
          thumbnailHeight: [18, r.d.UINT32],
          thumbnailWidth: [19, r.d.UINT32],
          caption: [20, r.d.STRING],
        }),
        (Fe.internalSpec = {
          text: [1, r.d.STRING],
          matchedText: [2, r.d.STRING],
          canonicalUrl: [4, r.d.STRING],
          description: [5, r.d.STRING],
          title: [6, r.d.STRING],
          textArgb: [7, r.d.FIXED32],
          backgroundArgb: [8, r.d.FIXED32],
          font: [
            9,
            r.d.ENUM,
            {
              SANS_SERIF: 0,
              SERIF: 1,
              NORICAN_REGULAR: 2,
              BRYNDAN_WRITE: 3,
              BEBASNEUE_REGULAR: 4,
              OSWALD_HEAVY: 5,
            },
          ],
          previewType: [10, r.d.ENUM, { NONE: 0, VIDEO: 1 }],
          jpegThumbnail: [16, r.d.BYTES],
          contextInfo: [17, r.d.MESSAGE, ze],
          doNotPlayInline: [18, r.d.BOOL],
          thumbnailDirectPath: [19, r.d.STRING],
          thumbnailSha256: [20, r.d.BYTES],
          thumbnailEncSha256: [21, r.d.BYTES],
          mediaKey: [22, r.d.BYTES],
          mediaKeyTimestamp: [23, r.d.INT64],
          thumbnailHeight: [24, r.d.UINT32],
          thumbnailWidth: [25, r.d.UINT32],
          inviteLinkGroupType: [26, r.d.ENUM, l],
          inviteLinkParentGroupSubjectV2: [27, r.d.STRING],
          inviteLinkParentGroupThumbnailV2: [28, r.d.BYTES],
          inviteLinkGroupTypeV2: [29, r.d.ENUM, l],
          viewOnce: [30, r.d.BOOL],
        }),
        (Be.internalSpec = {
          degreesLatitude: [1, r.d.DOUBLE],
          degreesLongitude: [2, r.d.DOUBLE],
          name: [3, r.d.STRING],
          address: [4, r.d.STRING],
          url: [5, r.d.STRING],
          isLive: [6, r.d.BOOL],
          accuracyInMeters: [7, r.d.UINT32],
          speedInMps: [8, r.d.FLOAT],
          degreesClockwiseFromMagneticNorth: [9, r.d.UINT32],
          comment: [11, r.d.STRING],
          jpegThumbnail: [16, r.d.BYTES],
          contextInfo: [17, r.d.MESSAGE, ze],
        }),
        (Ve.internalSpec = {
          displayName: [1, r.d.STRING],
          vcard: [16, r.d.STRING],
          contextInfo: [17, r.d.MESSAGE, ze],
        }),
        (Ke.internalSpec = {
          note: [1, r.d.STRING],
          token: [2, r.d.STRING],
          attachmentType: [3, r.d.ENUM, { IMAGE: 0, PDF: 1 }],
          attachmentMimetype: [4, r.d.STRING],
          attachmentMediaKey: [5, r.d.BYTES],
          attachmentMediaKeyTimestamp: [6, r.d.INT64],
          attachmentFileSha256: [7, r.d.BYTES],
          attachmentFileEncSha256: [8, r.d.BYTES],
          attachmentDirectPath: [9, r.d.STRING],
          attachmentJpegThumbnail: [10, r.d.BYTES],
        }),
        (He.internalSpec = {
          url: [1, r.d.STRING],
          mimetype: [2, r.d.STRING],
          caption: [3, r.d.STRING],
          fileSha256: [4, r.d.BYTES],
          fileLength: [5, r.d.UINT64],
          height: [6, r.d.UINT32],
          width: [7, r.d.UINT32],
          mediaKey: [8, r.d.BYTES],
          fileEncSha256: [9, r.d.BYTES],
          interactiveAnnotations: [10, r.b.REPEATED | r.d.MESSAGE, Ze],
          directPath: [11, r.d.STRING],
          mediaKeyTimestamp: [12, r.d.INT64],
          jpegThumbnail: [16, r.d.BYTES],
          contextInfo: [17, r.d.MESSAGE, ze],
          firstScanSidecar: [18, r.d.BYTES],
          firstScanLength: [19, r.d.UINT32],
          experimentGroupId: [20, r.d.UINT32],
          scansSidecar: [21, r.d.BYTES],
          scanLengths: [22, r.b.REPEATED | r.d.UINT32],
          midQualityFileSha256: [23, r.d.BYTES],
          midQualityFileEncSha256: [24, r.d.BYTES],
          viewOnce: [25, r.d.BOOL],
          thumbnailDirectPath: [26, r.d.STRING],
          thumbnailSha256: [27, r.d.BYTES],
          thumbnailEncSha256: [28, r.d.BYTES],
          staticUrl: [29, r.d.STRING],
        }),
        (qe.internalSpec = {
          groupId: [1, r.d.STRING],
          axolotlSenderKeyDistributionMessage: [2, r.d.BYTES],
        }),
        (ze.internalSpec = {
          stanzaId: [1, r.d.STRING],
          participant: [2, r.d.STRING],
          quotedMessage: [3, r.d.MESSAGE, f],
          remoteJid: [4, r.d.STRING],
          mentionedJid: [15, r.b.REPEATED | r.d.STRING],
          conversionSource: [18, r.d.STRING],
          conversionData: [19, r.d.BYTES],
          conversionDelaySeconds: [20, r.d.UINT32],
          forwardingScore: [21, r.d.UINT32],
          isForwarded: [22, r.d.BOOL],
          quotedAd: [23, r.d.MESSAGE, Je],
          placeholderKey: [24, r.d.MESSAGE, i.a],
          expiration: [25, r.d.UINT32],
          ephemeralSettingTimestamp: [26, r.d.INT64],
          ephemeralSharedSecret: [27, r.d.BYTES],
          externalAdReply: [28, r.d.MESSAGE, We],
          entryPointConversionSource: [29, r.d.STRING],
          entryPointConversionApp: [30, r.d.STRING],
          entryPointConversionDelaySeconds: [31, r.d.UINT32],
          disappearingMode: [32, r.d.MESSAGE, ft],
          actionLink: [33, r.d.MESSAGE, _t],
          groupSubject: [34, r.d.STRING],
          parentGroupJid: [35, r.d.STRING],
          trustBannerType: [37, r.d.STRING],
          trustBannerAction: [38, r.d.UINT32],
        }),
        (We.internalSpec = {
          title: [1, r.d.STRING],
          body: [2, r.d.STRING],
          mediaType: [3, r.d.ENUM, { NONE: 0, IMAGE: 1, VIDEO: 2 }],
          thumbnailUrl: [4, r.d.STRING],
          mediaUrl: [5, r.d.STRING],
          thumbnail: [6, r.d.BYTES],
          sourceType: [7, r.d.STRING],
          sourceId: [8, r.d.STRING],
          sourceUrl: [9, r.d.STRING],
          containsAutoReply: [10, r.d.BOOL],
          renderLargerThumbnail: [11, r.d.BOOL],
          showAdAttribution: [12, r.d.BOOL],
          ctwaClid: [13, r.d.STRING],
        }),
        (Je.internalSpec = {
          advertiserName: [1, r.d.STRING],
          mediaType: [2, r.d.ENUM, { NONE: 0, IMAGE: 1, VIDEO: 2 }],
          jpegThumbnail: [16, r.d.BYTES],
          caption: [17, r.d.STRING],
        }),
        (Ye.internalSpec = {
          deviceListMetadata: [1, r.d.MESSAGE, Qe],
          deviceListMetadataVersion: [2, r.d.INT32],
          messageSecret: [3, r.d.BYTES],
          paddingBytes: [4, r.d.BYTES],
        }),
        (Qe.internalSpec = {
          senderKeyHash: [1, r.d.BYTES],
          senderTimestamp: [2, r.d.UINT64],
          senderKeyIndexes: [3, r.b.REPEATED | r.b.PACKED | r.d.UINT32],
          recipientKeyHash: [8, r.d.BYTES],
          recipientTimestamp: [9, r.d.UINT64],
          recipientKeyIndexes: [10, r.b.REPEATED | r.b.PACKED | r.d.UINT32],
        }),
        (Ze.internalSpec = {
          polygonVertices: [1, r.b.REPEATED | r.d.MESSAGE, Xe],
          location: [2, r.d.MESSAGE, et],
          __oneofs__: { action: ["location"] },
        }),
        (Xe.internalSpec = {
          xDeprecated: [1, r.d.INT32],
          yDeprecated: [2, r.d.INT32],
          x: [3, r.d.DOUBLE],
          y: [4, r.d.DOUBLE],
        }),
        (et.internalSpec = {
          degreesLatitude: [1, r.d.DOUBLE],
          degreesLongitude: [2, r.d.DOUBLE],
          name: [3, r.d.STRING],
        }),
        (tt.internalSpec = {
          quickReplyButton: [1, r.d.MESSAGE, it],
          urlButton: [2, r.d.MESSAGE, rt],
          callButton: [3, r.d.MESSAGE, nt],
          index: [4, r.d.UINT32],
          __oneofs__: {
            button: ["quickReplyButton", "urlButton", "callButton"],
          },
        }),
        (nt.internalSpec = {
          displayText: [1, r.d.MESSAGE, _e],
          phoneNumber: [2, r.d.MESSAGE, _e],
        }),
        (rt.internalSpec = {
          displayText: [1, r.d.MESSAGE, _e],
          url: [2, r.d.MESSAGE, _e],
        }),
        (it.internalSpec = {
          displayText: [1, r.d.MESSAGE, _e],
          id: [2, r.d.STRING],
        }),
        (at.internalSpec = {
          quickReplyButton: [1, r.d.MESSAGE, st],
          urlButton: [2, r.d.MESSAGE, ut],
          callButton: [3, r.d.MESSAGE, ot],
          index: [4, r.d.UINT32],
          __oneofs__: {
            hydratedButton: ["quickReplyButton", "urlButton", "callButton"],
          },
        }),
        (ot.internalSpec = {
          displayText: [1, r.d.STRING],
          phoneNumber: [2, r.d.STRING],
        }),
        (ut.internalSpec = {
          displayText: [1, r.d.STRING],
          url: [2, r.d.STRING],
        }),
        (st.internalSpec = {
          displayText: [1, r.d.STRING],
          id: [2, r.d.STRING],
        }),
        (lt.internalSpec = {
          value: [1, r.d.INT64],
          offset: [2, r.d.UINT32],
          currencyCode: [3, r.d.STRING],
        }),
        (ct.internalSpec = {
          id: [1, r.d.STRING],
          fileLength: [2, r.d.UINT64],
          width: [3, r.d.UINT32],
          height: [4, r.d.UINT32],
          mimetype: [5, r.d.STRING],
          placeholderArgb: [6, r.d.FIXED32],
          textArgb: [7, r.d.FIXED32],
          subtextArgb: [8, r.d.FIXED32],
          mediaData: [9, r.d.MESSAGE, dt],
          type: [10, r.d.ENUM, { UNKNOWN: 0, DEFAULT: 1 }],
        }),
        (dt.internalSpec = {
          mediaKey: [1, r.d.BYTES],
          mediaKeyTimestamp: [2, r.d.INT64],
          fileSha256: [3, r.d.BYTES],
          fileEncSha256: [4, r.d.BYTES],
          directPath: [5, r.d.STRING],
        }),
        (ft.internalSpec = { initiator: [1, r.d.ENUM, c] }),
        (_t.internalSpec = {
          url: [1, r.d.STRING],
          buttonTitle: [2, r.d.STRING],
        });
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "g", function () {
        return r;
      }),
        n.d(t, "f", function () {
          return i;
        }),
        n.d(t, "a", function () {
          return a;
        }),
        n.d(t, "b", function () {
          return o;
        }),
        n.d(t, "c", function () {
          return u;
        }),
        n.d(t, "d", function () {
          return s;
        }),
        n.d(t, "h", function () {
          return l;
        }),
        n.d(t, "j", function () {
          return c;
        }),
        n.d(t, "e", function () {
          return d;
        }),
        n.d(t, "i", function () {
          return f;
        });
      var r = 2 * n(3).a,
        i = 0,
        a = n(175)({
          Star: "star",
          Contact: "contact",
          Mute: "mute",
          PinDEPRECATED: "pin",
          Pin: "pin_v1",
          SettingPushName: "setting_pushName",
          LabelEdit: "label_edit",
          LabelMessage: "label_message",
          LabelJid: "label_jid",
          QuickReply: "quick_reply",
          LocaleSetting: "setting_locale",
          Archive: "archive",
          MarkChatAsRead: "markChatAsRead",
          ClearChat: "clearChat",
          DeleteMessageForMe: "deleteMessageForMe",
          Sentinel: "sentinel",
          UnarchiveChatsSetting: "setting_unarchiveChats",
          DeleteChat: "deleteChat",
          AndroidUnsupportedActions: "android_unsupported_actions",
          PrimaryFeature: "primary_feature",
          Subscription: "subscription",
          Nux: "nux",
          Agent: "deviceAgent",
          TimeFormat: "time_format",
          UserStatusMute: "userStatusMute",
          PrimaryVersion: "primary_version",
          RemoveRecentSticker: "removeRecentSticker",
          ChatAssignment: "agentChatAssignment",
          ChatAssignmentOpenedStatus: "agentChatAssignmentOpenedStatus",
          FavoriteSticker: "favoriteSticker",
        }),
        o = n(175)({
          Regular: "regular",
          RegularLow: "regular_low",
          RegularHigh: "regular_high",
          CriticalBlock: "critical_block",
          CriticalUnblockLow: "critical_unblock_low",
        }),
        u = n(175).Mirrored([
          "Success",
          "SuccessHasMore",
          "Conflict",
          "ConflictHasMore",
          "ErrorRetry",
          "ErrorFatal",
          "Blocked",
        ]),
        s = n(175).Mirrored([
          "UpToDate",
          "Dirty",
          "FailingFiniteRetry",
          "Fatal",
          "Blocked",
        ]),
        l = n(175).Mirrored([
          "Success",
          "Malformed",
          "Orphan",
          "Unsupported",
          "Skipped",
          "Failed",
        ]),
        c = n(175)({
          Msg: "Msg",
          Chat: "Chat",
          Agent: "Agent",
          ChatAssignment: "ChatAssignment",
          UserStatusMute: "UserStatusMute",
        }),
        d = n(175).Mirrored([
          "ApplyRemoteAndDropLocal",
          "SkipRemote",
          "SkipRemoteAndDropLocal",
        ]),
        f = n(175).Mirrored(["Patch", "Snapshot", "Local"]);
    },
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return f;
      }),
        n.d(t, "d", function () {
          return _;
        }),
        n.d(t, "h", function () {
          return p;
        }),
        n.d(t, "e", function () {
          return v;
        }),
        n.d(t, "o", function () {
          return h;
        }),
        n.d(t, "m", function () {
          return m;
        }),
        n.d(t, "k", function () {
          return g;
        }),
        n.d(t, "l", function () {
          return y;
        }),
        n.d(t, "j", function () {
          return b;
        }),
        n.d(t, "n", function () {
          return w;
        }),
        n.d(t, "a", function () {
          return E;
        }),
        n.d(t, "c", function () {
          return I;
        }),
        n.d(t, "i", function () {
          return S;
        }),
        n.d(t, "f", function () {
          return k;
        }),
        n.d(t, "g", function () {
          return L;
        }),
        n.d(t, "q", function () {
          return N;
        }),
        n.d(t, "p", function () {
          return C;
        }),
        n.d(t, "r", function () {
          return R;
        });
      var r = n(9),
        i = n(2),
        a = n(32),
        o = n(20),
        u = n(3),
        s = n(7),
        l = n(42),
        c = 60 * u.b,
        d = [i.a.INACTIVE_RECEIVED, i.a.RECEIVED, i.a.READ, i.a.PLAYED];
      function f(e, t) {
        return e.receipts.add(t);
      }
      function _(e, t) {
        return e.receipts.bulkPut(t.map(N));
      }
      function p(e, t) {
        return e.receipts.get(t).then(R);
      }
      function v(e, t) {
        return e.receipts.where("msgId").anyOf(t).delete();
      }
      function h(e) {
        var t = e.to ? e.to.length : 1;
        return Object.assign({}, e, { data: G(2 * t) });
      }
      function m(e, t, n, r) {
        var i = O(n, !1, r);
        return Object.assign({ msgId: (0, a.t)(e), chat: t }, i);
      }
      function g(e, t, n, r) {
        var i = O(n, !1, r);
        return Object.assign({ msgId: e, chat: t }, i);
      }
      function y(e, t, n, r) {
        var i = O(n, !1, r);
        return Object.assign({ msgId: e, chat: t }, i);
      }
      function b(e, t, n, r, i) {
        var a = O(n, r, i);
        return Object.assign({ msgId: e, chat: t }, a);
      }
      function w(e, t, n, i) {
        var a = O(t, n, i);
        return Object.assign({ msgId: e, chat: r.h }, a);
      }
      function O(e, t, n) {
        var r = n.to.length,
          i = { sent: e, data: G(2 * r), inactiveReceiptsData: G(r), to: n.to },
          a = n.identityIds;
        return a.size > 0 && (i.identityIds = a), t && (i.playedData = G(r)), i;
      }
      function E(e, t) {
        var n = e.identityIds || new Map();
        return (
          t.forEach((e, t) => {
            n.has(t) || n.set(t, e);
          }),
          0 === n.size ? e : Object.assign({}, e, { identityIds: n })
        );
      }
      function I(e, t, n, r) {
        var a = (0, s.w)(n.chat, {
            user: (e) => (n.to ? n.to : o.l((0, s.e)(e))),
            multicast: (e) =>
              n.to
                ? n.to
                : (__LOG__(
                    4
                  )`applyUpdateToReceipt oldReceipt.to is null for group chat ${n.chat}`,
                  SEND_LOGS("multicast-receipt-with-null-to"),
                  o.f()),
          }),
          c = o.m(r.map((e) => e.participant)),
          f = o.n(c, a);
        if (f.length > 0) {
          var _ = new Set(a.map(s.h)),
            p = f;
          (f = o.g(p, (e) => _.has((0, s.h)(e)))).length < p.length &&
            __LOG__(3)`Received receipt for user we did not send to`;
        }
        var v = new DataView(n.data),
          h = new DataView(n.inactiveReceiptsData),
          m = n.playedData ? new DataView(n.playedData) : null;
        if (
          (m &&
            m.byteLength / 4 !== a.length &&
            (m = new DataView(G(a.length))),
          f.length > 0)
        ) {
          for (var g = new Map(), y = a.length, b = 0; b < y; ++b)
            g.set(a[b], {
              delivered: P(v, 2 * b),
              read: P(v, 2 * b + 1),
              inactive: P(h, b),
              played: m ? P(m, b) : u.c,
            });
          (y = (a = o.j(a, f)).length),
            (v = new DataView(G(2 * y))),
            (h = new DataView(G(y))),
            (m = m && new DataView(G(y)));
          for (var w = 0; w < y; ++w) {
            var O = g.get(a[w]);
            O &&
              (T(v, 2 * w, O.delivered),
              T(v, 2 * w + 1, O.read),
              T(h, w, O.inactive),
              m && T(m, w, O.played));
          }
        }
        for (var E = [], I = [], S = new Map(), k = 0; k < a.length; ++k)
          S.set(a[k], k);
        for (var L = 0; L < r.length; ++L) {
          var N = S.get(r[L].participant);
          null != N && (E.push(N), I.push(r[L].ts));
        }
        if (0 === E.length)
          return (
            __LOG__(
              3
            )`applyUpdatesToReceipt all participants are not in to array`,
            null
          );
        var C = !1,
          R = (e, t) => t.some((t) => !A(e, t));
        (0, l.h)(t) && m && R(m, E) && ((m = M(m, E, I)), (C = !0)),
          t === i.a.INACTIVE_RECEIVED &&
            R(h, E) &&
            ((h = M(h, E, I)), (C = !0));
        var x = E.map((e) => 2 * e + 1),
          D = E.map((e) => 2 * e);
        (0, l.i)(t) && R(v, x) && ((v = M(v, x, I)), (C = !0)),
          (0, l.k)(t) && R(v, D) && ((v = M(v, D, I)), (C = !0));
        var U = n.identityIds;
        if (
          (U &&
            d.includes(t) &&
            ((U = new Map(U)),
            r.forEach((e) => {
              var t = e.participant;
              U && U.has(t) && (U.delete(t), (C = !0));
            }),
            0 === U.size && (U = null)),
          t === i.a.SENDER_BACKFILL_SENT && f.length > 0 && (C = !0),
          (0, l.j)(t) && e === i.a.SENT && (C = !0),
          !C)
        )
          return null;
        var j = Object.assign({}, n, {
          to: a,
          data: v.buffer,
          inactiveReceiptsData: h.buffer,
        });
        if (
          (null != U ? (j.identityIds = U) : delete j.identityIds,
          m && (j.playedData = m.buffer),
          t === i.a.SENDER_BACKFILL_SENT)
        )
          return { updatedAck: null, updatedReceipt: j };
        var $ = (0, s.w)(n.chat, {
            user: (e) => {
              for (
                var t = !1, n = !1, r = !1, i = 0;
                i < a.length &&
                ((t = t || A(v, 2 * i)),
                (n = n || A(v, 2 * i + 1)),
                (r = r || (m && A(m, i))),
                !t || !n || (!r && m));
                i++
              );
              return {
                hasProcessedReceipts: t || n || r,
                isAllReceived: t,
                isAllRead: n,
                isAllPlayed: r,
              };
            },
            multicast: (e) => {
              for (var t = new Map(), n = !1, r = 0; r < a.length; r++) {
                var i = (0, s.h)(a[r]),
                  o = t.get(i) || { received: !1, read: !1, played: !1 };
                A(v, 2 * r) && ((o.received = !0), (n = !0)),
                  A(v, 2 * r + 1) && ((o.read = !0), (n = !0)),
                  m && A(m, r) && ((o.played = !0), (n = !0)),
                  t.set(i, o);
              }
              var u = Array.from(t.values());
              return {
                hasProcessedReceipts: n,
                isAllReceived: u.every((e) => e.received),
                isAllRead: u.every((e) => e.read),
                isAllPlayed: u.every((e) => e.played),
              };
            },
          }),
          F = $.hasProcessedReceipts,
          B = $.isAllReceived,
          V = $.isAllRead,
          K = $.isAllPlayed;
        return {
          updatedAck:
            !F && (0, l.j)(t)
              ? t
              : K && !(0, l.h)(e)
              ? i.a.PLAYED
              : V && !(0, l.i)(e)
              ? i.a.READ
              : B && !(0, l.k)(e)
              ? i.a.RECEIVED
              : null,
          updatedReceipt: j,
        };
      }
      function S(e, t, n) {
        var r = (0, s.w)(e.chat, {
          user: (t) => e.to || [(0, s.e)(t)],
          multicast: (t) => e.to || [],
        }).findIndex((e) => e === t);
        if (-1 === r)
          return __LOG__(2)`isRetryAuthorized did not send to ${t}`, !1;
        if ("retry" === n) {
          if (new DataView(e.data).getInt32(8 * r) !== u.c)
            return __LOG__(2)`isRetryAuthorized already received by ${t}`, !1;
          if (P(new DataView(e.inactiveReceiptsData), r) !== u.c)
            return (
              __LOG__(2)`isRetryAuthorized already inactively received by ${t}`,
              !1
            );
          if (!(0, u.m)(e.sent, c))
            return __LOG__(2)`isRetryAuthorized expired message`, !1;
        }
        return !0;
      }
      function k(e) {
        for (
          var t = {},
            n = (0, s.w)(e.chat, {
              user: (t) => e.to || [(0, s.e)(t)],
              multicast: () => e.to || [],
            }),
            r = new DataView(e.data),
            a = e.playedData && new DataView(e.playedData),
            o = 0;
          o < n.length;
          o++
        ) {
          var l = (0, s.h)(n[o]),
            c = t[l] || {},
            d = P(r, 2 * o);
          if (d !== u.c) {
            var f = (0, u.i)(d);
            i.a.RECEIVED in c
              ? c[i.a.RECEIVED] > f && (c[i.a.RECEIVED] = f)
              : (c[i.a.RECEIVED] = f);
          }
          var _ = P(r, 2 * o + 1);
          if (_ !== u.c) {
            var p = (0, u.i)(_);
            i.a.READ in c
              ? c[i.a.READ] > p && (c[i.a.READ] = p)
              : (c[i.a.READ] = p);
          }
          var v = a ? P(a, o) : u.c;
          if (v !== u.c) {
            var h = (0, u.i)(v);
            i.a.PLAYED in c
              ? c[i.a.PLAYED] > h && (c[i.a.PLAYED] = h)
              : (c[i.a.PLAYED] = h);
          }
          t[l] = c;
        }
        return t;
      }
      function L(e) {
        var t;
        return {
          to:
            e.to ||
            (0, s.w)(e.chat, {
              user: (e) => o.l((0, s.e)(e)),
              multicast: (t) => (
                __LOG__(
                  4
                )`getOutgoingToInfo receipt.to is null for group chat ${e.chat}`,
                SEND_LOGS("getOutgoingToInfo-multicast-receipt-with-null-to"),
                o.f()
              ),
            }),
          identityIds: null != (t = e.identityIds) ? t : new Map(),
        };
      }
      function G(e) {
        for (
          var t = new ArrayBuffer(4 * e), n = new DataView(t), r = 0;
          r < t.byteLength;
          r += 4
        )
          n.setInt32(r, u.c);
        return t;
      }
      function M(e, t, n) {
        if (t.length !== n.length)
          throw new Error("Indices and timestamps array sizes do not match");
        for (
          var r = e.byteOffset,
            i = e.buffer.slice(r, r + e.byteLength),
            a = new DataView(i),
            o = 0;
          o < t.length;
          ++o
        )
          A(e, t[o]) || T(a, t[o], n[o]);
        return a;
      }
      function A(e, t) {
        return e.getInt32(4 * t) !== u.c;
      }
      function P(e, t) {
        return e.getInt32(4 * t);
      }
      function T(e, t, n) {
        e.setInt32(4 * t, n);
      }
      function N(e) {
        return e;
      }
      function C(e) {
        var t = e.to ? e.to.length : 1,
          n = {
            msgId: e.msgId,
            chat: e.chat,
            sent: e.sent,
            data: e.data,
            inactiveReceiptsData: e.inactiveReceiptsData || G(t),
          };
        return (
          null != e.identityIds && (n.identityIds = e.identityIds),
          e.playedData && (n.playedData = e.playedData),
          e.to &&
            (n.to = o.k(e.to, (e) => {
              var t = (0, s.o)(e);
              if ("phoneUser" === t.jidType) return (0, s.e)(t.userJid);
              if ("phoneDevice" === t.jidType) return t.deviceJid;
              throw new Error(
                "Expected {PhoneUserJid | PhoneDeviceJid} but got " + e
              );
            })),
          n
        );
      }
      function R(e) {
        return e ? C(e) : null;
      }
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return a;
      }),
        n.d(t, "f", function () {
          return o;
        }),
        n.d(t, "g", function () {
          return u;
        }),
        n.d(t, "e", function () {
          return s;
        }),
        n.d(t, "d", function () {
          return l;
        }),
        n.d(t, "c", function () {
          return c;
        }),
        n.d(t, "a", function () {
          return d;
        });
      var r = n(12),
        i = n(223);
      function a(e) {
        if ("exists" === e.type) return e.chatId;
        e.type;
        var t = e.contact,
          n = e.chat,
          i = e.msgs;
        return (
          t && (0, r.c)("event", "contactsModified", { changed: [t] }),
          n &&
            (0, r.c)("event", "msgsReceived", {
              newMsgs: i
                .map((e) => (null == e ? void 0 : e.msg))
                .filter(Boolean),
              changedMsgs: [],
              affectedChats: [n],
            }),
          n.id
        );
      }
      function o(e) {
        0 !== e.length &&
          (0, r.c)("event", "msgsReceived", {
            newMsgs: [],
            changedMsgs: [],
            affectedChats: e,
          });
      }
      function u(e) {
        (0, r.c)("event", "pastParticipantsUpdated", { updated: e });
      }
      function s(e) {
        return o([e.chat]), e.chat.id;
      }
      function l(e) {
        e && e.forEach(c);
      }
      function c(e) {
        e &&
          (e.notifications &&
            e.notifications.length > 0 &&
            e.notifications.forEach((e) => {
              switch (e.result) {
                case "updated_chat":
                  s(e);
                  break;
                case "revoked_group_invites":
                  d(e);
                  break;
                case "group_update":
                  break;
                case "ephemeral_timestamp_update":
                  (0, i.d)(e.ts);
                  break;
                default:
                  e.result, c(e);
              }
            }),
          e.updatedContact &&
            (0, r.c)("event", "contactsModified", {
              changed: [e.updatedContact],
            }),
          "deduped" !== e.result &&
            ("new" === e.result
              ? (0, r.c)("event", "msgsReceived", {
                  newMsgs: [e.msg].filter(Boolean),
                  changedMsgs: [],
                  affectedChats: [e.chat],
                })
              : (e.result,
                (0, r.c)("event", "msgsReceived", {
                  newMsgs: [],
                  changedMsgs: [
                    { msg: e.msg, recent: "modified_from_recent" === e.result },
                  ],
                  affectedChats: [e.chat],
                }))));
      }
      function d(e) {
        var t = e.groupJid,
          n = e.outgoing,
          i = e.revokes;
        0 !== i.length &&
          (0, r.c)("event", "groupInvitesRevoked", {
            groupJid: t,
            outgoing: n,
            revokes: i,
          });
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "c", function () {
        return f;
      }),
        n.d(t, "f", function () {
          return _;
        }),
        n.d(t, "d", function () {
          return p;
        }),
        n.d(t, "b", function () {
          return v;
        }),
        n.d(t, "a", function () {
          return h;
        }),
        n.d(t, "g", function () {
          return m;
        }),
        n.d(t, "e", function () {
          return y;
        }),
        n.d(t, "i", function () {
          return w;
        }),
        n.d(t, "h", function () {
          return E;
        });
      var r = n(8),
        i = n.n(r),
        a = n(5),
        o = n(10),
        u = n(16),
        s = n(46),
        l = n(3),
        c = n(25),
        d = n(82);
      function f(e) {
        return (0, o.e)("getContacts", (t) => (0, a.i)(t.getContacts(e)));
      }
      function _() {
        return (0, o.f)("getKnownWhatsAppContacts", (e) =>
          (0, a.i)(
            e.stores.contacts
              .orderBy("phonebookPhone")
              .filter((e) => !e.noWhatsApp)
              .toArray()
              .then((e) => e.map((e) => e.jid))
          )
        );
      }
      function p(e) {
        return (0, o.e)("getContactsByPhonebookPhones", (t) =>
          t.getContactsByPhonebookPhones(e)
        );
      }
      function v(e) {
        return (0, o.e)("getContact", (t) => t.getContact(e));
      }
      function h(e, t, n) {
        __LOG__(2)`addOrReplaceContactNames`;
        var r = [
          "contacts",
          "meta",
          "groupParticipantsInfo",
          "status",
          "authors",
          "media",
          "previews",
          "receipts",
        ];
        return (0, o.c)(
          "addOrReplaceContactNames",
          (o) =>
            (0, s.a)(o.table, "rw", r, (r) =>
              (function (e, t, n, r) {
                return e.contacts.toArray().then((o) => {
                  var u = [],
                    s = [];
                  return (
                    o.forEach((e) => {
                      var n = e.jid;
                      if (t.has(n)) {
                        var i = Object.assign({}, e, t.get(n));
                        s.push(i), t.delete(n);
                      } else if (
                        r &&
                        r.has(n) &&
                        (e.shortName || e.fullName || e.phonebookPhone)
                      ) {
                        var a,
                          o,
                          c = Object.assign({}, e, {
                            lastKnownName: {
                              ts: (0, l.D)(),
                              shortName:
                                e.shortName ||
                                (null == (a = e.lastKnownName)
                                  ? void 0
                                  : a.shortName),
                              fullName:
                                e.fullName ||
                                (null == (o = e.lastKnownName)
                                  ? void 0
                                  : o.fullName),
                            },
                          });
                        delete c.fullName,
                          delete c.shortName,
                          delete c.phonebookPhone,
                          s.push(c),
                          u.push(n);
                      }
                    }),
                    s.push(...Array.from(t.values())),
                    (0, a.c)([
                      e.contacts.bulkPut(s).then(() => s),
                      (0, d.a)(e, u),
                      n && g(e, n),
                    ]).then((e) => {
                      var t = i()(e, 2);
                      return { updated: t[0], status: t[1] };
                    })
                  );
                });
              })(r, e, t, n)
            ),
          (e, t, n) => {
            e.updated.length > 0 &&
              n.fireAndForget("event", "contactsModified", {
                changed: e.updated,
              }),
              I(t, n, e.status);
          }
        );
      }
      function m(e) {
        return (0, o.f)("removeInvalidNumbers", (t) =>
          (0, s.a)(t, "rw", ["meta"], (t) => g(t, e))
        );
      }
      function g(e, t) {
        return b(e).then((n) => {
          var r = new Set(t),
            i = n.filter((e) => !r.has(e));
          return O(e, i);
        });
      }
      function y() {
        return (0, o.f)("getInvalidNumbers", (e) => (0, s.b)(e, (e) => b(e)));
      }
      function b(e) {
        return (0, c.d)(e.meta, c.a.INVALID_CONTACTS).then(
          (e) => (null == e ? void 0 : e.value) || []
        );
      }
      function w(e, t, n) {
        return (
          __LOG__(2)`updateContacts ${e.size} updated contacts, ${
            t ? t.size : 0
          } to delete`,
          (0, o.c)(
            "updateContacts",
            (r) =>
              (0, s.a)(
                r.table,
                "rw",
                [
                  "contacts",
                  "groups",
                  "groupParticipantsInfo",
                  "msgs",
                  "chats",
                  "status",
                  "authors",
                  "media",
                  "previews",
                  "receipts",
                ],
                (r) =>
                  (function (e, t, n, r) {
                    return e.contacts.toArray().then((o) => {
                      var u = new Set(),
                        s = [],
                        c = [],
                        f = new Set(r),
                        _ = new Map(t);
                      o.forEach((e) => {
                        var t = e.jid,
                          r = _.get(t);
                        if (r) {
                          var i = Object.assign({}, e);
                          if (
                            (e.noWhatsApp && !r.noWhatsApp
                              ? delete i.noWhatsApp
                              : r.noWhatsApp &&
                                !e.noWhatsApp &&
                                ((i.noWhatsApp = !0), delete i.about, u.add(t)),
                            r.phonebook)
                          ) {
                            delete i.lastKnownName;
                            var a = r.phonebook;
                            (i.fullName = a.fullName),
                              (i.shortName = a.shortName),
                              (i.phonebookPhone = a.phonebookPhone);
                          } else {
                            var o, d;
                            (i.lastKnownName = {
                              ts: (0, l.D)(),
                              shortName:
                                i.shortName ||
                                (null == (o = i.lastKnownName)
                                  ? void 0
                                  : o.shortName),
                              fullName:
                                i.fullName ||
                                (null == (d = i.lastKnownName)
                                  ? void 0
                                  : d.fullName),
                            }),
                              delete i.fullName,
                              delete i.shortName,
                              delete i.phonebookPhone,
                              u.add(t);
                          }
                          r.about && (i.about = r.about),
                            "blocked" === r.defaultDisappearingMode
                              ? delete i.defaultDisappearingMode
                              : r.defaultDisappearingMode &&
                                (i.defaultDisappearingMode =
                                  r.defaultDisappearingMode),
                            c.push(i);
                          var p = e.phonebookPhone;
                          null != p && f.delete(p), _.delete(t);
                        } else if (n && n.has(t)) {
                          var v = e.phonebookPhone;
                          if (
                            (null != v && f.delete(v),
                            u.add(t),
                            e.chatId ||
                              e.pushname ||
                              e.messaged ||
                              e.sentHsm ||
                              e.bizIntro ||
                              e.verifiedInfo ||
                              (e.devices && e.devices.length > 1))
                          ) {
                            var h,
                              m,
                              g = Object.assign({}, e, {
                                lastKnownName: {
                                  ts: (0, l.D)(),
                                  shortName:
                                    e.shortName ||
                                    (null == (h = e.lastKnownName)
                                      ? void 0
                                      : h.shortName),
                                  fullName:
                                    e.fullName ||
                                    (null == (m = e.lastKnownName)
                                      ? void 0
                                      : m.fullName),
                                },
                              });
                            delete g.fullName,
                              delete g.shortName,
                              delete g.phonebookPhone,
                              delete g.about,
                              delete g.noWhatsApp,
                              c.push(g);
                          } else s.push(e);
                        }
                      }),
                        c.length > 0 &&
                          __LOG__(2)`Updating ${c.length} existing contacts`,
                        _.forEach((e, t) => {
                          var n = Object.assign({ jid: t }, e.phonebook);
                          e.about && (n.about = e.about),
                            e.noWhatsApp && (n.noWhatsApp = !0),
                            e.defaultDisappearingMode &&
                              "blocked" !== e.defaultDisappearingMode &&
                              (n.defaultDisappearingMode =
                                e.defaultDisappearingMode),
                            c.push(n);
                        }),
                        _.size > 0 &&
                          __LOG__(2)`Creating ${_.size} new contacts`;
                      var p,
                        v = s.map((e) => e.jid);
                      return (
                        v.length > 0 &&
                          (__LOG__(2)`Deleting ${v.length} contacts from db`,
                          (p = e.contacts.bulkDelete(v).then(() => v))),
                        (0, a.c)([
                          p || [],
                          (0, d.a)(e, Array.from(u)),
                          e.contacts.bulkPut(c),
                          O(e, Array.from(f)),
                        ]).then((e) => {
                          var t = i()(e, 2),
                            n = t[0],
                            r = t[1];
                          return { updated: c, deleted: n, status: r };
                        })
                      );
                    });
                  })(r, e, t, n)
              ),
            (e, t, n) => {
              (e.deleted.length || e.updated.length) &&
                n.fireAndForget("event", "contactsModified", {
                  changed: e.updated,
                  deleted: e.deleted,
                }),
                I(t, n, e.status);
            }
          )
        );
      }
      function O(e, t) {
        return e.meta.put({ key: c.a.INVALID_CONTACTS, value: t });
      }
      function E(e, t) {
        var n = new Map();
        return n.set(e, t), w(n, null, []);
      }
      function I(e, t, n) {
        if (n) {
          var r = n.whitelistUpdated,
            i = n.settings,
            a = n.removed;
          r && e.fireAndForget(u.e.updateServerWhitelist()),
            i &&
              t.fireAndForget("event", "statusSettingsUpdated", {
                settings: i,
              }),
            a &&
              t.fireAndForget("event", "statusAuthorsCleared", { authors: a });
        }
      }
      n(9);
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return r;
      });
      var r = n(175)({
        DECRYPT_MESSAGE_FINAL: "decrypt_message_final",
        FRANKING_VALIDATION: "franking_validation",
        GET_DEVICES: "get_devices",
        MEDIA_DOWNLOAD: "media_download",
        MEDIA_UPLOAD: "media_upload",
        DELETE_THREAD: "delete_thread",
        DOWNLOAD_AND_DECRYPT: "download_and_decrypt",
        MESSAGE_DECRYPTION: "message_decryption",
        MESSAGE_ENCRYPTION: "message_encryption",
        OFFLINE_QUEUE: "offline_queue",
        OFFLINE_RETRY: "offline_retry",
        ICDC_ERROR: "icdc_error",
        QUERY_GROUP: "query_group",
        QUERY_GROUPS: "query_groups",
        RETRY_RECEIPTS_SENT: "retry_receipts_sent",
        SAVE_SESSION_RETRIES: "save_session_retries",
        SAVE_SIGNAL_SESSION_RETRIES: "save_signal_session_retries",
        SYNCD_FATAL_ERROR: "syncd_fatal_error",
        SYNCD_CRITICAL_EVENT: "syncd_critical_event",
        SYNCD_CRITICAL_BOOTSTRAP_STAGE: "syncd_critical_bootstrap_stage",
        SYNCD_BOOTSTRAP_APP_STATE_DOWNLOAD:
          "syncd_bootstrap_app_state_download",
        SYNCD_DECRYPT_MUTATIONS: "syncd_decrypt_mutations",
        SYNCD_BOOTSTRAP_DATA_APPLIED: "syncd_bootstrap_data_applied",
        APP_STATE_SYNC_DAILY: "app_state_sync_daily",
        SYNCD: "syncd",
        SEND_MESSAGE: "send_message",
        RECEIVE_MESSAGE: "receive_message",
        TEST_RECEIVE_MESSAGE: "test_receive_message",
        SYNCD_KEY_ROTATION: "syncd_key_rotation",
        WA_FAILURE_STANZA: "wa_failure_stanza",
        REMOVE_PARTICIPANTS: "remove_participants",
        CREATE_GROUP: "create_group",
        WA_JOBS_ORCHESTRATOR: "wa_jobs_orchestrator",
        WA_DISCONNECT: "wa_disconnect",
        TEST_MAW_ENCRYPT_MESSAGE: "test_maw_encrypt_message",
        TEST_MAW_WA_SEND_MESSAGE: "test_maw_wa_send_message",
      });
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "e", function () {
        return u;
      }),
        n.d(t, "f", function () {
          return s;
        }),
        n.d(t, "g", function () {
          return l;
        }),
        n.d(t, "d", function () {
          return c;
        }),
        n.d(t, "c", function () {
          return d;
        }),
        n.d(t, "b", function () {
          return f;
        }),
        n.d(t, "a", function () {
          return _;
        });
      var r = n(8),
        i = n.n(r),
        a = n(51),
        o = n(11);
      function u(e, t) {
        if (e.hasAttr("error")) {
          var n = e.attrString("error");
          return t.hasOwnProperty(n)
            ? (0, t[n])(e)
            : (__LOG__(3)`Unrecognized error code received`,
              SEND_LOGS("Unrecognized error code."),
              { reason: "unknown" });
        }
      }
      function s(e, t) {
        var n = e.errorCode.toString();
        return t.hasOwnProperty(n) ? t[n] : { error: { reason: "unknown" } };
      }
      function l(e, t) {
        var n,
          r = null == (n = e.value) ? void 0 : n.code,
          i = null == r ? void 0 : r.toString();
        return null != i && t.hasOwnProperty(i)
          ? t[i]
          : { error: { reason: "unknown" } };
      }
      function c(e) {
        return { error: { reason: e } };
      }
      function d(e) {
        return () => ({ reason: e });
      }
      function f(e, t) {
        return (n) => ({ reason: e, extra: t(n) });
      }
      function _(e, t, n) {
        return new a.a(e, (e) => {
          e.assertTag("error");
          var r = e.attrString("code"),
            a = t[r];
          if (a) return { error: { reason: a } };
          if (n) {
            var u = (0, o.w)(n).find((e) => {
              var t = i()(e, 2);
              return t[0], t[1][0] === r;
            });
            if (null != u) {
              var s = i()(u, 2);
              return { error: { reason: s[0], extra: (0, s[1][1])(e) } };
            }
          }
          return { error: { reason: "unknown" } };
        });
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return i;
      }),
        n.d(t, "a", function () {
          return a;
        }),
        n.d(t, "c", function () {
          return o;
        });
      var r = n(9),
        i = { JID: 0, JID_U: 1, JID_AD: 1, JID_FB: 3 },
        a = n(175)({ WHATSAPP: 0, LID: 1 }),
        o = class e {
          constructor(e) {
            this.Ch = e;
          }
          static createAD(t, n, r) {
            return new e({
              type: i.JID_AD,
              user: t,
              device: null == r ? 0 : r,
              agent: null == n ? 0 : n,
              domainType: a.WHATSAPP,
            });
          }
          static createJidU(t, n, r) {
            return new e({
              type: i.JID_U,
              user: t,
              device: null == r ? 0 : r,
              domainType: null == n ? a.WHATSAPP : n,
            });
          }
          static createFbJid(t, n) {
            var r = null == n ? 0 : n;
            return new e({ type: i.JID_FB, user: t, device: r });
          }
          static create(t, n) {
            return new e({ type: i.JID, user: t, server: n });
          }
          toString() {
            if (this.Ch.type === i.JID_AD || this.Ch.type === i.JID_U) {
              var e = this.Ch,
                t = e.user,
                n = e.device,
                o = e.domainType === a.WHATSAPP ? r.k : r.e;
              return 0 === n ? `${t}@${o}` : `${t}:${n}@${o}`;
            }
            if (this.Ch.type === i.JID_FB) {
              var u = this.Ch;
              return `${u.user}:${u.device}@${r.g}`;
            }
            this.Ch.type;
            var s = this.Ch,
              l = s.user,
              c = s.server;
            return null != l ? `${l}@${c}` : c;
          }
          getInnerJid() {
            return this.Ch;
          }
        };
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "p", function () {
        return S;
      }),
        n.d(t, "m", function () {
          return k;
        }),
        n.d(t, "l", function () {
          return L;
        }),
        n.d(t, "n", function () {
          return G;
        }),
        n.d(t, "e", function () {
          return M;
        }),
        n.d(t, "b", function () {
          return A;
        }),
        n.d(t, "k", function () {
          return P;
        }),
        n.d(t, "c", function () {
          return T;
        }),
        n.d(t, "j", function () {
          return N;
        }),
        n.d(t, "d", function () {
          return C;
        }),
        n.d(t, "o", function () {
          return R;
        }),
        n.d(t, "a", function () {
          return x;
        }),
        n.d(t, "g", function () {
          return D;
        }),
        n.d(t, "f", function () {
          return U;
        }),
        n.d(t, "h", function () {
          return $;
        }),
        n.d(t, "q", function () {
          return F;
        }),
        n.d(t, "s", function () {
          return B;
        }),
        n.d(t, "r", function () {
          return V;
        }),
        n.d(t, "i", function () {
          return K;
        });
      var r = n(8),
        i = n.n(r),
        a = n(33),
        o = n(32),
        u = n(11),
        s = n(58),
        l = n(5),
        c = n(7),
        d = n(2),
        f = n(6),
        _ = n(66),
        p = n(3),
        v = n(35),
        h = n(40),
        m = n(44),
        g = n(25),
        y = n(73),
        b = n(91),
        w = n(17),
        O = n(117),
        E = n(14),
        I = n(168);
      function S() {
        return (0, h.e)((0, a.l)(7));
      }
      function k(e, t, n, r) {
        return t && t.pushname === r
          ? e
          : e
          ? Object.assign({}, e, { pushname: r })
          : t
          ? Object.assign({}, t, { pushname: r })
          : { jid: n, pushname: r };
      }
      function L(e, t, n) {
        return t && t.messaged
          ? e
          : e
          ? Object.assign({}, e, { messaged: !0 })
          : t
          ? Object.assign({}, t, { messaged: !0 })
          : { jid: n, messaged: !0 };
      }
      function G(e, t, n) {
        return t && t.sentHsm
          ? e
          : e
          ? Object.assign({}, e, { sentHsm: !0 })
          : t
          ? Object.assign({}, t, { sentHsm: !0 })
          : { jid: n, sentHsm: !0 };
      }
      function M(e) {
        for (var t = [], n = 0; n < e.length; n++) {
          var r = e[n];
          r && (0, v.e)(r) && t.push(r);
        }
        return t;
      }
      function A(e, t) {
        WAM.log("regular", 1980, void 0, [
          2,
          0,
          1,
          3,
          0,
          t ? 2 : 1,
          4,
          0,
          (0, p.A)(e.ts),
          1,
          0,
          e.type === d.f.CIPHERTEXT ? 1 : 3,
        ]);
      }
      function P(e) {
        return e.table.transact(
          "rw",
          ["meta", "chats", "groups", "contacts", "groupParticipantsInfo"],
          () =>
            (0, g.d)(e.table.stores.meta, g.a.WAM_CHATS_CACHE)
              .then((t) => {
                if (null == t)
                  return (
                    __LOG__(
                      2
                    )`logChatMessageCountsAndPurge: Cache does not exist`,
                    []
                  );
                var n = t.value.chats,
                  r = t.value.startTs;
                if (0 === n.size)
                  return (
                    __LOG__(2)`logChatMessageCountsAndPurge: no chats to log`,
                    []
                  );
                var a = [],
                  o = [];
                return (
                  n.forEach((e, t) => {
                    o.push(t), a.push([t, e]);
                  }),
                  e.table.getAllChatsAndGroupInfosInTransaction(o).then((t) => {
                    var n = t.chats,
                      s = t.groupInfos,
                      l = new Set();
                    return (
                      o.forEach((e) => {
                        var t = (0, c.q)(e);
                        t && l.add(t);
                      }),
                      (0, u.y)(s).forEach((e) => {
                        null != e.creatorJid && l.add(e.creatorJid);
                      }),
                      e.table.stores.contacts
                        .where("jid")
                        .anyOf(Array.from(l))
                        .toArray()
                        .then((e) => {
                          var t = (0, u.t)(e, (e) => e.jid);
                          return a.map((e) => {
                            var a,
                              o,
                              u,
                              l,
                              d,
                              f,
                              _,
                              p,
                              v,
                              h,
                              g,
                              y = i()(e, 2),
                              b = y[0],
                              E = y[1],
                              I = E.sent,
                              S = E.received,
                              k = E.starred,
                              L = E.ephemeralSent,
                              G = E.ephemeralReceived,
                              M = E.viewOnceOpened,
                              A = E.viewOnceReceived,
                              P = E.viewOnceSent,
                              T = n[b];
                            return (
                              T &&
                                ((a = null == T.mutedUntil ? 1 : 2),
                                (o = T.archived),
                                (u = T.unreadMsgCount)),
                              (0, c.x)(b, {
                                user: (e) => {
                                  var n = t[e];
                                  if (n) {
                                    var r = n.ephemeral,
                                      i = n.phonebookPhone;
                                    if (
                                      ((l =
                                        (null == r ? void 0 : r.expiration) ||
                                        null),
                                      (d = (0, m.f)(n)),
                                      (f = null != i),
                                      (0, w.a)("disappearing_mode"))
                                    ) {
                                      var a = (0, O.b)(n, "sender-me");
                                      null != a &&
                                        ((v = a.disappearingChatInitiator),
                                        (h =
                                          a.senderDefaultDisappearingDuration),
                                        (g =
                                          a.receiverDefaultDisappearingDuration));
                                    }
                                  }
                                },
                                group: (e) => {
                                  _ = !0;
                                  var n = s[e];
                                  if (n) {
                                    var r = n.creatorJid,
                                      i = t[r];
                                    (l = n.expiration),
                                      (p = n.groupSize),
                                      i &&
                                        ((d = (0, m.f)(i)),
                                        (f = null != i.phonebookPhone));
                                  }
                                },
                              }),
                              {
                                chatEphemeralityDuration: l,
                                chatTypeInd: d,
                                chatMuted: a,
                                ephemeralMessagesSent: L,
                                ephemeralMessagesReceived: G,
                                isAContact: f,
                                isAGroup: _,
                                isArchived: o,
                                messagesStarred: k,
                                messagesUnread: u,
                                messagesReceived: S,
                                messagesSent: I,
                                startTime: r,
                                viewOnceMessagesOpened: M || 0,
                                viewOnceMessagesReceived: A || 0,
                                viewOnceMessagesSent: P || 0,
                                disappearingChatInitiator: v,
                                senderDefaultDisappearingDuration: h,
                                receiverDefaultDisappearingDuration: g,
                                groupSize: p,
                              }
                            );
                          });
                        })
                    );
                  })
                );
              })
              .then(
                (t) => (
                  __LOG__(2)`logChatMessageCountsAndPurge: logging ${t.length}`,
                  t.forEach((e) => {
                    WAM.log("regular", 1644, void 0, [
                      56,
                      0,
                      e.awayMsgsSent,
                      60,
                      0,
                      e.bizCatalogType,
                      65,
                      0,
                      e.bizConversationDepth,
                      33,
                      0,
                      e.blockReason,
                      30,
                      0,
                      e.broadcastMsgsReceived,
                      29,
                      0,
                      e.broadcastMsgsSent,
                      27,
                      0,
                      e.callOffersReceived,
                      26,
                      0,
                      e.callOffersSent,
                      70,
                      0,
                      e.callsResultBusy,
                      71,
                      0,
                      e.callsResultCancelled,
                      72,
                      0,
                      e.callsResultConnected,
                      78,
                      0,
                      e.callsResultError,
                      73,
                      0,
                      e.callsResultMissed,
                      74,
                      0,
                      e.callsResultRejected,
                      88,
                      1,
                      e.canEditDmSettings,
                      86,
                      0,
                      e.cartViews,
                      15,
                      0,
                      e.chatEphemeralityDuration,
                      8,
                      0,
                      e.chatMuted,
                      79,
                      0,
                      e.chatOverflowClicks,
                      2,
                      0,
                      e.chatTypeInd,
                      44,
                      0,
                      e.collectionInquiriesSent,
                      41,
                      0,
                      e.commerceMsgsReceived,
                      40,
                      0,
                      e.commerceMsgsSent,
                      59,
                      0,
                      e.disappearingChatInitiator,
                      47,
                      2,
                      e.entryPointConversionApp,
                      46,
                      2,
                      e.entryPointConversionSource,
                      14,
                      0,
                      e.ephemeralMessagesReceived,
                      13,
                      0,
                      e.ephemeralMessagesSent,
                      69,
                      0,
                      e.ephemeralMessagesUnreadExpired,
                      45,
                      0,
                      e.fbCtaInquiriesSent,
                      25,
                      0,
                      e.firstResponseTime,
                      89,
                      0,
                      e.forwardMessagesReceived,
                      90,
                      0,
                      e.forwardMessagesSent,
                      22,
                      0,
                      e.gaStatus,
                      57,
                      0,
                      e.greetingMsgsSent,
                      75,
                      1,
                      e.groupContainsBiz,
                      87,
                      0,
                      e.groupInfoSetting,
                      51,
                      0,
                      e.groupMembershipReplies,
                      52,
                      0,
                      e.groupPrivateReplies,
                      19,
                      0,
                      e.groupSize,
                      6,
                      1,
                      e.isAContact,
                      5,
                      1,
                      e.isAGroup,
                      10,
                      1,
                      e.isArchived,
                      32,
                      1,
                      e.isBlocked,
                      36,
                      1,
                      e.isCartAddClicked,
                      35,
                      1,
                      e.isCommerceViewed,
                      37,
                      1,
                      e.isCtaOnPdpClicked,
                      54,
                      1,
                      e.isLabelled,
                      91,
                      1,
                      e.isMessageYourself,
                      62,
                      1,
                      e.isOppositePartyInitiated,
                      9,
                      1,
                      e.isPinned,
                      92,
                      1,
                      e.isPnhEnabledChat,
                      81,
                      1,
                      e.isWaPayRegistered,
                      55,
                      0,
                      e.labelledMsgs,
                      96,
                      0,
                      e.locationsSent,
                      4,
                      0,
                      e.messagesReceived,
                      3,
                      0,
                      e.messagesSent,
                      12,
                      0,
                      e.messagesStarred,
                      11,
                      0,
                      e.messagesUnread,
                      68,
                      1,
                      e.newThread,
                      82,
                      0,
                      e.odReceived,
                      38,
                      0,
                      e.ordersSent,
                      83,
                      0,
                      e.p2mOdNnpTransactionsSent,
                      84,
                      0,
                      e.p2mOdNpTransactionsSent,
                      39,
                      0,
                      e.paymentsSent,
                      42,
                      0,
                      e.pdpInquiriesSent,
                      61,
                      0,
                      e.pdpViews,
                      64,
                      0,
                      e.profileReplies,
                      63,
                      0,
                      e.profileViews,
                      58,
                      0,
                      e.quickRepliesSent,
                      97,
                      0,
                      e.reactionsReceived,
                      98,
                      0,
                      e.reactionsSent,
                      21,
                      0,
                      e.receiverDefaultDisappearingDuration,
                      80,
                      0,
                      e.repliesSent,
                      93,
                      1,
                      e.requestedPhoneNumber,
                      94,
                      1,
                      e.seenMaskedPhoneNumber,
                      20,
                      0,
                      e.senderDefaultDisappearingDuration,
                      99,
                      1,
                      e.sharedPhoneNumber,
                      31,
                      0,
                      e.spamReports,
                      7,
                      0,
                      e.startTime,
                      50,
                      0,
                      e.statusReplies,
                      49,
                      0,
                      e.statusViews,
                      43,
                      0,
                      e.storefrontInquiriesSent,
                      66,
                      2,
                      e.threadDs,
                      67,
                      2,
                      e.threadId,
                      28,
                      0,
                      e.totalCallDuration,
                      85,
                      0,
                      e.typeOfGroup,
                      76,
                      0,
                      e.videoCallsOffered,
                      18,
                      0,
                      e.viewOnceMessagesOpened,
                      17,
                      0,
                      e.viewOnceMessagesReceived,
                      16,
                      0,
                      e.viewOnceMessagesSent,
                      77,
                      0,
                      e.voiceCallsOffered,
                    ]);
                  }),
                  e.table.stores.meta
                    .put({
                      key: g.a.WAM_CHATS_CACHE,
                      value: { startTs: (0, p.D)(), chats: new Map() },
                    })
                    .then(() => t.length)
                )
              )
        );
      }
      function T(e, t, n) {
        return (0, g.d)(e.table.stores.meta, g.a.WAM_CHATS_CACHE).then((r) => {
          var i = N(r),
            a = i.startTs,
            o = i.chats,
            u = o.get(t);
          return (
            u ||
              (u = {
                sent: 0,
                received: 0,
                starred: 0,
                ephemeralSent: 0,
                ephemeralReceived: 0,
                viewOnceOpened: 0,
                viewOnceReceived: 0,
                viewOnceSent: 0,
              }),
            (u.starred += n),
            o.set(t, u),
            e.table.stores.meta
              .put({
                key: g.a.WAM_CHATS_CACHE,
                value: { startTs: a, chats: o },
              })
              .then(() => {})
          );
        });
      }
      function N(e) {
        return e ? e.value : { startTs: (0, p.D)(), chats: new Map() };
      }
      function C(e, t) {
        return (0, g.d)(e.meta, g.a.WAM_CHATS_CACHE).then((n) => {
          var r = N(n),
            i = r.startTs,
            a = r.chats,
            o = a.get(t);
          return (
            o ||
              (o = {
                sent: 0,
                received: 0,
                starred: 0,
                ephemeralSent: 0,
                ephemeralReceived: 0,
                viewOnceOpened: 0,
                viewOnceReceived: 0,
                viewOnceSent: 0,
              }),
            (o.viewOnceOpened = (o.viewOnceOpened || 0) + 1),
            a.set(t, o),
            e.meta
              .put({
                key: g.a.WAM_CHATS_CACHE,
                value: { startTs: i, chats: a },
              })
              .then(() => {})
          );
        });
      }
      function R(e) {
        if (e) {
          var t = e.filter(Boolean);
          if (0 !== t.length) {
            if (1 === t.length) return t[0];
            var n = t.sort((e, t) => t.msg.id.localeCompare(e.msg.id)),
              r = n[0],
              i = n.slice(1);
            return (
              (r.notifications = r.notifications
                ? r.notifications.concat(i)
                : [...i]),
              r
            );
          }
        }
      }
      function x(e, t, n, r) {
        return (0, l.e)()
          .then(() =>
            (function (e, t, n, r) {
              var i,
                a,
                u,
                s,
                l,
                c = t.id;
              !r ||
                ("group" !== n.type && t.bizRoleChanged) ||
                ((i = (0, o.o)(c)), (a = r.oldestStarredTs)),
                (u =
                  "group" === n.type || (0, y.g)(n.dbContact)
                    ? "e2ee"
                    : (null == (s = n.dbContact.verifiedInfo) ||
                      null == (l = s.bsp)
                        ? void 0
                        : l.host) === y.a.FB
                    ? "fb"
                    : "bsp");
              var f = {
                externalId: "/privacy/" + c,
                ts: a || (0, p.D)(),
                author: d.c,
                ack: d.a.RECEIVED,
                type: d.f.PRIVACY_CHANGE,
                subtype: u,
                altIndex: "",
              };
              return (0, I.b)(e, t, f, i).then((e) => [e.dbChat, e.dbMsg]);
            })(e, n, t, r).then((e) => {
              var t = i()(e, 2);
              return [t[0], [t[1]]];
            })
          )
          .then((n) => {
            var r = i()(n, 2),
              a = r[0],
              o = r[1];
            return (function (e, t, n) {
              var r,
                i,
                a = (0, p.D)();
              if ("group" === n.type) {
                var o = n.initialExpiration;
                if ("persisted" === o) return (0, l.e)([t, void 0, null]);
                r = {
                  type: d.f.GROUP_NOTIFICATION,
                  subtype: "ephemeral",
                  externalId: "/ephemeral/" + a,
                  ts: a,
                  author: d.c,
                  ack: d.a.RECEIVED,
                  expiration: o,
                  altIndex: "",
                };
              } else {
                n.type;
                var u = n.initialExpiration;
                if (((i = n.dbContact), "persisted" === u))
                  return (0, l.e)([t, i, null]);
                var s = u.expiration,
                  c = u.initiator;
                i.ephemeral = { expiration: s, ts: a, initiator: c };
                var f =
                  c === b.a.INITIATED_BY_ME
                    ? b.a.INITIATED_BY_ME
                    : c === b.a.INITIATED_BY_OTHER
                    ? b.a.INITIATED_BY_OTHER
                    : void 0;
                r =
                  null == f
                    ? {
                        type: d.f.EPHEMERAL,
                        subtype: "setting",
                        externalId: "/ephemeral/" + a,
                        ts: a,
                        author: d.c,
                        ack: d.a.RECEIVED,
                        ephemeralExpiration: s,
                        altIndex: "",
                      }
                    : {
                        type: d.f.EPHEMERAL,
                        subtype: "default-disappearing-mode",
                        externalId: "/ephemeral-ddm/" + a,
                        ts: a,
                        author: d.c,
                        ack: d.a.RECEIVED,
                        ephemeralExpiration: s,
                        initiator: f,
                        altIndex: "",
                      };
              }
              return (0, I.b)(e, t, r).then((e) => [e.dbChat, i, e.dbMsg]);
            })(e, a, t).then((e) => {
              var t = i()(e, 3),
                n = t[0],
                r = t[1],
                a = t[2];
              return [n, r, null != a ? [...o, a] : o];
            });
          });
      }
      function D(e, t, n, r) {
        return j(e, t, {
          type: "one-to-one",
          dbContact: n,
          initialExpiration: r,
        }).then((e) => {
          var t = i()(e, 3);
          return [t[0], t[1], t[2]];
        });
      }
      function U(e, t, n) {
        return j(e, t, {
          type: "group",
          initialExpiration: null != n && n > 0 ? n : "persisted",
        }).then((e) => {
          var t = i()(e, 3),
            n = t[0];
          return t[1], [n, t[2]];
        });
      }
      function j(e, t, n) {
        var r = {
          jid: t,
          mutedUntil: "group" === n.type ? null : n.dbContact.lastMutedUntil,
          archived: !1,
          increment: 0,
          sortBy: 0,
          msgCount: 0,
          unreadMsgCount: 0,
          lastNotified: null,
        };
        return (
          (0, c.q)(t) && (r.notStarted = !0),
          e.table.stores.chats
            .add(r)
            .then((e) => Object.assign({ id: e }, r))
            .then((t) => x(e.table.stores, n, t))
        );
      }
      function $(e) {
        var t, n;
        if ((0, y.d)(e)) return "persisted";
        var r = f.k.get().disappearingMsgsDefaultTimer || E.k,
          i = null == (t = e.ephemeral) ? void 0 : t.expiration;
        if (null != i && i > E.k) {
          var a,
            o = null == (a = e.ephemeral) ? void 0 : a.initiator;
          return {
            expiration: i,
            initiator:
              r === E.k && o === b.a.INITIATED_BY_ME
                ? b.a.CHANGED_IN_CHAT
                : null != o
                ? o
                : b.a.CHANGED_IN_CHAT,
          };
        }
        if (!(0, w.a)("disappearing_mode")) return "persisted";
        var u =
          (null == (n = e.defaultDisappearingMode) ? void 0 : n.expiration) ||
          E.k;
        return u === E.k && r === E.k
          ? "persisted"
          : u === E.k
          ? { expiration: r, initiator: b.a.INITIATED_BY_ME }
          : r === E.k || u < r
          ? { expiration: u, initiator: b.a.INITIATED_BY_OTHER }
          : { expiration: r, initiator: b.a.INITIATED_BY_ME };
      }
      function F(e, t, n) {
        return {
          result: "new",
          chat: (0, s.a)(t, n),
          msg: (0, _.c)(e),
          dbMsg: e,
          outgoingTo: null,
          updatedContact: null,
          shouldDownloadMmsThumb: !1,
        };
      }
      function B(e, t) {
        var n = e.result,
          r = e.dbChat,
          i = e.dbGroup,
          a = e.dbMsg,
          o = e.notifications,
          u = e.outgoingTo,
          l = e.shouldDownloadMmsThumb;
        return {
          result: n,
          chat: (0, s.a)(r, i),
          dbMsg: a,
          msg: (0, _.c)(a),
          outgoingTo: u,
          notifications: o,
          updatedContact: t,
          shouldDownloadMmsThumb: l,
        };
      }
      function V(e, t) {
        return {
          result: "new",
          dbMsg: e.dbMsg,
          chat: (0, s.a)(e.dbChat),
          msg: (0, _.c)(e.dbMsg),
          updatedContact: t,
          outgoingTo: null,
          shouldDownloadMmsThumb: !1,
        };
      }
      function K(e, t) {
        return {
          result: "new",
          dbMsg: e.dbMsg,
          chat: (0, s.a)(e.dbChat, e.dbGroup),
          msg: (0, _.c)(e.dbMsg),
          updatedContact: t,
          outgoingTo: null,
          shouldDownloadMmsThumb: !1,
        };
      }
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "g", function () {
        return C;
      }),
        n.d(t, "d", function () {
          return R;
        }),
        n.d(t, "j", function () {
          return x;
        }),
        n.d(t, "n", function () {
          return U;
        }),
        n.d(t, "m", function () {
          return j;
        }),
        n.d(t, "o", function () {
          return $;
        }),
        n.d(t, "v", function () {
          return F;
        }),
        n.d(t, "f", function () {
          return B;
        }),
        n.d(t, "C", function () {
          return V;
        }),
        n.d(t, "z", function () {
          return H;
        }),
        n.d(t, "A", function () {
          return q;
        }),
        n.d(t, "B", function () {
          return z;
        }),
        n.d(t, "s", function () {
          return J;
        }),
        n.d(t, "r", function () {
          return Y;
        }),
        n.d(t, "e", function () {
          return ee;
        }),
        n.d(t, "p", function () {
          return ne;
        }),
        n.d(t, "b", function () {
          return ie;
        }),
        n.d(t, "y", function () {
          return ae;
        }),
        n.d(t, "w", function () {
          return oe;
        }),
        n.d(t, "x", function () {
          return ue;
        }),
        n.d(t, "k", function () {
          return se;
        }),
        n.d(t, "t", function () {
          return le;
        }),
        n.d(t, "a", function () {
          return de;
        }),
        n.d(t, "u", function () {
          return _e;
        }),
        n.d(t, "h", function () {
          return Pe;
        }),
        n.d(t, "i", function () {
          return Te;
        }),
        n.d(t, "l", function () {
          return Ne;
        }),
        n.d(t, "c", function () {
          return xe;
        }),
        n.d(t, "q", function () {
          return Ue;
        });
      var r = n(8),
        i = n.n(r),
        a = n(92),
        o = n(38),
        u = n(312),
        s = n(15),
        l = n(32),
        c = n(3),
        d = n(20),
        f = n(5),
        _ = n(14),
        p = n(7),
        v = n(9),
        h = n(242),
        m = n(105),
        g = n(54),
        y = (n(34), n(25)),
        b = n(49),
        w = n(35),
        O = n(95),
        E = n(2),
        I = n(6),
        S = n(42),
        k = n(62),
        L = n(33),
        G = n(40),
        M = n(254),
        A = n(11),
        P = n(251),
        T = n(46),
        N = n(36);
      function C(e) {
        return (0, T.a)(
          e.table,
          "r",
          ["authors", "status"],
          (e) => (
            performance.now(),
            D(e).then(
              (e) => (
                performance.now(),
                (function (e) {
                  var t = 0,
                    n = 0,
                    r = 0,
                    i = 0,
                    o = (0, c.D)();
                  return (
                    e.forEach((e) => {
                      var u = e.msgsCache;
                      if (0 !== u.length) {
                        var s = 0,
                          l = 0;
                        u.forEach((e) => {
                          (0, a.i)(o, e) &&
                            ((s += 1), (0, S.i)(e.ack) && (l += 1));
                        }),
                          (n += s),
                          s > 0 && (t += 1),
                          (r += l),
                          l > 0 && (i += 1);
                      }
                    }),
                    {
                      statusAvailableCountDaily: n,
                      statusAvailableRowsCountDaily: t,
                      statusViewedCountDaily: r,
                      statusViewedRowsCountDaily: i,
                    }
                  );
                })(e)
              )
            )
          )
        );
      }
      function R(e) {
        var t = performance.now();
        return (0, T.a)(e.table, "r", ["authors"], (e) =>
          (0, f.c)([D(e), we(e), Oe(e)]).then((e) => {
            var n = i()(e, 3),
              r = n[0],
              a = n[1],
              o = n[2],
              u = performance.now() - t;
            return (
              __LOG__(2)`getAllAuthors ${u}ms, ${r.length} authors`,
              { authors: r, me: a, psa: o }
            );
          })
        );
      }
      function x(e) {
        var t = performance.now();
        return (0, T.a)(e.table, "rw", ["authors", "status", "meta"], (e) =>
          (0, y.d)(e.meta, y.a.STATUS_MMS_THUMB_LAST_CHECKED).then((n) => {
            if (!n || null == n.value || !(0, c.m)(n.value, 300))
              return (0, f.c)([
                D(e),
                e.status
                  .where("ts")
                  .between((0, c.w)(_.V), (0, c.k)(_.V))
                  .toArray(),
                e.meta.put({
                  key: y.a.STATUS_MMS_THUMB_LAST_CHECKED,
                  value: (0, c.D)(),
                }),
              ]).then((e) => {
                var n = i()(e, 2),
                  r = n[0],
                  a = n[1],
                  o = performance.now() - t;
                __LOG__(
                  2
                )`getStatusMmsThumbnailsToDownload ${o}ms, ${r.length} authors & ${a.length} msgs`;
                var u = new Set();
                r.forEach((e) => {
                  e.previewMsg &&
                    "text" !== e.previewMsg.content.type &&
                    null == e.previewMsg.content.previewId &&
                    (0, c.m)(e.previewMsg.ts, _.V) &&
                    u.add(e.previewMsg.id);
                });
                var s = [];
                return (
                  a.forEach((e) => {
                    !u.has(e.id) &&
                      null == e.hasPreview &&
                      (0, O.c)(e) &&
                      s.push(e.id);
                  }),
                  { previewMsgIds: Array.from(u), otherMmsThumbnails: s }
                );
              });
            performance.now(),
              __LOG__(
                2
              )`Status opened recently, won't download extra thumbnails`;
          })
        );
      }
      function D(e) {
        return e.authors
          .where("sortBy")
          .between((0, c.w)(_.V), (0, c.k)(_.V))
          .reverse()
          .toArray();
      }
      function U(e, t, n, r) {
        return (0, T.a)(e.table, "rw", ["authors", "status", "meta"], (e) =>
          Ee(e, t).then((t) => {
            if (t)
              return (
                __LOG__(2)`markStatusAsSeen for ${t.id}`,
                Te(e, n).then((n) => {
                  var i,
                    a = [];
                  if (
                    (n.forEach((e) => {
                      if (!(0, S.i)(e.ack) && e.type !== o.c.FUTUREPROOF) {
                        if (e.campaignId) {
                          var t = e.campaignId;
                          i
                            ? i.has(t) ||
                              (__LOG__(
                                3
                              )`Tried to read two statuses from two campaigns at the same time`,
                              SEND_LOGS("psa-status-read-multiple"))
                            : (i = new Set()),
                            i.add(t);
                        }
                        (e.ack = s.a.READ), a.push(e);
                      }
                    }),
                    0 !== a.length)
                  )
                    return (function (e, t) {
                      return e.status.bulkPut(t).then(() => {});
                    })(e, a)
                      .then(
                        () =>
                          i &&
                          (function (e, t, n) {
                            return (0, y.d)(
                              e.meta,
                              y.a.PSA_STATUS_META_KEY
                            ).then((r) => {
                              var i;
                              return (
                                (i = r && r.value ? r.value : new Map()),
                                t.forEach((e) => {
                                  i.has(e) || i.set(e, n);
                                }),
                                e.meta
                                  .put({
                                    key: y.a.PSA_STATUS_META_KEY,
                                    value: i,
                                  })
                                  .then(() => i)
                              );
                            });
                          })(e, i, r)
                      )
                      .then(() => Ve(e, t))
                      .then((t) => Se(e, t))
                      .then((e) => ({ updatedMsgs: a, updatedAuthor: e }));
                  __LOG__(2)`markStatusAsSeen no updates required for ${t.id}`;
                })
              );
            __LOG__(2)`markStatusAsSeen author no longer exists`;
          })
        );
      }
      function j(e, t, n) {
        return (0, T.a)(e.table, "r", ["authors", "status"], (e) =>
          Ee(e, t).then((t) =>
            t
              ? e.status
                  .where("id")
                  .between((0, s.u)(t.id), n, !1, !0)
                  .filter((e) => !(0, S.i)(e.ack) && Be(e))
                  .toArray()
              : []
          )
        );
      }
      function $(e, t) {
        return (0, T.a)(e.table, "rw", ["authors"], (e) =>
          Ee(e, t).then((t) => (t ? ((t.muted = !0), Se(e, t)) : null))
        );
      }
      function F(e, t) {
        return (0, T.a)(e.table, "rw", ["authors"], (e) =>
          Ee(e, t).then((t) => (t ? (delete t.muted, Se(e, t)) : null))
        );
      }
      function B(e) {
        return (0, T.a)(e.table, "rw", ["status", "receipts"], (e) =>
          (function (e) {
            return Ce(e, o.a).then((e) => e.filter(Be));
          })(e).then((t) => {
            var n = t.map((e) => e.id);
            return e.receipts
              .where("msgId")
              .anyOf(n)
              .toArray()
              .then((e) => {
                var n = (0, A.t)(e, (e) => e.msgId),
                  r = {};
                return (
                  t.forEach((e) => {
                    var t = e.id,
                      i = (0, k.r)(n[t]);
                    r[t] = {
                      id: t,
                      preview: (0, m.f)((0, h.a)(e)),
                      acks: i ? (0, k.f)(i) : null,
                    };
                  }),
                  r
                );
              });
          })
        );
      }
      function V(e, t) {
        return (0, T.a)(
          e.table,
          "rw",
          [
            "authors",
            "status",
            "receipts",
            "media",
            "previews",
            "contacts",
            "groupParticipantsInfo",
          ],
          (e) => K(e, t)
        );
      }
      function K(e, t) {
        return (0, f.c)([
          (0, N.y)(e, o.a, t.msg.externalId),
          be(e),
          ve(e),
        ]).then((n) => {
          var r = i()(n, 3),
            a = r[0],
            o = r[1],
            u = r[2];
          return u
            ? a
              ? (0, k.h)(e, a.id).then((e) => ({
                  result: "deduped",
                  author: o,
                  dbMsg: a,
                  to: (e && e.to) || (0, d.f)(),
                  keyIncrement: u.info.keyIncrement || 0,
                }))
              : X(e, o, t.msg, t.media).then((t) => {
                  var n = t.dbAuthor,
                    r = t.dbMsg;
                  return (function (e, t, n) {
                    return (0, N.n)(e, n).then((n) => {
                      var r = {
                        to: (0, d.m)(Array.from(n)),
                        identityIds: new Map(),
                      };
                      return (function (e, t, n) {
                        var r = (0, k.n)(t.id, t.ts, !1, n);
                        return e.receipts.add((0, k.q)(r)).then(() => r);
                      })(e, t, r);
                    });
                  })(
                    e,
                    r,
                    (0, d.g)(u.info.participants, (e) => e !== I.t.get())
                  ).then((e) => ({
                    result: "new",
                    author: n,
                    dbMsg: r,
                    to: e.to || (0, d.f)(),
                    keyIncrement: u.info.keyIncrement || 0,
                  }));
                })
            : (__LOG__(
                4
              )`_writeOutgoingStatusMsgInTransaction tried to send status without settings`,
              void SEND_LOGS("error-status-no-settings"));
        });
      }
      function H(e, t, n) {
        return (0, T.a)(
          e.table,
          "rw",
          [
            "status",
            "authors",
            "receipts",
            "media",
            "groupParticipantsInfo",
            "previews",
            "contacts",
            "msgs",
          ],
          (r) => {
            var i = n.map((e) => e.msgId),
              a = n.length > 1;
            return e.table
              .getMsgsToForward(i)
              .then((e) => {
                var i = [];
                return n
                  .reduce(
                    (n, o) =>
                      n
                        .then(() => {
                          var n = e[o.msgId];
                          if (!n) return null;
                          if ("status" === n.type)
                            return (
                              __LOG__(
                                3
                              )`Trying to forward a status message into status ${o.msgId}`,
                              SEND_LOGS("unsupported-status-forward"),
                              null
                            );
                          var i = (0, u.d)(n, o.externalId, t, a);
                          return i ? K(r, i) : null;
                        })
                        .then((e) => {
                          e && i.push(e);
                        }),
                    (0, f.e)()
                  )
                  .then(() => i);
              })
              .then((e) =>
                0 === e.length
                  ? (__LOG__(2)`writeForwardedStatusMsgs no changes required`,
                    null)
                  : be(r).then((t) => ({ results: e, author: t }))
              );
          }
        );
      }
      function q(e, t) {
        return (0, T.a)(
          e.table,
          "rw",
          ["authors", "status", "meta", "media", "previews"],
          (e) =>
            Oe(e)
              .then((t) => t || ke(e, o.b))
              .then((n) => (0, f.f)(t.map((t) => () => Q(e, o.b, n, t))))
        );
      }
      function z(e, t, n) {
        return (0, T.a)(
          e.table,
          "rw",
          ["authors", "status", "media", "previews"],
          (e) =>
            Ee(e, t)
              .then(
                (r) =>
                  r ||
                  (r || n.msg.type === o.c.REVOKED
                    ? (__LOG__(
                        3
                      )`Got a message that shouldn't create an author, ignoring`,
                      null)
                    : ke(e, t))
              )
              .then((r) => r && Q(e, t, r, n))
        );
      }
      function W(e, t) {
        var n = [];
        return e.status
          .where("author")
          .equals(o.b)
          .filter((e) => e.campaignId === t && (n.push(e), !0))
          .delete()
          .then(() => n);
      }
      function J(e, t) {
        return (0, T.a)(
          e.table,
          "rw",
          ["authors", "status", "receipts", "media", "previews"],
          (e) =>
            (0, f.c)([Oe(e), W(e, t)]).then((n) => {
              var r = i()(n, 2),
                a = r[0],
                o = r[1];
              __LOG__(2)`Revoking ${o.length} status from campaign ${t}`;
              var u = [],
                s = [];
              return (
                o.forEach((e) => {
                  u.push(e.id), (0, w.g)(e) && s.push(e);
                }),
                (0, f.c)([
                  a && Ve(e, a).then((t) => Se(e, t)),
                  e.previews.bulkDelete(u),
                  b.Q(e, s, !1),
                ]).then((e) => {
                  var t = i()(e, 1)[0];
                  if (t) return { result: "revokedPsa", author: t };
                  __LOG__(3)`Revoke campaign received without PSA author`;
                })
              );
            })
        );
      }
      function Y(e, t) {
        return (0, T.a)(
          e.table,
          "rw",
          ["authors", "status", "receipts", "media", "previews"],
          (e) =>
            (0, f.c)([Pe(e, t), be(e)]).then((n) => {
              var r = i()(n, 2),
                a = r[0],
                u = r[1];
              if (a) {
                if (a.author !== o.a)
                  return (
                    __LOG__(
                      4
                    )`revokeStatusMsg: tried to revoke ${t} from other author.`,
                    void SEND_LOGS("revoke-other-author")
                  );
                if (a.type === o.c.REVOKED)
                  return (0, S.l)(a.ack)
                    ? void __LOG__(
                        3
                      )`revokeStatusMsg: tried to revoke already sent revoked msg`
                    : (0, k.h)(e, a.id).then((e) => ({
                        result: "removed",
                        author: u,
                        dbMsg: a,
                        to: (e && e.to) || (0, d.f)(),
                      }));
                var l = {
                    type: o.c.REVOKED,
                    rowId: a.rowId,
                    id: a.id,
                    externalId: (0, G.e)((0, L.l)(7)),
                    ts: a.ts,
                    author: o.a,
                    ack: s.a.CLOCK,
                    revokedExternalId: a.externalId,
                    altIndex: Fe("revoked", a.id),
                  },
                  c = Ue(e, l),
                  _ = (0, w.g)(a) ? b.Q(e, [a], !1) : null,
                  p = e.previews.delete(t),
                  v = (0, N.A)(e, [t]).then((e) =>
                    1 !== e.length
                      ? (__LOG__(
                          3
                        )`revokeStatusMsg: inconsistent receipts received for ${t}`,
                        void SEND_LOGS("revoke-status-receipts"))
                      : e[0]
                  );
                return (0, f.c)([v, c, _, p]).then((t) => {
                  var n = i()(t, 1)[0];
                  return ue(e).then((e) => ({
                    result: "removed",
                    author: e,
                    dbMsg: l,
                    to: (n && n.to) || (0, d.f)(),
                  }));
                });
              }
              __LOG__(
                3
              )`revokeStatusMsg: tried to revoke non-existent msg ${t}`;
            })
        );
      }
      function Q(e, t, n, r) {
        var i = r.msg,
          a = r.media;
        return (0, N.y)(e, t, i.externalId).then((t) =>
          t
            ? i.type === o.c.REVOKED
              ? (__LOG__(
                  2
                )`_writeIncomingStatusMsgInTransaction revoking msg ${t.id}`,
                (function (e, t, n) {
                  return (
                    __LOG__(2)`Revoking status msg ${(0, P.a)(n.externalId)}`,
                    (0, f.c)([
                      je(e, n.rowId),
                      e.previews.delete(n.id),
                      (0, w.g)(n) && b.Q(e, [n], !1),
                    ])
                      .then(() => Ve(e, t))
                      .then((t) => Se(e, t))
                      .then((e) => ({ updatedAuthor: e, deletedMsg: n }))
                  );
                })(e, n, t).then((e) => ({
                  result: "revoked",
                  author: e.updatedAuthor,
                  dbMsg: e.deletedMsg,
                })))
              : t.type === o.c.CIPHERTEXT && i.type !== o.c.CIPHERTEXT
              ? (__LOG__(
                  2
                )`_writeIncomingStatusMsgInTransaction clearing ciphertext ${t.id}`,
                (function (e, t, n, r, i) {
                  return (
                    __LOG__(
                      2
                    )`_updateCiphertextMsgInTransaction updating ${n.id}`,
                    (function (e, t) {
                      var n = (0, s.t)(t);
                      return e.status
                        .where("id")
                        .between(t, (0, s.w)(n), !1, !1)
                        .first();
                    })(e, n.id).then((a) => {
                      var o = null != a ? a.ack : s.a.RECEIVED,
                        u = Object.assign({}, r, {
                          rowId: n.rowId,
                          ack: o,
                          id: n.id,
                          ts: n.ts,
                          author: n.author,
                          altIndex: r.altIndex || n.altIndex,
                        });
                      return (
                        i
                          ? b.v(e, n.id, u, i).then((t) => {
                              var n = t.toStore;
                              return Ue(e, n);
                            })
                          : Ue(e, u)
                      ).then((n) =>
                        Be(n)
                          ? Ve(e, t)
                              .then((t) => Se(e, t))
                              .then((e) => ({
                                updatedMsg: n,
                                updatedAuthor: e,
                              }))
                          : { updatedMsg: n, updatedAuthor: t }
                      );
                    })
                  );
                })(e, n, t, i, a).then((t) => {
                  var n = t.updatedAuthor,
                    r = t.updatedMsg;
                  return Z(e, { result: "modified", author: n, dbMsg: r });
                }))
              : { result: "deduped", author: n, dbMsg: t }
            : i.type === o.c.REVOKED
            ? null
            : X(e, n, i, a).then((t) => {
                var n = t.dbAuthor,
                  r = t.dbMsg;
                return Z(e, { result: "new", author: n, dbMsg: r });
              })
        );
      }
      function Z(e, t) {
        var n = (function (e, t) {
          if (!(0, w.g)(e)) return !1;
          if ("@psa" === t.jid) return !0;
          if (null != e.plaintext) return !1;
          if (
            !(function (e) {
              var t,
                n =
                  null == (t = I.K.get().stats)
                    ? void 0
                    : t.externalStorageAvailSize;
              return !(
                !n ||
                (e.type === E.f.IMAGE && n < _.S * e.size
                  ? (__LOG__(
                      2
                    )`Not autodownloading img status due to lack of storage`,
                    1)
                  : (e.type === E.f.VIDEO || e.type === E.f.GIF) &&
                    n < _.T * e.size &&
                    (__LOG__(
                      2
                    )`Not autodownloading video status due to lack of storage`,
                    1))
              );
            })(e)
          )
            return (
              __LOG__(3)`Not enought storage available, do not autodownload`, !1
            );
          if (t.muted || !(0, c.m)(e.ts, _.V))
            return __LOG__(2)`No need to autodownload ${e.id}`, !1;
          var n = t.msgsCache,
            r = n.findIndex((t) => t.id === e.id);
          return -1 === r
            ? (__LOG__(3)`msgsCache got out of sync for ${e.id}`,
              SEND_LOGS("autodownload-cache-sync"),
              !1)
            : 0 === r
            ? !!t.lastExpiredWasRead
            : 1 === r
            ? t.lastExpiredWasRead || (0, S.i)(n[0].ack)
            : (0, S.i)(n[r - 1].ack) || (0, S.i)(n[r - 2].ack);
        })(t.dbMsg, t.author);
        return (0, O.c)(t.dbMsg) && t.dbMsg.media
          ? b
              .q(e, t.dbMsg.media)
              .then((e) =>
                Object.assign({}, t, {
                  shouldAutodownload: n,
                  shouldDownloadMmsThumb: null != e && (0, O.b)(e, t.dbMsg.id),
                })
              )
          : Object.assign({}, t, {
              shouldAutodownload: n,
              shouldDownloadMmsThumb: !1,
            });
      }
      function X(e, t, n, r) {
        return (function e(t, n, r) {
          var i = r,
            a = (0, l.u)(n, ++i);
          return Pe(t, a).then((r) =>
            r
              ? (__LOG__(4)`Found existing msg on new increment id`,
                SEND_LOGS("repaired-status-author-increment"),
                e(t, n, i))
              : { msgId: a, increment: i }
          );
        })(e, t.id, t.increment).then((i) => {
          var a = i.msgId,
            o = i.increment;
          return (function (e, t, n, r) {
            return r
              ? b.v(e, t, n, r).then((n) => {
                  var r = n.toStore;
                  return De(e, t, r);
                })
              : De(e, t, n);
          })(e, a, n, r).then(
            (n) => (
              (t.increment = o),
              Be(n)
                ? Ve(e, t)
                    .then((t) => Se(e, t))
                    .then((e) => ({ dbAuthor: e, dbMsg: n }))
                : Se(e, t).then(() => ({ dbAuthor: t, dbMsg: n }))
            )
          );
        });
      }
      function ee(e) {
        return (0, T.a)(e.table, "rw", ["status", "authors"], (e) =>
          (0, f.c)([
            te(e),
            Oe(e).then((t) =>
              t && !t.muted
                ? (function (e) {
                    var t = (0, c.D)();
                    return e.status
                      .where("author")
                      .equals(o.b)
                      .reverse()
                      .filter((e) => !(0, S.i)(e.ack) && !Ae(t, e) && Be(e))
                      .first();
                  })(e)
                : null
            ),
          ]).then((e) => {
            var t = i()(e, 2),
              n = t[0],
              r = t[1];
            return n && r ? (n.ts > r.ts ? n : r) : n || r;
          })
        );
      }
      function te(e) {
        return (function (e) {
          return e.authors
            .orderBy("sortBy")
            .filter((e) => "@me" !== e.jid && !e.muted)
            .toArray();
        })(e).then((t) => {
          var n = new Set();
          return (
            t.forEach((e) => {
              n.add(e.jid);
            }),
            e.status
              .where("ts")
              .above((0, c.w)(_.V))
              .reverse()
              .filter((e) => !(0, S.i)(e.ack) && n.has(e.author) && Be(e))
              .first()
          );
        });
      }
      function ne(e) {
        return (0, T.a)(
          e.table,
          "rw",
          ["status", "authors", "media", "previews", "receipts", "meta"],
          (e) =>
            (function (e) {
              return (0, f.c)([Le(e), Ge(e)]).then((e) => {
                var t = i()(e, 2);
                return [...t[0], ...t[1]];
              });
            })(e).then(
              (t) => (
                __LOG__(2)`Deleting ${t.length} status msgs`,
                re(e, t).then(() =>
                  (function (e, t) {
                    __LOG__(2)`Updating authors for deleted messages`;
                    var n = new Map();
                    return (
                      t.forEach((e) => {
                        var t = n.get(e.author);
                        Be(e) && (!t || t.ts < e.ts) && n.set(e.author, e);
                      }),
                      ye(e, Array.from(n.keys())).then((t) => {
                        var r = t
                          .map((t) => {
                            var r = n.get(t.jid);
                            return r
                              ? Ve(e, t).then(
                                  (e) => (
                                    (e.lastExpiredWasRead =
                                      (0, S.i)(r.ack) || void 0),
                                    e
                                  )
                                )
                              : null;
                          })
                          .filter(Boolean);
                        return (0, f.c)(r).then((t) =>
                          e.authors.bulkPut(t).then(() => t)
                        );
                      })
                    );
                  })(e, t)
                )
              )
            )
        );
      }
      function re(e, t) {
        var n = t.map((e) => e.id);
        return (
          __LOG__(2)`clearing ${t.length} status msgs`,
          (0, f.c)([
            b.Q(e, t, !1),
            e.receipts.bulkDelete(n),
            e.previews.bulkDelete(n),
            $e(
              e,
              t.map((e) => e.rowId)
            ),
          ])
        );
      }
      function ie(e, t) {
        return Te(e, t).then((t) =>
          re(e, t).then(() =>
            ye(
              e,
              t.map((e) => e.author)
            ).then((t) => {
              var n = t.map((t) => Ve(e, t));
              return (0, f.c)(n).then((t) =>
                e.authors.bulkPut(t).then(() => {})
              );
            })
          )
        );
      }
      function ae(e, t) {
        return (0, T.a)(e.table, "rw", ["authors", "status", "meta"], (e) =>
          t === o.a
            ? ue(e)
            : Ee(e, t).then((t) => {
                if (t) return Ve(e, t).then((t) => Se(e, t));
              })
        );
      }
      function oe(e) {
        return (0, T.a)(e.table, "rw", ["authors", "status"], (e) => ue(e));
      }
      function ue(e) {
        return (
          __LOG__(2)`Updating author me stats`,
          be(e).then((t) => Ve(e, t).then((t) => Se(e, t)))
        );
      }
      function se(e) {
        return (0, T.b)(e.table, (e) => he(e));
      }
      function le(e, t) {
        return (0, T.a)(e.table, "rw", ["groupParticipantsInfo", "meta"], (e) =>
          he(e).then((n) => {
            if (n)
              return (
                __LOG__(
                  3
                )`Tried to initialize already initialized status settings ${n.type}`,
                SEND_LOGS("initial-status-settings-twice"),
                n
              );
            __LOG__(2)`setInitialStatusPrivacy init to ${
              null == t ? void 0 : t.type
            }`;
            var r = ce(t);
            return (0, f.c)([ge(e, t), (0, N.B)(e, r)]).then(() => t);
          })
        );
      }
      function ce(e) {
        __LOG__(2)`Initializing status participants info`;
        var t = e.participants,
          n = new Map();
        return (
          t.forEach((e) => n.set((0, p.e)(e), !1)),
          {
            jid: v.h,
            participants: t,
            knowsSenderKey: n,
            keyIncrement: 0,
            rotateSenderKey: !0,
            senderKeyTimestamp: (0, c.D)(),
          }
        );
      }
      function de(e, t) {
        return (0, f.c)([
          ve(e).then((t) => {
            if (t)
              return (function (e, t) {
                return pe(e, (0, a.l)(t.settings), t).then((e) => {
                  var n = e.settings;
                  if (!(0, M.a)(n, t.settings))
                    return {
                      settings: n,
                      whitelistUpdated: !(0, d.b)(
                        n.whitelist,
                        t.settings.whitelist
                      ),
                    };
                });
              })(e, t);
            __LOG__(
              2
            )`contactsUpdatedInTransaction without existing privacy info`;
          }),
          t.length > 0 && fe(e, t),
        ]).then((e) => {
          var n = i()(e, 1)[0];
          return n
            ? {
                settings: n.settings,
                whitelistUpdated: n.whitelistUpdated,
                removed: t,
              }
            : { removed: t };
        });
      }
      function fe(e, t) {
        return (0, f.c)([ye(e, t), Re(e, t)]).then((t) => {
          var n = i()(t, 2),
            r = n[0],
            a = n[1];
          return re(e, a).then(() =>
            (function (e, t) {
              var n = [],
                r = [];
              return (
                t.forEach((e) => {
                  !(function (e) {
                    return e.muted;
                  })(e)
                    ? r.push(e.id)
                    : n.push(
                        (function (e) {
                          return {
                            id: e.id,
                            jid: e.jid,
                            muted: e.muted,
                            msgsCache: [],
                            increment: e.increment,
                          };
                        })(e)
                      );
                }),
                (0, f.c)([e.authors.bulkPut(n), e.authors.bulkDelete(r)]).then(
                  () => {
                    __LOG__(
                      2
                    )`${n.length} authors cleared, ${r.length} authors deleted`;
                  }
                )
              );
            })(e, r)
          );
        });
      }
      function _e(e, t) {
        return (0, T.a)(
          e.table,
          "rw",
          ["contacts", "groupParticipantsInfo", "meta"],
          (e) =>
            ve(e).then((n) =>
              n
                ? pe(e, t, n).then((e) => e.settings)
                : (__LOG__(
                    4
                  )`setStatusPrivacy called without being initialized`,
                  void SEND_LOGS("set-status-privacy-not-initialized"))
            )
        );
      }
      function pe(e, t, n) {
        return (
          __LOG__(
            2
          )`_putStatusPrivacySettingsInTransaction setting to ${t.type}`,
          (function (e) {
            return e.contacts
              .orderBy("phonebookPhone")
              .filter((e) => !e.noWhatsApp)
              .toArray()
              .then((e) => e.map((e) => e.jid));
          })(e).then((r) => {
            var i = n.settings,
              o = n.info,
              u = (0, a.d)(r, t, i),
              s = (function (e, t, n) {
                var r,
                  i,
                  a = (0, d.n)(t, e),
                  o = (0, d.n)(e, t);
                if (a.length > 0) {
                  __LOG__(2)`statusParticipantsInfo removed ${a.length}`;
                  var u = new Map();
                  e.forEach((e) => {
                    u.set((0, p.e)(e), !1);
                  }),
                    (r = u),
                    (i = !0);
                } else {
                  if (!(o.length > 0))
                    return void __LOG__(
                      2
                    )`statusParticipantsInfo no changes on participants list`;
                  __LOG__(2)`statusParticipantsInfo added ${o.length}`;
                  var s = new Map(n.knowsSenderKey);
                  o.forEach((e) => {
                    s.set((0, p.e)(e), !1);
                  }),
                    (r = s),
                    (i = n.rotateSenderKey);
                }
                return {
                  jid: v.h,
                  participants: e,
                  knowsSenderKey: r,
                  rotateSenderKey: i,
                  keyIncrement: n.keyIncrement,
                  senderKeyTimestamp: n.senderKeyTimestamp,
                };
              })(u.participants, i.participants, o);
            return (0, f.c)([ge(e, u), s && (0, N.B)(e, s)]).then(() => ({
              settings: u,
              info: s || o,
            }));
          })
        );
      }
      function ve(e) {
        return (0, f.c)([he(e), me(e)]).then((e) => {
          var t = i()(e, 2),
            n = t[0],
            r = t[1];
          return n
            ? ((r && (0, d.b)(r.participants, n.participants)) ||
                (__LOG__(
                  3
                )`Status settings participants are not in sync with participants info.`,
                SEND_LOGS("status-settings-participants-sync"),
                (r = ce(n))),
              { settings: n, info: r })
            : null;
        });
      }
      function he(e) {
        return (0, y.d)(e.meta, y.a.STATUS_PRIVACY_META_KEY).then((e) =>
          null == e ? void 0 : e.value
        );
      }
      function me(e) {
        return (0, N.t)(e, v.h).then((e) => e && (0, g.h)(e));
      }
      function ge(e, t) {
        return e.meta
          .put({ key: y.a.STATUS_PRIVACY_META_KEY, value: t })
          .then(() => t);
      }
      function ye(e, t) {
        return e.authors.where("jid").anyOf(t).toArray();
      }
      function be(e) {
        return we(e).then(
          (t) =>
            t ||
            (function (e) {
              return ke(e, o.a).then((e) => e);
            })(e)
        );
      }
      function we(e) {
        return e.authors.where("jid").equals(o.a).first();
      }
      function Oe(e) {
        return e.authors.where("jid").equals(o.b).first();
      }
      function Ee(e, t) {
        return e.authors.where("jid").equals(t).first();
      }
      function Ie(e, t) {
        return e.authors.where("id").equals(t).first();
      }
      function Se(e, t) {
        return (
          __LOG__(2)`Updating status author ${t.jid} increment ${t.increment}`,
          e.authors.put(t).then(() => t)
        );
      }
      function ke(e, t) {
        return Ee(e, t).then((n) => {
          if (n)
            return (
              __LOG__(4)`createEmptyAuthor: author ${t} already exists`,
              SEND_LOGS("created-author-twice"),
              n
            );
          var r = { jid: t, increment: 0, msgsCache: [] };
          return e.authors.add(r).then((e) => Object.assign({}, r, { id: e }));
        });
      }
      function Le(e) {
        return e.status
          .where("ts")
          .below((0, c.w)(_.V))
          .toArray()
          .then((e) =>
            e.filter(
              (e) => e.author !== o.b && (e.author !== o.a || (0, S.l)(e.ack))
            )
          );
      }
      function Ge(e) {
        return (0, f.c)([
          e.status.where("author").equals(o.b).toArray(),
          Me(e),
        ]).then((e) => {
          var t = i()(e, 2),
            n = t[0],
            r = t[1],
            a = (0, c.D)();
          return n.filter((e) => Ae(a, e, r));
        });
      }
      function Me(e) {
        return (0, y.d)(e.meta, y.a.PSA_STATUS_META_KEY).then((e) => {
          if (e && e.value) return e.value;
        });
      }
      function Ae(e, t, n) {
        if (!t.campaignId) return __LOG__(4)`PSA status without campaignId`, !0;
        var r = t.campaignId,
          i = n && n.get(r);
        return null != i
          ? !(0, c.n)(e, i, _.V)
          : null != t.campaignDuration &&
              !(0, c.n)(e, t.ts, t.campaignDuration);
      }
      function Pe(e, t) {
        return e.status.where("id").equals(t).first();
      }
      function Te(e, t) {
        return e.status.where("id").anyOf(t).toArray();
      }
      function Ne(e, t) {
        return (0, T.a)(e.table, "r", ["authors", "status"], (e) => {
          var n = (0, s.t)(t);
          return (0, f.c)([Pe(e, t), Ie(e, n)]).then((e) => {
            var t = i()(e, 2),
              n = t[0],
              r = t[1];
            if (null != n)
              return null == r
                ? (__LOG__(
                    4
                  )`Found status ${n.id} but not its author (supposed to be ${n.author})`,
                  void SEND_LOGS(
                    "statusDb-getStatusWithAuthorFromId-statusWithoutAuthor"
                  ))
                : { dbStatus: n, dbStatusAuthor: r };
          });
        });
      }
      function Ce(e, t) {
        return e.status.where("author").equals(t).toArray();
      }
      function Re(e, t) {
        return e.status.where("author").anyOf(t).toArray();
      }
      function xe(e, t) {
        if (t) {
          var n = (0, w.g)(t) && t.media,
            r = (0, w.n)(t) && t.hasPreview;
          if (!n && !r) return { dbMsg: t, preview: null, dbMedia: null };
          var a = b.j(e, t),
            o = n ? b.l(e, n) : null;
          return (0, f.c)([o, a]).then((e) => {
            var n = i()(e, 2),
              r = n[0],
              a = n[1];
            return { dbMsg: t, dbMedia: r, preview: a };
          });
        }
      }
      function De(e, t, n) {
        var r = Object.assign({}, n, { id: t, altIndex: Fe(n.altIndex, t) });
        return e.status.add(r).then((e) => {
          var t = r;
          return (t.rowId = e), t;
        });
      }
      function Ue(e, t) {
        return e.status.put(t).then(() => t);
      }
      function je(e, t) {
        return e.status.delete(t);
      }
      function $e(e, t) {
        return e.status.bulkDelete(t);
      }
      function Fe(e, t) {
        return `${e || "x"}-${t}`;
      }
      function Be(e) {
        return (
          e.type === o.c.FUTUREPROOF ||
          e.type === o.c.TEXT ||
          e.type === o.c.IMAGE ||
          e.type === o.c.VIDEO ||
          e.type === o.c.GIF ||
          e.type === o.c.PTT
        );
      }
      function Ve(e, t) {
        return (function (e, t) {
          var n = t.jid === o.b ? Me(e) : null;
          return (0, f.c)([Ce(e, t.jid), n]).then((e) => {
            var n,
              r = i()(e, 2),
              a = r[0],
              o = r[1],
              u = [];
            a.sort((e, t) => e.ts - t.ts).forEach((e) => {
              if (Be(e)) {
                var t = { id: e.id, ts: e.ts, ack: e.ack },
                  r = e.campaignId;
                r &&
                  ((t.campaignId = r),
                  (t.campaignDuration = e.campaignDuration),
                  o && o.has(r) && (t.campaignReadTs = o.get(r))),
                  u.push(t),
                  (n = e);
              }
            });
            var s = (0, g.o)(t.jid, {
              user: (e) => {
                var t;
                return {
                  sortBy: null == (t = n) ? void 0 : t.ts,
                  previewMsg: n && (0, h.a)(n),
                };
              },
              me: () => ({ sortBy: void 0, previewMsg: n && (0, h.a)(n) }),
              psa: () => ({ sortBy: void 0, previewMsg: void 0 }),
            });
            return { sortBy: s.sortBy, previewMsg: s.previewMsg, msgsCache: u };
          });
        })(e, t).then((e) => {
          var n = e.sortBy,
            r = e.previewMsg,
            i = e.msgsCache,
            a = Object.assign({}, t);
          return (
            (a.msgsCache = i),
            n ? (a.sortBy = n) : delete a.sortBy,
            r ? (a.previewMsg = r) : delete a.previewMsg,
            a
          );
        });
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return i;
      }),
        n.d(t, "b", function () {
          return a;
        }),
        n.d(t, "c", function () {
          return o;
        });
      var r = n(85),
        i = (0, r.d)("BufferTooLarge", !1),
        a = (0, r.d)("Disconnected", !1),
        o = (0, r.d)("Offline", !1, a);
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return c.c;
      }),
        n.d(t, "b", function () {
          return u.a;
        }),
        n.d(t, "d", function () {
          return f;
        }),
        n.d(t, "c", function () {
          return _;
        });
      var r = n(133),
        i = n(3);
      function a(e, t, n) {
        return (r, i, a) => (e(r, i, a) ? t(r, i, a) : n(r, i, a));
      }
      function o(e, t, n) {
        var r = { requirements: e, code: t, stopRetryIf: n };
        return () => r;
      }
      var u = n(51),
        s = n(281),
        l = n(12),
        c = n(4),
        d = null;
      function f() {
        return (
          null == d &&
            (d = (0, l.d)() ? new s.a("page api") : new s.b("page api")),
          d
        );
      }
      function _() {
        return new (class e {
          constructor(e) {
            this.steps = e;
          }
          step(e, t) {
            return this.Yz(e, "function" == typeof t ? { code: t } : t);
          }
          Yz(t, n) {
            var u,
              s = n.stopRetryIf,
              l = o(n.requirements, n.code, s);
            if (s) {
              var c = s.timePassedSeconds,
                d = s.appCrashed,
                f = o(
                  null,
                  ((u = s.onStopRetry),
                  (e, t, n) =>
                    Promise.resolve(u(e, t, n)).then((e) =>
                      e instanceof r.b ? e : new r.b(e)
                    )),
                  s
                );
              null != c &&
                (l = a(
                  (e, t, n) => {
                    var r = n.jobStartTime;
                    return (0, i.m)(r, c);
                  },
                  l,
                  f
                )),
                d && (l = a((e, t, n) => !n.afterCrash, l, f));
            }
            return new e([...this.steps, { stepName: t, info: l }]);
          }
          finalStep(e, t) {
            var n = this.step(e, t);
            return { end: () => n.steps };
          }
        })([]);
      }
    },
    function (e, t, n) {
      n.d(t, "c", function () {
        return a;
      });
      var r = n(12),
        i = n(133);
      function a(e) {
        if (!(0, r.d)()) throw new i.d(e);
      }
      n.d(t, "a", function () {
        return i.d;
      }),
        n.d(t, "b", function () {
          return i.e;
        });
    },
    function (e, t, n) {
      n.d(t, "e", function () {
        return p;
      }),
        n.d(t, "f", function () {
          return v;
        }),
        n.d(t, "c", function () {
          return h;
        }),
        n.d(t, "a", function () {
          return m;
        }),
        n.d(t, "j", function () {
          return g;
        }),
        n.d(t, "i", function () {
          return y;
        }),
        n.d(t, "h", function () {
          return w;
        }),
        n.d(t, "d", function () {
          return O;
        }),
        n.d(t, "b", function () {
          return E;
        }),
        n.d(t, "k", function () {
          return I;
        }),
        n.d(t, "g", function () {
          return S;
        });
      var r = n(34),
        i = n(2),
        a = n(119),
        o = n(12),
        u = n(50),
        s = n(89),
        l = n(37),
        c = n.n(l),
        d = n(11),
        f = n(43),
        _ = n(115);
      function p(e) {
        return (0, d.h)(e)
          .then((e) => (0, _.a)(e))
          .then((e) => (0, f.e)(new Uint8Array(e)));
      }
      function v(e) {
        return e & r.d.IMAGE
          ? "image"
          : e & r.d.STICKER
          ? "sticker"
          : e & r.d.PTT
          ? "ptt"
          : e & r.d.AUDIO
          ? "audio"
          : e & r.d.GIF
          ? "gif"
          : e & r.d.VIDEO
          ? "video"
          : e & r.d.MD_HISTORY
          ? "md-msg-hist"
          : e & r.d.THUMBNAIL_DOCUMENT
          ? "thumbnail-document"
          : e & r.d.THUMBNAIL_IMAGE
          ? "thumbnail-image"
          : e & r.d.THUMBNAIL_LINK
          ? "thumbnail-link"
          : e & r.d.THUMBNAIL_VIDEO
          ? "thumbnail-video"
          : e & r.d.THUMBNAIL_GIF
          ? "thumbnail-gif"
          : e & r.d.MD_APP_STATE
          ? "md-app-state"
          : (e & r.d.DOCUMENT ||
              (__LOG__(4)`endpointForType unrecognized ${e}`,
              SEND_LOGS("unrecognized-endpoint-for-media-type")),
            "document");
      }
      function h(e) {
        return "/mms/" + v(e);
      }
      function m(e) {
        return e & (r.d.IMAGE | r.d.STICKER)
          ? "image"
          : e & (r.d.PTT | r.d.AUDIO)
          ? "audio"
          : e & (r.d.GIF | r.d.VIDEO)
          ? "video"
          : e & r.d.MD_HISTORY
          ? "history"
          : e & r.d.THUMBNAIL_DOCUMENT
          ? "thumbnail-document"
          : e & r.d.THUMBNAIL_IMAGE
          ? "thumbnail-image"
          : e & r.d.THUMBNAIL_LINK
          ? "thumbnail-link"
          : e & r.d.THUMBNAIL_VIDEO
          ? "thumbnail-video"
          : e & r.d.THUMBNAIL_GIF
          ? "thumbnail-gif"
          : e & r.d.MD_APP_STATE
          ? "md-app-state"
          : (e & r.d.DOCUMENT || __LOG__(4)`baseType unrecognized type ${e}`,
            "doc");
      }
      function g(e) {
        if (e === i.f.IMAGE) return r.d.THUMBNAIL_IMAGE;
        if (e === i.f.VIDEO) return r.d.THUMBNAIL_VIDEO;
        if (e === i.f.GIF) return r.d.THUMBNAIL_GIF;
        if (e === i.f.DOCUMENT) return r.d.THUMBNAIL_DOCUMENT;
        if (e === i.f.TEXT) return r.d.THUMBNAIL_LINK;
        throw new Error("msgTypeToMediaType bad type " + e);
      }
      function y(e) {
        if (e === i.f.IMAGE) return r.d.IMAGE;
        if (e === i.f.PTT) return r.d.PTT;
        if (e === i.f.AUDIO) return r.d.AUDIO;
        if (e === i.f.VIDEO) return r.d.VIDEO;
        if (e === i.f.GIF) return r.d.GIF;
        if (e === i.f.RICH_HSM) return r.d.RICH_HSM;
        if (e === i.f.DOCUMENT) return r.d.DOCUMENT;
        if (e === i.f.STICKER) return r.d.STICKER;
        throw new Error("msgTypeToMediaType bad type " + e);
      }
      var b = "image/jpeg";
      function w(e) {
        switch (e.type) {
          case i.f.IMAGE:
            return b;
          case i.f.STICKER:
          case i.f.PTT:
          case i.f.AUDIO:
          case i.f.VIDEO:
          case i.f.GIF:
          case i.f.DOCUMENT:
            return e.mimetype;
          case i.f.RICH_HSM:
            var t = e.richContent;
            if (null == t) return null;
            switch (t.type) {
              case i.f.IMAGE:
                return b;
              case i.f.VIDEO:
                return t.mimetype;
              case i.f.LOCATION:
                return null;
              case i.f.DOCUMENT:
                return t.mimetype;
              default:
                return (0, c.a)(t.type);
            }
          default:
            return (0, c.a)(e.type);
        }
      }
      function O(e) {
        return (0, u.q)(e, {
          uri: (e) => (0, a.getChunkTable)().getFullContent(e, !1),
          path: (e) => (
            (0, s.c)("getFullMediaContent"),
            (0, o.e)("page", "getBlobFromPhoneStorage", { path: e }).then(
              (e) => e.blob
            )
          ),
        });
      }
      function E(e) {
        return (0, u.q)(e, {
          uri: (e) => (0, a.getChunkTable)().deleteMediaContent(e),
          path: (e) => (
            (0, s.c)("deleteMediaContent"),
            (0, o.e)("page", "deletePath", { path: e })
          ),
        });
      }
      function I(e, t) {
        if (null != e.quoted) return { preview: t };
      }
      function S(e, t, n) {
        if (n || t) {
          var r,
            i = null == n ? void 0 : n.mediaEntries[e],
            a = i && "mms4" === i.version ? i : null,
            o = null == n ? void 0 : n.plaintextHash,
            u = (null == n ? void 0 : n.progressiveJpegScanNumber)
              ? null == n
                ? void 0
                : n.partialPlaintextHash
              : null,
            s =
              null == n || null == (r = n.mmsThumb)
                ? void 0
                : r.thumbPlaintextHash;
          return t
            ? {
                preview: t,
                mediaEntry: a,
                plaintextHash: o,
                partialPlaintextHash: u,
                thumbPlaintextHash: s,
              }
            : {
                preview: null,
                mediaEntry: a,
                plaintextHash: o,
                partialPlaintextHash: u,
                thumbPlaintextHash: s,
              };
        }
        return null;
      }
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "k", function () {
        return M;
      }),
        n.d(t, "b", function () {
          return P;
        }),
        n.d(t, "d", function () {
          return T;
        }),
        n.d(t, "c", function () {
          return N;
        }),
        n.d(t, "m", function () {
          return C;
        }),
        n.d(t, "l", function () {
          return R;
        }),
        n.d(t, "a", function () {
          return x;
        }),
        n.d(t, "f", function () {
          return D;
        }),
        n.d(t, "e", function () {
          return U;
        }),
        n.d(t, "i", function () {
          return j;
        }),
        n.d(t, "j", function () {
          return $;
        }),
        n.d(t, "h", function () {
          return F;
        }),
        n.d(t, "g", function () {
          return B;
        });
      var r = n(30),
        i = n(86),
        a = [
          "image",
          "sticker",
          "ptt",
          "audio",
          "document",
          "video",
          "gif",
          "ppic",
          "md-app-state",
          "md-msg-hist",
          "kyc-id",
          "template",
          "thumbnail-image",
          "thumbnail-video",
          "thumbnail-gif",
          "thumbnail-document",
          "thumbnail-link",
          "payment-bg-image",
          "novi-video",
          "novi-image",
          "product",
          "product-catalog-image",
          "xma-image",
          "biz-cover-photo",
          "preview",
        ],
        o = new (n(51).a)("mediaConnParser", (e) => {
          var t,
            n,
            r = e.child("media_conn");
          return {
            hosts: r.mapChildrenWithTag("host", s),
            authToken: r.attrString("auth"),
            authTTL: r.hasAttr("auth_ttl")
              ? r.attrFutureTime("auth_ttl")
              : null,
            authExpires: r.attrFutureTime("ttl"),
            maxBuckets: r.hasAttr("max_buckets")
              ? r.attrInt("max_buckets")
              : null,
            maxManualRetry:
              null != (t = r.maybeAttrInt("max_manual_retry", 0, 4)) ? t : 3,
            maxAutoDownloadRetry:
              null != (n = r.maybeAttrInt("max_auto_download_retry", 0, 4))
                ? n
                : 3,
          };
        });
      function u(e) {
        var t, n;
        if (e.hasAttr("fallback_hostname"))
          return {
            domain: e.attrString("fallback_hostname"),
            class: e.maybeAttrString("fallback_class"),
            ip4: null != (t = e.maybeAttrString("fallback_ip4")) ? t : void 0,
            ip6: null != (n = e.maybeAttrString("fallback_ip6")) ? n : void 0,
          };
      }
      function s(e) {
        var t, n, r, i;
        return {
          domain: e.attrString("hostname"),
          fallback: u(e),
          uploadable: l(e, "upload"),
          downloadable: l(e, "download"),
          isFallback: "fallback" === e.maybeAttrString("type"),
          downloadBuckets:
            null !=
            (t =
              null == (n = e.maybeChild("download_buckets"))
                ? void 0
                : n.mapChildren((e) => parseInt(e.tag(), 10)))
              ? t
              : [],
          class: e.maybeAttrString("class"),
          ip4: null != (r = e.maybeAttrString("ip4")) ? r : void 0,
          ip6: null != (i = e.maybeAttrString("ip6")) ? i : void 0,
        };
      }
      function l(e, t) {
        return e.hasChild(t)
          ? e
              .child(t)
              .mapChildren((e) =>
                (function (e) {
                  switch (e) {
                    case "image":
                    case "sticker":
                    case "ptt":
                    case "audio":
                    case "document":
                    case "video":
                    case "gif":
                    case "ppic":
                    case "md-app-state":
                    case "md-msg-hist":
                    case "kyc-id":
                    case "thumbnail-image":
                    case "thumbnail-video":
                    case "thumbnail-gif":
                    case "thumbnail-document":
                    case "thumbnail-link":
                    case "payment-bg-image":
                    case "novi-video":
                    case "novi-image":
                    case "template":
                    case "product":
                    case "product-catalog-image":
                    case "xma-image":
                    case "biz-cover-photo":
                    case "preview":
                      return e;
                    default:
                      return null;
                  }
                })(e.tag())
              )
              .filter(Boolean)
          : a;
      }
      var c = n(129),
        d = n(249),
        f = n(28),
        _ = n(4),
        p = (0, c.a)(
          () => "gatherMediaInfo",
          function () {
            var e = new d.a({
              name: "gatherMediaInfo",
              timer: {
                jitter: 0.25,
                max: 987e3,
                algo: { type: "fibonacci", first: 6e3, second: 12e3 },
                relativeDelay: !0,
              },
              code: v,
            });
            return e.start(), e.promise();
          }
        );
      function v(e) {
        var t = (0, _.w)(
          "iq",
          { to: _.l, xmlns: "w:m", type: "set", id: (0, _.u)() },
          (0, _.w)("media_conn", null)
        );
        return (0, r.d)(t, o, 60)
          .then((t) => {
            if (t.success)
              __LOG__(2)`gatherMediaInfo got ${t.result.hosts.length} hosts`,
                e((0, f.c)(t.result));
            else if (
              (__LOG__(2)`gatherMediaInfo failure ${t}`, 507 === t.errorCode)
            ) {
              var n = t.errorBackoff;
              __LOG__(2)`gatherMediaInfo got ${n} seconds backoff`,
                e((0, f.b)({ type: "backoff", backoffMs: 1e3 * n }));
            } else
              t.errorCode < 500 &&
                (__LOG__(2)`gatherMediaInfo got client error: ${t.errorCode}`,
                e(
                  (0, f.b)({
                    type: "client-error",
                    code: t.errorCode,
                    text: t.errorText,
                  })
                ));
          })
          .catch((t) => {
            t instanceof i.b
              ? e((0, f.b)("disconnected"))
              : __LOG__(4)`gatherMediaInfo error ${t}`;
          });
      }
      var h = n(3),
        m = n(81),
        g = n(12),
        y = n(6),
        b = n(66),
        w = n(105),
        O = n(276),
        E = n(173);
      function I(e) {
        var t = null,
          n = null,
          r = null,
          i = e.hosts,
          a = e.operation,
          o = e.mediaType;
        if ("download" === e.operation) {
          var u,
            s = e.catHotTimespan,
            l = e.ncHot,
            c = e.getVcaEnabledBucket,
            d = new Map();
          i.forEach((e) => {
            e.downloadBuckets.forEach((t) => {
              d.set(t, e);
            });
          });
          var f = d.get(0);
          s > 0 && ("sticker" === o || (null != l && (0, h.m)((0, h.i)(l), s)))
            ? (t = 1)
            : c && (t = c());
          var _ = null;
          null != t && (_ = d.get(t)),
            (null == (u = _) ? void 0 : u.downloadable.includes(o))
              ? (n = _)
              : (null == f ? void 0 : f.downloadable.includes(o)) && (n = f);
        }
        for (var p = 0; p < i.length; p++) {
          var v = i[p];
          if (
            (v.isFallback && null == r && (r = v),
            "upload" === a
              ? null == n && v.uploadable.includes(o) && (n = v)
              : null == n && v.downloadable.includes(o) && (n = v),
            null != n && null != r)
          )
            break;
        }
        return { selectedHost: n, fallbackHost: r, bucket: t };
      }
      var S = n(90),
        k = n(165),
        L = n(110),
        G = null;
      function M(e) {
        null != e.overallDownloadResult &&
          null != e.overallMediaType &&
          WAM.log("regular", 1590, void 0, [
            28,
            1,
            !0,
            31,
            0,
            0,
            24,
            2,
            e.debugMediaException,
            22,
            2,
            e.debugMediaIp,
            23,
            2,
            e.debugUrl,
            20,
            3,
            e.downloadBytesTransferred,
            15,
            0,
            e.downloadConnectT,
            18,
            0,
            e.downloadHttpCode,
            17,
            1,
            e.downloadIsReuse,
            19,
            1,
            e.downloadIsStreaming,
            16,
            0,
            e.downloadNetworkT,
            37,
            0,
            e.downloadQuality,
            14,
            0,
            e.downloadResumePoint,
            21,
            0,
            e.downloadTimeToFirstByteT,
            36,
            3,
            e.estimatedBandwidth,
            42,
            3,
            e.expressPathBytesSaved,
            43,
            0,
            e.expressPathTimeSavedMs,
            44,
            1,
            e.hasLeveragedExpressPath,
            41,
            1,
            e.isViewOnce,
            38,
            0,
            e.mediaId,
            30,
            0,
            e.networkStack,
            4,
            0,
            e.overallAttemptCount,
            39,
            0,
            e.overallBackendStore,
            10,
            0,
            e.overallConnBlockFetchT,
            29,
            2,
            e.overallConnectionClass,
            27,
            0,
            e.overallCumT,
            12,
            0,
            e.overallDecryptT,
            5,
            2,
            e.overallDomain,
            11,
            0,
            e.overallDownloadMode,
            35,
            0,
            e.overallDownloadOrigin,
            25,
            0,
            e.overallDownloadResult,
            13,
            0,
            e.overallFileValidationT,
            26,
            1,
            e.overallIsFinal,
            7,
            3,
            e.overallMediaSize,
            1,
            0,
            e.overallMediaType,
            6,
            0,
            e.overallMmsVersion,
            9,
            0,
            e.overallQueueT,
            3,
            0,
            e.overallRetryCount,
            8,
            0,
            e.overallT,
            40,
            2,
            e.usedFallbackHint,
          ]);
      }
      function A(e) {
        return (function (e) {
          return K("pickHosts", (e) => e.mediaAccess()).then((t) => {
            if ("disconnected" === t) return "disconnected";
            var n,
              r,
              i = t.access,
              a = i.hosts,
              o = i.authToken,
              u = i.maxBuckets,
              s = t.timeElapsed;
            if ("upload" === e.operationType) {
              var l = I({
                operation: "upload",
                mediaType: (0, S.f)(e.mediaType),
                hosts: a,
              });
              (n = l.selectedHost), (r = l.fallbackHost);
            } else {
              var c,
                d = null;
              "mms4" === e.version &&
                ((c = (function (e, t) {
                  return function () {
                    return null == t ? null : (0, k.a)(e, t) + 100;
                  };
                })(e.ciphertextHash, u)),
                (d = (function (e) {
                  if (null == e) return null;
                  var t,
                    n =
                      ((t = e.split("?")),
                      new URLSearchParams(2 === t.length ? t[1] : ""));
                  if (n.has("_nc_hot")) {
                    var r = parseInt(n.get("_nc_hot"), 10);
                    return Number.isInteger(r) ? (0, h.i)(r) : null;
                  }
                  return null;
                })(e.mediaDirectPath)));
              var f = I({
                operation: "download",
                mediaType: (0, S.f)(e.mediaType),
                hosts: a,
                catHotTimespan: y.I.get().mmsHotContentTimespan,
                ncHot: d,
                getVcaEnabledBucket: c,
              });
              (n = f.selectedHost), (r = f.fallbackHost);
            }
            return n
              ? { host: n, fallbackHost: r, authToken: o, timeElapsed: s }
              : "no-hosts";
          });
        })(e).then((t) =>
          "no-hosts" === t || "disconnected" === t
            ? t
            : new E.c(
                e.operationType,
                {
                  authToken: t.authToken,
                  host: { domain: t.host.domain, class: t.host.class },
                  fallbackHost: t.fallbackHost && {
                    domain: t.fallbackHost.domain,
                    class: t.fallbackHost.class,
                  },
                  timeElapsed: t.timeElapsed,
                },
                r.o
              )
        );
      }
      function P(e) {
        return A({ operationType: "upload", mediaType: e, version: "mms4" });
      }
      function T(e, t, n) {
        return A({
          operationType: "download",
          version: "mms4",
          mediaType: e,
          mediaDirectPath: t,
          ciphertextHash: n,
        });
      }
      function N(e) {
        return A({ operationType: "download", version: "mms3", mediaType: e });
      }
      function C() {
        if (!G) {
          __LOG__(2)`startMedia invoked`;
          var e = new (class {
            constructor() {
              (this.Zn = null),
                (this.Zo = null),
                (this.queue = new m.a()),
                (this.Zp = new m.b()),
                (this.pendingMmsThumbDownloads = new Set()),
                (this.Zq = new Map()),
                (this.Zr = new Map()),
                (this.Zs = new Set()),
                (this.STATUS_IDLE = { type: "idle" }),
                (this.STATUS_PENDING = { type: "pending" }),
                (this.STATUS_ERROR_NOT_ENOUGH_SPACE = {
                  type: "error",
                  error: "notEnoughSpace",
                }),
                (this.STATUS_ERROR_TOO_BIG = {
                  type: "error",
                  error: "tooBig",
                }),
                (this.STATUS_ERROR_DISCONNECTED = {
                  type: "error",
                  error: "disconnected",
                }),
                (this.getActiveStatus = (e) =>
                  this.Zs.has(e)
                    ? this.STATUS_IDLE
                    : this.Zr.has(e)
                    ? this.Zr.get(e) || this.STATUS_IDLE
                    : this.Zq.get(e) || this.STATUS_IDLE);
            }
            disconnected() {
              (this.Zn = null), (this.Zo = null);
            }
            mediaAccess() {
              if (
                this.Zn &&
                "disconnected" !== this.Zo &&
                (null == this.Zo || (0, h.y)(this.Zo) > 0)
              )
                return this.Zn.then((e) =>
                  "disconnected" === e
                    ? "disconnected"
                    : { access: e, timeElapsed: null }
                );
              var e = (0, h.t)();
              return (
                (this.Zo = null),
                (this.Zn = (function e() {
                  return p().then((t) =>
                    t.success
                      ? t.value
                      : "disconnected" === t.error
                      ? "disconnected"
                      : "client-error" === t.error.type
                      ? "client-error"
                      : (t.error.type,
                        (0, L.a)(t.error.backoffMs).then(() => e()))
                  );
                })().then((e) =>
                  "disconnected" === e || "client-error" === e
                    ? ((this.Zo = "disconnected"), "disconnected")
                    : ((this.Zo = e.authExpires), e)
                )),
                this.Zn.then((t) =>
                  "disconnected" === t
                    ? "disconnected"
                    : { access: t, timeElapsed: (0, h.u)(e) }
                )
              );
            }
            msgMediaStatusUpdated(e, t) {
              (0, g.c)("event", "msgMediaStatusUpdated", {
                msgId: e,
                mediaStatus: t,
              });
            }
            clearDownload(e) {
              this.Zq.delete(e), this.Zs.delete(e);
            }
            updateDownload(e, t) {
              this.Zq.set(e, t),
                this.Zs.has(e) || this.msgMediaStatusUpdated(e, t);
            }
            updateUploadStatus(e, t, n) {
              this.Zr.set(e, t), null == n && this.msgMediaStatusUpdated(e, t);
            }
            isDownloading(e) {
              return this.Zq.has(e);
            }
            clearCancellation(e) {
              return this.Zs.delete(e);
            }
            isDownloadCancelled(e) {
              return this.Zs.has(e);
            }
            cancelDownload(e) {
              this.Zs.add(e),
                this.Zq.has(e) &&
                  this.msgMediaStatusUpdated(e, this.STATUS_IDLE);
            }
          })();
          (G = e), (0, b.a)(e.getActiveStatus), (0, w.a)(e.getActiveStatus);
        }
      }
      function R() {
        G && null != G.Zo && ((G.Zn = null), (G.Zo = null));
      }
      function x(e) {
        K("cancelMedia", (t) => {
          __LOG__(2)`cancelMedia cancelling ${e}`, t.cancelDownload(e);
        });
      }
      function D(e, t) {
        return K("enqueueExtractFrame", (n) => n.queue.enqueue(() => t(e)));
      }
      function U(e, t, n) {
        return K(
          "enqueueDownload",
          (r) => (
            r.clearCancellation(e) &&
              __LOG__(2)`_doDownload overpowering cancellation for ${e}`,
            r.isDownloading(e)
              ? (__LOG__(3)`_shouldDownload twice for same msgId ${e}`,
                Promise.resolve())
              : r.queue
                  .enqueueHandlers(t(r), (e) => n(r, e))
                  .finally(() => {
                    r.clearDownload(e);
                  })
          )
        );
      }
      function j(e, t) {
        return K("enqueueDownload", (n) =>
          n.pendingMmsThumbDownloads.has(e)
            ? (__LOG__(3)`enqueueThumbDownload twice for same msgId ${e}`,
              Promise.resolve())
            : (n.pendingMmsThumbDownloads.add(e),
              n.queue
                .enqueue(() => t(n))
                .finally(() => {
                  n.pendingMmsThumbDownloads.delete(e);
                }))
        );
      }
      function $(e, t, n) {
        return K("enqueueUpload", (r) =>
          r.Zr.has(e)
            ? (__LOG__(4)`enqueueUpload twice for same msgId ${e}`,
              Promise.resolve())
            : (r.updateUploadStatus(e, r.STATUS_PENDING, n),
              r.queue
                .enqueue(() => t(r))
                .finally(() => {
                  r.Zr.delete(e);
                }))
        );
      }
      function F(e, t, n, r) {
        return V(t, () => (0, O.d)(e, n, r));
      }
      function B(e, t, n) {
        return V(t, () => (0, O.b)(e, t, n, null)).then(() => {});
      }
      function V(e, t) {
        return K("enqueueFinalizeMedia", (n) => n.Zp.enqueue(e.toString(), t));
      }
      function K(e, t) {
        if (!G) throw new Error(`MediaManager::${e} called before startMedia`);
        return t(G);
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "g", function () {
        return l;
      }),
        n.d(t, "h", function () {
          return c;
        }),
        n.d(t, "b", function () {
          return d;
        }),
        n.d(t, "c", function () {
          return f;
        }),
        n.d(t, "a", function () {
          return _;
        }),
        n.d(t, "f", function () {
          return p;
        }),
        n.d(t, "e", function () {
          return v;
        }),
        n.d(t, "d", function () {
          return h;
        });
      var r = n(2),
        i = n(17),
        a = n(35),
        o = n(32),
        u = n(6),
        s = n(3);
      function l(e) {
        return (
          (e.type === r.f.DOCUMENT && void 0 === e.isVCard) ||
          ((0, a.m)(e) &&
            (e.type === r.f.IMAGE ||
              e.type === r.f.VIDEO ||
              e.type === r.f.GIF))
        );
      }
      function c(e, t) {
        return (0, o.I)(e, {
          chat: () => t.type === r.f.DOCUMENT && void 0 === t.isVCard,
          status: () =>
            t.type === r.f.IMAGE || t.type === r.f.VIDEO || t.type === r.f.GIF,
        });
      }
      function d(e, t) {
        var n = e.mediaEntries[t];
        return n
          ? (null != n.progressiveJpeg && null != n.directPath) ||
              (null != e.mmsThumb &&
                null != n.mmsThumb &&
                null != n.mmsThumb.directPath)
          : (__LOG__(
              3
            )`hasMmsThumbnailInfo no entry found on ${e.mediaId}:${t}`,
            !1);
      }
      function f(e) {
        if (e.author !== r.b && l(e) && "mms" !== e.hasPreview) {
          if (
            e.type === r.f.DOCUMENT &&
            (0, i.a)("download_document_thumb_mms_enabled")
          )
            return !0;
          if (
            (0, a.m)(e) &&
            (0, a.e)(e) &&
            (0, i.a)("download_status_thumb_mms_enabled") &&
            (null == (t = u.J.get().tabLastOpened) || (0, s.m)(t, 14 * s.b))
          )
            return !0;
        }
        var t;
        return !1;
      }
      function _(e) {
        return e.type === r.f.DOCUMENT && !e.isVCard;
      }
      function p(e) {
        if (l(e)) {
          if (
            e.type === r.f.DOCUMENT &&
            (0, i.a)("upload_document_thumb_mms_enabled")
          )
            return !0;
          if (
            (0, a.m)(e) &&
            (0, a.e)(e) &&
            (0, i.a)("upload_status_thumb_mms_enabled")
          )
            return !0;
        }
        return !1;
      }
      function v(e) {
        return (
          !(!l(e) || "mms" !== e.hasPreview || e.type !== r.f.DOCUMENT) &&
          (0, i.a)("send_document_thumb_in_message_disabled")
        );
      }
      function h(e) {
        return (
          !l(e) ||
          "mms" !== e.hasPreview ||
          !(0, i.a)("send_status_thumb_in_message_disabled")
        );
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "f", function () {
        return c;
      }),
        n.d(t, "b", function () {
          return f;
        }),
        n.d(t, "d", function () {
          return _;
        }),
        n.d(t, "c", function () {
          return p;
        }),
        n.d(t, "e", function () {
          return v;
        }),
        n.d(t, "a", function () {
          return h;
        });
      var r = n(56),
        i = n(84),
        a = n(43),
        o = n(7),
        u = n(2),
        s = n(52),
        l = [
          "conversation",
          "imageMessage",
          "contactMessage",
          "locationMessage",
          "extendedTextMessage",
          "documentMessage",
          "audioMessage",
          "videoMessage",
          "call",
          "chat",
          "protocolMessage",
          "contactsArrayMessage",
          "highlyStructuredMessage",
          "templateMessage",
          "fastRatchetKeySenderKeyDistributionMessage",
          "sendPaymentMessage",
          "requestPaymentMessage",
          "liveLocationMessage",
          "stickerMessage",
          "groupInviteMessage",
          "viewOnceMessage",
          "viewOnceMessageV2",
          "ephemeralMessage",
          "reactionMessage",
          "deviceSentMessage",
          "pollCreationMessage",
          "pollUpdateMessage",
          "keepInChatMessage",
        ];
      function c(e) {
        for (
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0,
            n = null,
            r = 0;
          r < l.length;
          r++
        )
          if (e[l[r]]) {
            if (n)
              return (
                __LOG__(4)`interpretProto msg came with tags ${n} and ${l[r]}`,
                null
              );
            n = l[r];
          }
        if (!n && e.senderKeyDistributionMessage) return null;
        if (!n) return { type: "futureproof" };
        switch (n) {
          case "viewOnceMessage":
            break;
          case "viewOnceMessageV2":
            if (!(0, s.a)()) return { type: "viewOnceMessageV2Disabled" };
            if (!(0, s.v)()) {
              var i = e[n];
              return i ? { type: "viewOnceMessageV2", value: i } : null;
            }
            break;
          case "ephemeralMessage":
            break;
          case "deviceSentMessage":
            return (
              __LOG__(
                3
              )`interpretProto: Received deviceSentMessage but companions is not supported`,
              { type: "futureproof" }
            );
          default:
            return { type: n, value: e[n] };
        }
        return d(e[n], t);
      }
      function d(e, t) {
        if (t >= 2)
          return (
            __LOG__(
              4
            )`unwrapExplicitlyFutureProofMsg: msg had too many futureproof layers`,
            null
          );
        var n = null == e ? void 0 : e.message;
        return null != n
          ? c(n, t + 1)
          : (__LOG__(
              4
            )`unwrapExplicitlyFutureProofMsg: msg had invalid futureproof message`,
            null);
      }
      function f(e) {
        switch (e.type) {
          case "extendedTextMessage":
          case "imageMessage":
          case "videoMessage":
          case "audioMessage":
          case "documentMessage":
          case "contactMessage":
          case "contactsArrayMessage":
          case "groupInviteMessage":
          case "stickerMessage":
          case "liveLocationMessage":
          case "locationMessage":
          case "pollCreationMessage":
          case "templateMessage":
            return e.value.contextInfo;
          default:
            e.type;
        }
      }
      function _(e) {
        var t = {
          externalId: e.externalId,
          ts: e.ts,
          author: (0, o.h)(e.author),
          deviceId: (0, o.f)(e.author),
          ack: u.a.RECEIVED,
          urlNumber: e.urlNumber,
          urlText: e.urlText,
          altIndex: "",
        };
        return (
          e.bspInfo && (t.bizInfo = { bsp: e.bspInfo }),
          null != e.expiration && (t.expiration = e.expiration),
          e.broadcastJid && (t.broadcastJid = e.broadcastJid),
          null != e.messageSecret && (t.secret = e.messageSecret),
          t
        );
      }
      function p(e) {
        var t = e.fileSha256;
        if (t) {
          var n = e.fileLength;
          if (n) {
            try {
              n = (0, i.e)(n);
            } catch (e) {
              return void __LOG__(4)`protobuf msg with too large size ${n}`;
            }
            return { size: n, plaintextHash: (0, a.e)(new Uint8Array(t)) };
          }
          __LOG__(4)`protobuf msg with bad size ${n}`;
        } else __LOG__(4)`protobuf msg with no plaintext hash`;
      }
      function v(e) {
        return e.jpegThumbnail;
      }
      function h(e) {
        return null == e
          ? null
          : e === r.a.INITIATED_BY_ME
          ? r.a.INITIATED_BY_OTHER
          : e === r.a.INITIATED_BY_OTHER
          ? r.a.INITIATED_BY_ME
          : e;
      }
    },
    function (e, t, n) {
      function r(e) {
        return (
          "old_version" === e ||
          "blocked" === e ||
          "missing_param" === e ||
          "bad_param" === e
        );
      }
      function i(e, t, n, r, i) {
        var a = t.localNumber,
          o = t.country;
        return "blocked" === n
          ? {
              type: "ENTERING_PHONE_NUMBER",
              prefill: { country: o, localNumber: a },
              state: { type: r, reason: "blocked", localNumber: a, cc: o.cc },
            }
          : "old_version" === n
          ? { type: "BLOCKED", error: { reason: n, localNumber: a, cc: o.cc } }
          : "missing_param" === n
          ? {
              type: "ENTERING_PHONE_NUMBER",
              prefill: { country: o, localNumber: a },
              state: {
                type: r,
                reason: "missing_param",
                localNumber: a,
                cc: o.cc,
                param: i,
              },
            }
          : "number" === i
          ? {
              type: "ENTERING_PHONE_NUMBER",
              prefill: { country: o, localNumber: a },
              state: {
                type: r,
                reason: "bad_param",
                localNumber: a,
                cc: o.cc,
                param: i,
              },
            }
          : {
              type: "BLOCKED",
              error: { reason: "bad_param", localNumber: a, cc: o.cc },
            };
      }
      function a(e, t, n) {
        return {
          type: "ENTERING_PHONE_NUMBER",
          prefill: { country: t, localNumber: e },
          state: { type: n, reason: "unknown", localNumber: e, cc: t.cc },
        };
      }
      n.d(t, "b", function () {
        return r;
      }),
        n.d(t, "a", function () {
          return i;
        }),
        n.d(t, "c", function () {
          return a;
        });
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return d;
      }),
        n.d(t, "e", function () {
          return f;
        }),
        n.d(t, "f", function () {
          return _;
        }),
        n.d(t, "d", function () {
          return p;
        }),
        n.d(t, "b", function () {
          return v;
        }),
        n.d(t, "c", function () {
          return h;
        });
      var r = n(38),
        i = n(92),
        a = n(37),
        o = n.n(a),
        u = n(139),
        s = n(54),
        l = n(35),
        c = null;
      function d(e) {
        c = e;
      }
      function f(e) {
        var t, n, a, o;
        switch (e.type) {
          case r.c.TEXT:
            o = {
              type: "text",
              text: e.text.trim(),
              hexBackgroundColor: (0, i.c)(e.backgroundColor),
              linkPreview: e.linkPreview,
              linkPreviewImage: e.hasPreview
                ? { previewId: e.id, backgroundColor: e.bg }
                : void 0,
              fromFb: e.fromFb,
              actionLink: e.actionLink,
            };
            break;
          case r.c.IMAGE:
            o = {
              type: "image",
              mediaStatus: (0, u.a)(e, c),
              preview: (0, l.a)(e),
              highResPreview: null,
              height: e.height,
              width: e.width,
              caption: null == (t = e.text) ? void 0 : t.trim(),
              bg: e.bg,
              size: e.size,
              actionLink: e.actionLink,
            };
            break;
          case r.c.VIDEO:
            o = {
              type: "video",
              mediaStatus: (0, u.a)(e, c),
              duration: e.duration,
              rotation: e.rotation,
              size: e.size,
              width: e.width,
              height: e.height,
              caption: null == (n = e.text) ? void 0 : n.trim(),
              preview: (0, l.a)(e),
              highResPreview: e.frame,
              bg: e.bg,
              actionLink: e.actionLink,
            };
            break;
          case r.c.GIF:
            o = {
              type: "gif",
              mediaStatus: (0, u.a)(e, c),
              duration: e.duration,
              rotation: e.rotation,
              size: e.size,
              width: e.width,
              height: e.height,
              caption: null == (a = e.text) ? void 0 : a.trim(),
              preview: (0, l.a)(e),
              highResPreview: e.frame,
              bg: e.bg,
              actionLink: e.actionLink,
            };
            break;
          case r.c.PTT:
            o = {
              type: "voice",
              backgroundColor: e.backgroundColor,
              duration: e.duration,
              mediaStatus: (0, u.a)(e, c),
              isPtt: !0,
              size: e.size,
            };
            break;
          default:
            o = {
              type: "text",
              text: "",
              hexBackgroundColor: e.bg || "black",
              linkPreview: void 0,
              linkPreviewImage: void 0,
              fromFb: void 0,
            };
        }
        return { id: e.id, ack: e.ack, content: o, authorJid: e.author };
      }
      function _(e) {
        if (null == e) return null;
        var t = e.content;
        switch (t.type) {
          case "text":
            return {
              type: "text",
              text: t.text,
              hexBackgroundColor: (0, i.c)(t.backgroundColor),
            };
          case "image":
          case "gif":
          case "video":
            return (function (e) {
              if (e.previewId || e.bg)
                return { type: "media", previewId: e.previewId, bgColor: e.bg };
            })(t);
          case "voice":
            return { type: "voice", backgroundColor: t.backgroundColor };
          default:
            return (0, o.a)(t.type);
        }
      }
      function p(e, t) {
        return (0, r.d)(e, { me: (e) => v(e, t), other: (e) => h(e, t) });
      }
      function v(e, t) {
        var n = m(e, t);
        return { jid: r.a, preview: _(e.previewMsg), msgs: n };
      }
      function h(e, t) {
        var n = m(e, t);
        if (0 !== n.length) {
          var a = (0, i.g)(n),
            o = e.muted ? "muted" : 0 === a.count ? "viewed" : "recent";
          return (0, s.o)(e.jid, {
            user: (t) => {
              var r = e.sortBy;
              if (null != r)
                return {
                  id: e.id,
                  jid: t,
                  muted: e.muted,
                  sortBy: r,
                  preview: _(e.previewMsg),
                  msgs: n,
                  section: o,
                  unread: a,
                };
              __LOG__(
                3
              )`sortStatusAuthors received author ${e.jid} without sortBy.`;
            },
            me: () => (
              __LOG__(4)`sortStatusAuthors received unexpected author ${e.jid}`,
              null
            ),
            psa: () => ({
              id: e.id,
              jid: r.b,
              muted: e.muted,
              msgs: n,
              sortBy: Number.MAX_SAFE_INTEGER,
              section: o,
              unread: a,
            }),
          });
        }
      }
      function m(e, t) {
        return e.msgsCache.filter((e) => (0, i.i)(t, e));
      }
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "j", function () {
        return a;
      }),
        n.d(t, "a", function () {
          return o;
        }),
        n.d(t, "c", function () {
          return u;
        }),
        n.d(t, "i", function () {
          return s;
        }),
        n.d(t, "k", function () {
          return l;
        }),
        n.d(t, "b", function () {
          return c;
        }),
        n.d(t, "f", function () {
          return d;
        }),
        n.d(t, "g", function () {
          return p;
        }),
        n.d(t, "l", function () {
          return S;
        }),
        n.d(t, "d", function () {
          return k;
        }),
        n.d(t, "h", function () {
          return L;
        }),
        n.d(t, "e", function () {
          return G;
        }),
        n.d(t, "m", function () {
          return A;
        });
      var r = n(48),
        i = null;
      function a(e) {
        var t = i;
        i = [];
        try {
          return e();
        } finally {
          var n;
          (null != (n = i) ? n : []).forEach((e) => {
            e.fill(0);
          }),
            (i = t);
        }
      }
      function o(e, t) {
        if (null == i)
          throw new Error("allocate called outside of active scope");
        return new e(t);
      }
      function u(e, t, n) {
        r.d.crypto_hash(e, t, n);
      }
      function s(e, t) {
        for (var n = 0; n < 64; ++n) (t[n] = e[n]), (e[n] = 0);
        d(e, t), t.fill(0);
      }
      function l(e, t) {
        var n = [c(), c(), c(), c()];
        r.d.scalarbase(n, t), L(e, n);
      }
      function c(e) {
        var t = o(Float64Array, 16);
        if (e) {
          if (e.length > 16)
            throw new Error(
              "Incorrect initialiser array provided to the fieldElement"
            );
          for (var n = 0; n < e.length; n++) t[n] = e[n];
        }
        return t;
      }
      function d(e, t) {
        r.d.modL(e, t);
      }
      var f = () => c([0]),
        _ = () => c([1]);
      function p() {
        return [c(), c(), c(), c()];
      }
      function v() {
        return [c(), c(), c()];
      }
      function h(e, t) {
        for (var n = 0, r = t; r > 0; ) {
          var i = r % 65536;
          (e[n] = i), (r = (r - i) / 65536), n++;
        }
      }
      function m(e, t) {
        var n = r.d.S,
          i = r.d.M,
          a = c([2]),
          o = c();
        n(o, t), i(e, a, o);
      }
      function g(e, t) {
        var n = r.d.S,
          i = r.d.M,
          a = r.d.A,
          o = f(),
          u = _(),
          s = c(),
          l = c(),
          d = c(),
          p = c();
        h(o, 486662), n(s, t), i(l, o, t), a(d, s, l), a(p, d, u), i(e, t, p);
      }
      function y(e, t, n) {
        1 === n && e.set(t);
      }
      var b = new Uint8Array([
        176, 160, 14, 74, 39, 27, 238, 196, 120, 228, 47, 173, 6, 24, 67, 47,
        167, 215, 251, 61, 153, 0, 77, 43, 11, 223, 193, 79, 128, 36, 131, 43,
      ]);
      function w(e, t) {
        (0, r.d.Z)(e, f(), t);
      }
      function O(e, t) {
        var n = r.d.M;
        n(e[0], t[0], t[3]), n(e[1], t[1], t[2]), n(e[2], t[2], t[3]);
      }
      function E(e, t) {
        var n = r.d.S,
          i = r.d.A,
          a = r.d.Z;
        n(e[0], t[0]), n(e[2], t[1]), m(e[3], t[2]), i(e[1], t[0], t[1]);
        var o = c();
        n(o, e[1]),
          i(e[1], e[2], e[0]),
          a(e[2], e[2], e[0]),
          a(e[0], o, e[1]),
          a(e[3], e[3], e[2]);
      }
      var I = new Uint8Array([
        6, 126, 69, 255, 170, 4, 110, 204, 130, 26, 125, 75, 209, 211, 161, 197,
        126, 79, 252, 3, 220, 8, 123, 210, 187, 6, 160, 96, 244, 237, 38, 15,
      ]);
      function S(e, t) {
        var n = p();
        return 0 !== A(n, t)
          ? -1
          : ((function (e, t) {
              w(e[0], t[0]), e[1].set(t[1]), e[2].set(t[2]), w(e[3], t[3]);
            })(e, n),
            0);
      }
      function k(e) {
        return a(() =>
          (function (e) {
            var t = r.d.unpack25519,
              n = (0, r.a)(e),
              i = (128 & n[31]) >> 7;
            n[31] &= 127;
            var u = c();
            t(u, n);
            var s = c();
            (function (e, t) {
              a(() =>
                (function (e, t) {
                  var n = r.d.M,
                    i = r.d.A,
                    a = t,
                    o = _(),
                    u = f();
                  h(u, 486662);
                  var s = c();
                  m(s, a);
                  var l = c();
                  i(l, s, o);
                  var d = c();
                  G(d, l);
                  var p = c();
                  n(p, d, u);
                  var v = c();
                  w(v, p);
                  var b = c();
                  g(b, v);
                  var O = (function (e) {
                      var t = r.d.S,
                        n = r.d.M,
                        i = r.d.pow2523,
                        a = r.d.pack25519,
                        o = c(),
                        u = c(),
                        s = c(),
                        l = c(),
                        d = c();
                      i(o, e), t(u, o), t(s, u), n(l, s, e), n(d, l, e);
                      var f = new Uint8Array(32);
                      return a(f, d), 1 & f[31];
                    })(b),
                    E = c([0]);
                  y(E, u, O);
                  var I = c();
                  i(I, v, E);
                  var S = c();
                  w(S, I), y(I, S, O), e.set(I);
                })(e, t)
              );
            })(s, u);
            var l = p();
            (function (e, t, n) {
              var i = r.d.unpack25519,
                a = r.d.M,
                u = c();
              i(u, I);
              var s = c();
              (function (e, t) {
                var n = r.d.Z,
                  i = r.d.A,
                  a = r.d.M,
                  o = _(),
                  u = c(),
                  s = c(),
                  l = c();
                n(u, t, o), i(s, t, o), G(l, s), a(e, u, l);
              })(s, t);
              var l = c();
              g(l, t);
              var d = c();
              (function (e, t) {
                var n = r.d.unpack25519,
                  i = r.d.pow2523,
                  a = r.d.M,
                  o = r.d.S,
                  u = c();
                n(u, b);
                var s = c();
                i(s, t);
                var l = c();
                a(l, t, s);
                var d = c();
                o(d, l);
                var f = c();
                a(f, l, u), y(l, f, 1 ^ (M(d, t) ? 0 : 1)), e.set(l);
              })(d, l);
              var f = c();
              a(f, t, u);
              var p = c();
              G(p, d);
              var v = c();
              a(v, f, p);
              var h,
                m,
                O = c();
              w(O, v),
                y(
                  v,
                  O,
                  ((h = v),
                  (0, r.d.pack25519)((m = o(Uint8Array, 32)), h),
                  (1 & m[0]) ^ n)
                ),
                e[0].set(v),
                e[1].set(s),
                e[2].set(_()),
                a(e[3], e[0], e[1]);
            })(l, s, i);
            var d = p();
            return (
              (function (e, t) {
                var n = [c(), c(), c(), c()],
                  i = v();
                (function (e, t) {
                  var n = v();
                  (function (e, t) {
                    e[0].set(t[0]), e[1].set(t[1]), e[2].set(t[2]);
                  })(n, t),
                    E(e, n);
                })(n, t),
                  O(i, n),
                  E(n, i),
                  O(i, n),
                  E(n, i),
                  (function (e, t) {
                    var n = r.d.M;
                    n(e[0], t[0], t[3]),
                      n(e[1], t[1], t[2]),
                      n(e[2], t[2], t[3]),
                      n(e[3], t[0], t[1]);
                  })(e, n);
              })(d, l),
              d
            );
          })(e)
        );
      }
      function L(e, t) {
        var n = c(),
          i = c(),
          a = c(),
          o = r.d.M,
          u = r.d.pack25519;
        G(a, t[2]), o(n, t[0], a), o(i, t[1], a), u(e, i);
        var s = new Uint8Array(32);
        u(s, n), (e[31] ^= (1 & s[0]) << 7);
      }
      function G(e, t) {
        var n = c();
        n.set(t);
        for (var i = r.d.M, a = r.d.S, o = 253; o >= 0; --o)
          a(n, n), 2 !== o && 4 !== o && i(n, n, t);
        e.set(n);
      }
      function M(e, t) {
        var n = r.d.pack25519,
          i = r.d.crypto_verify_32,
          a = new Uint8Array(32),
          o = new Uint8Array(32);
        return n(a, e), n(o, t), i(a, 0, o, 0);
      }
      function A(e, t) {
        var n,
          i,
          a = r.d.set25519,
          o = r.d.S,
          u = r.d.M,
          s = r.d.Z,
          l = r.d.A,
          d = r.d.D,
          p = r.d.unpack25519,
          v = r.d.pow2523,
          h = c(),
          m = c(),
          g = c(),
          y = c(),
          b = c(),
          w = c(),
          O = c();
        return (
          a(e[2], _()),
          p(e[1], t),
          o(g, e[1]),
          u(y, g, d),
          s(g, g, e[2]),
          l(y, e[2], y),
          o(b, y),
          o(w, b),
          u(O, w, b),
          u(h, O, g),
          u(h, h, y),
          v(h, h),
          u(h, h, g),
          u(h, h, y),
          u(h, h, y),
          u(e[0], h, y),
          o(m, e[0]),
          u(m, m, y),
          M(m, g) &&
            u(
              e[0],
              e[0],
              c([
                41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207,
                15867, 153, 11085, 57099, 20417, 9344, 11139,
              ])
            ),
          o(m, e[0]),
          u(m, m, y),
          M(m, g)
            ? -1
            : ((n = e[0]),
              (0, r.d.pack25519)((i = new Uint8Array(32)), n),
              (1 & i[0]) == t[31] >> 7 && s(e[0], f(), e[0]),
              u(e[3], e[0], e[1]),
              0)
        );
      }
    },
    function (e, t, n) {
      n.d(t, "c", function () {
        return o;
      });
      var r = n(51);
      n.d(t, "b", function () {
        return r.a;
      });
      var i = n(4);
      n.d(t, "a", function () {
        return i.a;
      });
      var a = 1;
      function o(e, t, n) {
        var r = 1;
        return function (i, o) {
          var u = `ServerJob.${a++} ${e}.${r++}`;
          __LOG__(2)`${u}: starting`;
          var s = t.parse(i);
          if (s.error)
            return (
              __LOG__(4)`${u}: ${s.error} parsing ${i}`, Promise.reject(s.error)
            );
          var l = Promise.resolve()
            .then(() => n(s.success, o))
            .then(
              (e) => (__LOG__(2)`${u}: success`, "NO_ACK" === e ? null : e)
            );
          return (
            l.catch((e) => {
              __LOG__(4)`${u}: error ${e}`;
            }),
            l
          );
        };
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return i;
      }),
        n.d(t, "b", function () {
          return a;
        });
      var r = n(43);
      function i(e) {
        return Promise.resolve(
          self.crypto.subtle.digest({ name: "SHA-256" }, e)
        );
      }
      function a(e) {
        return Promise.resolve(i(e).then(r.d));
      }
    },
    function (e, t, n) {
      n.d(t, "o", function () {
        return x;
      }),
        n.d(t, "p", function () {
          return K;
        }),
        n.d(t, "h", function () {
          return H;
        }),
        n.d(t, "f", function () {
          return q;
        }),
        n.d(t, "g", function () {
          return z;
        }),
        n.d(t, "a", function () {
          return W;
        }),
        n.d(t, "l", function () {
          return J;
        }),
        n.d(t, "m", function () {
          return Y;
        }),
        n.d(t, "b", function () {
          return Q;
        }),
        n.d(t, "k", function () {
          return Z;
        }),
        n.d(t, "i", function () {
          return X;
        }),
        n.d(t, "q", function () {
          return ee;
        }),
        n.d(t, "d", function () {
          return te;
        }),
        n.d(t, "e", function () {
          return ne;
        }),
        n.d(t, "c", function () {
          return re;
        }),
        n.d(t, "j", function () {
          return ie;
        }),
        n.d(t, "n", function () {
          return ae;
        }),
        n.d(t, "r", function () {
          return oe;
        });
      var r = n(8),
        i = n.n(r),
        a = n(26),
        o = n.n(a),
        u = n(167),
        s = n(68),
        l = n(6),
        c = n(41),
        d = n(215),
        f = n(22),
        _ = (n(67), n(33)),
        p = n(81),
        v = n(365),
        h = n(12),
        m = n(7),
        g = n(3),
        y = n(39),
        b = n(16),
        w = n(143),
        O = (n(71), n(296)),
        E = n(30),
        I = n(4),
        S = (n(9), n(74)),
        k = n(216),
        L = n(17),
        G = n(250),
        M = null,
        A = new s.a(),
        P = new s.a(),
        T = !1,
        N = null,
        C = null;
      function R() {
        return (
          M ||
            (__LOG__(2)`voip::getVoipService`,
            (M = (0, u.a)("voip", { onConnect: j, onDisconnect: F }))),
          A.promise
        );
      }
      function x() {
        R();
      }
      function D() {
        return (D = o()(function* (e) {
          return (
            "offer" === e.type &&
              (0, L.a)("calling_privacy_caller_send_token") &&
              (yield (0, G.d)((0, m.h)(e.peerJid), (0, g.D)())),
            A.promise.then((t) => {
              if (t) return t.handleIncomingAck(e).then((e) => e);
            })
          );
        })).apply(this, arguments);
      }
      var U = { beforeAccept: null, ending: null, busy: null };
      function j(e) {
        if (!l.o.get())
          return (
            __LOG__(2)`voip::onSessionConnected: VOIP service is not supported`,
            void A.resolve()
          );
        if (
          "undefined" == typeof lib_wavoip ||
          null == lib_wavoip.WaVoipService
        )
          return (
            __LOG__(
              4
            )`voip::onSessionConnected cannot find lib_wavoip.WaVoipService`,
            void A.resolve()
          );
        var t = lib_wavoip.WaVoipService,
          n = t.CallEvent,
          r = t.CallState,
          a = t.CallLogResult,
          o = t.FieldStateType,
          u = t.ClientPlatform,
          s = function (e) {
            switch (e) {
              case r.None:
                return "none";
              case r.Calling:
                return "calling";
              case r.PreacceptReceived:
                return "ringing";
              case r.ReceivedCall:
                return "incoming";
              case r.AcceptSent:
                return "loading";
              case r.AcceptReceived:
                return "ringing";
              case r.CallActive:
              case r.CallActiveElseWhere:
                return "ongoing";
              default:
                return "none";
            }
          },
          f = function (e) {
            switch (e) {
              case u.Unknown:
                return "unknown";
              case u.Android:
                return "android";
              case u.iPhone:
                return "iphone";
              case u.WP:
                return "wp";
              case u.iOSTablet:
                return "ios_tablet";
              case u.Kaios:
                return "kaios";
              case u.Windows:
                return "windows";
              case u.Portal:
                return "portal";
              default:
                return "unknown";
            }
          },
          _ = class extends t.EventCallback {
            constructor(e, t, n) {
              super(e, t),
                (this.callResult = null),
                (this.uiContext = null),
                (this.peerPlatform = null),
                (this.peerAppVersion = null),
                (this.wavoip = n),
                (U.beforeAccept = null),
                (U.ending = null),
                (U.busy = null);
            }
            manageCallStateChange(e, t, n, r, i, a) {
              if (
                ("none" === e &&
                  null != U.busy &&
                  (clearTimeout(U.busy), (U.busy = null)),
                "none" === e && "ongoing" === t)
              )
                (0, h.c)("event", "callStateChanged", {
                  state: "ending",
                  peerJid: n,
                  isCaller: r,
                  isLocallyMuted: i,
                });
              else if (
                "none" !== e ||
                "ringing" !== t ||
                !1 !== a ||
                ("missed" !== this.callResult && "rejected" !== this.callResult)
              )
                null != U.ending && (clearTimeout(U.ending), (U.ending = null)),
                  (0, h.c)("event", "callStateChanged", {
                    state: e,
                    peerJid: n,
                    isCaller: r,
                    isLocallyMuted: i,
                  });
              else {
                var o =
                  "missed" === this.callResult
                    ? "ending-missed"
                    : "ending-rejected";
                (0, h.c)("event", "callStateChanged", {
                  state: o,
                  peerJid: n,
                  isCaller: r,
                  isLocallyMuted: i,
                });
              }
              "none" === e &&
                ((this.callResult = null),
                (this.uiContext = null),
                (this.peerPlatform = null),
                (this.peerAppVersion = null));
            }
            startTimeoutBeforeAccept(e) {
              null == U.beforeAccept &&
                (U.beforeAccept = setTimeout(() => {
                  this.wavoip.endCall(!0), this.stopTimeoutBeforeAccept();
                }, e));
            }
            stopTimeoutBeforeAccept() {
              null != U.beforeAccept &&
                (clearTimeout(U.beforeAccept), (U.beforeAccept = null));
            }
            manageTimeoutBeforeAccept(e) {
              e === r.ReceivedCall
                ? this.startTimeoutBeforeAccept(45e3)
                : e === r.Calling || e === r.PreacceptReceived
                ? this.startTimeoutBeforeAccept(9e4)
                : this.stopTimeoutBeforeAccept();
            }
            onEvent(e, t) {
              switch (e) {
                case n.CallRejectReceived:
                  "busy" === (null == t ? void 0 : t.reason)
                    ? ((0, h.c)("event", "callBusyReceived", {}),
                      null == U.busy &&
                        (U.busy = setTimeout(() => {
                          this.wavoip.endCall(!0), (U.busy = null);
                        }, 3e4)))
                    : this.wavoip.endCall(!1);
                  break;
                case n.CallStateChanged:
                  var r = null == t ? void 0 : t.callInfo,
                    i = null == t ? void 0 : t.oldCallState;
                  if (null == r || null == i) return;
                  var o = r.callState,
                    u = r.peerJid,
                    _ = r.isCaller,
                    p = r.participants,
                    v = r.callEndedByMe,
                    g = r.callId,
                    w = p && p.find((e) => e.jid === l.t.get()),
                    O = w && w.isMuted,
                    E = s(o),
                    I = s(i);
                  if (
                    (this.manageCallStateChange(E, I, u, _, O, v),
                    this.manageTimeoutBeforeAccept(o),
                    _ && "none" !== E && null != N)
                  ) {
                    var S = N,
                      k = S.id,
                      L = S.uiContext,
                      G = S.peerPlatform,
                      M = S.peerAppVersion;
                    k === g &&
                      ((this.uiContext = L),
                      (this.peerPlatform = G),
                      (this.peerAppVersion = M));
                  }
                  if (!_ && "none" !== E && null != C) {
                    var A = C,
                      P = A.id,
                      T = A.peerPlatform,
                      R = A.peerAppVersion;
                    P === g &&
                      ((this.peerPlatform = T), (this.peerAppVersion = R));
                  }
                  break;
                case n.CallEnding:
                  var x = t || {},
                    D = x.callInfo,
                    j = x.callLogInfo,
                    $ = D || {},
                    F = $.callId,
                    B = $.initialPeerJid,
                    V = $.isCaller,
                    K = $.callDuration,
                    H = j || {},
                    q = H.result,
                    z = H.totalTxBytes;
                  (null != F && null != B && null != V && null != q) ||
                    __LOG__(
                      2
                    )`Voip::EventCallback::onEvent CallEvent.CallEnding missing required data in payload to update the call log`;
                  var W = (function (e) {
                    switch (e) {
                      case a.Invalid:
                        return "invalid";
                      case a.Cancelled:
                        return "cancelled";
                      case a.Missed:
                        return "missed";
                      case a.Unavailable:
                        return "unavailable";
                      case a.Rejected:
                        return "rejected";
                      case a.Connected:
                        return "connected";
                      default:
                        return "invalid";
                    }
                  })(q);
                  (this.callResult = W),
                    (0, y.b)().fireAndForget(
                      b.e.finalizeCallLog(
                        { callId: F, peer: B, isFromMe: V },
                        W,
                        K,
                        z
                      )
                    );
                  break;
                case n.RxTimeout:
                case n.TxTimeout:
                  this.wavoip.endCall(!0);
                  break;
                case n.MuteStateChanged:
                  var J = t || {},
                    Y = J.isMuted,
                    Q = J.jid;
                  (0, h.c)("event", "callMuteStateChanged", {
                    isMuted: Y,
                    jid: Q,
                  });
                  break;
                case n.RejectedDecryptionFailure:
                  var Z = t || {},
                    X = Z.callId,
                    ee = Z.peerJid,
                    te = Z.registrationId,
                    ne = (0, m.e)(ee);
                  (0, c.D)(ne).then((e) => {
                    var t = () => {
                      this.wavoip.resendOfferOnDecryptionFailure(ee, X);
                    };
                    e && e !== te
                      ? (__LOG__(
                          2
                        )`Voip::EventCallback::onEvent CallEvent.RejectedDecryptionFailure delete session`,
                        (0, c.k)(ne)
                          .then(() => (0, d.ensureE2eSession)(ne))
                          .then(t))
                      : t();
                  });
                  break;
                case n.CallMissed:
                  var re = t || {},
                    ae = re.callId,
                    oe = re.peerJid,
                    ue = re.peerPlatform,
                    se = re.peerAppVersion,
                    le = re.isVideoCall,
                    ce = re.callWakeupSource,
                    de = re.timeElapsedSinceCallOffer,
                    fe = re.abTestBucket;
                  (null != ae && null != oe) ||
                    __LOG__(
                      2
                    )`Voip::EventCallback::onEvent CallEvent.CallMissed missing callId or peerJid in payload`,
                    (0, y.b)().fireAndForget(
                      b.e.finalizeCallLog(
                        { callId: ae, peer: oe, isFromMe: !1 },
                        "missed"
                      )
                    );
                  var _e = "" === fe ? null : fe;
                  ie({
                    callId: ae,
                    callPeerPlatform: f(ue),
                    callPeerAppVersion: se,
                    videoEnabled: le,
                    callTestBucket: _e,
                    callWakeupSource: ce,
                    callOfferElapsedT: de,
                  });
                  break;
                case n.InterruptionStateChanged:
                  var pe = t || {},
                    ve = pe.isInterrupted,
                    he = pe.jid;
                  (0, h.c)("event", "callInterruptedStateChanged", {
                    isInterrupted: ve,
                    jid: he,
                  });
                  break;
                case n.CallOfferNacked:
                  var me = (t || {}).errors,
                    ge = (Array.isArray(me) ? me[0] : {}) || {},
                    ye = ge.code,
                    be = ge.jid;
                  null != ye &&
                    null != be &&
                    (0, h.c)("event", "callOfferNacked", { code: ye, jid: be }),
                    this.wavoip.endCall(!1);
              }
              return Promise.resolve();
            }
            onFieldStatsReady(e) {
              if (null != e) {
                var t = e.stats.reduce((e, t) => {
                    var n = t.id,
                      r = t.value,
                      i = t.fieldType;
                    if (null == r || null == i) return e;
                    var a = null,
                      u = null;
                    switch (i) {
                      case o.ENUM:
                      case o.TIMER:
                      case o.BYTES:
                      case o.INT:
                        u = 0;
                        var s = parseInt(r, 10);
                        a = isNaN(s) ? null : s;
                        break;
                      case o.BOOL:
                        (u = 1), (a = "true" === r || ("false" !== r && null));
                        break;
                      case o.STR:
                        (u = 2), (a = r);
                        break;
                      case o.FLOAT:
                        u = 3;
                        var l = parseFloat(r);
                        a = isNaN(l) ? null : l;
                    }
                    return null != a && null != u && e.push([n, u, a]), e;
                  }, []),
                  n = {};
                if (null != this.uiContext)
                  switch (this.uiContext) {
                    case "conversation":
                      n.callFromUi = 8;
                      break;
                    case "conversationOptions":
                      n.callFromUi = 29;
                      break;
                    case "callLogInfo":
                      n.callFromUi = 4;
                      break;
                    case "callLogListIncoming":
                      n.callFromUi = 9;
                      break;
                    case "callLogListOutgoing":
                      n.callFromUi = 2;
                      break;
                    case "callLogListMissed":
                      n.callFromUi = 1;
                      break;
                    case "chatList":
                      n.callFromUi = 27;
                      break;
                    case "contactInfo":
                    case "contactInfoVoiceCall":
                      n.callFromUi = 6;
                      break;
                    case "newCall":
                      n.callFromUi = 16;
                      break;
                    default:
                      this.uiContext, (n.callFromUi = 28);
                  }
                return (
                  null != this.peerPlatform &&
                    (n.callPeerPlatform = this.peerPlatform),
                  null != this.peerAppVersion &&
                    (n.callPeerAppVersion = this.peerAppVersion),
                  WAM.log(
                    "regular",
                    462,
                    void 0,
                    [
                      1016,
                      0,
                      n.acceptAckLatencyMs,
                      1015,
                      0,
                      n.acceptedButNotConnectedTimeSpentMs,
                      412,
                      0,
                      n.activeRelayProtocol,
                      1186,
                      0,
                      n.aflDisPrefetchFailure1x,
                      1187,
                      0,
                      n.aflDisPrefetchFailure2x,
                      1188,
                      0,
                      n.aflDisPrefetchFailure4x,
                      1189,
                      0,
                      n.aflDisPrefetchFailure8x,
                      1190,
                      0,
                      n.aflDisPrefetchFailureTotal,
                      1191,
                      0,
                      n.aflDisPrefetchSuccess1x,
                      1192,
                      0,
                      n.aflDisPrefetchSuccess2x,
                      1193,
                      0,
                      n.aflDisPrefetchSuccess4x,
                      1194,
                      0,
                      n.aflDisPrefetchSuccess8x,
                      1195,
                      0,
                      n.aflDisPrefetchSuccessTotal,
                      1196,
                      0,
                      n.aflNackFailure1x,
                      1197,
                      0,
                      n.aflNackFailure2x,
                      1198,
                      0,
                      n.aflNackFailure4x,
                      1199,
                      0,
                      n.aflNackFailure8x,
                      1200,
                      0,
                      n.aflNackFailureTotal,
                      1201,
                      0,
                      n.aflNackSuccess1x,
                      1202,
                      0,
                      n.aflNackSuccess2x,
                      1203,
                      0,
                      n.aflNackSuccess4x,
                      1204,
                      0,
                      n.aflNackSuccess8x,
                      1205,
                      0,
                      n.aflNackSuccessTotal,
                      1206,
                      0,
                      n.aflOther1x,
                      1207,
                      0,
                      n.aflOther2x,
                      1208,
                      0,
                      n.aflOther4x,
                      1209,
                      0,
                      n.aflOther8x,
                      1210,
                      0,
                      n.aflOtherTotal,
                      1211,
                      0,
                      n.aflPureLoss1x,
                      1212,
                      0,
                      n.aflPureLoss2x,
                      1213,
                      0,
                      n.aflPureLoss4x,
                      1214,
                      0,
                      n.aflPureLoss8x,
                      1215,
                      0,
                      n.aflPureLossTotal,
                      593,
                      0,
                      n.allocErrorBitmap,
                      1055,
                      1,
                      n.androidAudioRouteMismatch,
                      444,
                      0,
                      n.androidCamera2MinHardwareSupportLevel,
                      443,
                      0,
                      n.androidCameraApi,
                      477,
                      0,
                      n.androidSystemPictureInPictureT,
                      497,
                      0,
                      n.androidTelecomTimeSpentBeforeReject,
                      1109,
                      1,
                      n.appInBackgroundDuringCall,
                      1119,
                      3,
                      n.audStreamMixPct,
                      755,
                      0,
                      n.audioCodecDecodedFecFrames,
                      756,
                      0,
                      n.audioCodecDecodedPlcFrames,
                      751,
                      0,
                      n.audioCodecEncodedFecFrames,
                      753,
                      0,
                      n.audioCodecEncodedNonVoiceFrames,
                      1177,
                      0,
                      n.audioCodecEncodedThrottledVoiceFrames,
                      752,
                      0,
                      n.audioCodecEncodedVoiceFrames,
                      754,
                      0,
                      n.audioCodecReceivedFecFrames,
                      860,
                      0,
                      n.audioDeviceIssues,
                      861,
                      0,
                      n.audioDeviceLastIssue,
                      867,
                      0,
                      n.audioDeviceSwitchCount,
                      866,
                      0,
                      n.audioDeviceSwitchDuration,
                      724,
                      0,
                      n.audioFrameLoss1xMs,
                      725,
                      0,
                      n.audioFrameLoss2xMs,
                      726,
                      0,
                      n.audioFrameLoss4xMs,
                      727,
                      0,
                      n.audioFrameLoss8xMs,
                      83,
                      0,
                      n.audioGetFrameUnderflowPs,
                      679,
                      0,
                      n.audioInbandFecDecoded,
                      678,
                      0,
                      n.audioInbandFecEncoded,
                      1318,
                      0,
                      n.audioJbResets,
                      1334,
                      0,
                      n.audioJbResetsPartial,
                      722,
                      0,
                      n.audioLossPeriodCount,
                      1184,
                      1,
                      n.audioNackHbhEnabled,
                      1271,
                      0,
                      n.audioNackReqPktsProcessed,
                      646,
                      0,
                      n.audioNackReqPktsRecvd,
                      645,
                      0,
                      n.audioNackReqPktsSent,
                      649,
                      0,
                      n.audioNackRtpRetransmitDiscardCount,
                      651,
                      0,
                      n.audioNackRtpRetransmitFailCount,
                      648,
                      0,
                      n.audioNackRtpRetransmitRecvdCount,
                      647,
                      0,
                      n.audioNackRtpRetransmitReqCount,
                      650,
                      0,
                      n.audioNackRtpRetransmitSentCount,
                      1008,
                      0,
                      n.audioNumPiggybackRxPkt,
                      1007,
                      0,
                      n.audioNumPiggybackTxPkt,
                      1283,
                      0,
                      n.audioPktsNotTriggerOutOfPaused,
                      1138,
                      0,
                      n.audioPlayCbIntervalGtDefaultCnt,
                      1139,
                      0,
                      n.audioPlayCbLatencyGteMaxCnt,
                      82,
                      0,
                      n.audioPutFrameOverflowPs,
                      1036,
                      0,
                      n.audioRecCbLatencyAvg,
                      1035,
                      0,
                      n.audioRecCbLatencyMax,
                      1034,
                      0,
                      n.audioRecCbLatencyMin,
                      1037,
                      0,
                      n.audioRecCbLatencyStddev,
                      677,
                      0,
                      n.audioRtxPktDiscarded,
                      676,
                      0,
                      n.audioRtxPktProcessed,
                      675,
                      0,
                      n.audioRtxPktSent,
                      728,
                      3,
                      n.audioRxAvgFpp,
                      642,
                      3,
                      n.audioRxPktLossPctDuringPip,
                      1358,
                      0,
                      n.audioRxUlpFecPkts,
                      1322,
                      0,
                      n.audioSwbDurationMs,
                      1351,
                      0,
                      n.audioTarget06Ms,
                      1352,
                      0,
                      n.audioTarget1015Ms,
                      1353,
                      0,
                      n.audioTarget1520Ms,
                      1354,
                      0,
                      n.audioTarget2030Ms,
                      1355,
                      0,
                      n.audioTarget30PlusMs,
                      1356,
                      0,
                      n.audioTarget610Ms,
                      1357,
                      0,
                      n.audioTargetBitrateDrops,
                      450,
                      3,
                      n.audioTotalBytesOnNonDefCell,
                      1359,
                      0,
                      n.audioTxUlpFecPkts,
                      1360,
                      0,
                      n.audioUlpFecRecovered,
                      192,
                      3,
                      n.avAvgDelta,
                      193,
                      3,
                      n.avMaxDelta,
                      578,
                      0,
                      n.aveNumPeersAutoPaused,
                      994,
                      0,
                      n.aveTimeBwResSwitches,
                      719,
                      0,
                      n.aveTimeBwVidRcDynCondTrue,
                      139,
                      0,
                      n.avgClockCbT,
                      1220,
                      3,
                      n.avgCpuUtilizationPct,
                      136,
                      0,
                      n.avgDecodeT,
                      1048,
                      0,
                      n.avgEncRestartAndKfGenT,
                      1047,
                      0,
                      n.avgEncRestartIntervalT,
                      135,
                      0,
                      n.avgEncodeT,
                      816,
                      0,
                      n.avgEventQueuingDelay,
                      1302,
                      3,
                      n.avgLoudnessDiffNoiseFrames,
                      1303,
                      3,
                      n.avgLoudnessDiffSpeechFrames,
                      1304,
                      3,
                      n.avgLoudnessInputNoiseFrames,
                      1305,
                      3,
                      n.avgLoudnessInputSpeechFrames,
                      1306,
                      3,
                      n.avgLoudnessOutputNoiseFrames,
                      1307,
                      3,
                      n.avgLoudnessOutputSpeechFrames,
                      1152,
                      0,
                      n.avgPlayCbIntvT,
                      137,
                      0,
                      n.avgPlayCbT,
                      495,
                      0,
                      n.avgRecordCbIntvT,
                      138,
                      0,
                      n.avgRecordCbT,
                      140,
                      0,
                      n.avgRecordGetFrameT,
                      141,
                      3,
                      n.avgTargetBitrate,
                      413,
                      0,
                      n.avgTcpConnCount,
                      414,
                      0,
                      n.avgTcpConnLatencyInMsec,
                      355,
                      1,
                      n.batteryDropMatched,
                      442,
                      1,
                      n.batteryDropTriggered,
                      354,
                      1,
                      n.batteryLowMatched,
                      441,
                      1,
                      n.batteryLowTriggered,
                      353,
                      1,
                      n.batteryRulesApplied,
                      843,
                      0,
                      n.biDirRelayRebindLatencyMs,
                      844,
                      0,
                      n.biDirRelayResetLatencyMs,
                      1222,
                      0,
                      n.boundSocketIpAddressIsInvalid,
                      33,
                      1,
                      n.builtinAecAvailable,
                      38,
                      1,
                      n.builtinAecEnabled,
                      36,
                      2,
                      n.builtinAecImplementor,
                      37,
                      2,
                      n.builtinAecUuid,
                      34,
                      1,
                      n.builtinAgcAvailable,
                      35,
                      1,
                      n.builtinNsAvailable,
                      1114,
                      1,
                      n.bwaVidDisablingCandidate,
                      1116,
                      0,
                      n.bwaVidDisablingRxCandidateDuration,
                      1115,
                      0,
                      n.bwaVidDisablingTxCandidateDuration,
                      1068,
                      0,
                      n.bweEvaluationScoreE2e,
                      1070,
                      0,
                      n.bweEvaluationScoreSfuDl,
                      1069,
                      0,
                      n.bweEvaluationScoreSfuUl,
                      302,
                      0,
                      n.c2DecAvgT,
                      300,
                      0,
                      n.c2DecFrameCount,
                      301,
                      0,
                      n.c2DecFramePlayed,
                      298,
                      0,
                      n.c2EncAvgT,
                      299,
                      0,
                      n.c2EncCpuOveruseCount,
                      297,
                      0,
                      n.c2EncFrameCount,
                      296,
                      0,
                      n.c2RxTotalBytes,
                      295,
                      0,
                      n.c2TxTotalBytes,
                      132,
                      0,
                      n.callAcceptFuncT,
                      39,
                      0,
                      n.callAecMode,
                      42,
                      0,
                      n.callAecOffset,
                      43,
                      0,
                      n.callAecTailLength,
                      52,
                      0,
                      n.callAgcMode,
                      268,
                      1,
                      n.callAndrGcmFgEnabled,
                      55,
                      0,
                      n.callAndroidAudioMode,
                      57,
                      0,
                      n.callAndroidRecordAudioPreset,
                      56,
                      0,
                      n.callAndroidRecordAudioSource,
                      54,
                      0,
                      n.callAudioEngineType,
                      1336,
                      0,
                      n.callAudioOutputRoute,
                      96,
                      3,
                      n.callAudioRestartCount,
                      97,
                      3,
                      n.callAudioRestartReason,
                      640,
                      3,
                      n.callAvgAudioRxPipBitrate,
                      259,
                      0,
                      n.callAvgRottRx,
                      258,
                      0,
                      n.callAvgRottTx,
                      107,
                      0,
                      n.callAvgRtt,
                      638,
                      3,
                      n.callAvgVideoRxPipBitrate,
                      195,
                      3,
                      n.callBatteryChangePct,
                      50,
                      0,
                      n.callCalculatedEcOffset,
                      51,
                      0,
                      n.callCalculatedEcOffsetStddev,
                      505,
                      2,
                      n.callCreatorHid,
                      405,
                      0,
                      n.callDefNetwork,
                      99,
                      3,
                      n.callEcRestartCount,
                      46,
                      3,
                      n.callEchoEnergy,
                      44,
                      0,
                      n.callEchoLikelihood,
                      47,
                      3,
                      n.callEchoLikelihoodBeforeEc,
                      1142,
                      0,
                      n.callEndFrameLossMs,
                      130,
                      0,
                      n.callEndFuncT,
                      70,
                      1,
                      n.callEndReconnecting,
                      877,
                      1,
                      n.callEndReconnectingBeforeNetworkChange,
                      875,
                      1,
                      n.callEndReconnectingBeforeP2pFailover,
                      869,
                      1,
                      n.callEndReconnectingBeforeRelayFailover,
                      948,
                      1,
                      n.callEndReconnectingBeforeRelayReset,
                      848,
                      1,
                      n.callEndReconnectingSoonAfterCallActive,
                      878,
                      1,
                      n.callEndReconnectingSoonAfterNetworkChange,
                      876,
                      1,
                      n.callEndReconnectingSoonAfterP2pFailover,
                      870,
                      1,
                      n.callEndReconnectingSoonAfterRelayFailover,
                      949,
                      1,
                      n.callEndReconnectingSoonAfterRelayReset,
                      518,
                      1,
                      n.callEndedDuringAudFreeze,
                      517,
                      1,
                      n.callEndedDuringVidFreeze,
                      23,
                      1,
                      n.callEndedInterrupted,
                      626,
                      0,
                      n.callEnterPipModeCount,
                      2,
                      0,
                      n.callFromUi,
                      45,
                      3,
                      n.callHistEchoLikelihood,
                      1157,
                      3,
                      n.callInitRxPktLossPct3s,
                      109,
                      0,
                      n.callInitialRtt,
                      22,
                      1,
                      n.callInterrupted,
                      108,
                      0,
                      n.callLastRtt,
                      106,
                      0,
                      n.callMaxRtt,
                      422,
                      0,
                      n.callMessagesBufferedCount,
                      105,
                      0,
                      n.callMinRtt,
                      76,
                      0,
                      n.callNetwork,
                      77,
                      0,
                      n.callNetworkSubtype,
                      53,
                      0,
                      n.callNsMode,
                      159,
                      3,
                      n.callOfferAckTimout,
                      243,
                      0,
                      n.callOfferDelayT,
                      102,
                      0,
                      n.callOfferElapsedT,
                      588,
                      0,
                      n.callOfferFanoutCount,
                      134,
                      0,
                      n.callOfferReceiptDelay,
                      457,
                      0,
                      n.callP2pAvgRtt,
                      18,
                      1,
                      n.callP2pDisabled,
                      456,
                      0,
                      n.callP2pMinRtt,
                      15,
                      2,
                      n.callPeerAppVersion,
                      1368,
                      2,
                      n.callPeerIpPrefix,
                      10,
                      2,
                      n.callPeerIpStr,
                      8,
                      0,
                      n.callPeerIpv4,
                      5,
                      2,
                      n.callPeerPlatform,
                      1225,
                      2,
                      n.callPeerTestBucket,
                      501,
                      0,
                      n.callPendingCallsAcceptedCount,
                      498,
                      0,
                      n.callPendingCallsCount,
                      499,
                      0,
                      n.callPendingCallsRejectedCount,
                      500,
                      0,
                      n.callPendingCallsTerminatedCount,
                      628,
                      0,
                      n.callPipMode10sCount,
                      633,
                      0,
                      n.callPipMode10sT,
                      631,
                      0,
                      n.callPipMode120sCount,
                      636,
                      0,
                      n.callPipMode120sT,
                      632,
                      0,
                      n.callPipMode240sCount,
                      637,
                      0,
                      n.callPipMode240sT,
                      629,
                      0,
                      n.callPipMode30sCount,
                      634,
                      0,
                      n.callPipMode30sT,
                      630,
                      0,
                      n.callPipMode60sCount,
                      635,
                      0,
                      n.callPipMode60sT,
                      627,
                      0,
                      n.callPipModeT,
                      59,
                      0,
                      n.callPlaybackBufferSize,
                      25,
                      1,
                      n.callPlaybackCallbackStopped,
                      93,
                      3,
                      n.callPlaybackFramesPs,
                      95,
                      3,
                      n.callPlaybackSilenceRatio,
                      231,
                      0,
                      n.callRadioType,
                      529,
                      2,
                      n.callRandomId,
                      94,
                      3,
                      n.callRecentPlaybackFramesPs,
                      29,
                      3,
                      n.callRecentRecordFramesPs,
                      438,
                      0,
                      n.callReconnectingStateCount,
                      58,
                      0,
                      n.callRecordBufferSize,
                      24,
                      1,
                      n.callRecordCallbackStopped,
                      28,
                      0,
                      n.callRecordFramesPs,
                      98,
                      3,
                      n.callRecordMaxEnergyRatio,
                      26,
                      0,
                      n.callRecordSilenceRatio,
                      131,
                      0,
                      n.callRejectFuncT,
                      455,
                      0,
                      n.callRelayAvgRtt,
                      16,
                      0,
                      n.callRelayBindStatus,
                      104,
                      0,
                      n.callRelayCreateT,
                      1300,
                      0,
                      n.callRelayErrorCode,
                      454,
                      0,
                      n.callRelayMinRtt,
                      17,
                      2,
                      n.callRelayServer,
                      1301,
                      0,
                      n.callRelaysReceived,
                      1155,
                      2,
                      n.callReplayerId,
                      63,
                      0,
                      n.callResult,
                      103,
                      0,
                      n.callRingingT,
                      121,
                      3,
                      n.callRxAvgBitrate,
                      122,
                      3,
                      n.callRxAvgBwe,
                      125,
                      0,
                      n.callRxAvgJitter,
                      128,
                      0,
                      n.callRxAvgLossPeriod,
                      1329,
                      0,
                      n.callRxBweCnt,
                      124,
                      0,
                      n.callRxMaxJitter,
                      127,
                      0,
                      n.callRxMaxLossPeriod,
                      123,
                      0,
                      n.callRxMinJitter,
                      126,
                      0,
                      n.callRxMinLossPeriod,
                      120,
                      3,
                      n.callRxPktLossPct,
                      892,
                      3,
                      n.callRxPktLossRetransmitPct,
                      100,
                      0,
                      n.callRxStoppedT,
                      30,
                      0,
                      n.callSamplingRate,
                      1369,
                      2,
                      n.callSelfIpPrefix,
                      9,
                      2,
                      n.callSelfIpStr,
                      7,
                      0,
                      n.callSelfIpv4,
                      68,
                      0,
                      n.callServerNackErrorCode,
                      71,
                      0,
                      n.callSetupErrorType,
                      101,
                      0,
                      n.callSetupT,
                      1,
                      0,
                      n.callSide,
                      133,
                      0,
                      n.callSoundPortFuncT,
                      129,
                      0,
                      n.callStartFuncT,
                      41,
                      0,
                      n.callSwAecMode,
                      40,
                      0,
                      n.callSwAecType,
                      1363,
                      0,
                      n.callSystemPipDurationT,
                      92,
                      0,
                      n.callT,
                      69,
                      0,
                      n.callTermReason,
                      1324,
                      1,
                      n.callTestBoolean,
                      19,
                      2,
                      n.callTestBucket,
                      1325,
                      3,
                      n.callTestDouble,
                      318,
                      0,
                      n.callTestEvent,
                      1326,
                      0,
                      n.callTestInteger,
                      1327,
                      0,
                      n.callTestLong,
                      1328,
                      2,
                      n.callTestString,
                      49,
                      0,
                      n.callTonesDetectedInRecord,
                      48,
                      0,
                      n.callTonesDetectedInRingback,
                      78,
                      0,
                      n.callTransitionCount,
                      432,
                      0,
                      n.callTransitionCountCellularToWifi,
                      431,
                      0,
                      n.callTransitionCountWifiToCellular,
                      72,
                      0,
                      n.callTransport,
                      515,
                      1,
                      n.callTransportExtrayElected,
                      1268,
                      0,
                      n.callTransportMaxAllocRetries,
                      80,
                      0,
                      n.callTransportP2pToRelayFallbackCount,
                      587,
                      1,
                      n.callTransportPeerTcpUsed,
                      79,
                      0,
                      n.callTransportRelayToRelayFallbackCount,
                      516,
                      1,
                      n.callTransportTcpFallbackToUdp,
                      514,
                      1,
                      n.callTransportTcpUsed,
                      1319,
                      3,
                      n.callTransportTotalRxAllocBytes,
                      1320,
                      3,
                      n.callTransportTotalTxAllocBytes,
                      1321,
                      0,
                      n.callTransportTxAllocCnt,
                      112,
                      3,
                      n.callTxAvgBitrate,
                      113,
                      3,
                      n.callTxAvgBwe,
                      116,
                      0,
                      n.callTxAvgJitter,
                      119,
                      0,
                      n.callTxAvgLossPeriod,
                      1330,
                      0,
                      n.callTxBweCnt,
                      115,
                      0,
                      n.callTxMaxJitter,
                      118,
                      0,
                      n.callTxMaxLossPeriod,
                      114,
                      0,
                      n.callTxMinJitter,
                      117,
                      0,
                      n.callTxMinLossPeriod,
                      111,
                      3,
                      n.callTxPktErrorPct,
                      110,
                      3,
                      n.callTxPktLossPct,
                      20,
                      0,
                      n.callUserRate,
                      156,
                      0,
                      n.callWakeupSource,
                      447,
                      0,
                      n.calleeAcceptToDecodeT,
                      476,
                      1,
                      n.callerInContact,
                      445,
                      0,
                      n.callerOfferToDecodeT,
                      446,
                      0,
                      n.callerVidRtpToDecodeT,
                      765,
                      0,
                      n.cameraFormats,
                      850,
                      0,
                      n.cameraIssues,
                      851,
                      0,
                      n.cameraLastIssue,
                      331,
                      0,
                      n.cameraOffCount,
                      1131,
                      0,
                      n.cameraPauseT,
                      849,
                      1,
                      n.cameraPermission,
                      322,
                      0,
                      n.cameraPreviewMode,
                      852,
                      0,
                      n.cameraStartDuration,
                      856,
                      0,
                      n.cameraStartFailureDuration,
                      233,
                      0,
                      n.cameraStartMode,
                      916,
                      0,
                      n.cameraStartToFirstFrameT,
                      853,
                      0,
                      n.cameraStopDuration,
                      858,
                      0,
                      n.cameraStopFailureCount,
                      855,
                      0,
                      n.cameraSwitchCount,
                      854,
                      0,
                      n.cameraSwitchDuration,
                      857,
                      0,
                      n.cameraSwitchFailureDuration,
                      527,
                      1,
                      n.clampedBwe,
                      624,
                      0,
                      n.codecSamplingRate,
                      760,
                      3,
                      n.combinedE2eAvgRtt,
                      761,
                      3,
                      n.combinedE2eMaxRtt,
                      759,
                      3,
                      n.combinedE2eMinRtt,
                      623,
                      0,
                      n.confBridgeSamplingRate,
                      1226,
                      1,
                      n.connectedToCar,
                      974,
                      1,
                      n.conservativeModeStopped,
                      743,
                      0,
                      n.conservativeRampUpExploringT,
                      643,
                      0,
                      n.conservativeRampUpHeldCount,
                      741,
                      0,
                      n.conservativeRampUpHoldingT,
                      742,
                      0,
                      n.conservativeRampUpRampingUpT,
                      1223,
                      3,
                      n.cpuOverUtilizationPct,
                      519,
                      1,
                      n.createdFromGroupCallDowngrade,
                      537,
                      1,
                      n.dataLimitOnAltNetworkReached,
                      230,
                      2,
                      n.deviceBoard,
                      1269,
                      2,
                      n.deviceClass,
                      229,
                      2,
                      n.deviceHardware,
                      1364,
                      3,
                      n.dlOnlyHighPlrPct,
                      1284,
                      0,
                      n.droppedVideoFrameOutOfPausedMs,
                      914,
                      0,
                      n.dtxRxByteFrameCount,
                      912,
                      0,
                      n.dtxRxCount,
                      911,
                      0,
                      n.dtxRxDurationT,
                      913,
                      0,
                      n.dtxRxTotalCount,
                      1083,
                      0,
                      n.dtxRxTotalFrameCount,
                      910,
                      0,
                      n.dtxTxByteFrameCount,
                      619,
                      0,
                      n.dtxTxCount,
                      618,
                      0,
                      n.dtxTxDurationT,
                      909,
                      0,
                      n.dtxTxTotalCount,
                      1082,
                      0,
                      n.dtxTxTotalFrameCount,
                      320,
                      0,
                      n.echoCancellationMsPerSec,
                      1264,
                      0,
                      n.echoCancellationNumLoops,
                      940,
                      0,
                      n.echoCancelledFrameCount,
                      941,
                      0,
                      n.echoEstimatedFrameCount,
                      1265,
                      0,
                      n.echoMaxConvergeFrameCount,
                      987,
                      0,
                      n.echoSpeakerModeFrameCount,
                      81,
                      0,
                      n.encoderCompStepdowns,
                      90,
                      0,
                      n.endCallAfterConfirmation,
                      534,
                      0,
                      n.failureToCreateAltSocket,
                      532,
                      0,
                      n.failureToCreateTestAltSocket,
                      1005,
                      0,
                      n.fastplayMaxDurationMs,
                      1004,
                      0,
                      n.fastplayNumFrames,
                      1006,
                      0,
                      n.fastplayNumTriggers,
                      328,
                      0,
                      n.fieldStatsRowType,
                      503,
                      1,
                      n.finishedDlBwe,
                      528,
                      1,
                      n.finishedOverallBwe,
                      502,
                      1,
                      n.finishedUlBwe,
                      1051,
                      3,
                      n.freezeAheadBweCongestionCorrPct,
                      1009,
                      3,
                      n.freezeBweCongestionCorrPct,
                      1292,
                      0,
                      n.gainAdjustedMicAvgPower,
                      1293,
                      0,
                      n.gainAdjustedMicMaxPower,
                      1294,
                      0,
                      n.gainAdjustedMicMinPower,
                      1013,
                      1,
                      n.groupAcceptNoCriticalGroupUpdate,
                      1014,
                      0,
                      n.groupAcceptToCriticalGroupUpdateMs,
                      439,
                      0,
                      n.groupCallCallerParticipantCountAtCallStart,
                      360,
                      0,
                      n.groupCallInviteCountSinceCallStart,
                      357,
                      1,
                      n.groupCallIsGroupCallInvitee,
                      356,
                      1,
                      n.groupCallIsLastSegment,
                      361,
                      0,
                      n.groupCallNackCountSinceCallStart,
                      946,
                      0,
                      n.groupCallReringCountSinceCallStart,
                      947,
                      0,
                      n.groupCallReringNackCountSinceCallStart,
                      329,
                      0,
                      n.groupCallSegmentIdx,
                      358,
                      0,
                      n.groupCallTotalCallTSinceCallStart,
                      359,
                      0,
                      n.groupCallTotalP3CallTSinceCallStart,
                      592,
                      0,
                      n.groupCallVideoMaximizedCount,
                      539,
                      1,
                      n.hasRestrictedSettingsForAudioCalls,
                      1256,
                      0,
                      n.hbhSrtcpRxBytes,
                      1257,
                      0,
                      n.hbhSrtcpRxRejAuthFail,
                      1258,
                      0,
                      n.hbhSrtcpRxRejEinval,
                      1219,
                      0,
                      n.hbhSrtcpRxRejectedPktCntFromOldRelay,
                      1248,
                      0,
                      n.hbhSrtcpRxSuccessNackPktCnt,
                      1249,
                      0,
                      n.hbhSrtcpRxSuccessRembPktCnt,
                      1250,
                      0,
                      n.hbhSrtcpRxSuccessSbwaPktCnt,
                      1251,
                      0,
                      n.hbhSrtcpRxSuccessSpPktCnt,
                      1259,
                      0,
                      n.hbhSrtcpTxBytes,
                      1254,
                      0,
                      n.hbhSrtcpTxNackPktCnt,
                      1279,
                      0,
                      n.hbweHistoryBasedAvgVideoTxBitrate,
                      1280,
                      1,
                      n.hbweHistoryBasedBweInstantRampUpDone,
                      1281,
                      1,
                      n.hbweHistoryBasedBweUpdateCeilingDone,
                      1282,
                      1,
                      n.hbweHistoryBasedBweUpdateCeilingForced,
                      884,
                      0,
                      n.highPeerBweT,
                      342,
                      0,
                      n.hisBasedInitialTxBitrate,
                      339,
                      1,
                      n.hisInfoCouldBeUsedForInitBwe,
                      807,
                      1,
                      n.historyBasedBweActivated,
                      806,
                      1,
                      n.historyBasedBweEnabled,
                      808,
                      1,
                      n.historyBasedBweSuccess,
                      809,
                      0,
                      n.historyBasedBweVideoTxBitrate,
                      1350,
                      3,
                      n.imbalancedDlPlrTPct,
                      387,
                      0,
                      n.incomingCallUiAction,
                      337,
                      0,
                      n.initBweSource,
                      244,
                      3,
                      n.initialEstimatedTxBitrate,
                      1323,
                      1,
                      n.isCallCreator,
                      1149,
                      1,
                      n.isCallFull,
                      1316,
                      1,
                      n.isFromCallLink,
                      91,
                      1,
                      n.isIpv6Capable,
                      1335,
                      1,
                      n.isLinkJoin,
                      1090,
                      1,
                      n.isLinkedGroupCall,
                      1227,
                      1,
                      n.isOsMicrophoneMute,
                      976,
                      1,
                      n.isPendingCall,
                      927,
                      1,
                      n.isRejoin,
                      945,
                      1,
                      n.isRering,
                      260,
                      1,
                      n.isUpnpExternalIpPrivate,
                      261,
                      1,
                      n.isUpnpExternalIpTheSameAsReflexiveIp,
                      146,
                      3,
                      n.jbAvgDelay,
                      644,
                      3,
                      n.jbAvgDelayUniform,
                      1086,
                      3,
                      n.jbAvgDisorderTargetSize,
                      1012,
                      3,
                      n.jbAvgTargetSize,
                      150,
                      3,
                      n.jbDiscards,
                      151,
                      3,
                      n.jbEmpties,
                      997,
                      3,
                      n.jbEmptyPeriods1x,
                      998,
                      3,
                      n.jbEmptyPeriods2x,
                      999,
                      3,
                      n.jbEmptyPeriods4x,
                      1e3,
                      3,
                      n.jbEmptyPeriods8x,
                      152,
                      3,
                      n.jbGets,
                      149,
                      3,
                      n.jbLastDelay,
                      277,
                      3,
                      n.jbLost,
                      641,
                      0,
                      n.jbLostEmptyDuringPip,
                      777,
                      3,
                      n.jbLostEmptyHighPeerBwePerSec,
                      775,
                      3,
                      n.jbLostEmptyLowPeerBwePerSec,
                      776,
                      3,
                      n.jbLostEmptyLowToHighPeerBwePerSec,
                      148,
                      3,
                      n.jbMaxDelay,
                      1087,
                      3,
                      n.jbMaxDisorderTargetSize,
                      147,
                      3,
                      n.jbMinDelay,
                      846,
                      3,
                      n.jbNonSpeechDiscards,
                      153,
                      3,
                      n.jbPuts,
                      996,
                      3,
                      n.jbTotalEmptyPeriods,
                      1081,
                      0,
                      n.jbVoiceFrames,
                      895,
                      1,
                      n.joinableAfterCall,
                      894,
                      1,
                      n.joinableDuringCall,
                      893,
                      1,
                      n.joinableNewUi,
                      1315,
                      3,
                      n.keyFrameVqsOpenh264,
                      986,
                      2,
                      n.l1Locations,
                      415,
                      0,
                      n.lastConnErrorStatus,
                      504,
                      0,
                      n.libsrtpVersionUsed,
                      1127,
                      0,
                      n.lobbyVisibleT,
                      1120,
                      0,
                      n.logSampleRatio,
                      1331,
                      0,
                      n.lonelyT,
                      21,
                      1,
                      n.longConnect,
                      535,
                      0,
                      n.lossOfAltSocket,
                      533,
                      0,
                      n.lossOfTestAltSocket,
                      157,
                      3,
                      n.lowDataUsageBitrate,
                      885,
                      0,
                      n.lowPeerBweT,
                      886,
                      0,
                      n.lowToHighPeerBweT,
                      452,
                      2,
                      n.malformedStanzaXpath,
                      1085,
                      0,
                      n.maxConnectedParticipants,
                      558,
                      0,
                      n.maxEventQueueDepth,
                      448,
                      0,
                      n.mediaStreamSetupT,
                      253,
                      0,
                      n.micAvgPower,
                      252,
                      0,
                      n.micMaxPower,
                      251,
                      0,
                      n.micMinPower,
                      859,
                      1,
                      n.micPermission,
                      862,
                      0,
                      n.micStartDuration,
                      931,
                      0,
                      n.micStartToFirstCallbackT,
                      863,
                      0,
                      n.micStopDuration,
                      838,
                      1,
                      n.multipleTxRxRelaysInUse,
                      1169,
                      0,
                      n.muteNotSupportedCount,
                      1170,
                      0,
                      n.muteReqAlreadyMutedCount,
                      1171,
                      0,
                      n.muteReqTimeoutsCount,
                      32,
                      2,
                      n.nativeSamplesPerFrame,
                      31,
                      2,
                      n.nativeSamplingRate,
                      653,
                      0,
                      n.neteqAcceleratedFrames,
                      652,
                      0,
                      n.neteqExpandedFrames,
                      1135,
                      0,
                      n.networkFailoverTriggeredCount,
                      995,
                      0,
                      n.networkMediumChangeLatencyMs,
                      1361,
                      0,
                      n.newEndCallSurveyVersion,
                      1128,
                      1,
                      n.nseEnabled,
                      1129,
                      0,
                      n.nseOfflineQueueMs,
                      933,
                      0,
                      n.numAsserts,
                      330,
                      0,
                      n.numConnectedParticipants,
                      1052,
                      0,
                      n.numConnectedPeers,
                      567,
                      0,
                      n.numCriticalGroupUpdateDropped,
                      985,
                      0,
                      n.numDirPjAsserts,
                      1054,
                      0,
                      n.numInvitedParticipants,
                      929,
                      0,
                      n.numL1Errors,
                      930,
                      0,
                      n.numL2Errors,
                      625,
                      0,
                      n.numOutOfOrderCriticalGroupUpdate,
                      1053,
                      0,
                      n.numOutgoingRingingPeers,
                      577,
                      0,
                      n.numPeersAutoPausedOnce,
                      1029,
                      0,
                      n.numRenderSkipGreenFrame,
                      993,
                      0,
                      n.numResSwitch,
                      1113,
                      0,
                      n.numTransitionsToSpeech,
                      574,
                      0,
                      n.numVidDlAutoPause,
                      576,
                      0,
                      n.numVidDlAutoResume,
                      579,
                      0,
                      n.numVidDlAutoResumeRejectBadAudio,
                      717,
                      0,
                      n.numVidRcDynCondTrue,
                      559,
                      0,
                      n.numVidUlAutoPause,
                      560,
                      0,
                      n.numVidUlAutoPauseFail,
                      564,
                      0,
                      n.numVidUlAutoPauseRejectHighSendingRate,
                      565,
                      0,
                      n.numVidUlAutoPauseRejectTooEarly,
                      566,
                      0,
                      n.numVidUlAutoPauseUserAction,
                      561,
                      0,
                      n.numVidUlAutoResume,
                      562,
                      0,
                      n.numVidUlAutoResumeFail,
                      563,
                      0,
                      n.numVidUlAutoResumeRejectAudioLqm,
                      27,
                      0,
                      n.numberOfProcessors,
                      1017,
                      0,
                      n.offerAckLatencyMs,
                      805,
                      0,
                      n.oibweDlProbingTime,
                      802,
                      0,
                      n.oibweE2eProbingTime,
                      868,
                      1,
                      n.oibweNotFinishedWhenCallActive,
                      803,
                      0,
                      n.oibweOibleProbingTime,
                      804,
                      0,
                      n.oibweUlProbingTime,
                      525,
                      1,
                      n.onMobileDataSaver,
                      540,
                      1,
                      n.onWifiAtStart,
                      507,
                      0,
                      n.oneSideInitRxBitrate,
                      506,
                      0,
                      n.oneSideInitTxBitrate,
                      509,
                      0,
                      n.oneSideMinPeerInitRxBitrate,
                      508,
                      1,
                      n.oneSideRcvdPeerRxBitrate,
                      287,
                      0,
                      n.opusVersion,
                      522,
                      0,
                      n.p2pSuccessCount,
                      1285,
                      0,
                      n.pausedRtcpCount,
                      599,
                      3,
                      n.pcntPoorAudLqmAfterPause,
                      598,
                      3,
                      n.pcntPoorAudLqmBeforePause,
                      597,
                      3,
                      n.pcntPoorVidLqmAfterPause,
                      596,
                      3,
                      n.pcntPoorVidLqmBeforePause,
                      1314,
                      3,
                      n.pctPeersOnCellular,
                      264,
                      0,
                      n.peerCallNetwork,
                      66,
                      0,
                      n.peerCallResult,
                      1340,
                      3,
                      n.peerRxForErrorRelayBytes,
                      1341,
                      3,
                      n.peerRxForOtherRelayBytes,
                      1342,
                      3,
                      n.peerRxForTxRelayBytes,
                      591,
                      0,
                      n.peerTransport,
                      191,
                      0,
                      n.peerVideoHeight,
                      190,
                      0,
                      n.peerVideoWidth,
                      4,
                      0,
                      n.peerXmppStatus,
                      1172,
                      0,
                      n.peersMuteSuccCount,
                      1173,
                      0,
                      n.peersRejectedMuteReqCount,
                      160,
                      3,
                      n.pingsSent,
                      161,
                      3,
                      n.pongsReceived,
                      510,
                      0,
                      n.poolMemUsage,
                      511,
                      0,
                      n.poolMemUsagePadding,
                      89,
                      0,
                      n.presentEndCallConfirmation,
                      1060,
                      2,
                      n.prevCallTestBucket,
                      266,
                      0,
                      n.previousCallInterval,
                      265,
                      1,
                      n.previousCallVideoEnabled,
                      267,
                      1,
                      n.previousCallWithSamePeer,
                      1001,
                      1,
                      n.previousJoinNotEnded,
                      327,
                      3,
                      n.probeAvgBitrate,
                      1228,
                      1,
                      n.pstnCallExists,
                      158,
                      3,
                      n.pushToCallOfferDelay,
                      155,
                      3,
                      n.rcMaxrtt,
                      154,
                      3,
                      n.rcMinrtt,
                      1130,
                      1,
                      n.receivedByNse,
                      847,
                      1,
                      n.reconnectingStartsBeforeCallActive,
                      84,
                      0,
                      n.recordCircularBufferFrameCount,
                      162,
                      3,
                      n.reflectivePortsDiff,
                      1174,
                      0,
                      n.rejectMuteReqCount,
                      1140,
                      0,
                      n.rekeyTime,
                      583,
                      0,
                      n.relayBindFailureAltNetSwitchSuccess,
                      582,
                      0,
                      n.relayBindFailureAltNetSwitchTriggered,
                      586,
                      0,
                      n.relayBindFailureAltNetworkSwitchToCallEnd,
                      581,
                      0,
                      n.relayBindFailureFallbackCount,
                      585,
                      0,
                      n.relayBindFailureIpVersionSwitchToCallEnd,
                      584,
                      0,
                      n.relayBindFailureIpVersionSwitchTriggered,
                      424,
                      0,
                      n.relayBindTimeInMsec,
                      423,
                      0,
                      n.relayElectionTimeInMsec,
                      481,
                      0,
                      n.relayFallbackOnRxDataFromRelay,
                      482,
                      0,
                      n.relayFallbackOnStopRxDataOnP2p,
                      483,
                      0,
                      n.relayFallbackOnTransportStanzaNotification,
                      1309,
                      0,
                      n.relaySwapped,
                      780,
                      0,
                      n.renderFreezeHighPeerBweT,
                      778,
                      0,
                      n.renderFreezeLowPeerBweT,
                      779,
                      0,
                      n.renderFreezeLowToHighPeerBweT,
                      1362,
                      0,
                      n.rtcpRembInVideoCnt,
                      1168,
                      0,
                      n.rxAllocRespNoMatchingTid,
                      1310,
                      3,
                      n.rxForErrorRelayBytes,
                      1311,
                      3,
                      n.rxForOtherRelayBytes,
                      1312,
                      3,
                      n.rxForTxRelayBytes,
                      291,
                      0,
                      n.rxProbeCountSuccess,
                      290,
                      0,
                      n.rxProbeCountTotal,
                      841,
                      0,
                      n.rxRelayRebindLatencyMs,
                      842,
                      0,
                      n.rxRelayResetLatencyMs,
                      1295,
                      0,
                      n.rxSubOnScreenDur,
                      1370,
                      0,
                      n.rxSubRequestSentCnt,
                      1296,
                      0,
                      n.rxSubRequestThrottledCnt,
                      1297,
                      0,
                      n.rxSubSwitchCnt,
                      1298,
                      0,
                      n.rxSubVideoWaitDur,
                      1366,
                      0,
                      n.rxSubVideoWaitDurAvg,
                      1367,
                      0,
                      n.rxSubVideoWaitDurSum,
                      1345,
                      0,
                      n.rxToGetFrameLatency,
                      145,
                      3,
                      n.rxTotalBitrate,
                      143,
                      3,
                      n.rxTotalBytes,
                      294,
                      3,
                      n.rxTpFbBitrate,
                      758,
                      1,
                      n.rxTrafficStartFalsePositive,
                      963,
                      3,
                      n.sbweAvgDowntrend,
                      962,
                      3,
                      n.sbweAvgUptrend,
                      783,
                      0,
                      n.sbweCeilingCongestionCount,
                      781,
                      0,
                      n.sbweCeilingCount,
                      786,
                      0,
                      n.sbweCeilingMissingRtcpCongestionCount,
                      787,
                      0,
                      n.sbweCeilingNoNewDataReceivedCongestionCount,
                      782,
                      0,
                      n.sbweCeilingPktLossCount,
                      1106,
                      0,
                      n.sbweCeilingReceiveSideCount,
                      784,
                      0,
                      n.sbweCeilingRttCongestionCount,
                      785,
                      0,
                      n.sbweCeilingZeroRttCongestionCount,
                      1103,
                      0,
                      n.sbweGlobalMinRttCongestionCount,
                      1133,
                      0,
                      n.sbweHighestRttCongestionCount,
                      961,
                      0,
                      n.sbweHoldCount,
                      1347,
                      0,
                      n.sbweHoldDuration,
                      1104,
                      0,
                      n.sbweMinRttEmaCongestionCount,
                      1308,
                      0,
                      n.sbweMinRttSlideWindowCount,
                      960,
                      0,
                      n.sbweRampDownCount,
                      1348,
                      0,
                      n.sbweRampDownDuration,
                      959,
                      0,
                      n.sbweRampUpCount,
                      1349,
                      0,
                      n.sbweRampUpDuration,
                      1134,
                      0,
                      n.sbweRampUpPauseCount,
                      1175,
                      0,
                      n.selfMuteSuccessCount,
                      1176,
                      0,
                      n.selfUnmuteAfterMuteReqCount,
                      975,
                      0,
                      n.senderBweInitBitrate,
                      1339,
                      0,
                      n.serverRecommendedRelayReceivedMs,
                      1266,
                      0,
                      n.serverRecommendedToElectedRelayMs,
                      879,
                      0,
                      n.sfuAbnormalUplinkRttCount,
                      1096,
                      3,
                      n.sfuAvgDlPlrAtBalancedCongestion,
                      1094,
                      3,
                      n.sfuAvgDlPlrAtHighDlCongestion,
                      1092,
                      3,
                      n.sfuAvgDlPlrAtHighUlCongestion,
                      1002,
                      3,
                      n.sfuAvgLqHqTargetBitrateDiff,
                      1102,
                      0,
                      n.sfuAvgPeerRttAtBalancedCongestion,
                      1100,
                      0,
                      n.sfuAvgPeerRttAtHighPeerCongestion,
                      1098,
                      0,
                      n.sfuAvgPeerRttAtHighSelfCongestion,
                      1101,
                      0,
                      n.sfuAvgSelfRttAtBalancedCongestion,
                      1099,
                      0,
                      n.sfuAvgSelfRttAtHighPeerCongestion,
                      1097,
                      0,
                      n.sfuAvgSelfRttAtHighSelfCongestion,
                      673,
                      3,
                      n.sfuAvgTargetBitrate,
                      943,
                      3,
                      n.sfuAvgTargetBitrateHq,
                      1095,
                      3,
                      n.sfuAvgUlPlrAtBalancedCongestion,
                      1093,
                      3,
                      n.sfuAvgUlPlrAtHighDlCongestion,
                      1091,
                      3,
                      n.sfuAvgUlPlrAtHighUlCongestion,
                      1075,
                      0,
                      n.sfuBalancedPktLossAtCongestion,
                      1079,
                      0,
                      n.sfuBalancedRttAtCongestion,
                      919,
                      3,
                      n.sfuBwaAllParticipantDlBwUsedPct,
                      918,
                      3,
                      n.sfuBwaAllParticipantUlBwUsedPct,
                      928,
                      0,
                      n.sfuBwaChangeNumStreamCount,
                      1003,
                      3,
                      n.sfuBwaSelfDlBwUsedPct,
                      917,
                      3,
                      n.sfuBwaSelfUlBwUsedPct,
                      920,
                      0,
                      n.sfuBwaSimulcastDisabledCntReasonBattery,
                      921,
                      0,
                      n.sfuBwaSimulcastDisabledCntReasonNetMedium,
                      926,
                      0,
                      n.sfuBwaVidEncHqStreamScheduledT,
                      925,
                      0,
                      n.sfuBwaVidEncLqStreamScheduledT,
                      662,
                      3,
                      n.sfuDownlinkAvgCombinedBwe,
                      667,
                      3,
                      n.sfuDownlinkAvgPktLossPct,
                      661,
                      3,
                      n.sfuDownlinkAvgRemoteBwe,
                      660,
                      3,
                      n.sfuDownlinkAvgSenderBwe,
                      1158,
                      3,
                      n.sfuDownlinkInitCombinedBwe3s,
                      1159,
                      3,
                      n.sfuDownlinkInitPktLossPct3s,
                      668,
                      3,
                      n.sfuDownlinkMaxPktLossPct,
                      666,
                      3,
                      n.sfuDownlinkMinPktLossPct,
                      973,
                      3,
                      n.sfuDownlinkSbweAvgDowntrend,
                      972,
                      3,
                      n.sfuDownlinkSbweAvgUptrend,
                      797,
                      0,
                      n.sfuDownlinkSbweCeilingCongestionCount,
                      795,
                      0,
                      n.sfuDownlinkSbweCeilingCount,
                      800,
                      0,
                      n.sfuDownlinkSbweCeilingMissingRtcpCongestionCount,
                      801,
                      0,
                      n.sfuDownlinkSbweCeilingNoNewDataReceivedCongestionCount,
                      796,
                      0,
                      n.sfuDownlinkSbweCeilingPktLossCount,
                      798,
                      0,
                      n.sfuDownlinkSbweCeilingRttCongestionCount,
                      799,
                      0,
                      n.sfuDownlinkSbweCeilingZeroRttCongestionCount,
                      971,
                      0,
                      n.sfuDownlinkSbweHoldCount,
                      970,
                      0,
                      n.sfuDownlinkSbweRampDownCount,
                      969,
                      0,
                      n.sfuDownlinkSbweRampUpCount,
                      958,
                      3,
                      n.sfuDownlinkSenderBweDiffStddev,
                      957,
                      3,
                      n.sfuDownlinkSenderBweStddev,
                      1111,
                      0,
                      n.sfuFirstRxBandwidthReportTime,
                      883,
                      0,
                      n.sfuFirstRxParticipantReportTime,
                      881,
                      0,
                      n.sfuFirstRxUplinkReportTime,
                      1074,
                      0,
                      n.sfuHighDlPktLossAtCongestion,
                      1078,
                      0,
                      n.sfuHighDlRttAtCongestion,
                      1073,
                      0,
                      n.sfuHighUlPktLossAtCongestion,
                      1077,
                      0,
                      n.sfuHighUlRttAtCongestion,
                      674,
                      3,
                      n.sfuMaxTargetBitrate,
                      944,
                      3,
                      n.sfuMaxTargetBitrateHq,
                      672,
                      3,
                      n.sfuMinTargetBitrate,
                      942,
                      3,
                      n.sfuMinTargetBitrateHq,
                      813,
                      3,
                      n.sfuPeerDownlinkStddevAllCombinedBwe,
                      1110,
                      0,
                      n.sfuRxBandwidthReportCount,
                      882,
                      0,
                      n.sfuRxParticipantReportCount,
                      880,
                      0,
                      n.sfuRxUplinkReportCount,
                      1260,
                      0,
                      n.sfuServerBwaBrAdjustedForParticipantChange,
                      1261,
                      0,
                      n.sfuServerBwaBrCappedByUplink,
                      1262,
                      0,
                      n.sfuServerBwaInvalidSimulcastResult,
                      1263,
                      0,
                      n.sfuServerBwaLocalBwaRun,
                      1337,
                      0,
                      n.sfuServerBwaLocalBwaTransition,
                      1338,
                      0,
                      n.sfuServerBwaLongestSbwaMissingMs,
                      833,
                      0,
                      n.sfuSimulcastAvgDecSessFlipTime,
                      837,
                      0,
                      n.sfuSimulcastAvgEncSchedEventUpdateTime,
                      923,
                      0,
                      n.sfuSimulcastBwaCandidateCnt,
                      874,
                      0,
                      n.sfuSimulcastBwaDownlinkBottleneckCount,
                      873,
                      0,
                      n.sfuSimulcastBwaUplinkBottleneckCount,
                      952,
                      0,
                      n.sfuSimulcastDecAvgKfRecvTimeSinceFlip,
                      951,
                      3,
                      n.sfuSimulcastDecAvgNumReplayedCachedPkt,
                      950,
                      3,
                      n.sfuSimulcastDecAvgNumSkippedCachedPkt,
                      953,
                      0,
                      n.sfuSimulcastDecNumNoKf,
                      744,
                      0,
                      n.sfuSimulcastDecSessFlipCount,
                      768,
                      0,
                      n.sfuSimulcastDecSessFlipErrorBitmap,
                      767,
                      0,
                      n.sfuSimulcastDecSessFlipErrorCount,
                      766,
                      0,
                      n.sfuSimulcastEncErrorBitmap,
                      732,
                      0,
                      n.sfuSimulcastEncSchedEventCount,
                      735,
                      0,
                      n.sfuSimulcastEncSchedEventErrorCount,
                      734,
                      0,
                      n.sfuSimulcastEncSchedEventSkipCount,
                      733,
                      0,
                      n.sfuSimulcastEncSchedEventSuccessUpdateCount,
                      832,
                      0,
                      n.sfuSimulcastMaxDecSessFlipTime,
                      836,
                      0,
                      n.sfuSimulcastMaxEncSchedEventUpdateTime,
                      831,
                      0,
                      n.sfuSimulcastMinDecSessFlipTime,
                      835,
                      0,
                      n.sfuSimulcastMinEncSchedEventUpdateTime,
                      659,
                      3,
                      n.sfuUplinkAvgCombinedBwe,
                      664,
                      3,
                      n.sfuUplinkAvgPktLossPct,
                      658,
                      3,
                      n.sfuUplinkAvgRemoteBwe,
                      670,
                      3,
                      n.sfuUplinkAvgRtt,
                      657,
                      3,
                      n.sfuUplinkAvgSenderBwe,
                      1160,
                      3,
                      n.sfuUplinkInitCombinedBwe3s,
                      1161,
                      3,
                      n.sfuUplinkInitPktLossPct3s,
                      665,
                      3,
                      n.sfuUplinkMaxPktLossPct,
                      671,
                      3,
                      n.sfuUplinkMaxRtt,
                      663,
                      3,
                      n.sfuUplinkMinPktLossPct,
                      669,
                      3,
                      n.sfuUplinkMinRtt,
                      968,
                      3,
                      n.sfuUplinkSbweAvgDowntrend,
                      967,
                      3,
                      n.sfuUplinkSbweAvgUptrend,
                      790,
                      0,
                      n.sfuUplinkSbweCeilingCongestionCount,
                      788,
                      0,
                      n.sfuUplinkSbweCeilingCount,
                      793,
                      0,
                      n.sfuUplinkSbweCeilingMissingRtcpCongestionCount,
                      794,
                      0,
                      n.sfuUplinkSbweCeilingNoNewDataReceivedCongestionCount,
                      789,
                      0,
                      n.sfuUplinkSbweCeilingPktLossCount,
                      791,
                      0,
                      n.sfuUplinkSbweCeilingRttCongestionCount,
                      792,
                      0,
                      n.sfuUplinkSbweCeilingZeroRttCongestionCount,
                      966,
                      0,
                      n.sfuUplinkSbweHoldCount,
                      965,
                      0,
                      n.sfuUplinkSbweRampDownCount,
                      964,
                      0,
                      n.sfuUplinkSbweRampUpCount,
                      956,
                      3,
                      n.sfuUplinkSenderBweDiffStddev,
                      955,
                      3,
                      n.sfuUplinkSenderBweStddev,
                      1011,
                      0,
                      n.simulcastAvgLqBitrateWhenHqEnabled,
                      982,
                      0,
                      n.simulcastReplayVideoRenderFreeze2xT,
                      983,
                      0,
                      n.simulcastReplayVideoRenderFreeze4xT,
                      984,
                      0,
                      n.simulcastReplayVideoRenderFreeze8xT,
                      981,
                      0,
                      n.simulcastReplayVideoRenderFreezeT,
                      748,
                      0,
                      n.skippedBwaCycles,
                      747,
                      0,
                      n.skippedBweCycles,
                      1286,
                      0,
                      n.slowRenderVideoFrameOutOfPausedMs,
                      250,
                      0,
                      n.speakerAvgPower,
                      249,
                      0,
                      n.speakerMaxPower,
                      248,
                      0,
                      n.speakerMinPower,
                      864,
                      0,
                      n.speakerStartDuration,
                      932,
                      0,
                      n.speakerStartToFirstCallbackT,
                      865,
                      0,
                      n.speakerStopDuration,
                      1313,
                      0,
                      n.sreRecommendedDiff,
                      900,
                      1,
                      n.startedInitBweProbing,
                      1287,
                      0,
                      n.streamDroppedPkts,
                      1288,
                      0,
                      n.streamPausedTimeMs,
                      1289,
                      0,
                      n.streamTransitionsToPaused,
                      1290,
                      0,
                      n.streamTransitionsToPausedWithoutNotif,
                      538,
                      0,
                      n.switchToDefTriggeredByGoodDefNet,
                      750,
                      0,
                      n.switchToNonSfu,
                      1057,
                      0,
                      n.switchToNonSimulcast,
                      749,
                      0,
                      n.switchToSfu,
                      1056,
                      0,
                      n.switchToSimulcast,
                      257,
                      0,
                      n.symmetricNatPortGap,
                      541,
                      0,
                      n.systemNotificationOfNetChange,
                      440,
                      0,
                      n.telecomFrameworkCallStartDelayT,
                      1224,
                      0,
                      n.timeCpuUtilizationSamplingInMs,
                      992,
                      0,
                      n.timeEnc1280w,
                      988,
                      0,
                      n.timeEnc160w,
                      989,
                      0,
                      n.timeEnc320w,
                      990,
                      0,
                      n.timeEnc480w,
                      991,
                      0,
                      n.timeEnc640w,
                      530,
                      0,
                      n.timeOnNonDefNetwork,
                      531,
                      0,
                      n.timeOnNonDefNetworkPerSegment,
                      715,
                      0,
                      n.timeSinceLastRtpToCallEndInMsec,
                      1267,
                      0,
                      n.timeToFirstElectedRelayMs,
                      718,
                      0,
                      n.timeVidRcDynCondTrue,
                      1126,
                      0,
                      n.totalAqsMsgSent,
                      723,
                      0,
                      n.totalAudioFrameLossMs,
                      449,
                      3,
                      n.totalBytesOnNonDefCell,
                      575,
                      0,
                      n.totalTimeVidDlAutoPause,
                      573,
                      0,
                      n.totalTimeVidUlAutoPause,
                      898,
                      0,
                      n.trafficShaperAvgAudioQueueMs,
                      242,
                      0,
                      n.trafficShaperAvgQueueMs,
                      899,
                      0,
                      n.trafficShaperAvgVideoQueueMs,
                      240,
                      0,
                      n.trafficShaperMaxDelayViolations,
                      241,
                      0,
                      n.trafficShaperMinDelayViolations,
                      237,
                      0,
                      n.trafficShaperOverflowCount,
                      238,
                      0,
                      n.trafficShaperQueueEmptyCount,
                      896,
                      0,
                      n.trafficShaperQueuedAudioPacketCount,
                      239,
                      0,
                      n.trafficShaperQueuedPacketCount,
                      897,
                      0,
                      n.trafficShaperQueuedVideoPacketCount,
                      552,
                      0,
                      n.transportCurTimeInMsecAsyncWriteWaitingInQueue,
                      555,
                      0,
                      n.transportLastSendOsError,
                      580,
                      0,
                      n.transportNumAsyncWriteDispatched,
                      551,
                      0,
                      n.transportNumAsyncWriteQueued,
                      699,
                      0,
                      n.transportOvershoot10PercCount,
                      700,
                      0,
                      n.transportOvershoot20PercCount,
                      701,
                      0,
                      n.transportOvershoot40PercCount,
                      708,
                      0,
                      n.transportOvershootLongestStreakS,
                      704,
                      0,
                      n.transportOvershootSinceLast10sCount,
                      705,
                      0,
                      n.transportOvershootSinceLast15sCount,
                      702,
                      0,
                      n.transportOvershootSinceLast1sCount,
                      706,
                      0,
                      n.transportOvershootSinceLast30sCount,
                      703,
                      0,
                      n.transportOvershootSinceLast5sCount,
                      709,
                      3,
                      n.transportOvershootStreakAvgS,
                      707,
                      3,
                      n.transportOvershootTimeBetweenAvgS,
                      557,
                      3,
                      n.transportRtpSendErrorRate,
                      556,
                      0,
                      n.transportSendErrorCount,
                      1153,
                      0,
                      n.transportSnJumpDetectCount,
                      1059,
                      0,
                      n.transportSplitterRxErrCnt,
                      1058,
                      0,
                      n.transportSplitterTxErrCnt,
                      1141,
                      0,
                      n.transportSrtcpRxRejectedPktCnt,
                      1038,
                      0,
                      n.transportSrtpRxMaxPktSize,
                      763,
                      3,
                      n.transportSrtpRxRejectedBitrate,
                      772,
                      0,
                      n.transportSrtpRxRejectedDupPktCnt,
                      762,
                      0,
                      n.transportSrtpRxRejectedPktCnt,
                      774,
                      0,
                      n.transportSrtpTxFailedPktCnt,
                      773,
                      0,
                      n.transportSrtpTxMaxPktSize,
                      554,
                      0,
                      n.transportTotalNumSendOsError,
                      553,
                      0,
                      n.transportTotalTimeInMsecAsyncWriteQueueToDispatch,
                      710,
                      0,
                      n.transportUndershoot10PercCount,
                      711,
                      0,
                      n.transportUndershoot20PercCount,
                      712,
                      0,
                      n.transportUndershoot40PercCount,
                      536,
                      0,
                      n.triggeredButDataLimitReached,
                      1112,
                      0,
                      n.tsLogUpload,
                      289,
                      0,
                      n.txProbeCountSuccess,
                      288,
                      0,
                      n.txProbeCountTotal,
                      1105,
                      0,
                      n.txRelayBindUnbindPacketsMissingMessageIntegrity,
                      839,
                      0,
                      n.txRelayRebindLatencyMs,
                      840,
                      0,
                      n.txRelayResetLatencyMs,
                      144,
                      3,
                      n.txTotalBitrate,
                      142,
                      3,
                      n.txTotalBytes,
                      293,
                      3,
                      n.txTpFbBitrate,
                      1365,
                      3,
                      n.ulOnlyHighPlrPct,
                      246,
                      0,
                      n.upnpAddResultCode,
                      247,
                      0,
                      n.upnpRemoveResultCode,
                      341,
                      0,
                      n.usedInitTxBitrate,
                      1150,
                      0,
                      n.usedIpv4Count,
                      1151,
                      0,
                      n.usedIpv6Count,
                      87,
                      2,
                      n.userDescription,
                      88,
                      0,
                      n.userProblems,
                      86,
                      0,
                      n.userRating,
                      1143,
                      0,
                      n.v2vAudioFrameLoss1xMs,
                      1144,
                      0,
                      n.v2vAudioFrameLoss2xMs,
                      1145,
                      0,
                      n.v2vAudioFrameLoss4xMs,
                      1146,
                      0,
                      n.v2vAudioFrameLoss8xMs,
                      1147,
                      0,
                      n.v2vAudioLossPeriodCount,
                      1148,
                      0,
                      n.v2vTotalAudioFrameLossMs,
                      1121,
                      0,
                      n.vidAvgBurstyPktLossLength,
                      1122,
                      0,
                      n.vidAvgRandomPktLossLength,
                      1123,
                      0,
                      n.vidBurstyPktLossTime,
                      688,
                      0,
                      n.vidCorrectRetxDetectPcnt,
                      695,
                      0,
                      n.vidFreezeTMsInSample0,
                      1062,
                      3,
                      n.vidJbAvgDelay,
                      1063,
                      3,
                      n.vidJbDiscards,
                      1064,
                      3,
                      n.vidJbEmpties,
                      1065,
                      3,
                      n.vidJbGets,
                      1061,
                      3,
                      n.vidJbLost,
                      1066,
                      3,
                      n.vidJbPuts,
                      1067,
                      3,
                      n.vidJbResets,
                      696,
                      0,
                      n.vidNumFecDroppedNoHole,
                      697,
                      0,
                      n.vidNumFecDroppedTooBig,
                      1124,
                      0,
                      n.vidNumRandToBursty,
                      698,
                      0,
                      n.vidNumRetxDropped,
                      757,
                      0,
                      n.vidNumRxRetx,
                      693,
                      2,
                      n.vidPktRxState0,
                      1125,
                      0,
                      n.vidRandomPktLossTime,
                      694,
                      3,
                      n.vidRxFecRateInSample0,
                      589,
                      1,
                      n.vidUlAutoPausedAtCallEnd,
                      590,
                      0,
                      n.vidUlTimeSinceAutoPauseAtCallEnd,
                      716,
                      0,
                      n.vidWrongRetxDetectPcnt,
                      276,
                      0,
                      n.videoActiveTime,
                      1041,
                      0,
                      n.videoAheadAvSyncDiscardedFramesAvgDeltaT,
                      1043,
                      0,
                      n.videoAheadAvSyncRenderedFramesAvgDeltaT,
                      1039,
                      0,
                      n.videoAheadNumAvSyncDiscardFrames,
                      484,
                      0,
                      n.videoAveDelayLtrp,
                      390,
                      3,
                      n.videoAvgCombPsnr,
                      410,
                      3,
                      n.videoAvgEncodingPsnr,
                      408,
                      3,
                      n.videoAvgScalingPsnr,
                      186,
                      3,
                      n.videoAvgSenderBwe,
                      184,
                      3,
                      n.videoAvgTargetBitrate,
                      828,
                      3,
                      n.videoAvgTargetBitrateHq,
                      1042,
                      0,
                      n.videoBehindAvSyncDiscardedFramesAvgDeltaT,
                      1044,
                      0,
                      n.videoBehindAvSyncRenderedFramesAvgDeltaT,
                      1040,
                      0,
                      n.videoBehindNumAvSyncDiscardFrames,
                      222,
                      0,
                      n.videoCaptureAvgFps,
                      226,
                      0,
                      n.videoCaptureConverterTs,
                      887,
                      0,
                      n.videoCaptureDupFrames,
                      496,
                      0,
                      n.videoCaptureFrameOverwriteCount,
                      228,
                      0,
                      n.videoCaptureHeight,
                      227,
                      0,
                      n.videoCaptureWidth,
                      401,
                      0,
                      n.videoCodecScheme,
                      303,
                      0,
                      n.videoCodecSubType,
                      236,
                      0,
                      n.videoCodecType,
                      220,
                      0,
                      n.videoDecAvgBitrate,
                      610,
                      3,
                      n.videoDecAvgConsecutiveKfVp8,
                      611,
                      3,
                      n.videoDecAvgConsecutiveLtrpVp8,
                      207,
                      3,
                      n.videoDecAvgFps,
                      612,
                      3,
                      n.videoDecAvgFramesFromFoundLtrVp8,
                      613,
                      3,
                      n.videoDecAvgFramesFromUnfoundLtrVp8,
                      205,
                      0,
                      n.videoDecColorId,
                      419,
                      0,
                      n.videoDecCrcMismatchFrames,
                      174,
                      0,
                      n.videoDecErrorFrames,
                      714,
                      0,
                      n.videoDecErrorFramesCodecSwitch,
                      713,
                      0,
                      n.videoDecErrorFramesDuplicate,
                      680,
                      0,
                      n.videoDecErrorFramesH264,
                      478,
                      0,
                      n.videoDecErrorFramesIgnoreConsecutive,
                      682,
                      0,
                      n.videoDecErrorFramesOutoforder,
                      812,
                      0,
                      n.videoDecErrorFramesSpsPpsH264,
                      810,
                      0,
                      n.videoDecErrorFramesSpsPpsMissingAfterResolutionSwitch,
                      811,
                      0,
                      n.videoDecErrorFramesSpsPpsNotSupportedAfterResolutionSwitch,
                      681,
                      0,
                      n.videoDecErrorFramesVp8,
                      462,
                      0,
                      n.videoDecErrorLtrpFramesVp8,
                      479,
                      0,
                      n.videoDecErrorLtrpFramesVp8CrcMismatch,
                      480,
                      0,
                      n.videoDecErrorLtrpFramesVp8NoLtr,
                      615,
                      0,
                      n.videoDecErrorLtrpFramesVp8NoLtr10,
                      614,
                      0,
                      n.videoDecErrorLtrpFramesVp8NoLtr5,
                      1084,
                      0,
                      n.videoDecFatalErrorNum,
                      172,
                      0,
                      n.videoDecInputFrames,
                      175,
                      0,
                      n.videoDecKeyframes,
                      223,
                      0,
                      n.videoDecLatency,
                      684,
                      0,
                      n.videoDecLatencyH264,
                      683,
                      0,
                      n.videoDecLatencyVp8,
                      210,
                      0,
                      n.videoDecLostPackets,
                      461,
                      0,
                      n.videoDecLtrpFramesVp8,
                      490,
                      1,
                      n.videoDecLtrpPoolCreateFailed,
                      204,
                      0,
                      n.videoDecName,
                      915,
                      0,
                      n.videoDecNumPliThrottledByAllLtrp,
                      616,
                      0,
                      n.videoDecNumSkippedFramesVp8,
                      617,
                      0,
                      n.videoDecNumSwitchesToAllLtrp,
                      173,
                      0,
                      n.videoDecOutputFrames,
                      206,
                      0,
                      n.videoDecRestart,
                      209,
                      0,
                      n.videoDecSkipPackets,
                      232,
                      0,
                      n.videoDecodePausedCount,
                      273,
                      0,
                      n.videoDowngradeCount,
                      163,
                      1,
                      n.videoEnabled,
                      270,
                      1,
                      n.videoEnabledAtCallStart,
                      609,
                      0,
                      n.videoEncAllLtrpTimeInMsec,
                      221,
                      0,
                      n.videoEncAvgBitrate,
                      605,
                      3,
                      n.videoEncAvgConsecutiveKfVp8,
                      606,
                      3,
                      n.videoEncAvgConsecutiveLtrpVp8,
                      216,
                      3,
                      n.videoEncAvgFps,
                      825,
                      3,
                      n.videoEncAvgFpsHq,
                      604,
                      3,
                      n.videoEncAvgFramesFromFoundLtrVp8,
                      603,
                      3,
                      n.videoEncAvgFramesFromUnfoundLtrVp8,
                      465,
                      3,
                      n.videoEncAvgPsnrKeyFrameVp8,
                      469,
                      3,
                      n.videoEncAvgPsnrLtrpFrameVp8,
                      474,
                      3,
                      n.videoEncAvgPsnrPFramePrevRefVp8,
                      1216,
                      3,
                      n.videoEncAvgQpKeyFrameOpenh264,
                      466,
                      3,
                      n.videoEncAvgQpKeyFrameVp8,
                      1217,
                      3,
                      n.videoEncAvgQpLtrpFrameOpenh264,
                      470,
                      3,
                      n.videoEncAvgQpLtrpFrameVp8,
                      1218,
                      3,
                      n.videoEncAvgQpPFramePrevRefOpenh264,
                      475,
                      3,
                      n.videoEncAvgQpPFramePrevRefVp8,
                      685,
                      3,
                      n.videoEncAvgSizeAllLtrpFrameVp8,
                      464,
                      3,
                      n.videoEncAvgSizeKeyFrameVp8,
                      468,
                      3,
                      n.videoEncAvgSizeLtrpFrameVp8,
                      473,
                      3,
                      n.videoEncAvgSizePFramePrevRefVp8,
                      215,
                      3,
                      n.videoEncAvgTargetFps,
                      827,
                      3,
                      n.videoEncAvgTargetFpsHq,
                      213,
                      0,
                      n.videoEncColorId,
                      686,
                      3,
                      n.videoEncDeviationAllLtrpFrameVp8,
                      687,
                      3,
                      n.videoEncDeviationPFramePrevRefVp8,
                      217,
                      0,
                      n.videoEncDiscardFrame,
                      938,
                      0,
                      n.videoEncDiscardFrameHq,
                      179,
                      0,
                      n.videoEncDropFrames,
                      937,
                      0,
                      n.videoEncDropFramesHq,
                      178,
                      0,
                      n.videoEncErrorFrames,
                      936,
                      0,
                      n.videoEncErrorFramesHq,
                      1049,
                      0,
                      n.videoEncFatalErrorNum,
                      176,
                      0,
                      n.videoEncInputFrames,
                      934,
                      0,
                      n.videoEncInputFramesHq,
                      180,
                      0,
                      n.videoEncKeyframes,
                      939,
                      0,
                      n.videoEncKeyframesHq,
                      463,
                      0,
                      n.videoEncKeyframesVp8,
                      731,
                      0,
                      n.videoEncKfErrCodecSwitchT,
                      729,
                      0,
                      n.videoEncKfIgnoreOldFrames,
                      730,
                      0,
                      n.videoEncKfQueueEmpty,
                      224,
                      0,
                      n.videoEncLatency,
                      826,
                      0,
                      n.videoEncLatencyHq,
                      471,
                      0,
                      n.videoEncLtrpFrameGenFailedVp8,
                      467,
                      0,
                      n.videoEncLtrpFramesVp8,
                      491,
                      1,
                      n.videoEncLtrpPoolCreateFailed,
                      494,
                      0,
                      n.videoEncLtrpToKfFallbackVp8,
                      1050,
                      0,
                      n.videoEncModifyNum,
                      212,
                      0,
                      n.videoEncName,
                      600,
                      0,
                      n.videoEncNumErrorLtrHoldFailedVp8,
                      602,
                      0,
                      n.videoEncNumErrorLtrHoldFailedVp810,
                      601,
                      0,
                      n.videoEncNumErrorLtrHoldFailedVp85,
                      622,
                      0,
                      n.videoEncNumSuccessHfFallbackVp8,
                      607,
                      0,
                      n.videoEncNumSwitchesToAllLtrp,
                      177,
                      0,
                      n.videoEncOutputFrames,
                      935,
                      0,
                      n.videoEncOutputFramesHq,
                      472,
                      0,
                      n.videoEncPFramePrevRefVp8,
                      608,
                      0,
                      n.videoEncRegularLtrpTimeInMsec,
                      214,
                      0,
                      n.videoEncRestart,
                      1046,
                      0,
                      n.videoEncRestartPresetChange,
                      1045,
                      0,
                      n.videoEncRestartResChange,
                      363,
                      0,
                      n.videoEncTimeOvershoot10PercH264,
                      366,
                      0,
                      n.videoEncTimeOvershoot10PercH265,
                      369,
                      0,
                      n.videoEncTimeOvershoot10PercVp8,
                      372,
                      0,
                      n.videoEncTimeOvershoot10PercVp9,
                      364,
                      0,
                      n.videoEncTimeOvershoot20PercH264,
                      367,
                      0,
                      n.videoEncTimeOvershoot20PercH265,
                      370,
                      0,
                      n.videoEncTimeOvershoot20PercVp8,
                      373,
                      0,
                      n.videoEncTimeOvershoot20PercVp9,
                      365,
                      0,
                      n.videoEncTimeOvershoot40PercH264,
                      368,
                      0,
                      n.videoEncTimeOvershoot40PercH265,
                      371,
                      0,
                      n.videoEncTimeOvershoot40PercVp8,
                      374,
                      0,
                      n.videoEncTimeOvershoot40PercVp9,
                      1026,
                      0,
                      n.videoEncTimeSpentInFastH264Ms,
                      1025,
                      0,
                      n.videoEncTimeSpentInFasterH264Ms,
                      1027,
                      0,
                      n.videoEncTimeSpentInMediumH264Ms,
                      1019,
                      0,
                      n.videoEncTimeSpentInNegative10Vp8Ms,
                      1018,
                      0,
                      n.videoEncTimeSpentInNegative12Vp8Ms,
                      1022,
                      0,
                      n.videoEncTimeSpentInNegative4Vp8Ms,
                      1021,
                      0,
                      n.videoEncTimeSpentInNegative6Vp8Ms,
                      1020,
                      0,
                      n.videoEncTimeSpentInNegative8Vp8Ms,
                      1023,
                      0,
                      n.videoEncTimeSpentInSuperfastH264Ms,
                      1024,
                      0,
                      n.videoEncTimeSpentInVeryfastH264Ms,
                      375,
                      0,
                      n.videoEncTimeUndershoot10PercH264,
                      378,
                      0,
                      n.videoEncTimeUndershoot10PercH265,
                      381,
                      0,
                      n.videoEncTimeUndershoot10PercVp8,
                      384,
                      0,
                      n.videoEncTimeUndershoot10PercVp9,
                      376,
                      0,
                      n.videoEncTimeUndershoot20PercH264,
                      379,
                      0,
                      n.videoEncTimeUndershoot20PercH265,
                      382,
                      0,
                      n.videoEncTimeUndershoot20PercVp8,
                      385,
                      0,
                      n.videoEncTimeUndershoot20PercVp9,
                      377,
                      0,
                      n.videoEncTimeUndershoot40PercH264,
                      380,
                      0,
                      n.videoEncTimeUndershoot40PercH265,
                      383,
                      0,
                      n.videoEncTimeUndershoot40PercVp8,
                      386,
                      0,
                      n.videoEncTimeUndershoot40PercVp9,
                      183,
                      0,
                      n.videoFecRecovered,
                      334,
                      0,
                      n.videoH264Time,
                      335,
                      0,
                      n.videoH265Time,
                      189,
                      0,
                      n.videoHeight,
                      904,
                      3,
                      n.videoInitRxBitrate16s,
                      901,
                      3,
                      n.videoInitRxBitrate2s,
                      902,
                      3,
                      n.videoInitRxBitrate4s,
                      903,
                      3,
                      n.videoInitRxBitrate8s,
                      402,
                      0,
                      n.videoInitialCodecScheme,
                      321,
                      0,
                      n.videoInitialCodecType,
                      404,
                      0,
                      n.videoLastCodecType,
                      185,
                      3,
                      n.videoLastSenderBwe,
                      392,
                      3,
                      n.videoMaxCombPsnr,
                      411,
                      3,
                      n.videoMaxEncodingPsnr,
                      426,
                      3,
                      n.videoMaxRxBitrate,
                      409,
                      3,
                      n.videoMaxScalingPsnr,
                      420,
                      3,
                      n.videoMaxTargetBitrate,
                      829,
                      3,
                      n.videoMaxTargetBitrateHq,
                      425,
                      3,
                      n.videoMaxTxBitrate,
                      824,
                      3,
                      n.videoMaxTxBitrateHq,
                      391,
                      3,
                      n.videoMinCombPsnr,
                      407,
                      3,
                      n.videoMinEncodingPsnr,
                      406,
                      3,
                      n.videoMinScalingPsnr,
                      421,
                      3,
                      n.videoMinTargetBitrate,
                      830,
                      3,
                      n.videoMinTargetBitrateHq,
                      1185,
                      1,
                      n.videoNackHbhEnabled,
                      1272,
                      0,
                      n.videoNackRtpRetransmitRecvdCount,
                      872,
                      0,
                      n.videoNackSendDelay,
                      871,
                      0,
                      n.videoNewPktsBeforeNack,
                      594,
                      0,
                      n.videoNpsiGenFailed,
                      595,
                      0,
                      n.videoNpsiNoNack,
                      1010,
                      0,
                      n.videoNumAvSyncDiscardFrames,
                      332,
                      0,
                      n.videoNumH264Frames,
                      333,
                      0,
                      n.videoNumH265Frames,
                      275,
                      0,
                      n.videoPeerState,
                      654,
                      0,
                      n.videoPeerTriggeredPauseCount,
                      1270,
                      0,
                      n.videoQualityScore,
                      208,
                      0,
                      n.videoRenderAvgFps,
                      225,
                      0,
                      n.videoRenderConverterTs,
                      196,
                      0,
                      n.videoRenderDelayT,
                      888,
                      0,
                      n.videoRenderDupFrames,
                      304,
                      0,
                      n.videoRenderFreeze2xT,
                      305,
                      0,
                      n.videoRenderFreeze4xT,
                      306,
                      0,
                      n.videoRenderFreeze8xT,
                      235,
                      0,
                      n.videoRenderFreezeT,
                      908,
                      0,
                      n.videoRenderInitFreeze16sT,
                      905,
                      0,
                      n.videoRenderInitFreeze2sT,
                      906,
                      0,
                      n.videoRenderInitFreeze4sT,
                      907,
                      0,
                      n.videoRenderInitFreeze8sT,
                      526,
                      0,
                      n.videoRenderInitFreezeT,
                      569,
                      0,
                      n.videoRenderNumFreezes,
                      571,
                      0,
                      n.videoRenderNumSinceLastFreeze10s,
                      572,
                      0,
                      n.videoRenderNumSinceLastFreeze30s,
                      570,
                      0,
                      n.videoRenderNumSinceLastFreeze5s,
                      1132,
                      0,
                      n.videoRenderPauseT,
                      568,
                      0,
                      n.videoRenderSumTimeSinceLastFreeze,
                      1178,
                      0,
                      n.videoRetxRtcpNack,
                      1179,
                      0,
                      n.videoRetxRtcpPli,
                      1180,
                      0,
                      n.videoRetxRtcpRr,
                      493,
                      0,
                      n.videoRtcpAppRxFailed,
                      492,
                      0,
                      n.videoRtcpAppTxFailed,
                      1273,
                      0,
                      n.videoRtcpNackProcessed,
                      1274,
                      0,
                      n.videoRtcpNackProcessedHq,
                      169,
                      3,
                      n.videoRxBitrate,
                      187,
                      1,
                      n.videoRxBweHitTxBwe,
                      489,
                      3,
                      n.videoRxBytesRtcpApp,
                      219,
                      3,
                      n.videoRxFecBitrate,
                      182,
                      0,
                      n.videoRxFecFrames,
                      485,
                      0,
                      n.videoRxKfBeforeLtrpAfterRpsi,
                      460,
                      0,
                      n.videoRxLtrpFramesVp8,
                      721,
                      0,
                      n.videoRxNumCodecSwitch,
                      201,
                      0,
                      n.videoRxPackets,
                      171,
                      3,
                      n.videoRxPktErrorPct,
                      170,
                      3,
                      n.videoRxPktLossPct,
                      487,
                      0,
                      n.videoRxPktRtcpApp,
                      621,
                      0,
                      n.videoRxRtcpFir,
                      203,
                      0,
                      n.videoRxRtcpNack,
                      1181,
                      0,
                      n.videoRxRtcpNackDropped,
                      521,
                      0,
                      n.videoRxRtcpNpsi,
                      202,
                      0,
                      n.videoRxRtcpPli,
                      1182,
                      0,
                      n.videoRxRtcpPliDropped,
                      459,
                      0,
                      n.videoRxRtcpRpsi,
                      1183,
                      0,
                      n.videoRxRtcpRrDropped,
                      168,
                      3,
                      n.videoRxTotalBytes,
                      274,
                      0,
                      n.videoSelfState,
                      954,
                      3,
                      n.videoSenderBweDiffStddev,
                      348,
                      3,
                      n.videoSenderBweStddev,
                      351,
                      0,
                      n.videoTargetBitrateReaches1000kbpsT,
                      435,
                      0,
                      n.videoTargetBitrateReaches1500kbpsT,
                      436,
                      0,
                      n.videoTargetBitrateReaches2000kbpsT,
                      349,
                      0,
                      n.videoTargetBitrateReaches200kbpsT,
                      433,
                      0,
                      n.videoTargetBitrateReaches250kbpsT,
                      350,
                      0,
                      n.videoTargetBitrateReaches500kbpsT,
                      434,
                      0,
                      n.videoTargetBitrateReaches750kbpsT,
                      451,
                      3,
                      n.videoTotalBytesOnNonDefCell,
                      165,
                      3,
                      n.videoTxBitrate,
                      823,
                      3,
                      n.videoTxBitrateHq,
                      488,
                      3,
                      n.videoTxBytesRtcpApp,
                      218,
                      3,
                      n.videoTxFecBitrate,
                      181,
                      0,
                      n.videoTxFecFrames,
                      720,
                      0,
                      n.videoTxNumCodecSwitch,
                      197,
                      0,
                      n.videoTxPackets,
                      818,
                      0,
                      n.videoTxPacketsHq,
                      167,
                      3,
                      n.videoTxPktErrorPct,
                      821,
                      3,
                      n.videoTxPktErrorPctHq,
                      166,
                      3,
                      n.videoTxPktLossPct,
                      822,
                      3,
                      n.videoTxPktLossPctHq,
                      486,
                      0,
                      n.videoTxPktRtcpApp,
                      1275,
                      0,
                      n.videoTxResendCauseKf,
                      1276,
                      0,
                      n.videoTxResendCauseKfHq,
                      1277,
                      0,
                      n.videoTxResendFailures,
                      1278,
                      0,
                      n.videoTxResendFailuresHq,
                      198,
                      0,
                      n.videoTxResendPackets,
                      819,
                      0,
                      n.videoTxResendPacketsHq,
                      620,
                      0,
                      n.videoTxRtcpFirEmptyJb,
                      200,
                      0,
                      n.videoTxRtcpNack,
                      520,
                      0,
                      n.videoTxRtcpNpsi,
                      199,
                      0,
                      n.videoTxRtcpPli,
                      820,
                      0,
                      n.videoTxRtcpPliHq,
                      458,
                      0,
                      n.videoTxRtcpRpsi,
                      164,
                      3,
                      n.videoTxTotalBytes,
                      817,
                      3,
                      n.videoTxTotalBytesHq,
                      453,
                      0,
                      n.videoUpdateEncoderFailureCount,
                      325,
                      0,
                      n.videoUpgradeCancelByTimeoutCount,
                      323,
                      0,
                      n.videoUpgradeCancelCount,
                      272,
                      0,
                      n.videoUpgradeCount,
                      326,
                      0,
                      n.videoUpgradeRejectByTimeoutCount,
                      324,
                      0,
                      n.videoUpgradeRejectCount,
                      271,
                      0,
                      n.videoUpgradeRequestCount,
                      188,
                      0,
                      n.videoWidth,
                      1136,
                      0,
                      n.voipParamsCompressedSize,
                      1137,
                      0,
                      n.voipParamsUncompressedSize,
                      513,
                      0,
                      n.vpxLibUsed,
                      891,
                      0,
                      n.waLongFreezeCount,
                      890,
                      0,
                      n.waReconnectFreezeCount,
                      889,
                      0,
                      n.waShortFreezeCount,
                      1346,
                      0,
                      n.waVoipHistoryCallRedialStatus,
                      1162,
                      0,
                      n.waVoipHistoryGetVideoTxBitrateBySelfAndPeerIpStrResult,
                      1163,
                      1,
                      n.waVoipHistoryGetVideoTxBitrateBySelfAndPeerIpStrSuccess,
                      1164,
                      0,
                      n.waVoipHistoryGetVideoTxBitrateBySelfIpStrResult,
                      1165,
                      1,
                      n.waVoipHistoryGetVideoTxBitrateBySelfIpStrSuccess,
                      834,
                      1,
                      n.waVoipHistoryIpAddressNotAvailable,
                      1343,
                      1,
                      n.waVoipHistoryIsCallParticipantRecordSaved,
                      737,
                      1,
                      n.waVoipHistoryIsCallRecordLoaded,
                      738,
                      1,
                      n.waVoipHistoryIsCallRecordSaved,
                      769,
                      1,
                      n.waVoipHistoryIsInitialized,
                      1344,
                      0,
                      n.waVoipHistoryNumOfCallParticipantRecordFound,
                      1166,
                      0,
                      n.waVoipHistoryNumOfCallRecordFoundByMatchingSelfAndPeerIpStr,
                      1167,
                      0,
                      n.waVoipHistoryNumOfCallRecordFoundByMatchingSelfIpStr,
                      739,
                      0,
                      n.waVoipHistoryNumOfCallRecordLoaded,
                      770,
                      0,
                      n.waVoipHistorySaveCallRecordConditionCheckStatus,
                      656,
                      3,
                      n.warpHeaderRxTotalBytes,
                      655,
                      3,
                      n.warpHeaderTxTotalBytes,
                      1118,
                      0,
                      n.warpMiRxPktErrorCount,
                      1117,
                      0,
                      n.warpMiTxPktErrorCount,
                      1154,
                      0,
                      n.warpRelayChangeDetectCount,
                      746,
                      0,
                      n.warpRxPktErrorCount,
                      745,
                      0,
                      n.warpTxPktErrorCount,
                      1156,
                      0,
                      n.waspKeyErrorCount,
                      1089,
                      0,
                      n.wavFileWriteMaxLatency,
                      429,
                      0,
                      n.weakCellularNetConditionDetected,
                      430,
                      0,
                      n.weakWifiNetConditionDetected,
                      397,
                      0,
                      n.weakWifiSwitchToDefNetSuccess,
                      395,
                      0,
                      n.weakWifiSwitchToDefNetSuccessByPeriodicalCheck,
                      396,
                      0,
                      n.weakWifiSwitchToDefNetTriggered,
                      394,
                      0,
                      n.weakWifiSwitchToDefNetTriggeredByPeriodicalCheck,
                      399,
                      0,
                      n.weakWifiSwitchToNonDefNetFalsePositive,
                      400,
                      0,
                      n.weakWifiSwitchToNonDefNetSuccess,
                      398,
                      0,
                      n.weakWifiSwitchToNonDefNetTriggered,
                      263,
                      0,
                      n.wifiRssiAtCallStart,
                      64,
                      0,
                      n.wpNotifyCallFailed,
                      65,
                      1,
                      n.wpSoftwareEcMatches,
                      3,
                      0,
                      n.xmppStatus,
                      269,
                      0,
                      n.xorCipher,
                      1088,
                      0,
                      n.zedFileWriteMaxLatency,
                    ],
                    t
                  ),
                  Promise.resolve()
                );
              }
              __LOG__(
                2
              )`EventCallback::onFieldStatsReady called without payload`;
            }
          },
          g = class extends t.SendSignalingCallback {
            constructor() {
              var e;
              return (e = super(...arguments)), (this.Ay = new p.a()), e;
            }
            sendSignaling(e) {
              var t = e.peerJid,
                n = e.payload,
                r = n.tag;
              __LOG__(2)`SendSignalingCallback::sendSignaling start, tag ${r}`;
              var i,
                a = (0, m.o)(t);
              if ("phoneUser" === a.jidType) i = (0, m.e)(a.userJid);
              else {
                if ("phoneDevice" !== a.jidType)
                  throw (
                    (__LOG__(
                      4
                    )`SendSignalingCallback incorrect peerJid format ${t}`,
                    SEND_LOGS("voip-incorrect-peerjid"),
                    new Error(
                      "SendSignalingCallback incorrect peerJid format " + t
                    ))
                  );
                i = (0, m.v)(a.deviceJid);
              }
              var o = (0, I.u)();
              return this.Ay.enqueue(() =>
                (function (e, t) {
                  if ("offer" !== t.tag) return Promise.resolve(t);
                  var n = t.children.find((e) => "enc" === e.tag);
                  return null != n && null != n.content
                    ? (function (e, t) {
                        var n = { call: { callKey: t.content } },
                          r = (0, O.c)(n);
                        return (0, d.ensureE2eSession)(e)
                          .then(() => (0, c.o)(e, r))
                          .then((e) => {
                            var n = e.type,
                              r = e.ciphertext;
                            (t.content = r),
                              t.attrs.push({ key: "type", value: n }),
                              t.attrs.push({ key: "v", value: "2" });
                          });
                      })(e, n).then(() => t)
                    : Promise.resolve(t);
                })(i, n)
                  .then(
                    (e) => (
                      __LOG__(
                        2
                      )`SendSignalingCallback::sendSignaling encodedPayload received`,
                      (0, E.f)(
                        (0, I.w)(
                          "call",
                          { id: o, to: (0, I.g)(i) },
                          (function e(t) {
                            var n = t.tag,
                              r = t.attrs,
                              i = t.children,
                              a = t.content,
                              o = r.reduce((e, t) => {
                                var n = t.key,
                                  r = t.value,
                                  i = t.jidValue;
                                return (
                                  null != i &&
                                  (function (e) {
                                    return (
                                      e.subType === S.b.JID ||
                                      (e.agent <= 0 && e.device <= 0)
                                    );
                                  })(i)
                                    ? (e[n] = (0, v.c)(i))
                                    : (e[n] = r),
                                  e
                                );
                              }, {}),
                              u =
                                Array.isArray(i) && i.length > 0
                                  ? i.map((t) => e(t))
                                  : a.length > 0
                                  ? a
                                  : null;
                            return new I.o(n, o, u);
                          })(e)
                        ),
                        {
                          id: String(o),
                          class: "call",
                          type: r,
                          from: i,
                          participant: null,
                        }
                      ).then((e) => {
                        var t = v.a.parse(e);
                        if (!t.error) {
                          var n = t.success.stanzaObject,
                            a = n.attrs.find((e) => "error" === e.key),
                            o = null == a ? 0 : parseInt(a.value, 10);
                          return (
                            __LOG__(
                              2
                            )`handleIncomingAck deprecatedSendStanzaAndReturnAck`,
                            (function (e) {
                              return D.apply(this, arguments);
                            })({ peerJid: i, type: r, error: o, ack: n })
                          );
                        }
                        __LOG__(2)`Unable to parse call ack stanza`;
                      })
                    )
                  )
                  .then(
                    () => (
                      __LOG__(2)`SendSignalingCallback::sendSignaling done`, 0
                    )
                  )
                  .catch((e) => {
                    throw (
                      (__LOG__(4)`SendSignalingCallback::sendSignaling error`,
                      e)
                    );
                  })
              );
            }
          };
        (T = !0),
          t
            .get(e)
            .then(
              (e) => (
                __LOG__(2)`voip::onSessionConnected got server #${e.id}`,
                Object.getOwnPropertyNames(Object.getPrototypeOf(e)).filter(
                  (e) => "constructor" !== e
                ),
                e.addEventListener(e.SERVICE_EVICTED_EVENT, (e) => {
                  P.resolve(), $();
                }),
                e.getVersion().then((e) => {
                  __LOG__(2)`voip::getVersion version: ${e}`;
                }),
                e
                  .setApplicationSettings({
                    selfJid: l.t.get(),
                    enableCallerMsgBuffer: !1,
                    enableCalleeMsgBuffer: !0,
                    enableLowDataUsage: !0,
                    enableMdOutgoingCall: !1,
                    forceKillDaemonOnDisconnected: (0, h.d)(),
                  })
                  .then((t) => {
                    if (0 !== t)
                      throw (
                        (__LOG__(2)`Invalid settings, result = ${t}`,
                        new Error("Invalid settings"))
                      );
                    return e;
                  })
              )
            )
            .then((t) => {
              __LOG__(2)`voip::onSessionConnected register event callback`;
              var n = e.new_tracked(_, t);
              return t.setEventCallback(n).then(() => t);
            })
            .then((t) => {
              __LOG__(
                2
              )`voip::onSessionConnected register send signaling callback`;
              var n = e.new_tracked(g);
              return t.setSendSignalingCallback(n).then(() => t);
            })
            .then(
              (e) => (
                __LOG__(
                  2
                )`voip::onSessionConnected determining if there is an ongoing call`,
                e.getCallInfo().then((t) => [e, t])
              )
            )
            .then((e) => {
              var t = i()(e, 2),
                n = t[0],
                r = t[1];
              A.resolve(n),
                __LOG__(2)`voip::onSessionConnected setup done`,
                n.hasCrash().then((e) => {
                  e &&
                    (__LOG__(2)`voip::onSessionConnected crash detected`,
                    SEND_LOGS("voip-daemon-crashed"));
                });
              var a = !!(null == r ? void 0 : r.callId);
              __LOG__(2)`voip::onSessionConnected in ongoing call ${a}`,
                (0, h.c)("event", "voipSetupDone", { inOngoingCall: a });
            })
            .catch((e) => {
              __LOG__(4)`An error occured while VoIP was setup: ${e}`,
                A.resolve();
            });
      }
      function $() {
        Object.keys(U).forEach((e) => {
          null != U[e] && (clearTimeout(U[e]), (U[e] = null));
        });
      }
      function F() {
        l.o.get()
          ? (__LOG__(2)`voip::onSessionDisconnected`,
            (A = new s.a()),
            $(),
            (0, h.c)("event", "voipServiceDisconnected", {}))
          : __LOG__(
              2
            )`voip::onSessionDisconnected: VOIP service is not supported`;
      }
      function B(e, t) {
        return R().then(t);
      }
      function V(e, t) {
        var n = (function (e) {
          return l.o.get()
            ? (0, k.a)(l.I.get()) ||
              ("getVoipLogData" === e && l.I.get().kaiosVoiceLogsEnabled)
              ? !(!(0, h.d)() && P.resolveWasCalled()) ||
                (__LOG__(3)`voip::${e} called, but the worker has been evicted`,
                "evicted")
              : (__LOG__(3)`voip::${e} called when VOIP is not enabled`, !1)
            : (__LOG__(4)`voip::${e} called when VOIP is not supported`,
              SEND_LOGS("voip-used-while-unsupported"),
              !1);
        })(e);
        return "evicted" === n
          ? Promise.resolve("evicted")
          : n
          ? B(0, (e) => {
              if (e) return t(e);
            })
          : Promise.resolve();
      }
      function K(e, t) {
        return V("startVoipCall", (n) => {
          var r = (0, f.q)((0, _.l)(15));
          return (
            (N = { id: r, uiContext: t }),
            (0, f.lb)({ callId: r, peer: e, isFromMe: !0 }, (0, g.D)()),
            Promise.resolve(null)
              .then((t) => (t ? n.startCallMd(t, r) : n.startCall(e, r)))
              .then((e) => {})
          );
        }).catch(() => {
          (0, h.c)("event", "voipCallFailed", {});
        });
      }
      function H(e) {
        return V("handleIncomingVoipSignaling", (t) => {
          var n = e.payload,
            r = e.peerPlatform,
            i = e.peerAppVersion;
          if ("accept" === n.tag) {
            if (null == N)
              return void __LOG__(
                4
              )`voip::handleIncomingSignaling LastOutgoingCallDetails is missing but accept received`;
            var a = n.attrs.find((e) => "call-id" === e.key),
              o = null == a ? void 0 : a.value;
            if (N.id !== o)
              return void __LOG__(
                4
              )`voip::handleIncomingSignaling LastOutgoingCallDetails contains information for a different call ${N.id} instead of expected ${o}`;
            (N.peerPlatform = r), (N.peerAppVersion = i);
          }
          return t.handleIncomingSignaling(e).then((e) => {});
        });
      }
      function q(e, t) {
        var n = e.payload,
          r = e.peerPlatform,
          i = e.peerAppVersion,
          a = n.attrs.find((e) => "call-id" === e.key),
          o = null == a ? void 0 : a.value;
        return null == o
          ? (__LOG__(
              4
            )`voip::handleIncomingOffer missing call-id in offer attributes`,
            SEND_LOGS("voip-incoming-offer-missing-call-id"),
            Promise.resolve())
          : ((C = { id: o, peerPlatform: r, peerAppVersion: i }),
            V("handleIncomingVoipOffer", (n) =>
              n.handleIncomingOffer(e, t).then((e) => {})
            ));
      }
      function z(e) {
        return V("handleIncomingVoipReceipt", (t) =>
          t.handleIncomingReceipt(e).then((e) => {})
        );
      }
      function W() {
        return V("acceptVoipCall", (e) => e.acceptCall().then((e) => {})).catch(
          () => {
            (0, h.c)("event", "voipCallFailed", {});
          }
        );
      }
      function J() {
        return V("rejectVoipCall", (e) => e.rejectCall().then((e) => {})).catch(
          () => {
            (0, h.c)("event", "voipCallFailed", {});
          }
        );
      }
      function Y(e, t, n, r, i) {
        return V("rejectVoipCallWithoutCallContext", (a) =>
          a.rejectCallWithoutCallCtx(e, t, n, r, i).then((e) => {})
        );
      }
      function Q(e) {
        return V("endVoipCall", (t) => t.endCall(e).then((e) => {}));
      }
      function Z(e) {
        return V("muteVoipCall", (t) => t.muteCall(e).then((e) => {}));
      }
      function X(e) {
        return V("interruptVoipCall", (t) =>
          t.interruptCall(e).then((e) => {})
        );
      }
      function ee(e) {
        return V("updateVoipNetworkMedium", (t) => {
          var n;
          if (
            "undefined" == typeof lib_wavoip ||
            null ==
              (null == (n = lib_wavoip.WaVoipService)
                ? void 0
                : n.NetworkMedium)
          )
            throw new Error(
              "voip::updateVoipNetworkMedium cannot find lib_wavoip.WaVoipService.NetworkMedium"
            );
          var r = lib_wavoip.WaVoipService.NetworkMedium,
            i =
              e === w.a.WIFI
                ? r.WIFI
                : e === w.a.CELLULAR
                ? r.CELLULAR
                : r.NONE;
          return t.updateNetworkMedium(i).then((e) => {});
        });
      }
      function te() {
        return V("getVoipCallInfo", (e) => e.getCallInfo().then((e) => e));
      }
      function ne(e) {
        return V(
          "getVoipLogData",
          (t) => (
            performance.now(),
            t.getLogData(e).then((e) => {
              var t = null == e ? void 0 : e.content;
              return t instanceof Uint8Array && t.byteLength, e;
            })
          )
        );
      }
      function re() {
        return B(0, (e) =>
          e
            ? e.endCall(!0).then((e) => {})
            : (__LOG__(
                4
              )`voip::forceEndVoipCall called when VOIP is not supported`,
              void SEND_LOGS("voip-used-while-unsupported"))
        );
      }
      function ie(e) {
        WAM.log("regular", 462, void 0, [
          102,
          0,
          e.callOfferElapsedT,
          15,
          2,
          e.callPeerAppVersion,
          5,
          2,
          e.callPeerPlatform,
          63,
          0,
          4,
          1,
          0,
          2,
          19,
          2,
          e.callTestBucket,
          156,
          0,
          e.callWakeupSource,
          163,
          1,
          e.videoEnabled,
        ]);
      }
      function ae() {
        return P.promise;
      }
      function oe() {
        return T;
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return b;
      }),
        n.d(t, "k", function () {
          return E;
        }),
        n.d(t, "i", function () {
          return I;
        }),
        n.d(t, "p", function () {
          return k;
        }),
        n.d(t, "q", function () {
          return L;
        }),
        n.d(t, "h", function () {
          return G;
        }),
        n.d(t, "g", function () {
          return M;
        }),
        n.d(t, "f", function () {
          return A;
        }),
        n.d(t, "j", function () {
          return P;
        }),
        n.d(t, "e", function () {
          return C;
        }),
        n.d(t, "c", function () {
          return R;
        }),
        n.d(t, "d", function () {
          return x;
        }),
        n.d(t, "n", function () {
          return j;
        }),
        n.d(t, "m", function () {
          return $;
        }),
        n.d(t, "o", function () {
          return F;
        }),
        n.d(t, "l", function () {
          return B;
        }),
        n.d(t, "r", function () {
          return q;
        }),
        n.d(t, "b", function () {
          return z;
        });
      var r = n(2),
        i = n(6),
        a = n(64),
        o = n(3),
        u = n(9),
        s = n(7),
        l = n(40),
        c = n(92),
        d = n(35),
        f = n(55),
        _ = n(408),
        p = n(91),
        v = n(17),
        h = n(67),
        m = n(14),
        g = n(438),
        y = n(52),
        b = {
          [r.f.TEXT]: 1,
          [r.f.PTT]: 5,
          [r.f.AUDIO]: 4,
          [r.f.FUTUREPROOF]: 12,
          [r.f.GIF]: 11,
          [r.f.IMAGE]: 2,
          [r.f.STICKER]: 16,
          [r.f.LOCATION]: 6,
          [r.f.VIDEO]: 3,
          [r.f.VCARD]: 13,
          [r.f.DOCUMENT]: 8,
          [r.f.RICH_HSM]: 17,
          [r.f.REACTION]: 34,
          [r.f.POLL]: 37,
          [r.f.POLL_UPDATE]: 38,
        };
      function w(e) {
        return "unknown" === e
          ? Object.freeze({})
          : (0, u.M)(e, {
              user: (e) => ({
                messageType: 1,
                messageIsInternational: (0, a.g)(e) !== (0, a.g)(i.t.get()),
              }),
              group: (e) => ({ messageType: 2 }),
              status: () => ({ messageType: 4 }),
            });
      }
      function O(e, t, n) {
        var r = (t) => {
          var r = e.dbMsg;
          if (r.forwardOriginalTs) {
            var i = 1e3 * (r.ts - r.forwardOriginalTs),
              a = b[r.type],
              s = w("status" === e.type ? u.h : e.jid),
              c = s.messageIsInternational,
              d = s.messageType,
              f = r.forwardingScore;
            null == f && (f = r.isForwarded ? 1 : 0);
            var _ = null != r.expiration ? r.expiration : void 0,
              p = t || {},
              v = p.senderDefaultDisappearingDuration,
              h = void 0 === v ? void 0 : v,
              m = p.receiverDefaultDisappearingDuration,
              g = void 0 === m ? void 0 : m,
              y = p.disappearingChatInitiator,
              O = void 0 === y ? void 0 : y;
            WAM.log("regular", 1728, void 0, [
              1,
              0,
              d,
              2,
              0,
              a,
              3,
              1,
              !n,
              4,
              0,
              i,
              5,
              1,
              !0,
              9,
              1,
              c,
              13,
              0,
              1e3 * ((0, o.D)() - r.ts),
              14,
              1,
              f >= l.a,
              8,
              0,
              r.resendCount,
              18,
              0,
              _,
              19,
              0,
              h,
              20,
              0,
              g,
              21,
              0,
              O,
            ]);
          }
        };
        "user" === e.type && (0, v.a)("disappearing_mode")
          ? (0, h.b)(e.jid)
              .then((e) => {
                var t = e && z(e, "sender-me");
                r(t);
              })
              .catch((e) => {
                throw (r(), e);
              })
          : r();
      }
      function E(e, t) {
        T(e, 7, !0, t);
      }
      function I(e, t, n) {
        T(e, 5, n, t);
      }
      function S(e) {
        var t = e.media,
          n = null == t ? void 0 : t.preview;
        return n ? (n instanceof Blob ? n.size : n.byteLength) : void 0;
      }
      function k(e, t) {
        G(
          (0, s.x)(e, {
            user: (e) => ({ type: "user", jid: e, dbMsg: t.msg }),
            group: (e) => ({ type: "group", jid: e, dbMsg: t.msg }),
          }),
          { thumbSize: S(t) }
        );
      }
      function L(e, t) {
        G({ type: "status", dbMsg: e.msg }, { thumbSize: S(e), origin: t });
      }
      function G(e, t) {
        T(e, 3, !0, t);
      }
      function M(e, t) {
        T(e, 6, !0, t);
      }
      function A(e, t) {
        T(e, 8, !1, t);
      }
      function P(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        T(e, 1, !0, t), null != e.dbMsg.forwardOriginalTs && O(e, 0, n);
      }
      function T(e, t, n, i) {
        var a = (a) => {
          (function (e, t, n, i, a, u) {
            var s,
              l,
              c,
              f,
              _,
              p,
              v,
              h,
              m,
              g = a || {},
              b = g.thumbSize,
              O = g.e2eBackfill,
              E = w(t),
              I = E.messageType,
              S = E.messageIsInternational,
              k = u || {},
              L = k.senderDefaultDisappearingDuration,
              G = k.receiverDefaultDisappearingDuration,
              M = k.disappearingChatInitiator;
            if (e) {
              (s = N(e)),
                (l = e.forwardOriginalTs
                  ? 1e3 * (e.ts - e.forwardOriginalTs)
                  : void 0),
                (c =
                  e.type === r.f.IMAGE ||
                  e.type === r.f.VIDEO ||
                  e.type === r.f.GIF
                    ? null != e.text && "" !== e.text
                    : void 0),
                (f = 1e3 * ((0, o.D)() - e.ts)),
                (_ = e.expiration),
                (p = (0, d.q)(e)),
                (v = e.type === r.f.REVOKED);
              var A = J(e);
              if (
                ((h = null != e.forwardOriginalTs),
                (m = e.resendCount),
                WAM.log("regular", 854, void 0, [
                  2,
                  0,
                  I,
                  7,
                  1,
                  S,
                  3,
                  0,
                  s,
                  8,
                  1,
                  c,
                  15,
                  1,
                  !0,
                  4,
                  1,
                  h,
                  14,
                  0,
                  l,
                  11,
                  0,
                  f,
                  21,
                  0,
                  _,
                  22,
                  1,
                  p,
                  24,
                  1,
                  v,
                  34,
                  0,
                  A,
                  16,
                  0,
                  m,
                  1,
                  0,
                  n,
                  17,
                  1,
                  i,
                  20,
                  3,
                  b,
                  23,
                  1,
                  O,
                  27,
                  0,
                  L,
                  28,
                  0,
                  G,
                  30,
                  0,
                  M,
                ]),
                v && (0, y.t)())
              ) {
                var P = (0, o.D)() - e.ts;
                WAM.log("regular", 3656, void 0, [6, 0, A, 5, 0, P]);
              }
            }
          })(e.dbMsg, "status" === e.type ? u.h : e.jid, t, n, i, a);
        };
        "user" === e.type && (0, v.a)("disappearing_mode")
          ? (0, h.b)(e.jid)
              .then((e) => {
                var t = e && z(e, "sender-me");
                a(t);
              })
              .catch((e) => {
                throw (a(), e);
              })
          : a(),
          "status" === e.type &&
            (function (e, t, n) {
              var r;
              switch (t) {
                case 1:
                  r = 1;
                  break;
                case 6:
                  r = 2;
                  break;
                default:
                  r = 3;
              }
              var i = null != e.dbMsg ? N(e.dbMsg) : void 0;
              WAM.log("regular", 1176, void 0, [
                1,
                0,
                n && "statusTab" === n.from ? n.sessionId : void 0,
                2,
                0,
                i,
                3,
                0,
                r,
                4,
                0,
                n && (0, c.k)(n),
              ]);
            })(e, t, null == i ? void 0 : i.origin);
      }
      function N(e) {
        return e.type === r.f.REACTION
          ? 34
          : e.type === r.f.TEXT
          ? null == e.linkPreview
            ? 1
            : 9
          : b[e.type];
      }
      function C(e) {
        if (e.deviceSentMessage) {
          var t = e.deviceSentMessage.message;
          return t ? C(t) : 1;
        }
        if (e.ephemeralMessage) {
          var n = e.ephemeralMessage.message;
          return n ? C(n) : 1;
        }
        return e.imageMessage
          ? 2
          : e.stickerMessage
          ? 16
          : e.locationMessage
          ? 14
          : e.contactMessage
          ? 7
          : e.contactsArrayMessage
          ? 13
          : e.documentMessage
          ? 8
          : e.audioMessage
          ? e.audioMessage.ptt
            ? 5
            : 4
          : e.videoMessage
          ? e.videoMessage.gifPlayback
            ? 11
            : 3
          : 1;
      }
      function R(e) {
        switch (e) {
          case f.b.ERR_NOMEM:
            return 30;
          case f.b.ERR_UNKNOWN:
            return 34;
          case f.b.ERR_INVALID_KEY_ID:
            return 28;
          case f.b.ERR_INVALID_KEY:
          case f.b.ERR_INVALID_SIGNED_PRE_KEY:
            return 27;
          case f.b.ERR_SIGNED_PRE_KEY_ID_MISMATCH:
          case f.b.ERR_SIGNED_PRE_KEY_DESERIALIZATION:
            return 28;
          case f.b.ERR_INVALID_ONE_TIME_KEY:
            return 27;
          case f.b.ERR_ONE_TIME_KEY_ID_MISMATCH:
          case f.b.ERR_ONE_TIME_KEY_DESERIALIZATION:
            return 28;
          case f.b.ERR_INVALID_MAC:
            return 29;
          case f.b.ERR_INVALID_VERSION:
            return 2;
          case f.b.ERR_LEGACY_MESSAGE:
            return 1;
          case f.b.ERR_STALE_KEY_EXCHANGE:
            return 31;
          case f.b.ERR_UNTRUSTED_IDENTITY:
            return 5;
          case f.b.ERR_VRF_SIG_VERIF_FAILED:
            return 32;
          case f.b.ERR_INVALID_PROTO_BUF:
            return 11;
          case f.b.ERR_FP_VERSION_MISMATCH:
            return 25;
          case f.b.ERR_FP_IDENT_MISMATCH:
            return 24;
          case f.b.ERR_DUPLICATE_MESSAGE:
            return 23;
          case f.b.ERR_NO_SESSION:
            return 6;
          case f.b.ERR_INVALID_MESSAGE:
            return 0;
          case f.b.ERR_DECRYPTION_FAILED:
            return 51;
          case f.b.ERR_DESERIALIZE_INVALID_PROTO_FORMAT:
            return 52;
          case f.b.ERR_DESERIALIZE_RATCHET_KEY_BAD_FORMAT:
            return 53;
          case f.b.ERR_DESERIALIZE_PK_INVALID_PROTO_FORMAT:
            return 54;
          case f.b.ERR_DESERIALZE_PK_KEY_BAD_FORMAT:
            return 55;
          case f.b.ERR_TOO_MANY_MESSAGES_IN_FUTURE:
            return 56;
          case f.b.ERR_EMPTY_VERSION_CONTENT_SUFFIX:
            return 57;
          case f.b.ERR_CONTENT_EXCEEDED_EXPECTED_LENGTH:
            return 58;
          case f.b.ERR_GRP_INVALID_PROTO_FORMAT:
            return 59;
          case f.b.ERR_GRP_INVALID_KEY_FORMAT:
            return 60;
          case f.b.ERR_GRP_VERSION_CONTENT_EMPTY:
            return 61;
          case f.b.ERR_GRP_INVALID_VERSION_CONTENT_LENGTH:
            return 62;
          case f.b.ERR_GRP_SENDER_KEY_INVALID_PROTO_FORMAT:
            return 63;
          case f.b.ERR_GRP_SENDER_KEY_PROTO_ERROR:
            return 64;
          case f.b.ERR_GRP_TOO_MANY_MESSAGES_IN_FUTURE:
            return 65;
        }
        return null;
      }
      function x(e) {
        var t = (0, s.r)(e);
        return (0, s.h)(e) === i.t.get() ? (t ? 1 : 3) : t ? 2 : 4;
      }
      function D(e, t) {
        return (0, s.x)(e, {
          user: (e) => {
            if ((0, v.a)("disappearing_mode") && null != t) {
              var n,
                r = z(t, "sender-them");
              return r
                ? ((n =
                    t.ephemeral &&
                    t.ephemeral.expiration > m.k &&
                    t.ephemeral.initiator === p.a.CHANGED_IN_CHAT &&
                    r.receiverDefaultDisappearingDuration === m.k &&
                    r.senderDefaultDisappearingDuration === m.k
                      ? t.ephemeral.expiration
                      : null),
                  Object.assign({}, r, { ephemeralityDuration: n }))
                : null;
            }
          },
          group: () => {},
        });
      }
      function U(e, t, n) {
        var r = w(t),
          i = r.messageIsInternational,
          a = r.messageType,
          o = D(t, n) || {},
          u = o.senderDefaultDisappearingDuration,
          s = o.receiverDefaultDisappearingDuration,
          l = o.disappearingChatInitiator,
          c = o.ephemeralityDuration;
        WAM.log("regular", 450, void 0, [
          4,
          1,
          i,
          1,
          0,
          a,
          2,
          0,
          e,
          11,
          0,
          u,
          12,
          0,
          s,
          14,
          0,
          l,
          13,
          0,
          c,
        ]);
      }
      function j(e, t) {
        U(34, e.chatJid, t);
      }
      function $(e, t, n) {
        for (var r = 0; r < t; r++) U(38, e, n);
      }
      function F(e, t) {
        V(e, t);
      }
      function B(e, t, n) {
        var r;
        V(e, t, D(t, n)),
          (null == (r = e.quoted) ? void 0 : r.remoteJid) === u.h &&
            (function (e) {
              var t = e.quoted;
              t &&
                WAM.log("private", 3560, 0, [
                  1,
                  0,
                  H(t),
                  2,
                  2,
                  e.author,
                  3,
                  0,
                  K(e),
                ]);
            })(e);
      }
      function V(e, t, n) {
        var r = N(e),
          i = w(t),
          a = i.messageIsInternational,
          o = i.messageType,
          u = e && (0, d.q)(e),
          s = n || {},
          l = s.senderDefaultDisappearingDuration,
          c = s.receiverDefaultDisappearingDuration,
          f = s.disappearingChatInitiator,
          _ = s.ephemeralityDuration,
          p = J(e);
        WAM.log("regular", 450, void 0, [
          4,
          1,
          a,
          1,
          0,
          o,
          2,
          0,
          r,
          9,
          1,
          u,
          11,
          0,
          l,
          12,
          0,
          c,
          14,
          0,
          f,
          13,
          0,
          _,
          20,
          0,
          p,
        ]);
      }
      function K(e) {
        if ((0, g.a)().includes(e.text)) return 15;
        switch (e.type) {
          case r.f.TEXT:
            return 2;
          case r.f.IMAGE:
            return 3;
          case r.f.PTT:
            return 4;
          case r.f.AUDIO:
            return 6;
          case r.f.GIF:
            return 14;
          case r.f.DOCUMENT:
            return 5;
          case r.f.STICKER:
            return 7;
          case r.f.LOCATION:
            return 8;
          case r.f.VCARD:
            return 10;
          default:
            return 1;
        }
      }
      function H(e) {
        switch (e.content.type) {
          case r.f.VIDEO:
            return 3;
          case r.f.IMAGE:
            return 2;
          default:
            return 1;
        }
      }
      function q(e) {
        var t = i.N.get().status,
          n = (0, _.a)(e, t);
        "country-disabled" === n
          ? WAM.log("regular", 3152, void 0, [1, 0, 2])
          : "tos-not-accepted" === n &&
            WAM.log("regular", 3152, void 0, [1, 0, 1]);
      }
      function z(e, t) {
        var n,
          r = e.ephemeral;
        if (null == r) return null;
        var a = i.k.get().disappearingMsgsDefaultTimer || m.k,
          o =
            (null == (n = e.defaultDisappearingMode) ? void 0 : n.expiration) ||
            m.k,
          u = "sender-me" === t;
        return {
          disappearingChatInitiator: W(r.initiator),
          senderDefaultDisappearingDuration: u ? a : o,
          receiverDefaultDisappearingDuration: u ? o : a,
        };
      }
      function W(e) {
        switch (e) {
          case p.a.CHANGED_IN_CHAT:
            return 1;
          case p.a.INITIATED_BY_ME:
            return 2;
          case p.a.INITIATED_BY_OTHER:
            return 3;
        }
        return null;
      }
      function J(e) {
        return e.type === r.f.REVOKED ? (null != e.adminJid ? 1 : 0) : null;
      }
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return l;
      }),
        n.d(t, "c", function () {
          return c;
        }),
        n.d(t, "b", function () {
          return f;
        }),
        n.d(t, "d", function () {
          return _;
        }),
        n.d(t, "e", function () {
          return p;
        });
      var r = n(2),
        i = n(37),
        a = n.n(i),
        o = n(42),
        u = n(6),
        s = n(7),
        l = {
          PRECIOUS: 4,
          SIGNIFICANT: 3,
          NOTEWORTHY: 2,
          UNINTERESTING: 1,
          GARBAGE: 0,
        };
      function c(e) {
        return e.type === r.f.GROUP_NOTIFICATION
          ? (function (e, t, n) {
              switch (e) {
                case "add":
                  return t && !n ? l.SIGNIFICANT : l.UNINTERESTING;
                case "remove":
                  return t && !n ? l.NOTEWORTHY : l.UNINTERESTING;
                case "subject":
                case "link_cag":
                case "link_subgroup":
                case "unlink_cag":
                case "unlink_subgroup":
                  return l.NOTEWORTHY;
                case "create":
                  return n ? l.NOTEWORTHY : l.SIGNIFICANT;
                case "announcement":
                case "not_announcement":
                case "promote":
                case "cag_promote":
                case "demote":
                case "cag_demote":
                case "cag_create":
                case "invite":
                case "accept":
                case "leave":
                case "modify":
                case "description":
                case "description_remove":
                case "revoke_invite":
                case "delete":
                case "closed":
                case "deactivate":
                case "picture":
                case "picture_remove":
                case "restrict":
                case "locked":
                case "unlocked":
                case "growth_locked":
                case "growth_unlocked":
                case "ephemeral":
                case "ephemeral_authorless":
                  return l.UNINTERESTING;
                default:
                  return (0, a.a)(e);
              }
            })(e.subtype, !!e.involvesMe, e.author === r.b)
          : e.type === r.f.EPHEMERAL
          ? "keep-in-chat" === e.subtype
            ? l.UNINTERESTING
            : l.NOTEWORTHY
          : d(e.author === r.b, e.type);
      }
      function d(e, t) {
        switch (t) {
          case r.f.TEXT:
          case r.f.IMAGE:
          case r.f.STICKER:
          case r.f.PTT:
          case r.f.AUDIO:
          case r.f.VIDEO:
          case r.f.GIF:
          case r.f.VCARD:
          case r.f.LOCATION:
          case r.f.EXTENDED_TEXT:
          case r.f.RICH_HSM:
          case r.f.HSM_BUTTON_REPLY:
          case r.f.DOCUMENT:
          case r.f.POLL:
            return l.PRECIOUS;
          case r.f.FUTUREPROOF:
          case r.f.REVOKED:
          case r.f.CIPHERTEXT:
          case r.f.MD_PLACEHOLDER:
            return l.NOTEWORTHY;
          case r.f.IDENTITY_CHANGE:
          case r.f.PRIVACY_CHANGE:
          case r.f.CONTACT_BLOCK_CHANGE:
            return l.GARBAGE;
          case r.f.GROUP_INVITE:
            return e ? l.UNINTERESTING : l.PRECIOUS;
          case r.f.BUSINESS_NOTIFICATION:
            return l.UNINTERESTING;
          case r.f.GROUP_NOTIFICATION:
            throw new Error(
              "getWorthFromType should not be given notifications"
            );
          case r.f.EPHEMERAL:
            throw new Error("getWorthFromType should not be given ephemeral");
          default:
            return (
              __LOG__(4)`getWorthFromType no worth assigned to ${t}`, l.GARBAGE
            );
        }
      }
      function f(e, t) {
        var n = e.author,
          i = e.type;
        return (
          n !== r.b &&
          n !== r.c &&
          i !== r.f.GROUP_NOTIFICATION &&
          i !== r.f.EPHEMERAL &&
          (null == t ? d(!1, i) : t) >= l.PRECIOUS
        );
      }
      function _(e, t) {
        return (
          t.type !== r.f.REVOKED &&
          !(0, o.i)(t.ack) &&
          null != (0, s.p)(e.jid) &&
          ((null != t.quoted && t.quoted.author === r.b) ||
            (null != t.mentionedJids && t.mentionedJids.includes(u.t.get())))
        );
      }
      function p(e, t) {
        return e.type !== r.f.BUSINESS_NOTIFICATION;
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      function r(e) {
        return e;
      }
      function i(e) {
        return e;
      }
      function a(e) {
        return e;
      }
      function o(e) {
        return e;
      }
      n.d(t, "d", function () {
        return r;
      }),
        n.d(t, "b", function () {
          return i;
        }),
        n.d(t, "c", function () {
          return a;
        }),
        n.d(t, "a", function () {
          return o;
        });
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return y;
      }),
        n.d(t, "b", function () {
          return E;
        }),
        n.d(t, "c", function () {
          return I;
        }),
        n.d(t, "d", function () {
          return S;
        }),
        n.d(t, "e", function () {
          return L;
        });
      var r = n(8),
        i = n.n(r),
        a = n(26),
        o = n.n(a),
        u = n(209),
        s = n(120),
        l = n(24),
        c = n(43),
        d = n(90),
        f = n(11),
        _ = n(279),
        p = n(369),
        v = n(41),
        h = n(85),
        m = n(144),
        g = n(115),
        y = 16,
        b = y,
        w = 65536,
        O = {
          image: "WhatsApp Image Keys",
          audio: "WhatsApp Audio Keys",
          video: "WhatsApp Video Keys",
          doc: "WhatsApp Document Keys",
          history: "WhatsApp History Keys",
          "thumbnail-document": "WhatsApp Document Thumbnail Keys",
          "thumbnail-link": "WhatsApp Link Thumbnail Keys",
          "thumbnail-image": "WhatsApp Image Thumbnail Keys",
          "thumbnail-video": "WhatsApp Video Thumbnail Keys",
          "thumbnail-gif": "WhatsApp Video Thumbnail Keys",
          "md-app-state": "WhatsApp App State Keys",
        },
        E = (0, h.d)("HmacValidationError", !1);
      function I(e, t) {
        var n = O[(0, d.a)(t)];
        return (0, u.a)(new Uint8Array(e), n, 112).then((e) => ({
          iv: new Uint8Array(e, 0, 16),
          cipherKey: new Uint8Array(e, 16, 32),
          hmacKey: new Uint8Array(e, 48, 32),
          refKey: new Uint8Array(e, 80, 32),
        }));
      }
      function S(e, t, n, r, i) {
        return k.apply(this, arguments);
      }
      function k() {
        return (k = o()(function* (e, t, n, r, a) {
          var o = new l.a();
          o.ensureCapacity(b + a.size + y + 10), o.writeByteArray(t);
          for (
            var u = new _.a(o, "encrypt", e, t), s = 0, c = s + w;
            c < a.size;

          ) {
            var v = a.slice(s, c),
              h = yield (0, f.h)(v);
            yield u.append(new Uint8Array(h)), (s = c), (c += w);
          }
          var O = yield (0, f.h)(a.slice(s));
          yield u.finalize(new Uint8Array(O));
          var E = o.peek((e) => e.readByteArray()),
            I = yield (0, m.b)(n),
            S = yield (0, m.f)(I, E);
          o.writeByteArray(new Uint8Array(S, 0, 10));
          var k = o.readByteArray(),
            L = k.subarray(b),
            G = yield Promise.all([
              (0, g.a)(L),
              "no-sidecar" !== r && (0, p.b)((0, d.f)(r)) && a.size > w
                ? (0, p.a)(I, k)
                : void 0,
            ]),
            M = i()(G, 2);
          return { ciphertext: L, ciphertextHash: M[0], sidecar: M[1] };
        })).apply(this, arguments);
      }
      function L(e, t, n, r, i, a, o) {
        return 10 <= i.length && i.length <= 32
          ? (0, v.A)("hmacSha256")
              .then((e) => {
                var i = a ? n.slice(0, n.byteLength - a) : n;
                if (e) return (0, v.z)(r, [t, i]);
                var o = l.a.build(t, i).readByteArray();
                return (0, m.d)(r, o).then((e) => new Uint8Array(e));
              })
              .then((e) => {
                var t = e.slice(0, i.length);
                if (!(0, s.c)(t, i))
                  throw new E("hmacAndDecrypt hmac mismatch");
              })
              .then(() => (0, _.b)(e, t, n))
              .then((e) => {
                var t = o ? e.slice(0, e.byteLength - o) : e;
                return (0, g.a)(t).then((e) => ({
                  plaintext: t,
                  plaintextHash: (0, c.e)(new Uint8Array(e)),
                }));
              })
          : Promise.reject(new E("Bad hmac size " + i.length));
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return g;
      }),
        n.d(t, "b", function () {
          return y;
        }),
        n.d(t, "c", function () {
          return w;
        }),
        n.d(t, "h", function () {
          return O;
        }),
        n.d(t, "i", function () {
          return E;
        }),
        n.d(t, "d", function () {
          return I;
        }),
        n.d(t, "g", function () {
          return S;
        }),
        n.d(t, "f", function () {
          return k;
        }),
        n.d(t, "e", function () {
          return G;
        });
      var r = n(26),
        i = n.n(r),
        a = n(8),
        o = n.n(a),
        u = n(75),
        s = n(182),
        l = n(41),
        c = n(71),
        d = n(7),
        f = n(22),
        _ = n(67),
        p = n(24),
        v = n(84),
        h = n(0),
        m = {};
      h.d.BYTES,
        h.d.UINT32,
        h.d.UINT32,
        h.d.BYTES,
        (m.internalSpec = {
          registrationId: [5, h.d.UINT32],
          preKeyId: [1, h.d.UINT32],
          signedPreKeyId: [6, h.d.UINT32],
          baseKey: [2, h.d.BYTES],
          identityKey: [3, h.d.BYTES],
          message: [4, h.d.BYTES],
        }),
        h.d.UINT32,
        h.d.BYTES,
        h.d.BYTES,
        h.d.BYTES,
        h.d.BYTES,
        h.d.UINT32,
        h.d.UINT32,
        h.d.BYTES,
        h.d.UINT32,
        h.d.UINT32,
        h.d.BYTES,
        h.d.BYTES,
        h.d.UINT32,
        h.d.BYTES;
      var g = new Uint8Array([6, 0]),
        y = new Uint8Array([6, 2]),
        b = new Uint8Array([6, 1]);
      function w(e) {
        return (0, u.a)(s.e, e);
      }
      function O(e, t) {
        return E(new Map([[e, t]])).then((t) => t.get(e));
      }
      function E(e) {
        var t = new Map();
        return (
          e.forEach((e, n) => {
            "primary_only" !== e.type &&
              "device_removed_notification" !== e.type &&
              t.set(n, e.adv);
          }),
          (function (e) {
            var t = Array.from(e.keys()).map(d.e);
            return (0, l.v)(t)
              .then((t) => {
                var n = [];
                return (
                  e.forEach((e, r) => {
                    var i = e.details,
                      a = e.accountSignature;
                    if (!i || !a)
                      return (
                        __LOG__(
                          3
                        )`ADV Incomplete ADVSignedKeyIndexList for ${r}`,
                        null
                      );
                    var o = t.get((0, d.e)(r));
                    if (!o) return __LOG__(3)`ADV No public key for ${r}`, null;
                    var f = p.a.build(y, i).readByteArray(),
                      _ = (0, l.N)(o, f, new Uint8Array(a)).then((e) => {
                        if (!e)
                          return (
                            __LOG__(
                              3
                            )`ADV Signature verification failed for ${r}`,
                            null
                          );
                        var t = (function (e) {
                          var t = e.rawId,
                            n = e.currentIndex,
                            r = e.validIndexes;
                          if (null == t || 0 === t)
                            return (
                              __LOG__(
                                3
                              )`ADV Invalid ADVList object: missing or zero raw ID`,
                              null
                            );
                          if (null == n)
                            return (
                              __LOG__(
                                3
                              )`ADV Invalid ADVList object: missing current index`,
                              null
                            );
                          var i = (0, v.d)(e.timestamp);
                          return null == i || 0 === i
                            ? (__LOG__(
                                3
                              )`ADV Invalid ADVList object: missing or zero timestamp`,
                              null)
                            : {
                                rawId: t,
                                timestamp: i,
                                currentIndex: n,
                                validIndexes: (0, c.f)(r),
                              };
                        })((0, u.a)(s.b, i));
                        return t ? [r, t] : null;
                      });
                    n.push(_);
                  }),
                  Promise.all(n)
                );
              })
              .then((e) => new Map(e.filter(Boolean)));
          })(t).then((t) => {
            var n = new Map();
            return (
              e.forEach((e, r) => {
                var i = t.get(r),
                  a = null;
                "adv_list" === e.type
                  ? i &&
                    (i.timestamp === e.stanzaTs
                      ? (a = {
                          type: "adv_list",
                          adv: i,
                          expectedTs: e.expectedTs,
                        })
                      : (__LOG__(
                          3
                        )`advVerifier timestamp in ADV KeyIndex list is different from stanza timestamp, adv_list`,
                        SEND_LOGS("advVerifier-ts-mismatch")))
                  : "adv_list_and_devices" === e.type
                  ? i &&
                    (i.timestamp === e.stanzaTs
                      ? (a = {
                          type: "adv_list_and_devices",
                          adv: i,
                          devices: e.devices,
                          expectedTs: e.expectedTs,
                        })
                      : (__LOG__(
                          3
                        )`advVerifier timestamp in ADV KeyIndex list is different from stanza timestamp, adv_list_and_devices`,
                        SEND_LOGS("advVerifier-ts-mismatch")))
                  : "device_added_notification" === e.type
                  ? i &&
                    (i.timestamp === e.stanzaTs
                      ? (a = {
                          type: "device_added_notification",
                          adv: i,
                          devicesToAdd: e.devicesToAdd,
                        })
                      : (__LOG__(
                          3
                        )`advVerifier timestamp in ADV KeyIndex list is different from stanza timestamp, device_added_notification`,
                        SEND_LOGS("advVerifier-ts-mismatch")))
                  : "device_removed_notification" === e.type
                  ? (a = {
                      type: "device_removed_notification",
                      devicesToRemove: e.devicesToRemove,
                      advTs: e.advTs,
                    })
                  : (e.type, (a = { type: "primary_only" })),
                  a && n.set(r, a);
              }),
              n
            );
          })
        );
      }
      function I(e) {
        return (0, u.a)(s.d, e);
      }
      function S(e, t, n, r) {
        var i = t.details,
          a = t.accountSignature,
          f = t.deviceSignature,
          _ = t.accountSignatureKey;
        if (!i || !a || !f)
          return (
            __LOG__(3)`ADV Invalid ADVSignedDeviceIdentity proto for ${e}`,
            Promise.resolve(null)
          );
        var h,
          m = G(n);
        if (r) h = r;
        else {
          if (!_)
            return (
              __LOG__(
                3
              )`ADV Can't verify ADVSignedDeviceIdentity, no public key for primary device of ${e}`,
              Promise.resolve(null)
            );
          h = new Uint8Array(_);
        }
        var y = p.a.build(g, i, m).readByteArray(),
          w = (0, l.N)(h, y, new Uint8Array(a)),
          O = p.a.build(b, i, m, G(h)).readByteArray(),
          E = (0, l.N)(n, O, new Uint8Array(f));
        return Promise.all([w, E]).then((t) => {
          var n = o()(t, 2),
            r = n[0],
            a = n[1];
          if (!r)
            return (
              __LOG__(
                3
              )`ADV account_signature invalid in device_identity for ${e}`,
              null
            );
          if (!a)
            return (
              __LOG__(
                3
              )`ADV device_signature invalid in device_identity for ${e}`,
              null
            );
          __LOG__(
            2
          )`ADV signatures in ADVSignedDeviceIdentity for ${e} are valid`;
          var l = (0, u.a)(s.a, i),
            f = l.rawId,
            _ = l.keyIndex,
            p = l.timestamp;
          if (null == f)
            return (
              __LOG__(
                3
              )`ADV Invalid ADVSignedDeviceIdentity proto for ${e}, missing rawId`,
              null
            );
          if (null == _)
            return (
              __LOG__(
                3
              )`ADV Invalid ADVSignedDeviceIdentity proto for ${e}, missing keyIndex`,
              null
            );
          var h = (0, v.d)(p);
          return null == h
            ? (__LOG__(
                3
              )`ADV Invalid ADVSignedDeviceIdentity proto for ${e}, missing timestamp`,
              null)
            : {
                rawId: f,
                timestamp: h,
                keyIndex: (0, c.e)(_),
                deviceId: (0, d.f)(e),
              };
        });
      }
      function k(e, t, n) {
        var r = (function (e) {
          var t = (0, u.a)(m, e.slice(1)).identityKey;
          return t ? new Uint8Array(t) : null;
        })(t);
        return r
          ? S(n, e, r).then((t) => {
              if (!t)
                return (
                  __LOG__(3)`handleMsg failed to verify received ADV object`,
                  Promise.resolve(!1)
                );
              var i = (0, d.h)(n),
                a = (0, d.f)(n);
              return (function (e, t, n, r) {
                return L.apply(this, arguments);
              })(t, e.accountSignatureKey, i, a).then(
                (e) =>
                  !!e.continueProcessingMsg &&
                  (0, f.jb)(i, { identity: t, isPkMsg: !0 })
                    .then(() =>
                      (0, l.I)(n, r, { rawId: t.rawId, keyIndex: t.keyIndex })
                    )
                    .then(() => !0)
              );
            })
          : (__LOG__(
              4
            )`verifyCompanionPkMsg pkmsg received without identityKey`,
            Promise.resolve(!1));
      }
      function L() {
        return (L = i()(function* (e, t, n, r) {
          var i = yield (0, _.b)(n),
            a = 0;
          if (
            (i && i.deviceVerification && (a = i.deviceVerification.timestamp),
            a < e.timestamp)
          )
            return (
              t && (yield (0, l.J)([[n, new Uint8Array(t)]])),
              { continueProcessingMsg: !0 }
            );
          var o = !1;
          if (null == i ? void 0 : i.devices) {
            var u = e.keyIndex;
            o =
              null == i
                ? void 0
                : i.devices.some((e) => {
                    var t = e.id,
                      n = e.index;
                    return t === r && n === u;
                  });
          }
          return { continueProcessingMsg: o };
        })).apply(this, arguments);
      }
      function G(e) {
        return 33 === e.length && 5 === e[0] ? e.slice(1) : e;
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return i;
      });
      var r = n(0),
        i = Object.assign({}, null);
      i.internalSpec = {
        remoteJid: [1, r.d.STRING],
        fromMe: [2, r.d.BOOL],
        id: [3, r.d.STRING],
        participant: [4, r.d.STRING],
      };
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "c", function () {
        return u;
      }),
        n.d(t, "d", function () {
          return s;
        }),
        n.d(t, "f", function () {
          return l;
        }),
        n.d(t, "e", function () {
          return c;
        }),
        n.d(t, "a", function () {
          return d;
        }),
        n.d(t, "b", function () {
          return f;
        });
      var r = n(48),
        i = (n(206), n(83)),
        a = (n(75), 16777215);
      function o(e, t) {
        return { publicKey: e, privateKey: t };
      }
      function u() {
        var e = (0, r.b)(),
          t = e.publicKey,
          n = e.secretKey;
        return (
          (n[0] &= 248),
          (n[31] = 64 | (63 & n[31])),
          o((0, i.d)(t, 32), (0, i.d)(n, 32))
        );
      }
      function s(e, t) {
        return o((0, i.f)(t, 1, 32), e);
      }
      function l(e) {
        var t = (0, i.e)(33);
        return (t[0] = 5), t.set(e.publicKey, 1), t;
      }
      function c(e) {
        var t = (0, i.e)(33);
        return (t[0] = 5), t.set((0, i.d)(e, 32), 1), t;
      }
      function d(e) {
        return (0, i.c)(e, 1, a);
      }
      function f(e) {
        if (0 === e.length || 5 !== e[0])
          throw new Error("Unrecognized public key type");
        return (0, i.d)(e, 33);
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return E;
      }),
        n.d(t, "c", function () {
          return I;
        }),
        n.d(t, "a", function () {
          return L;
        }),
        n.d(t, "j", function () {
          return A;
        }),
        n.d(t, "i", function () {
          return P;
        }),
        n.d(t, "f", function () {
          return C;
        }),
        n.d(t, "g", function () {
          return x;
        }),
        n.d(t, "d", function () {
          return D;
        }),
        n.d(t, "h", function () {
          return U;
        }),
        n.d(t, "e", function () {
          return V;
        });
      var r = n(56),
        i = n(54),
        a = n(7),
        o = n(2),
        u = n(34),
        s = n(33),
        l = n(6),
        c = n(43),
        d = n(3),
        f = n(20),
        _ = n(11),
        p = n(252),
        v = n(21),
        h = n(14),
        m = n(17),
        g = n(99),
        y = n(321),
        b = n(52),
        w = n(230),
        O = n(156);
      function E(e, t, n, r) {
        var i = null;
        if (e.mediaKey && e.fileEncSha256) {
          var a = {
            version: "mms4",
            type: t,
            cryptoKey: e.mediaKey,
            ciphertextHash: e.fileEncSha256,
            size: n,
            creationTs: (0, d.D)(),
            mediaKeyTs:
              null != e.mediaKeyTimestamp ? (0, d.h)(e.mediaKeyTimestamp) : r,
            validatedTs: r,
          };
          e.directPath && (a.directPath = e.directPath),
            e.url && (a.url = e.url),
            (i = a);
        } else
          e.url && e.mediaKey && !e.fileEncSha256
            ? ((i = {
                version: "mms3",
                type: t,
                cryptoKey: e.mediaKey,
                url: e.url,
                size: n,
                creationTs: (0, d.D)(),
              }),
              /^https:\/\/(\w|-)+\.whatsapp\.net\//.test(i.url) ||
                (__LOG__(4)`makeMedia msg has bad mms3 url ${i.url}`,
                (i = null)))
            : __LOG__(4)`makeMedia msg does not have enough entry info`;
        return (
          i && e.viewOnce && (i.isViewOnce = e.viewOnce),
          i && e.streamingSidecar && (i.sidecar = e.streamingSidecar),
          i
        );
      }
      function I(e, t) {
        return null != t.forwardingScore
          ? Object.assign({}, e, { forwardingScore: t.forwardingScore })
          : t.isForwarded
          ? Object.assign({}, e, { forwardingScore: 1 })
          : e;
      }
      function S(e) {
        return e.verifiedLevel
          ? {
              level: e.verifiedLevel,
              serial: e.verifiedNameSerial || -1,
              cert: e.verifiedNameCert,
              bsp: e.bspInfo,
            }
          : null;
      }
      function k(e, t) {
        var n = e.hydratedContentText;
        if (null != n) {
          var r,
            i,
            a = {
              type: o.f.RICH_HSM,
              title: e.hydratedTitleText,
              content: n,
              footer: e.hydratedFooterText,
              hsmTemplateId: e.templateId,
            };
          if (null != e.imageMessage) {
            var s = x(e.imageMessage, t, E);
            null != s &&
              ((a.richContent = s.content), (r = s.media), (i = s.preview));
          } else if (null != e.videoMessage) {
            var l = U(e.videoMessage, t, u.d.VIDEO, E);
            null != l &&
              ((a.richContent = Object.assign({ type: o.f.VIDEO }, l.content)),
              (r = l.media),
              (i = l.preview));
          } else if (null != e.locationMessage) {
            var c = F(e.locationMessage);
            null != c &&
              ((a.richContent = c.content), (r = c.media), (i = c.preview));
          } else if (null != e.documentMessage) {
            var d = K(e.documentMessage, t);
            if (null != d) {
              var f = d.content;
              if ("application/pdf" !== f.mimetype) return null;
              (a.richContent = f), (r = d.media), (i = d.preview);
            }
          }
          if (e.hydratedButtons) {
            var _ = e.hydratedButtons;
            if (_.length > 3) return null;
            for (var p = [], v = 0; v < _.length; v++) {
              var h = _[v];
              if (h.urlButton) {
                var m = h.urlButton,
                  g = m.url,
                  y = m.displayText;
                if (null == g)
                  return (
                    __LOG__(
                      4
                    )`HSM message with url button withuot an url to go to`,
                    null
                  );
                p.push({ type: o.d.URL, displayText: y, url: g });
              } else if (h.callButton) {
                var b = h.callButton,
                  w = b.phoneNumber,
                  O = b.displayText;
                if (null == w)
                  return (
                    __LOG__(
                      4
                    )`HSM message with call number button withuot a number to call`,
                    null
                  );
                p.push({ type: o.d.CALL, displayText: O, phoneNumber: w });
              } else {
                if (!h.quickReplyButton)
                  return __LOG__(4)`HSM message with unknown button type`, null;
                var I = h.quickReplyButton;
                if (null == I.displayText)
                  return (
                    __LOG__(
                      4
                    )`HSM message with quick reply button withuot a value to display`,
                    null
                  );
                p.push({
                  type: o.d.QUICK_REPLY,
                  displayText: I.displayText,
                  payload: I.id,
                });
              }
            }
            a.buttons = p;
          }
          return r
            ? { content: a, media: r, mentionedJids: void 0, preview: i }
            : { content: a, mentionedJids: void 0, preview: i };
        }
      }
      function L(e) {
        var t = k(e.hydratedTemplate, e.ts);
        if (null != t) {
          var n,
            r = S(e),
            i = (0, g.d)({
              externalId: e.externalId,
              ts: e.ts,
              author: e.author,
              broadcastJid: e.broadcastJid,
              verifiedLevel: e.verifiedLevel,
              verifiedNameSerial: e.verifiedNameSerial,
              bspInfo: e.bspInfo,
            }),
            a = Object.assign({}, i, t.content, { media: void 0 });
          if (t.media) {
            var o = {
              entry: t.media.mediaEntry,
              plaintextHash: t.media.plaintextHash,
              preview: t.preview || null,
            };
            t.media.thumbPlaintextHash &&
              (o.mmsThumbInfo = { hash: t.media.thumbPlaintextHash }),
              (n = o);
          }
          var u = {
              msg: a,
              media: n,
              contactVerification: r,
              pushname: e.pushname,
              isHsm: !0,
            },
            s = e.contextInfo;
          if (null != (null == s ? void 0 : s.quotedMessage)) {
            var l = N(e.jid, i.ts, s);
            l &&
              ((a.quoted = l.msg),
              (u.quotedData = { quotedMediaPreview: l.quotedMediaPreview }));
          }
          return u;
        }
      }
      function G(e, t) {
        var n = t;
        if (null != e && null != n) {
          for (var r = [], i = 0; i < e.length; i++) {
            var o = (0, a.o)(e[i]);
            "phoneUser" === o.jidType &&
              n.includes("@" + (0, a.u)(o.userJid)) &&
              r.push(o.userJid);
          }
          return r.length ? (0, f.m)(r) : void 0;
        }
      }
      function M(e, t, n) {
        var r = t.type;
        if (
          ("pollCreationMessage" !== r && "pollUpdateMessage" !== r) ||
          (0, a.p)(e.jid)
        ) {
          var i = y.a[t.type] || null;
          return Object.assign(
            {
              type: o.f.FUTUREPROOF,
              protobuf: (0, s.b)(e.bytes),
              subtype: i,
              altIndex: "futureproof-" + (i || "unknown"),
            },
            n
          );
        }
      }
      function A(e) {
        if (e && e.byteLength <= 192 && e.byteLength >= 64) return e;
      }
      function P(e) {
        var t,
          n = e.proto,
          s = (0, g.f)(n);
        if (!s) return null;
        var c,
          f,
          p = (0, g.d)({
            externalId: e.externalId,
            ts: e.ts,
            author: e.author,
            urlNumber: e.urlNumber,
            urlText: e.urlText,
            expiration: e.expiration,
            broadcastJid: e.broadcastJid,
            verifiedLevel: e.verifiedLevel,
            verifiedNameSerial: e.verifiedNameSerial,
            bspInfo: e.bspInfo,
            messageSecret:
              null == (t = n.messageContextInfo) ? void 0 : t.messageSecret,
          });
        switch (
          ((p = (function (e, t) {
            var n = (0, g.b)(e);
            return n
              ? I(
                  (function (e, t) {
                    return null == t.placeholderKey
                      ? e
                      : (0, _.j)(e, { placeholderId: t.placeholderKey.id });
                  })(
                    (function (e, t) {
                      if (null != e.expiration) return e;
                      if (
                        null != t.expiration &&
                        null != t.ephemeralSettingTimestamp
                      ) {
                        var n = Object.assign({}, e, {
                          expiration: t.expiration,
                          ephemeralSettingTimestamp: (0, d.h)(
                            t.ephemeralSettingTimestamp
                          ),
                        });
                        if ((0, m.a)("disappearing_mode")) {
                          var r,
                            i =
                              null == t || null == (r = t.disappearingMode)
                                ? void 0
                                : r.initiator;
                          null != i &&
                            (n.disappearingModeInitiator = (0, g.a)(i));
                        }
                        return n;
                      }
                      return e;
                    })(t, n),
                    n
                  ),
                  n
                )
              : t;
          })(s, p)),
          s.type)
        ) {
          case "conversation":
            c = Object.assign({ type: o.f.TEXT, text: s.value }, p);
            break;
          case "extendedTextMessage":
            var v = (function (e, t) {
              var n = C(e, (0, i.i)(t.author));
              if (n) {
                var r = n.content,
                  a = n.mentionedJids,
                  u = n.preview;
                return {
                  msg: Object.assign({ type: o.f.TEXT }, r, t, {
                    mentionedJids: a,
                  }),
                  media: u ? { preview: u } : void 0,
                };
              }
            })(s.value, p);
            v && ((c = v.msg), (f = v.media));
            break;
          case "stickerMessage":
            var h = (function (e, t) {
              var n,
                r,
                i = R(e, t.ts);
              if (i) {
                var a = Object.assign({}, i.content, t, { media: void 0 }),
                  o = {
                    entry: i.media.mediaEntry,
                    plaintextHash: i.media.plaintextHash,
                    preview: i.preview || null,
                  };
                return (
                  (null ==
                    (null == (n = i.media.stickerInfo)
                      ? void 0
                      : n.firstFrameLength) &&
                    null ==
                      (null == (r = i.media.stickerInfo)
                        ? void 0
                        : r.firstFrameSidecar)) ||
                    (o.stickerInfo = {
                      firstFrameLength: i.media.stickerInfo.firstFrameLength,
                      firstFrameSidecar: i.media.stickerInfo.firstFrameSidecar,
                    }),
                  { msg: a, media: o }
                );
              }
            })(s.value, p);
            h && ((c = h.msg), (f = h.media));
            break;
          case "imageMessage":
            var y = (function (e, t) {
              var n = x(e, t.ts, E);
              if (n) {
                var r = Object.assign({}, n.content, t, {
                  mentionedJids: n.mentionedJids,
                  media: void 0,
                });
                return (
                  !0 === e.viewOnce && (r.viewOnceState = "active"),
                  {
                    msg: r,
                    media: {
                      entry: n.media.mediaEntry,
                      plaintextHash: n.media.plaintextHash,
                      preview: n.preview || null,
                    },
                  }
                );
              }
            })(s.value, p);
            y && ((c = y.msg), (f = y.media));
            break;
          case "audioMessage":
            var k = s.value;
            if (k.ptt) {
              var L = (function (e, t) {
                var n = D(e, t.ts, u.d.PTT);
                if (n)
                  return {
                    msg: Object.assign({ type: o.f.PTT }, n.content, t, {
                      media: void 0,
                      waveform: A(e.waveform),
                    }),
                    media: {
                      entry: n.media.mediaEntry,
                      plaintextHash: n.media.plaintextHash,
                      preview: n.preview || null,
                    },
                  };
              })(k, p);
              L && ((c = L.msg), (f = L.media));
            } else {
              var G = (function (e, t) {
                var n = D(e, t.ts, u.d.AUDIO);
                if (n)
                  return {
                    msg: Object.assign({ type: o.f.AUDIO }, n.content, t, {
                      media: void 0,
                    }),
                    media: {
                      entry: n.media.mediaEntry,
                      plaintextHash: n.media.plaintextHash,
                      preview: n.preview || null,
                    },
                  };
              })(k, p);
              G && ((c = G.msg), (f = G.media));
            }
            break;
          case "videoMessage":
            var P = s.value;
            if (P.gifPlayback) {
              var T = (function (e, t) {
                var n = U(e, t.ts, u.d.GIF, E);
                if (n) {
                  var i = Object.assign({ type: o.f.GIF }, n.content, t, {
                    mentionedJids: n.mentionedJids,
                    media: void 0,
                  });
                  return (
                    null != e.gifAttribution &&
                      e.gifAttribution !== r.e.NONE &&
                      (i.gifAttribution = e.gifAttribution),
                    {
                      msg: i,
                      media: {
                        entry: n.media.mediaEntry,
                        plaintextHash: n.media.plaintextHash,
                        preview: n.preview || null,
                      },
                    }
                  );
                }
              })(P, p);
              T && ((c = T.msg), (f = T.media));
            } else {
              var $ = (function (e, t) {
                var n = U(e, t.ts, u.d.VIDEO, E);
                if (n) {
                  var r = Object.assign({ type: o.f.VIDEO }, n.content, t, {
                    mentionedJids: n.mentionedJids,
                    media: void 0,
                  });
                  return (
                    !0 === e.viewOnce && (r.viewOnceState = "active"),
                    {
                      msg: r,
                      media: {
                        entry: n.media.mediaEntry,
                        plaintextHash: n.media.plaintextHash,
                        preview: n.preview || null,
                      },
                    }
                  );
                }
              })(P, p);
              $ && ((c = $.msg), (f = $.media));
            }
            break;
          case "protocolMessage":
            var K = (0, a.h)(e.author);
            switch (s.value.type) {
              case r.d.REVOKE:
                var H = s.value.key,
                  q = e.jid;
                if (
                  H &&
                  (H.remoteJid === l.t.get()
                    ? K === q
                    : H.remoteJid === q || H.remoteJid === e.broadcastJid)
                ) {
                  var z = H.fromMe,
                    W = H.id,
                    J = e.edit,
                    Y = J === u.b && z,
                    Q = (0, b.j)() && J === u.a && !z && null != (0, a.p)(q);
                  if (Y || Q) {
                    if (
                      ((c = {
                        type: o.f.REVOKED,
                        ts: e.ts,
                        externalId: W,
                        revokedExternalId: W,
                        chatJid: q,
                        author: K,
                        deviceId: (0, a.f)(e.author),
                        ack: o.a.RECEIVED,
                        altIndex: "",
                      }),
                      Q)
                    ) {
                      var Z = (0, O.b)(q, K, H);
                      Z
                        ? ((c.author = Z.msgAuthor), (c.adminJid = K))
                        : ((c = null),
                          __LOG__(4)`Invalid key for admin revoke`);
                    }
                  } else __LOG__(4)`recv'd invalid revoke key`;
                }
                break;
              case r.d.EPHEMERAL_SETTING:
                c = {
                  type: o.f.EPHEMERAL,
                  subtype: "setting",
                  ts: e.ts,
                  externalId: e.externalId,
                  author: K,
                  deviceId: (0, a.f)(e.author),
                  ack: o.a.RECEIVED,
                  altIndex: "",
                  ephemeralExpiration: s.value.ephemeralExpiration,
                };
                break;
              case r.d.EPHEMERAL_SYNC_RESPONSE:
                var X;
                (c = {
                  type: o.f.EPHEMERAL,
                  subtype: "sync_response",
                  ts: e.ts,
                  externalId: e.externalId,
                  author: K,
                  deviceId: (0, a.f)(e.author),
                  ack: o.a.RECEIVED,
                  altIndex: "",
                  ephemeralExpiration: s.value.ephemeralExpiration,
                  ephemeralSettingTimestamp: s.value.ephemeralSettingTimestamp,
                }),
                  (0, m.a)("disappearing_mode") &&
                    (c.ephemeralInitiator = (0, g.a)(
                      null == (X = s.value.disappearingMode)
                        ? void 0
                        : X.initiator
                    ));
                break;
              case r.d.APP_STATE_SYNC_KEY_REQUEST:
                break;
              default:
                __LOG__(
                  4
                )`received protocol message with unknown type ${s.value.type}`;
            }
            break;
          case "contactMessage":
            c = j(p, [s.value], s.value.contextInfo);
            break;
          case "contactsArrayMessage":
            c = j(p, s.value.contacts, s.value.contextInfo);
            break;
          case "locationMessage":
            var ee = (function (e, t) {
              var n = F(e);
              if (n) {
                var r = n.content,
                  i = n.preview;
                return {
                  msg: Object.assign({}, r, t, { media: void 0 }),
                  media: i ? { preview: i } : void 0,
                };
              }
            })(s.value, p);
            ee && ((c = ee.msg), (f = ee.media));
            break;
          case "fastRatchetKeySenderKeyDistributionMessage":
            break;
          case "chat":
            __LOG__(
              4
            )`protoMsgToDbMsg should never handle msg of type ${s.type}`;
            break;
          case "groupInviteMessage":
            var te = (function (e, t) {
              var n = B(e);
              if (n) {
                var r = n.content,
                  i = n.preview;
                return {
                  msg: Object.assign({}, r, t, { media: void 0 }),
                  media: i ? { preview: i } : void 0,
                };
              }
            })(s.value, p);
            te && ((c = te.msg), (f = te.media));
            break;
          case "highlyStructuredMessage":
          case "templateMessage":
            return null;
          case "documentMessage":
            var ne = V(s.value, p);
            ne && ((c = ne.msg), (f = ne.media));
            break;
          case "pollCreationMessage":
            c = (0, b.p)() ? (0, w.c)(e, s.value, p) : M(e, s, p);
            break;
          default:
            s.type, (c = M(e, s, p));
        }
        var re = null;
        if (
          c &&
          s &&
          "conversation" !== s.type &&
          s.value &&
          s.value.contextInfo
        ) {
          var ie = c,
            ae = s.value.contextInfo,
            oe = "string" == typeof ae.remoteJid ? ae.remoteJid : null,
            ue = oe ? (0, a.o)(oe) : null;
          if (ae.quotedMessage) {
            var se;
            ue &&
              ("status" === ue.jidType
                ? (se = ue.statusJid)
                : "group" === ue.jidType
                ? (se = ue.groupJid)
                : (__LOG__(
                    4
                  )`ContextInfo has a remoteJid ${ae.remoteJid} but neither a status jid nor a group jid.`,
                  SEND_LOGS("contextinfo-with-invalid-quoted-remoteJid")));
            var le = N(e.jid, p.ts, ae, se);
            le &&
              ((ie.quoted = le.msg),
              (re = { quotedMediaPreview: le.quotedMediaPreview }));
          } else
            ue &&
              ("group" === ue.jidType
                ? (ie.remoteJid = ue.groupJid)
                : (__LOG__(
                    4
                  )`ContextInfo has a remoteJid ${ae.remoteJid} but not a group jid.`,
                  SEND_LOGS("contextinfo-with-invalid-remoteJid")));
        }
        var ce = S(e);
        if (c) {
          var de = (0, g.b)(s);
          return {
            msg: c,
            media: f,
            contactVerification: ce,
            quotedData: re,
            pushname: e.pushname,
            ephSetting: e.ephSetting,
            ephemeralSharedSecret:
              null == de ? void 0 : de.ephemeralSharedSecret,
          };
        }
        return null;
      }
      function T(e) {
        return e;
      }
      function N(e, t, n, r) {
        var s = e,
          l = n.stanzaId,
          c = n.quotedMessage,
          d = (0, a.p)(s),
          f = (0, a.o)(d ? n.participant || "" : n.participant || s),
          _ = "phoneUser" === f.jidType ? f.userJid : null;
        if (!l || !c || !_) return null;
        var p,
          v,
          h,
          m = (0, g.f)(c);
        if (!m) return null;
        function y(e, t) {
          e &&
            ((p = t(
              e.content,
              (function (e) {
                if (e.media)
                  return {
                    plaintextHash: e.media.plaintextHash,
                    mediaEntry: e.media.mediaEntry,
                  };
              })(e)
            )),
            (v = e.preview),
            (h = e.mentionedJids));
        }
        switch (m.type) {
          case "conversation":
            p = { type: o.f.TEXT, text: m.value };
            break;
          case "extendedTextMessage":
            y(C(m.value, _), T);
            break;
          case "stickerMessage":
            y(R(m.value, t), (e, t) => Object.assign({}, e, { media: t }));
            break;
          case "imageMessage":
            var O = m.value;
            y(x(O, t, E), (e, t) =>
              O.viewOnce
                ? Object.assign({}, e, { media: t, viewOnceState: "active" })
                : Object.assign({}, e, { media: t })
            );
            break;
          case "audioMessage":
            var I = m.value;
            I.ptt
              ? y(D(I, t, u.d.PTT), (e, t) =>
                  Object.assign({}, e, { type: o.f.PTT, media: t })
                )
              : y(D(I, t, u.d.AUDIO), (e, t) =>
                  Object.assign({}, e, { type: o.f.AUDIO, media: t })
                );
            break;
          case "videoMessage":
            var S = m.value;
            S.gifPlayback
              ? y(U(S, t, u.d.GIF, E), (e, t) =>
                  Object.assign({}, e, { type: o.f.GIF, media: t })
                )
              : y(U(S, t, u.d.VIDEO, E), (e, t) =>
                  S.viewOnce
                    ? Object.assign({}, e, {
                        type: o.f.VIDEO,
                        media: t,
                        viewOnceState: "active",
                      })
                    : Object.assign({}, e, { type: o.f.VIDEO, media: t })
                );
            break;
          case "contactMessage":
            y($([m.value]), T);
            break;
          case "contactsArrayMessage":
            y($(m.value.contacts), T);
            break;
          case "locationMessage":
            y(F(m.value), T);
            break;
          case "groupInviteMessage":
            y(B(m.value), T);
            break;
          case "documentMessage":
            y(
              K(m.value, t),
              (e, t) => (e.isVCard, Object.assign({}, e, { media: t }))
            );
            break;
          case "templateMessage":
            var L = m.value.hydratedTemplate;
            if (null == L) return;
            var G = k(L, t);
            if (null == G) return;
            y(G, (e, t) =>
              t
                ? Object.assign({}, e, { media: t })
                : Object.assign({}, e, { media: void 0 })
            );
            break;
          case "pollCreationMessage":
            if ((0, b.p)()) {
              var M = m.value,
                A = (0, w.b)(M);
              if (null == A) return;
              y({ content: A, preview: void 0, mentionedJids: void 0 }, T);
            }
            break;
          default:
            m.type;
        }
        if (!p) return null;
        var P = p;
        return {
          msg: {
            externalId: l,
            remoteJid: r,
            author: (0, i.k)(_),
            content: P,
            mentionedJids: h,
            id: void 0,
            ts: void 0,
          },
          quotedMediaPreview: v,
        };
      }
      function C(e, t) {
        var n,
          r = e.text;
        if (r) {
          var i,
            a = e.title,
            u = e.description,
            s = e.matchedText,
            c = e.canonicalUrl;
          (a || u) &&
            s &&
            r.includes(s) &&
            (i = {
              matchedText: s,
              canonicalUrl: c,
              description: u,
              title: a,
              suspiciousCharacters:
                null != t ? (0, p.a)(s, t, l.t.get(), [(0, v.d)().lg]) : null,
            });
          var d = { type: o.f.TEXT, text: r, linkPreview: i },
            f = G(null == (n = e.contextInfo) ? void 0 : n.mentionedJid, r);
          return { content: d, preview: (0, g.e)(e), mentionedJids: f };
        }
      }
      function R(e, t) {
        var n = (0, g.c)(e);
        if (n) {
          var r = n.size,
            i = n.plaintextHash,
            a = E(e, u.d.STICKER, r, t);
          if (a) {
            var s = { type: o.f.STICKER, size: r };
            null != e.isAnimated && (s.isAnimated = e.isAnimated),
              null != e.width && e.width > 0 && (s.width = e.width),
              null != e.height && e.height > 0 && (s.height = e.height),
              null != e.mimetype && (s.mimetype = e.mimetype);
            var l = { mediaEntry: a, plaintextHash: i };
            return (
              (null == e.firstFrameLength && null == e.firstFrameSidecar) ||
                (l.stickerInfo = {
                  firstFrameLength: e.firstFrameLength,
                  firstFrameSidecar: e.firstFrameSidecar,
                }),
              {
                content: s,
                media: l,
                preview: e.pngThumbnail,
                mentionedJids: void 0,
              }
            );
          }
        }
      }
      function x(e, t, n) {
        var r,
          i = (0, g.c)(e);
        if (i) {
          var a = i.size,
            s = i.plaintextHash,
            l = n(e, u.d.IMAGE, a, t);
          if (l) {
            var c = (function (e) {
              var t = e.scanLengths,
                n = e.scansSidecar,
                r = e.midQualityFileSha256;
              if (t || n || r)
                if (t)
                  if (n)
                    if (t.length !== h.L || r)
                      if (t.length !== h.L && t.length !== h.M)
                        __LOG__(
                          3
                        )`protoMsgToDbMsg scanLengths has incorrect length: ${t.length}`;
                      else {
                        if (n.byteLength === t.length * h.p)
                          return {
                            scanLengths: t,
                            scansSidecar: n,
                            midQualityFileSha256: t.length === h.L ? r : void 0,
                          };
                        __LOG__(
                          3
                        )`protoMsgToDbMsg scansSidecar has incorrect length: ${n.byteLength}`;
                      }
                    else
                      __LOG__(
                        3
                      )`protoMsgToDbMsg midQualityFileSha256 missing for progressive JPEG info with ${h.L}`;
                  else
                    __LOG__(
                      3
                    )`protoMsgToDbMsg scansSidecar missing for progressive JPEG info`;
                else
                  __LOG__(
                    3
                  )`protoMsgToDbMsg scanLengths missing for progressive JPEG info`;
              return null;
            })(e);
            "mms4" === l.version && null != c && (l.progressiveJpeg = c);
            var d = { type: o.f.IMAGE, size: a, text: e.caption || void 0 };
            null != e.width && e.width > 0 && (d.width = e.width),
              null != e.height && e.height > 0 && (d.height = e.height);
            var f = G(
              null == (r = e.contextInfo) ? void 0 : r.mentionedJid,
              e.caption
            );
            return {
              content: d,
              media: { mediaEntry: l, plaintextHash: s },
              preview: (0, g.e)(e),
              mentionedJids: f,
            };
          }
        }
      }
      function D(e, t, n) {
        var r = (0, g.c)(e);
        if (r) {
          var i = r.size,
            a = r.plaintextHash,
            o = E(e, n, i, t);
          if (o) {
            var u;
            null != e.seconds
              ? (u = Math.max(e.seconds, 1))
              : (__LOG__(4)`makeMedia given audio msg without duration`,
                (u = 1));
            var s = { size: i, duration: u };
            return (
              e.mimetype && (s.mimetype = e.mimetype),
              {
                content: s,
                media: { mediaEntry: o, plaintextHash: a },
                preview: (0, g.e)(e),
                mentionedJids: void 0,
              }
            );
          }
        }
      }
      function U(e, t, n, r) {
        var i,
          a = (0, g.c)(e);
        if (a) {
          var o = a.size,
            u = a.plaintextHash,
            s = r(e, n, o, t);
          if (s) {
            var l = { size: o, text: e.caption || void 0 };
            null != e.seconds && (l.duration = Math.max(e.seconds, 1)),
              e.mimetype && (l.mimetype = e.mimetype),
              null != e.width && e.width > 0 && (l.width = e.width),
              null != e.height && e.height > 0 && (l.height = e.height);
            var c = G(
              null == (i = e.contextInfo) ? void 0 : i.mentionedJid,
              e.caption
            );
            return {
              content: l,
              media: { mediaEntry: s, plaintextHash: u },
              preview: (0, g.e)(e),
              mentionedJids: c,
            };
          }
        }
      }
      function j(e, t, n) {
        var r = $(t);
        if (r) return Object.assign({ type: o.f.VCARD }, r.content, e);
      }
      function $(e) {
        var t = [];
        if (
          (e.forEach((e) => {
            e.displayName &&
              e.vcard &&
              t.push({ displayName: e.displayName, vcard: e.vcard });
          }),
          0 !== t.length)
        )
          return {
            content: { type: o.f.VCARD, contacts: t },
            preview: null,
            mentionedJids: void 0,
          };
        __LOG__(4)`protoMsgToDbMsg no valid vcards in msg`;
      }
      function F(e) {
        var t = e.degreesLatitude,
          n = e.degreesLongitude;
        if (null != t && null != n)
          return {
            content: {
              type: o.f.LOCATION,
              degreesLatitude: t,
              degreesLongitude: n,
              name: e.name,
              address: e.address,
              url: e.url,
            },
            preview: (0, g.e)(e),
            mentionedJids: void 0,
          };
        __LOG__(
          4
        )`protobuf location msg with no degreesLatitude or degreesLongitude`;
      }
      function B(e) {
        var t = null != e.groupJid ? (0, a.o)(e.groupJid) : null,
          n = "group" === (null == t ? void 0 : t.jidType) ? t.groupJid : null;
        if (null == n)
          return (
            __LOG__(4)`Received invite with bad groupJid ${e.groupJid}`,
            void SEND_LOGS("empty-groupjid")
          );
        if (
          null == e.inviteCode ||
          null == e.inviteExpiration ||
          null == e.groupName
        )
          return (
            __LOG__(4)`Received invalid group invite`,
            void SEND_LOGS("invalid-invite")
          );
        var r = e.inviteCode,
          i = e.inviteExpiration,
          u = e.groupName;
        return {
          content: {
            type: o.f.GROUP_INVITE,
            groupJid: n,
            inviteCode: r,
            inviteExpiration: (0, d.h)(i),
            groupName: u,
            caption: e.caption,
          },
          preview: (0, g.e)(e),
          mentionedJids: void 0,
        };
      }
      function V(e, t) {
        var n = K(e, t.ts);
        if (n) {
          var r = Object.assign({}, n.content, t, { media: void 0 }),
            i = {
              entry: n.media.mediaEntry,
              plaintextHash: n.media.plaintextHash,
              preview: n.preview || null,
            };
          return (
            n.media.thumbPlaintextHash &&
              (i.mmsThumbInfo = { hash: n.media.thumbPlaintextHash }),
            { msg: r, media: i }
          );
        }
      }
      function K(e, t) {
        var n = (0, g.c)(e);
        if (n) {
          var r = n.size,
            i = n.plaintextHash,
            a = E(e, u.d.DOCUMENT, r, t);
          if (a) {
            var s,
              d,
              f = e.contactVcard && "text/vcard" === e.mimetype,
              p = r <= l.I.get().vcardMaxSizeKb * _.a,
              v = e.fileName || e.title;
            if (f && p)
              s = {
                type: o.f.DOCUMENT,
                isVCard: !0,
                mimetype: "text/vcard",
                size: r,
                fileName: v,
                contactsCount: e.pageCount || void 0,
              };
            else {
              var m = {
                type: o.f.DOCUMENT,
                size: r,
                mimetype: e.mimetype || h.G,
                fileName: v,
                pages: e.pageCount || void 0,
              };
              (s = m),
                "mms4" === a.version &&
                  null != e.thumbnailHeight &&
                  null != e.thumbnailWidth &&
                  e.thumbnailEncSha256 &&
                  e.thumbnailDirectPath &&
                  null != e.thumbnailSha256 &&
                  ((m.mmsThumb = {
                    height: e.thumbnailHeight,
                    width: e.thumbnailWidth,
                  }),
                  (a.mmsThumb = {
                    directPath: e.thumbnailDirectPath,
                    ciphertextHash: e.thumbnailEncSha256,
                  }),
                  (d = (0, c.e)(new Uint8Array(e.thumbnailSha256))));
            }
            return {
              content: s,
              media: { mediaEntry: a, plaintextHash: i, thumbPlaintextHash: d },
              preview: (0, g.e)(e),
              mentionedJids: void 0,
            };
          }
        }
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return G;
      }),
        n.d(t, "a", function () {
          return A;
        }),
        n.d(t, "f", function () {
          return R;
        }),
        n.d(t, "e", function () {
          return F;
        }),
        n.d(t, "d", function () {
          return B;
        }),
        n.d(t, "c", function () {
          return K;
        });
      var r = n(26),
        i = n.n(r),
        a = n(142),
        o = class {
          constructor(e, t, n) {
            (this.aP = (0, a.a)(t)),
              (this.aQ = 0),
              (this.aR = e),
              (this.aS = n);
          }
          run(e, t) {
            var n = this;
            return i()(function* () {
              for (; n.aQ < n.aR; ) {
                yield n.aP(),
                  n.aQ > 0 &&
                    (__LOG__(
                      2
                    )`NetworkOperationsRetrier wait for internet, attempt = ${n.aQ}`,
                    yield null == n.aS ? void 0 : n.aS());
                var r = yield e(n.aQ, t);
                if (r.success) return r.value;
                ++n.aQ;
              }
              return null;
            })();
          }
        },
        u = n(173),
        s = n(28),
        l = n(93),
        c = n(90),
        d = n(130),
        f = n(40),
        _ = n(41),
        p = n(24),
        v = n(43),
        h = n(12),
        m = n(31),
        g = n(3),
        y = n(85),
        b = n(266),
        w = n(120),
        O = n(14);
      function E(e) {
        return (Math.floor(e / d.a) + 1) * d.a;
      }
      function I() {
        return (I = i()(function* (e) {
          var t, n;
          try {
            t = yield (0, m.k)(e);
          } catch (e) {
            return (
              __LOG__(2)`fetchPayload network error ${e}`,
              { type: "network-error" }
            );
          }
          if (
            (__LOG__(2)`fetchPayload http status ${t.status}`,
            t.status !== m.a.OK)
          )
            return { type: "http-error", code: t.status };
          try {
            n = yield t.arrayBuffer();
          } catch (e) {
            return (
              __LOG__(2)`fetchPayload network error on body ${e}`,
              { type: "body-network-error" }
            );
          }
          return { type: "ok", payload: n };
        })).apply(this, arguments);
      }
      function S(e, t) {
        return (n, r) => {
          var i = (0, g.t)();
          return (function (e) {
            return I.apply(this, arguments);
          })(n).then((n) => {
            var a = (0, g.u)(i);
            if ("ok" !== n.type) return { status: n, networkTime: a };
            var o = n.payload;
            if (
              (__LOG__(
                2
              )`simpleFetcher received data, payload.byteLength = ${o.byteLength}`,
              "unknown" !== t)
            ) {
              var u = E(t);
              if (o.byteLength < u + O.p)
                return (
                  __LOG__(4)`simpleFetcher incoherent ciphertext, expected ${
                    u + O.p
                  } bytes, got ${o.byteLength}`,
                  { status: { type: "body-network-error" }, networkTime: a }
                );
            }
            var s = o.byteLength - O.p,
              l = new Uint8Array(o, s),
              c = new Uint8Array(o, 0, s);
            return {
              status: {
                type: "done",
                finalize: () => {
                  var t = (0, g.t)();
                  return (0, d.e)(e.cipherKey, e.iv, c, e.hmacKey, l).then(
                    (e) => {
                      var n = e.plaintext,
                        i = e.plaintextHash;
                      return (
                        r(new Uint8Array(n)),
                        { plaintextHash: i, decryptionTime: (0, g.u)(t) }
                      );
                    }
                  );
                },
              },
              networkTime: a,
            };
          });
        };
      }
      function k(e, t) {
        var n = E(t);
        return (t, r) =>
          (0, _.m)(t, e.iv, e.cipherKey, e.hmacKey, n, O.p, (e) => {
            r(e);
          })
            .then((e) => {
              var t = e.tail,
                n = e.plainTextHash,
                r = e.hmac;
              return (
                __LOG__(2)`daemonFetcher successfully received data`,
                {
                  type: "done",
                  finalize: () => {
                    var e = r.slice(0, O.p);
                    if (!(0, w.c)(t, e))
                      throw new d.b("daemonFetch hmac mismatch");
                    return Promise.resolve({ plaintextHash: (0, v.e)(n) });
                  },
                }
              );
            })
            .catch((e) => {
              if (
                e &&
                "string" == typeof e.reason &&
                "session_closed" === e.reason
              )
                return (
                  __LOG__(3)`daemonFetcher daemon disconnected`,
                  { type: "daemon-disconnected" }
                );
              if ("string" != typeof e)
                throw (
                  (__LOG__(4)`Error was not a string: ${e}`,
                  new Error("Download failed with unknown error"))
                );
              if (
                "bad_url" === e ||
                "bad_ciphertext_size" === e ||
                "bad_iv" === e ||
                "bad_cipher_key" === e ||
                "bad_hmac_key" === e ||
                "bad_tail_size" === e
              )
                throw new Error("Incorrect input: " + e);
              if (e.startsWith("http_error")) {
                var t = e.split("=");
                if (2 !== t.length)
                  throw new Error(
                    "Incorrect output: http error does not have code"
                  );
                var n = parseInt(t[1], 10);
                if (n === m.a.OK)
                  throw new Error(
                    "Daemon raised exception for successful HTTP request"
                  );
                return { type: "http-error", code: n };
              }
              if ("bad_content_size" === e)
                return { type: "body-network-error" };
              if ("download_error" === e || "connection_error" === e)
                return { type: "network-error" };
              if ("dns_error" === e) return { type: "dns-error" };
              if ("tls_error" === e) return { type: "tls-error" };
              if (e.startsWith("aes_error")) {
                var r = e.split("_");
                if (3 !== r.length)
                  throw new Error(
                    "Incorrect output: aes error does not have error description"
                  );
                throw (
                  (__LOG__(4)`Crypto error: ${r[2]}`, new Error("Crypto error"))
                );
              }
              throw (
                (__LOG__(4)`Download failed with unknown error: ${e}`,
                new Error("Download failed with unknown error"))
              );
            })
            .then((e) => ({ status: e }));
      }
      var L = n(30),
        G = { initial: 10, downloading: 80, processing: 10 },
        M = (0, y.d)("FilesystemError", !1),
        A = {
          gone: 6,
          "exceeded-max-attempts": void 0,
          "access-expired": 9,
          "download-throttled": 18,
          "no-hosts": 17,
          "hash-mismatch": 8,
          "enc-hash-mismatch": 14,
          "output-stream-failure": 10,
          "daemon-disconnected": 20,
          "request-error": 2,
        };
      function P(e, t, n, r, i, a) {
        return T.apply(this, arguments);
      }
      function T() {
        return (T = i()(function* (e, t, n, r, i, a) {
          var o = t.size,
            u = t.type,
            s = t.cryptoKey,
            l = t.progressiveJpeg;
          if (
            (__LOG__(2)`downloadMms entry.size = ${o}`,
            "unknown" !== o && o > f.c)
          )
            throw new Error(
              "downloadMms error: attempt to download media of size larger than " +
                f.c
            );
          var c = yield (0, d.c)(s, u);
          __LOG__(2)`downloadMms have keys`;
          var p,
            v = o || "unknown",
            h = n,
            m = 1;
          l &&
            "unknown" !== v &&
            (__LOG__(2)`downloadMms dectected a progressive JPEG`,
            (p = (0, b.b)(l, v)) &&
              ((v = p.downloadSize), (h = p.expectedPlaintextHash), (m = 2)));
          var g,
            y = Object.assign({}, a, { downloadQuality: m }),
            w = { cipherKey: c.cipherKey, iv: c.iv, hmacKey: c.hmacKey };
          if (p) {
            var O = p.partialFetchOptions;
            g = (0, b.c)(w, O, p.downloadSize);
          } else g = "static" === t.version ? S(w, v) : (yield (0, _.A)("downloadAndDecrypt")) && "unknown" !== v ? k(w, v) : S(w, v);
          var E = yield R(t, e, h, v, r, g, i, y);
          if ("success" !== E.result.status && p) {
            __LOG__(
              3
            )`downloadMms partial download failed. Falling back to a full download`,
              i.parts.downloading.reset(),
              (g =
                "static" === t.version
                  ? S(w, v)
                  : (yield (0, _.A)("downloadAndDecrypt")) && "unknown" !== v
                  ? k(w, v)
                  : S(w, v));
            var I = Object.assign({}, y, { downloadQuality: 1 });
            E = yield R(t, e, n, t.size || "unknown", r, g, i, I);
          }
          return E;
        })).apply(this, arguments);
      }
      function N() {}
      function C(e) {
        throw e;
      }
      function R(e, t, n, r, i, a, o, u) {
        return x.apply(this, arguments);
      }
      function x() {
        return (x = i()(function* (e, t, n, r, i, a, s, l) {
          var c, d;
          if ("static" === e.version) {
            var f = e,
              _ = new g.e(),
              p = (0, m.h)(f.staticUrl);
            d = Object.assign({}, l);
            var v = new o(u.b, u.a, L.o);
            c = yield v.run(
              (e, t) =>
                U(
                  p,
                  e,
                  r,
                  i,
                  a,
                  _,
                  s,
                  Object.assign({}, t, { overallRetryCount: e })
                ),
              d
            );
          } else {
            var h = e,
              y = yield D(h);
            if ("no-hosts" === y)
              return (
                s.failed("no-hosts"),
                { result: { status: "no-hosts" }, metric: l }
              );
            if ("disconnected" === y)
              return (
                s.failed("daemon-disconnected"),
                { result: { status: "daemon-disconnected" }, metric: l }
              );
            var b = new g.e();
            (d = Object.assign({}, l, {
              overallConnBlockFetchT: y.routesInfo.timeElapsed,
            })),
              (c = yield y.run(
                (e, n, o, u) =>
                  U(
                    q(h, e.domain, t),
                    o,
                    r,
                    i,
                    a,
                    b,
                    s,
                    Object.assign({}, u, {
                      overallDomain: y.routesInfo.host.domain,
                      overallConnectionClass: y.routesInfo.host.class,
                      overallRetryCount: o,
                    })
                  ),
                d
              ));
          }
          if (!c)
            return (
              __LOG__(3)`downloadMms given up`,
              s.failed("exceeded-max-attempts"),
              { result: { status: "exceeded-max-attempts" }, metric: d }
            );
          var w,
            O = c,
            E = O.result,
            I = O.metric;
          if ("ok" !== E.type)
            return (
              s.failed(E.type),
              __LOG__(2)`downloadMms failed ${E.type}`,
              { result: { status: E.type }, metric: I }
            );
          E.type, s.parts.downloading.finished();
          try {
            w = yield E.finalization();
          } catch (e) {
            if (e && "FilesystemError" === e.name)
              return { result: { status: "output-stream-failure" }, metric: I };
            if (e && "HmacValidationError" === e.name)
              return (
                __LOG__(3)`downloadMms failed to verify ciphertext`,
                { result: { status: "enc-hash-mismatch" }, metric: I }
              );
            throw e;
          }
          var S = w,
            k = S.plaintextHash,
            G = S.result,
            M = S.decryptionTime,
            A = S.progressiveDownload;
          return (
            __LOG__(
              2
            )`downloadMms successfully decrypted, plaintext size = ${r}`,
            n && n !== k
              ? { result: { status: "hash-mismatch" }, metric: I }
              : {
                  result: {
                    status: "success",
                    result: G,
                    progressiveDownload: A,
                  },
                  metric: Object.assign({}, I, { overallDecryptT: M }),
                }
          );
        })).apply(this, arguments);
      }
      function D(e) {
        switch (e.version) {
          case "mms4":
            return (0, l.d)(e.type, e.directPath, e.ciphertextHash);
          default:
            return e.version, (0, l.c)(e.type);
        }
      }
      function U(e, t, n, r, i, a, o, u) {
        return j.apply(this, arguments);
      }
      function j() {
        return (j = i()(function* (e, t, n, r, i, a, o, c) {
          var d;
          o.parts.initial.finished();
          try {
            d = yield r(n, o);
          } catch (e) {
            if (e && "FilesystemError" === e.name)
              return (0, s.c)({
                result: { type: "output-stream-failure" },
                metric: Object.assign({}, c, {
                  overallT: a.elapsed(),
                  overallCumT: a.cumulative(),
                }),
              });
            throw e;
          }
          var f,
            _ = yield i(e, (e) => d.addChunk(e)),
            p = _.status,
            v = _.networkTime,
            h = Object.assign({}, c, {
              overallT: a.elapsed(),
              overallCumT: a.cumulative(),
              downloadNetworkT: v,
            });
          if ("done" === p.type)
            return (0, s.c)({
              result: {
                type: "ok",
                finalization: () =>
                  p
                    .finalize()
                    .then((e) =>
                      d
                        .Zf()
                        .then((t) => ({
                          plaintextHash: e.plaintextHash,
                          result: t,
                          decryptionTime: e.decryptionTime,
                          progressiveDownload: e.progressiveDownload,
                        }))
                    ),
              },
              metric: Object.assign({}, h, { downloadHttpCode: m.a.OK }),
            });
          if ((yield d.Zg(), "daemon-disconnected" === p.type))
            return (0, s.c)({
              result: { type: "daemon-disconnected" },
              metric: h,
            });
          if ("http-error" === p.type) {
            var g,
              y = p.code;
            if (y === m.a.GONE || y === m.a.NOT_FOUND) g = "gone";
            else if (y === m.a.UNAUTHORIZED || y === m.a.FORBIDDEN)
              g = "access-expired";
            else if (y === m.a.INSUFFICIENT_STORAGE) g = "download-throttled";
            else {
              if (y === m.a.REQUEST_TIMEOUT || y >= 500)
                return (
                  (0, l.k)(
                    Object.assign({}, h, {
                      overallDownloadResult: 2,
                      overallIsFinal: t === u.b - 1,
                      downloadHttpCode: y,
                    })
                  ),
                  a.reset(),
                  (0, s.b)({ progressMade: !0 })
                );
              if (!(y >= 400 && y < 500))
                throw new Error("downloadMms unexpected code " + y);
              g = "request-error";
            }
            return (0, s.c)({
              result: { type: g },
              metric: Object.assign({}, h, { downloadHttpCode: y }),
            });
          }
          switch (p.type) {
            case "dns-error":
              f = 4;
              break;
            case "tls-error":
              f = 19;
              break;
            default:
              f = 3;
          }
          (0, l.k)(
            Object.assign({}, h, {
              overallDownloadResult: f,
              overallIsFinal: t === u.b - 1,
            })
          ),
            a.reset();
          var b = "body-network-error" === p.type;
          return (0, s.b)({ progressMade: b });
        })).apply(this, arguments);
      }
      function $(e, t) {
        return (0, h.e)("page", "createTemporaryFile", {})
          .then((n) => {
            var r = n.path;
            return new (class {
              constructor(e, t, n) {
                (this.Zh = e),
                  (this.Zi = Promise.resolve()),
                  (this.Zj = t),
                  (this.Zk = n),
                  (this.Zl = 0);
              }
              addChunk(e) {
                this.Zi = this.Zi.then(() =>
                  (0, h.e)("page", "appendBlobToFile", {
                    blob: new Blob([e]),
                    path: this.Zj,
                  })
                    .then(() => {
                      (this.Zl += e.byteLength),
                        this.Zk.parts.downloading.set(this.Zl / this.Zh);
                    })
                    .catch((e) => {
                      throw (
                        (__LOG__(3)`Failed to write chunk ${e}: ${
                          null == e ? void 0 : e.name
                        } - ${null == e ? void 0 : e.message}`,
                        new M("Failed to write chunk"))
                      );
                    })
                ).then(N, C);
              }
              Zf() {
                return this.Zi.then(() => this.Zj);
              }
              Zg() {
                return this.Zi.catch(N).then(() =>
                  (0, h.e)("page", "deletePath", { path: this.Zj })
                );
              }
            })("unknown" === e ? 0 : e, r, t);
          })
          .catch((e) => {
            throw (
              (__LOG__(3)`Failed to create temporary file ${e}: ${
                null == e ? void 0 : e.name
              } - ${null == e ? void 0 : e.message}`,
              new M("Failed to create temporary file"))
            );
          });
      }
      function F(e, t) {
        return new (class {
          constructor(e, t) {
            (this.Zh = e),
              (this.Zm = new p.a()),
              this.Zm.ensureCapacity(e),
              (this.Zk = t);
          }
          addChunk(e) {
            this.Zm.writeByteArray(e),
              this.Zk.parts.downloading.set(this.Zm.size() / this.Zh);
          }
          Zf() {
            return Promise.resolve(this.Zm.readBuffer());
          }
          Zg() {
            return Promise.resolve();
          }
        })("unknown" === e ? 0 : e, t);
      }
      function B(e, t, n, r, i) {
        return V.apply(this, arguments);
      }
      function V() {
        return (V = i()(function* (e, t, n, r, i) {
          var a = yield P(e, t, n, $, r, i),
            o = a.result,
            u = a.metric;
          return "success" === o.status
            ? {
                result: {
                  status: "success",
                  path: o.result,
                  progressiveDownload: o.progressiveDownload,
                },
                metric: a.metric,
              }
            : { result: o, metric: u };
        })).apply(this, arguments);
      }
      function K(e, t, n, r, i) {
        return H.apply(this, arguments);
      }
      function H() {
        return (H = i()(function* (e, t, n, r, i) {
          var a = yield P(e, t, n, F, r, i),
            o = a.result,
            u = a.metric;
          return "success" === o.status
            ? { result: { status: "success", plaintext: o.result }, metric: u }
            : { result: { status: o.status }, metric: u };
        })).apply(this, arguments);
      }
      function q(e, t, n) {
        return "mms3" === e.version
          ? (0, m.h)(e.url)
          : (function (e, t, n) {
              var r = (0, v.e)(e.ciphertextHash);
              return e.directPath
                ? (0, m.c)("https://" + t, e.directPath, { hash: r, mode: n })
                : (0, m.c)("https://" + t, `${(0, c.c)(e.type)}/${r}`, {
                    mode: n,
                  });
            })(e, t, n);
      }
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return o;
      }),
        n.d(t, "a", function () {
          return u;
        });
      var r = n(2),
        i = n(6),
        a = n(7);
      function o(e, t, n) {
        var o = n.remoteJid,
          u = n.participant,
          s = n.id,
          l = n.fromMe;
        if (o && s) {
          var c = (0, a.o)(o),
            d = i.t.get();
          if ("phoneUser" === c.jidType)
            return c.userJid !== d || t !== e
              ? void __LOG__(
                  4
                )`Received a referring message with an invalid info`
              : { msgAuthor: l ? t : r.b, msgExternalId: s };
          if ("group" === c.jidType) {
            if (n.remoteJid !== e)
              return void __LOG__(
                4
              )`Received a referring message for a group with an invalid info`;
            var f;
            if (l) {
              if (null != u && u !== t)
                return void __LOG__(
                  4
                )`Received a referring message for a group with an invalid info`;
              f = t;
            } else {
              if (null == u || u === t)
                return void __LOG__(
                  4
                )`Received a referring message for a group with an invalid info`;
              var _ = (0, a.o)(u);
              if ("phoneUser" !== _.jidType) return;
              var p = _.userJid;
              f = p === d ? r.b : p;
            }
            return { msgAuthor: f, msgExternalId: s };
          }
          return (
            c.jidType,
            void __LOG__(
              4
            )`Received a referring message with invalid remote jid`
          );
        }
        __LOG__(4)`Received a referring message with an empty remotejid`;
      }
      function u(e, t) {
        var n = t.msgAuthor,
          o = t.msgExternalId,
          u = i.t.get(),
          s = n === r.b;
        return {
          fromMe: s,
          id: o,
          remoteJid: e,
          participant: (0, a.p)(e) ? (s ? u : n) : void 0,
        };
      }
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return u;
      });
      var r = n(5),
        i = (0, n(138).a)("wa-syncd-1", function (e) {
          e.version(1).stores({
            pendingMutations: "++id, index, collection, action",
            encryptedMutations: "++id",
            collectionVersion: "collection",
            syncKeys: "keyId",
            syncActions: "index, actionState, indexMac, collection, action",
          });
        }),
        a = class extends r.b {
          constructor() {
            super(i);
          }
        },
        o = null;
      function u() {
        return o || (o = new a()), o;
      }
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      function r(e) {
        var t,
          n,
          r = new ArrayBuffer(e.length),
          i = new Uint8Array(r);
        for (t = 0, n = e.length; t < n; t++) i[t] = e.charCodeAt(t);
        return i.buffer;
      }
      function i(e) {
        return String.fromCharCode.apply(null, new Uint8Array(e));
      }
      function a(e, t) {
        var n = new Uint8Array(e);
        if (t > 8388607) throw new Error("Divisor is too big");
        for (var r = 0, i = 0; i < n.length; ++i) r = ((r << 8) + n[i]) % t;
        return r;
      }
      function o(e, t) {
        if (e.byteLength !== t.byteLength) return !1;
        for (var n = 0; n !== e.byteLength; n++) if (e[n] !== t[n]) return !1;
        return !0;
      }
      n.d(t, "c", function () {
        return r;
      }),
        n.d(t, "b", function () {
          return i;
        }),
        n.d(t, "a", function () {
          return a;
        }),
        n.d(t, "d", function () {
          return o;
        });
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return h;
      }),
        n.d(t, "b", function () {
          return m;
        }),
        n.d(t, "d", function () {
          return g;
        }),
        n.d(t, "c", function () {
          return b;
        });
      var r = n(8),
        i = n.n(r),
        a = n(142),
        o = n(6),
        u = n(12),
        s = n(216),
        l = navigator.externalapi,
        c = 8081,
        d = null == l ? void 0 : l.port;
      "number" == typeof d && (c = d),
        l && 8081 === c && (l.getToken = () => Promise.resolve("secrettoken"));
      var f = null,
        _ = new Map(),
        p = new Map();
      function v(e) {
        var t = e.onConnect,
          n = e.onDisconnect,
          r = new lib_session.Session();
        (function (e) {
          e.close ||
            (e.close = function () {
              this.lazy_reconnect = !1;
              var e = this.transport.socket;
              e && e.close();
            });
        })(r);
        var i = {
          onsessionconnected() {
            t(r);
          },
          onsessiondisconnected() {
            n();
          },
        };
        return r.open("websocket", "localhost:" + c, "secrettoken", i, !0), r;
      }
      function h(e, t) {
        var n = t.onConnect,
          r = t.onDisconnect;
        __LOG__(2)`connectToDaemon called for ${e}`;
        var a = p.get(e);
        if (a) return __LOG__(4)`connectToDaemon called twice for ${e}`, a;
        var l = (function (e) {
          var t;
          switch (e) {
            case "tcp":
              t = _.get("tcpsocket");
              break;
            case "signal":
              t = _.get("libsignal");
              break;
            case "settings":
              t = _.get("settings");
              break;
            case "contacts":
              t = _.get("contacts");
              break;
            default:
              t = _.get("telephony");
          }
          return (
            t ||
            (function (e) {
              __LOG__(2)`loadKaiosApi: called for daemon ${e}`;
              var t = ["core", "session"],
                n = [];
              function r() {
                return y([...t, ...n]);
              }
              if (
                ("settings" === e
                  ? n.push("settings")
                  : "contacts" === e
                  ? n.push("contacts")
                  : (n.push("libsignal"), n.push("tcpsocket")),
                c >= 1024)
              )
                return (
                  __LOG__(2)`loadKaiosApi:VoIP is disabled, daemon port=${c}`,
                  o.o.set(!1),
                  r()
                );
              var a = "voip" === e || "telephony" === e;
              return (
                a ||
                  __LOG__(2)`loadKaiosApi: will skip loading of VoIP scripts`,
                o.o.get()
                  ? (a &&
                      (__LOG__(
                        2
                      )`loadKaiosApi: VoIP service previously detected as available`,
                      n.push("wavoip2", "telephony")),
                    r())
                  : y(t)
                      .then(
                        () =>
                          new Promise((e) => {
                            v({
                              onConnect(t) {
                                __LOG__(
                                  2
                                )`loadKaiosApi: daemon session opened to test VoIP service availability`,
                                  null == t.has_service
                                    ? (__LOG__(
                                        2
                                      )`loadKaiosApi: VoIP service is unavailable`,
                                      t.close(),
                                      e(n))
                                    : Promise.all([
                                        t.has_service("wavoip2"),
                                        null != t.has_service &&
                                          t.has_service("telephony"),
                                      ]).then((r) => {
                                        var l = i()(r, 2),
                                          c = l[0],
                                          d = l[1],
                                          f = c && d;
                                        if (f)
                                          __LOG__(
                                            2
                                          )`loadKaiosApi: VoIP and telephony services are available`,
                                            a && n.push("wavoip2", "telephony");
                                        else {
                                          var _ = [
                                            c ? null : "VoIP",
                                            d ? null : "Telephony",
                                          ].filter(Boolean);
                                          __LOG__(
                                            2
                                          )`loadKaiosApi: cannot handle VoIP. ${_} missing`;
                                        }
                                        (function (e) {
                                          e !== o.o.get() &&
                                            (o.o.set(e),
                                            (0, u.c)(
                                              "event",
                                              "voipStatusChanged",
                                              {
                                                hasVoip: e,
                                                voipCallEnabled: (0, s.a)(
                                                  o.I.get()
                                                ),
                                              }
                                            ));
                                        })(f),
                                          t.close(),
                                          e(n);
                                      });
                              },
                              onDisconnect() {
                                __LOG__(2)`loadKaiosApi: daemon session closed`;
                              },
                            });
                          })
                      )
                      .then(y)
              );
            })(e)
          );
        })(e).then(() =>
          v({
            onConnect(t) {
              __LOG__(2)`connectToDaemon connect for ${e}`, n(t);
            },
            onDisconnect() {
              __LOG__(3)`connectToDaemon disconnected for ${e}`, r();
            },
          })
        );
        return p.set(e, l), l;
      }
      function m() {
        p.forEach((e) => {
          e.then((e) => {
            e.close();
          });
        }),
          p.clear();
      }
      function g() {
        var e = "voip",
          t = p.get(e);
        return t
          ? (p.delete(e), t)
          : (__LOG__(
              3
            )`surrenderDaemonSessionOwnership could not find session for ${e}`,
            null);
      }
      function y(e) {
        var t = (0, a.a)({
          algo: { type: "fibonacci", first: 500, second: 1e3 },
          max: 5e3,
        });
        f || (f = t());
        var n = [];
        return e
          .reduce((e, r) => {
            var i = _.get(r);
            if (i) return i;
            var a = () => {
              var e = Date.now(),
                i = (function (e) {
                  var t = "http://127.0.0.1:" + c;
                  return "core" === e || "session" === e
                    ? `${t}/api/v1/shared/${e}.js`
                    : `${t}/api/v1/${e}/service.js`;
                })(r);
              return (
                __LOG__(2)`loadScripts load ${i}`,
                ("function" == typeof importScripts
                  ? (function (e) {
                      return Promise.resolve().then(() => {
                        self.importScripts(e);
                      });
                    })(i)
                  : (function (e) {
                      return new Promise(function (t, n) {
                        var r,
                          i = document.getElementsByTagName("head")[0],
                          a = document.createElement("script");
                        function o(i) {
                          (a.onerror = a.onload = null),
                            clearTimeout(r),
                            "load" === i.type
                              ? t()
                              : "timeout" === i.type
                              ? n(
                                  new Error("Timeout while loading script " + e)
                                )
                              : n(i);
                        }
                        (a.charset = "utf-8"),
                          (a.src = e),
                          (r = setTimeout(function () {
                            o({ type: "timeout", target: a });
                          }, 12e4)),
                          (a.onerror = a.onload = o),
                          i.appendChild(a);
                      });
                    })(i)
                )
                  .then(() => {
                    n.push(`${r} ${Date.now() - e}ms`);
                  })
                  .catch(
                    (e) => (
                      __LOG__(4)`loadScripts failed on ${i}: ${e}`, t().then(a)
                    )
                  )
              );
            };
            return (i = e.then(a)), _.set(r, i), i;
          }, f)
          .then(() => {
            __LOG__(2)`loadScripts load finished, timings: ${n.join(", ")}`;
          });
      }
      function b(e, t, n, r, i) {
        return e()
          .then(r)
          .catch((a) => {
            if (a && "session_closed" === a.reason) {
              var o = i < 0 ? 1 : i + 1;
              return o <= 10
                ? (__LOG__(2)`voip::runLibWithRetries retrying ${n}`,
                  b(e, t, n, r, o))
                : Promise.reject(
                    `runLibWithRetries ${t}::${n} maximum number of retries on session_closed exceeded`
                  );
            }
            return Promise.reject(a);
          });
      }
    },
    function (e, t, n) {
      n.d(t, "c", function () {
        return s;
      }),
        n.d(t, "a", function () {
          return l;
        }),
        n.d(t, "b", function () {
          return c;
        }),
        n.d(t, "d", function () {
          return d;
        });
      var r = n(5),
        i = n(36),
        a = n(122),
        o = n(32),
        u = n(217);
      function s(e, t) {
        e.msgCount++,
          (!e.newest || t.id > e.newest) && (e.newest = t.id),
          (!e.oldest || t.id < e.oldest) && (e.oldest = t.id);
        var n = (0, a.c)(t);
        if (
          ((0, a.b)(t, n) &&
            (e.oldestUnread || (e.oldestUnread = t.id),
            e.unreadMsgCount >= 0
              ? e.unreadMsgCount++
              : (e.unreadMsgCount = 1)),
          (0, a.d)(e, t) &&
            (null != e.importantMsgCount && e.importantMsgCount >= 0
              ? e.importantMsgCount++
              : (e.importantMsgCount = 1)),
          n >= a.a.NOTEWORTHY && (e.sortBy = t.rowId),
          (0, a.e)(t, e))
        ) {
          var r = (0, u.a)(t);
          null != r && (e.previewMsg = r);
        }
      }
      function l(e, t, n, r) {
        return (0, i.k)(e, t).then((t) => {
          if (null != t) return c(e, t, n, r);
        });
      }
      function c(e, t, n, a) {
        return (a ? (0, r.e)(a) : d(e, t))
          .then((r) => (0, i.a)(e, r, t.id, n))
          .then(
            (n) => (
              s(t, n), (0, i.D)(e, t).then(() => ({ dbChat: t, dbMsg: n }))
            )
          );
      }
      function d(e, t) {
        var n = (0, o.q)(t.id, ++t.increment);
        return (0, i.r)(e, n).then((r) =>
          r
            ? (__LOG__(4)`Found existing msg on new increment id`,
              SEND_LOGS("repaired-chat-increment"),
              d(e, t))
            : n
        );
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return a;
      }),
        n.d(t, "f", function () {
          return u;
        }),
        n.d(t, "b", function () {
          return s;
        }),
        n.d(t, "d", function () {
          return l;
        }),
        n.d(t, "e", function () {
          return c;
        }),
        n.d(t, "c", function () {
          return d;
        });
      var r = n(142),
        i = n(3),
        a = "no_reschedule",
        o = null;
      function u(e) {
        __LOG__(2)`startScheduler invoked`,
          o ||
            (o = new (class {
              constructor(e) {
                (this.ZA = !1),
                  (this.ZB = {}),
                  (this.ZC = {}),
                  (this.ZD = {}),
                  (this.ZE = new Map()),
                  (this.ZF = e.scheduledTimeResolver);
              }
              ZG(e) {
                var t = this.ZE.get(e);
                null != t
                  ? this.ZF.get(e).then((n) => {
                      var r = null == n;
                      if (r || n !== i.c) {
                        var a = null == n ? 0 : 1e3 * n - (0, i.E)();
                        (a = Math.max(0, a)),
                          (a = Math.min(a, ~(1 << 31))),
                          __LOG__(2)`Scheduling task ${e} in ${a}ms`,
                          (this.ZD[e] = setTimeout(() => {
                            delete this.ZD[e],
                              __LOG__(2)`Firing task ${e}`,
                              t(r)
                                .then((t) => {
                                  return "no_reschedule" === t
                                    ? new Promise(() => {})
                                    : (t === i.c
                                        ? (__LOG__(
                                            2
                                          )`Task ${e} complete, deactivating`,
                                          delete this.ZC[e],
                                          (n = i.c))
                                        : t >= 0
                                        ? (__LOG__(
                                            2
                                          )`Task ${e} complete, waiting ${t}`,
                                          delete this.ZC[e],
                                          (n = (0, i.k)(t)))
                                        : (__LOG__(
                                            2
                                          )`Task ${e} will try again later`,
                                          (n = this.ZH(e))),
                                      this.ZF.set(e, n));
                                  var n;
                                })
                                .then(() => {
                                  this.ZG(e),
                                    this.ZB[e] &&
                                      (this.ZB[e].forEach((e) => e()),
                                      delete this.ZB[e]);
                                })
                                .catch(
                                  (t) => (
                                    __LOG__(
                                      2
                                    )`Task ${e} failed, try again later: ${t}`,
                                    this.ZF.set(e, this.ZH(e)).then(() => {
                                      this.ZG(e);
                                    })
                                  )
                                );
                          }, a));
                      } else __LOG__(2)`Task ${e} deactivated`;
                    })
                  : __LOG__(
                      4
                    )`Tried to start task ${e} before registering its implementation`;
              }
              ZH(e) {
                return (
                  this.ZC[e] ||
                    (this.ZC[e] = (0, r.b)({
                      jitter: 0.1,
                      max: 1e3 * i.d,
                      algo: { type: "fibonacci", first: 1e3, second: 2e3 },
                    })),
                  (0, i.k)(Math.round(this.ZC[e]() / 1e3))
                );
              }
              ZI(e, t) {
                this.ZB[e] || (this.ZB[e] = []), this.ZB[e].push(t);
              }
              awaitTaskPromise(e) {
                return new Promise((t) => {
                  this.ZI(e, t);
                });
              }
              reschedule(e, t) {
                this.ZA
                  ? (this.ZF.set(e, t),
                    null != this.ZD[e] && clearTimeout(this.ZD[e]),
                    this.ZG(e))
                  : this.ZF.set(e, t);
              }
              registerTask(e, t) {
                this.ZA || (this.ZA = !0), this.ZE.set(e, t), this.ZG(e);
              }
              getScheduledTime(e) {
                return this.ZF.get(e);
              }
            })(e));
      }
      function s(e) {
        return f("awaitTaskPromise").awaitTaskPromise(e);
      }
      function l(e, t) {
        f("reschedule").reschedule(e, t);
      }
      function c(e) {
        l(e, (0, i.D)());
      }
      function d(e, t) {
        f("registerTask").registerTask(e, t);
      }
      function f(e) {
        if (o) return o;
        throw new Error(`TaskScheduler::${e} called before startScheduler`);
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return c;
      }),
        n.d(t, "a", function () {
          return d;
        }),
        n.d(t, "d", function () {
          return f;
        }),
        n.d(t, "e", function () {
          return _;
        }),
        n.d(t, "c", function () {
          return p;
        }),
        n.d(t, "g", function () {
          return v;
        }),
        n.d(t, "f", function () {
          return h;
        });
      var r = n(8),
        i = n.n(r),
        a = n(68),
        o = n(7),
        u = n(28),
        s = null,
        l = new Set();
      function c() {
        return m("generateIdentityKeyPair", (e) =>
          e.context.generate_identity_key_pair()
        );
      }
      function d(e, t) {
        return g({
          type: "lib",
          methodName: "calculateAgreement",
          code: (n) => n.curve_calculate_agreement(e, t),
          resolvable: new a.a(),
        });
      }
      function f() {
        return Promise.all([
          m("generateRegistrationId", (e) =>
            e.context.generate_registration_id(!1)
          ),
          c(),
        ]).then((e) => {
          var t = i()(e, 2);
          return { regId: t[0], staticKeyPair: t[1] };
        });
      }
      function _(e, t, n) {
        return m("generateSignedPreKey", (r) => {
          var i = r.context,
            a = r.storeContext;
          return i
            .generate_signed_pre_key(n, e, t)
            .then((e) => ({
              plainObject: {
                id: e.id,
                ts: e.timestamp,
                keyPair: e.keyPair,
                signature: e.signature,
              },
              record: a.serialize_signed_pre_key(e),
            }));
        });
      }
      function p(e, t) {
        return m("generatePreKeys", (n) => {
          var r = n.context,
            i = n.storeContext;
          return r
            .generate_pre_keys(e, t)
            .then((e) =>
              e.map((e) => ({ plainObject: e, record: i.serialize_pre_key(e) }))
            );
        });
      }
      function v(e, t) {
        var n = e;
        return m("signalCreateSession", (e) => {
          var r = e.context,
            i = e.storeContext;
          return r
            .session_builder(
              (function (e) {
                return lib_libsignal.protos.Address.create({
                  name: (0, o.h)(e),
                  deviceId: (0, o.f)(e),
                });
              })(n),
              i
            )
            .then((e) => {
              var r = t.signedKey,
                i = t.oneTimeKey;
              return e.process_pre_key_bundle({
                deviceId: (0, o.f)(n),
                registrationId: t.regId,
                identityKey: b(t.identity),
                signedPreKeyId: r.id,
                signedPreKeyPublic: b(r.publicKey),
                signedPreKeySignature: r.signature,
                preKeyId: i ? i.id : 0,
                preKeyPublic: i ? b(i.publicKey) : null,
              });
            })
            .then(() => (0, u.c)());
        });
      }
      function h(e, t) {
        var n = { lib: e, context: t.then((e) => e.signalContexts()) };
        (s = n),
          l.forEach((e) => {
            __LOG__(2)`DaemonSignal run queued ${e.methodName}`, y(n, e);
          });
      }
      function m(e, t) {
        return g({
          type: "context",
          methodName: e,
          code: t,
          resolvable: new a.a(),
        });
      }
      function g(e) {
        return l.add(e), s && y(s, e), e.resolvable.promise;
      }
      function y(e, t) {
        var n;
        if ("lib" === t.type) {
          var r = t.code;
          n = e.lib.then((e) => !t.resolvable.resolveWasCalled() && r(e));
        } else {
          t.type;
          var i = t.code;
          n = e.context.then((e) => !t.resolvable.resolveWasCalled() && i(e));
        }
        n.then((e) => {
          t.resolvable.resolve(e), l.delete(t);
        }).catch((e) => {
          e && "session_closed" === e.reason
            ? __LOG__(2)`DaemonSignal session_closed on ${t.methodName}`
            : (t.resolvable.reject(e), l.delete(t));
        });
      }
      function b(e) {
        return e.subarray(1);
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return o;
      }),
        n.d(t, "a", function () {
          return u;
        }),
        n.d(t, "c", function () {
          return s;
        });
      var r = n(26),
        i = n.n(r),
        a = n(142),
        o = 4,
        u = { algo: { type: "constant", delay: 1e3 }, jitter: 0 },
        s = class {
          constructor(e, t, n) {
            (this.Zz = e),
              (this.routesInfo = t),
              (this.aA = (0, a.a)(u)),
              (this.aB = 0),
              (this.aC = !1),
              (this.aD = n);
          }
          run(e, t) {
            var n = this;
            return i()(function* () {
              for (; n.aB < o; ) {
                yield n.aA();
                var r = void 0;
                n.aB > 0
                  ? ((r = n.aB >= o - 2 && !n.aC),
                    "download" === n.Zz &&
                      (__LOG__(
                        2
                      )`MediaOperationsRetrier:download wait for internet, attempt = ${n.aB}`,
                      yield null == n.aD ? void 0 : n.aD()))
                  : (r = !1);
                var i = n.routesInfo;
                if (!i) return null;
                var a = i.host;
                r && i.fallbackHost && (a = i.fallbackHost);
                var u = yield e(a, i.authToken, n.aB, t);
                if (u.success) return u.value;
                ++n.aB, (n.aC = u.error.progressMade);
              }
              return null;
            })();
          }
        };
    },
    function (e, t, n) {
      n.d(t, "e", function () {
        return S;
      }),
        n.d(t, "g", function () {
          return k;
        }),
        n.d(t, "a", function () {
          return L;
        }),
        n.d(t, "c", function () {
          return G;
        }),
        n.d(t, "d", function () {
          return M;
        }),
        n.d(t, "b", function () {
          return A;
        }),
        n.d(t, "f", function () {
          return P;
        });
      var r = n(3),
        i = n(110),
        a = n(31),
        o = n(21),
        u = n(6),
        s = n(340),
        l = "https://graph.whatsapp.com",
        c = "/graphql";
      function d(e) {
        return { app_id: "com.whatsapp.kaios", request_token: e };
      }
      function f(e, t) {
        return {
          lang: (0, o.d)().langTag,
          doc_id: e,
          access_token: "WA|2934776726793242|3093fa3bbf8935316304fe131f075eec",
          variables: t,
        };
      }
      function _(e) {
        var t = u.i.get().userAgent,
          n = f("4276154569100535", d(e)),
          r = (0, a.c)(l, c);
        return (0, a.f)(
          r,
          {},
          {
            method: "POST",
            headers: { "User-Agent": t, "Content-Type": "application/json" },
            body: JSON.stringify(n),
          }
        )
          .then((e) =>
            e.ok
              ? e
                  .json()
                  .then((e) =>
                    e.errors && e.errors.length > 0
                      ? { type: "error", error: p(e.errors[0]) }
                      : {
                          type: "ok",
                          result: v(e.data.whatsapp_support_ban_appeal_status),
                        }
                  )
              : (__LOG__(4)`queryBanAppealStatus unexpected error ${e.status}`,
                { type: "error", error: "retry" })
          )
          .catch(() => ({ type: "error", error: "network_error" }));
      }
      function p(e) {
        switch (e.code) {
          case 2498024:
            return "unrecoverable";
          case 2498023:
            return "token-error";
          case 2498022:
            return "retry";
          default:
            return (
              __LOG__(4)`responseToError error in response ${e.code}`, "retry"
            );
        }
      }
      function v(e) {
        var t = e.status,
          n = e.reason,
          r = e.reason_url;
        switch (t) {
          case "UNBANNED":
            return { state: "unbanned", reason: h(n), reasonUrl: r };
          case "BANNED":
            return { state: "banned" };
          case "IN_REVIEW":
            return { state: "in_review" };
          case "NO_APPEAL_OPENED":
            return { state: "no_appeal_opened" };
          default:
            return (
              __LOG__(4)`responseToBanAppealState error in response ${t}`,
              { state: "no_appeal_opened" }
            );
        }
      }
      function h(e) {
        switch (e) {
          case "OOPS":
            return "oops";
          default:
            return "other";
        }
      }
      var m = n(8),
        g = n.n(m),
        y = n(26),
        b = n.n(y),
        w = n(207),
        O = "https://v.whatsapp.net",
        E = "ban_appeal",
        I = n(100);
      function S(e, t, n, o, s) {
        __LOG__(2)`RegFlow.requestCodeBanAppeal`;
        var l,
          c = e.getStoreInStates3([
            "ENTERING_PHONE_NUMBER",
            "REQUESTING_CODE_BAN_APPEAL",
            "BLOCKED_BAN_APPEAL_PRE",
          ]);
        if (c)
          return (
            "sms" === o
              ? (e.updateStore({
                  type: "SENDING_SMS_BAN_APPEAL",
                  country: t,
                  localNumber: n,
                  banInfo: s,
                }),
                (l = e.startSmsListener()))
              : ((l = Promise.resolve()),
                e.updateStore({
                  type: "SENDING_VOICE_BAN_APPEAL",
                  country: t,
                  localNumber: n,
                })),
            l
              .then(() =>
                (function (e, t, n, r) {
                  return e.getSlowParams().then((e) => {
                    var i = u.i.get(),
                      o = null != i.lc ? { lc: i.lc } : null,
                      s = (0, a.c)(
                        O,
                        "/v2/acverify_request",
                        Object.assign(
                          {
                            cc: r.cc,
                            in: n,
                            lg: i.lg,
                            mcc: i.mcc,
                            mnc: i.mnc,
                            method: t,
                            context: E,
                            "x-whatsapp-ua": i.userAgent,
                          },
                          o,
                          e
                        )
                      );
                    return (0, a.k)(s)
                      .then(
                        (function () {
                          var e = b()(function* (e) {
                            return yield e.json();
                          });
                          return function (t) {
                            return e.apply(this, arguments);
                          };
                        })()
                      )
                      .catch(() => ({ status: "network_error" }));
                  });
                })(e, o, n, t)
              )
              .then((a) => {
                if (
                  e.getStoreInStates2([
                    "SENDING_SMS_BAN_APPEAL",
                    "SENDING_VOICE_BAN_APPEAL",
                  ])
                )
                  switch (a.status) {
                    case "sent":
                      return void (0, i.a)(5e3).then(() => {
                        var t = e.getStoreInStates2([
                          "SENDING_SMS_BAN_APPEAL",
                          "SENDING_VOICE_BAN_APPEAL",
                        ]);
                        if (t) {
                          var n = t.country,
                            i = t.localNumber;
                          (function (e, t, n, i, a) {
                            var o = {
                              type: "CODE_PENDING",
                              method: i.method,
                              smsWait: T(i.wait),
                              voiceWait: T(i.wait),
                              requestTime: (0, r.D)(),
                            };
                            e.updateStore({
                              type: "REQUESTING_CODE_BAN_APPEAL",
                              country: n,
                              localNumber: t,
                              state: o,
                              banInfo: a,
                            });
                          })(e, i, n, a, s);
                        }
                      });
                    case "network_error":
                      return void e.updateStore({
                        type: "ENTERING_PHONE_NUMBER",
                        prefill: { country: t, localNumber: n },
                        state: {
                          type: "CODE_REQUEST_ERROR",
                          reason: "network_error",
                          localNumber: n,
                          cc: t.cc,
                        },
                      });
                    case "fail":
                      var u = c.state;
                      return void (function (e, t, n) {
                        var i = t.localNumber,
                          a = t.country,
                          o = t.method,
                          u = t.banInfo,
                          s = n.reason;
                        if ((0, I.b)(s))
                          e.updateStore(
                            (0, I.a)(
                              e,
                              { localNumber: i, country: a },
                              s,
                              "CODE_REQUEST_ERROR",
                              n.param
                            )
                          );
                        else
                          switch (s) {
                            case "bad_token":
                              return void e.updateStore({
                                type: "BLOCKED",
                                error: { reason: s, localNumber: i, cc: a.cc },
                              });
                            case "too_many_guesses":
                            case "too_many":
                              return void e.updateStore({
                                type: "ENTERING_PHONE_NUMBER",
                                prefill: { country: a, localNumber: i },
                                state: {
                                  type: "CODE_REQUEST_ERROR",
                                  reason: "too_many_all_methods",
                                  localNumber: i,
                                  cc: a.cc,
                                  retryAfter: T(n.retry_after) || void 0,
                                },
                              });
                            case "too_recent":
                            case "temporarily_unavailable":
                            case "no_routes":
                              var l,
                                c,
                                d = {
                                  type: "CODE_REQUEST_ERROR",
                                  reason: s,
                                  retryAfter: T(n.retry_after),
                                  smsWait:
                                    "sms" === o
                                      ? T(n.wait || n.retry_after)
                                      : null == (l = t.prev)
                                      ? void 0
                                      : l.smsWait,
                                  voiceWait:
                                    "voice" === o
                                      ? T(n.wait || n.retry_after)
                                      : null == (c = t.prev)
                                      ? void 0
                                      : c.voiceWait,
                                  method: o,
                                  localNumber: i,
                                  cc: a.cc,
                                  requestTime: (0, r.D)(),
                                };
                              return void e.updateStore({
                                type: "REQUESTING_CODE_BAN_APPEAL",
                                country: a,
                                localNumber: i,
                                state: d,
                                banInfo: u,
                              });
                            default:
                              __LOG__(
                                4
                              )`verifyPhoneExists: Unexpected result reason ${s}`,
                                SEND_LOGS("unexpected-otp-request-reason"),
                                e.updateStore(
                                  (0, I.c)(i, a, "CODE_REQUEST_ERROR")
                                );
                          }
                      })(
                        e,
                        {
                          localNumber: n,
                          country: t,
                          method: o,
                          prev: u,
                          banInfo: s,
                        },
                        a
                      );
                    default:
                      return (
                        __LOG__(
                          4
                        )`requestCodeBanAppeal: Unexpected result status ${a.status}`,
                        a.status,
                        void e.updateStore((0, I.c)(n, t, "CODE_REQUEST_ERROR"))
                      );
                  }
              })
          );
      }
      function k(e, t, n) {
        __LOG__(2)`RegFlow.verifySmsCodeBanAppeal`;
        var i = e.getStoreInStates2([
          "REQUESTING_CODE_BAN_APPEAL",
          "SENDING_SMS_BAN_APPEAL",
        ]);
        if (i) {
          var o = i.localNumber,
            s = i.country,
            l = i.banInfo;
          e.updateStore({
            type: "VERIFYING_SMS_BAN_APPEAL",
            localNumber: o,
            country: s,
          }),
            (function (e, t, n, r, i) {
              return (
                __LOG__(2)`verifySmsCodeWithOTPService`,
                Promise.all([e.getSlowParams(), e.stopSmsListener()]).then(
                  (e) => {
                    var o = g()(e, 1)[0],
                      s = u.i.get(),
                      l = null != s.lc ? { lc: s.lc } : null,
                      c = (0, a.c)(
                        O,
                        "/v2/acverify",
                        Object.assign(
                          {
                            cc: i.cc,
                            in: r,
                            lg: s.lg,
                            context: E,
                            code: t.join(""),
                            entered: n,
                            "x-whatsapp-ua": s.userAgent,
                          },
                          l,
                          o
                        )
                      );
                    return (0, a.k)(c)
                      .then(
                        (function () {
                          var e = b()(function* (e) {
                            var t = yield e.json();
                            return "verified" === t.status
                              ? {
                                  status: "verified",
                                  ban_reason:
                                    w.c["" + t.violation_type] || "other_harm",
                                  ban_token: t.ban_token,
                                }
                              : {
                                  status: t.status,
                                  reason: t.reason,
                                  retry_after: t.retry_after,
                                  param: t.param,
                                };
                          });
                          return function (t) {
                            return e.apply(this, arguments);
                          };
                        })()
                      )
                      .catch(() => ({ status: "network_error" }));
                  }
                )
              );
            })(e, t, n, o, s).then((n) => {
              switch (n.status) {
                case "verified":
                  return void (function (e, t, n) {
                    var i = t.localNumber,
                      a = t.country,
                      o = t.banInfo,
                      u = n.ban_token,
                      s = n.ban_reason,
                      l = void 0 === s ? "other_harm" : s;
                    _(u).then((t) => {
                      if ("ok" === t.type) {
                        var n = t.result;
                        "no_appeal_opened" === n.state ||
                        "in_review" === n.state
                          ? null != o
                            ? (o.banReason !== l &&
                                __LOG__(
                                  3
                                )`handleSmsCodeVerified: unexpected ban-reason ${l} vs ${o.banReason}`,
                              e.updateStore({
                                type: "BAN_APPEAL",
                                banAppeal: {
                                  banAppealToken: u,
                                  banReason: l,
                                  banAppealState: n,
                                  banAppealLastSync: (0, r.D)(),
                                },
                                localNumber: i,
                                country: a,
                              }))
                            : e.updateStore({
                                type: "BLOCKED_BAN_APPEAL",
                                banAppeal: {
                                  banAppealToken: u,
                                  banReason: l,
                                  banAppealState: n,
                                  banAppealLastSync: (0, r.D)(),
                                },
                                localNumber: i,
                                country: a,
                              })
                          : (n.state,
                            e.updateStore({
                              type: "BAN_APPEAL",
                              banAppeal: {
                                banAppealToken: u,
                                banReason: l,
                                banAppealState: n,
                                banAppealLastSync: (0, r.D)(),
                              },
                              localNumber: i,
                              country: a,
                            }));
                      } else
                        switch (t.error) {
                          case "token-error":
                            return void e.updateStore({
                              type: "ENTERING_PHONE_NUMBER",
                              prefill: { localNumber: i, country: a },
                              state: {
                                type: "BAN_APPEAL_ERROR",
                                reason: "token-error",
                                localNumber: i,
                                cc: a.cc,
                              },
                            });
                          case "unrecoverable":
                            return void e.updateStore({
                              type: "BLOCKED",
                              error: {
                                reason: "bad_token",
                                localNumber: i,
                                cc: a.cc,
                              },
                            });
                          default:
                            return void e.updateStore({
                              type: "BLOCKED_BAN_APPEAL",
                              banAppeal: {
                                banAppealToken: u,
                                banReason: l,
                                banAppealState: { state: "no_appeal_opened" },
                                banAppealLastSync: void 0,
                              },
                              localNumber: i,
                              country: a,
                            });
                        }
                    });
                  })(e, { localNumber: o, country: s, banInfo: l }, n);
                case "network_error":
                  var a = i.state;
                  return void e.updateStore({
                    type: "REQUESTING_CODE_BAN_APPEAL",
                    country: s,
                    localNumber: o,
                    banInfo: l,
                    state: {
                      type: "CODE_VERIFY_ERROR",
                      reason: "network_error",
                      code: t,
                      localNumber: o,
                      cc: s.cc,
                      retryAfter: null == a ? void 0 : a.retryAfter,
                      smsWait: null == a ? void 0 : a.smsWait,
                      voiceWait: null == a ? void 0 : a.voiceWait,
                      requestTime: null == a ? void 0 : a.requestTime,
                    },
                  });
                case "fail":
                  return void (function (e, t, n) {
                    var r = n.reason,
                      i = t.country,
                      a = t.localNumber,
                      o = t.banInfo;
                    if ((0, I.b)(r))
                      e.updateStore(
                        (0, I.a)(e, t, r, "CODE_VERIFY_ERROR", n.param)
                      );
                    else
                      switch (r) {
                        case "too_many_guesses":
                          return void e.updateStore({
                            type: "ENTERING_PHONE_NUMBER",
                            prefill: { country: i, localNumber: a },
                            state: {
                              type: "CODE_VERIFY_ERROR",
                              reason: "too_many_guesses",
                              localNumber: a,
                              cc: i.cc,
                              retryAfter: T(n.retry_after) || void 0,
                            },
                          });
                        case "guessed_too_fast":
                        case "missing":
                        case "stale":
                        case "mismatch":
                        case "temporarily_unavailable":
                          var u,
                            s,
                            l,
                            c = {
                              type: "CODE_VERIFY_ERROR",
                              reason: r,
                              retryAfter: T(n.retry_after),
                              smsWait:
                                null == (u = t.prev) ? void 0 : u.smsWait,
                              voiceWait:
                                null == (s = t.prev) ? void 0 : s.voiceWait,
                              code: t.code,
                              localNumber: a,
                              cc: i.cc,
                              requestTime:
                                null == (l = t.prev) ? void 0 : l.requestTime,
                            };
                          return void e.updateStore({
                            type: "REQUESTING_CODE_BAN_APPEAL",
                            country: i,
                            localNumber: a,
                            banInfo: o,
                            state: c,
                          });
                        default:
                          __LOG__(
                            4
                          )`verifySmsCodeBanAppeal: Unexpected result reason ${r}`,
                            e.updateStore((0, I.c)(a, i, "CODE_VERIFY_ERROR"));
                      }
                  })(
                    e,
                    {
                      code: t,
                      country: s,
                      localNumber: o,
                      prev: i.state,
                      banInfo: l,
                    },
                    n
                  );
                default:
                  return (
                    __LOG__(
                      4
                    )`verifySmsCodeBanAppeal: Unexpected result status ${n.status}`,
                    SEND_LOGS("unexpected-otp-verify-status"),
                    n.status,
                    void e.updateStore((0, I.c)(o, s, "CODE_VERIFY_ERROR"))
                  );
              }
            });
        }
      }
      function L(e) {
        var t = e.getStoreInState("BAN_APPEAL");
        t && e.updateStore(Object.assign({}, t, { error: void 0 }));
      }
      function G(e) {
        __LOG__(2)`RegFlow.goToBanAppeal`;
        var t = e.getStoreInState("BLOCKED_BAN_APPEAL");
        if (
          t &&
          ("no_appeal_opened" === t.banAppeal.banAppealState.state ||
            "in_review" === t.banAppeal.banAppealState.state)
        ) {
          var n = t.banAppeal.banAppealState,
            r = t.banAppeal,
            i = t.localNumber,
            a = t.country;
          e.updateStore({
            type: "BAN_APPEAL",
            country: a,
            localNumber: i,
            banAppeal: {
              banAppealContent: r.banAppealContent,
              banReason: r.banReason,
              banAppealToken: r.banAppealToken,
              banAppealLastSync: r.banAppealLastSync,
              banAppealState: n,
            },
          });
        }
      }
      function M(e, t) {
        __LOG__(2)`RegFlow.goToBanAppealBlocked`;
        var n = e.getStoreInState("BAN_APPEAL"),
          r = null == n ? void 0 : n.banAppeal.banAppealState;
        if (
          n &&
          r &&
          ("no_appeal_opened" === r.state || "in_review" === r.state)
        ) {
          var i = n.banAppeal,
            a = n.localNumber,
            o = n.country;
          e.updateStore({
            type: "BLOCKED_BAN_APPEAL",
            country: o,
            localNumber: a,
            banAppeal: {
              banAppealContent: t,
              banReason: i.banReason,
              banAppealToken: i.banAppealToken,
              banAppealLastSync: i.banAppealLastSync,
              banAppealState: r,
            },
          });
        }
      }
      function A(e) {
        __LOG__(2)`RegFlow.fetchBanAppealStatus`;
        var t = e.getStoreInStates2(["BAN_APPEAL", "BLOCKED_BAN_APPEAL"]);
        if (!t) return Promise.resolve(!1);
        var n = t.banAppeal;
        return _(n.banAppealToken).then((t) => {
          var i = e.getStoreInStates2(["BAN_APPEAL", "BLOCKED_BAN_APPEAL"]);
          if (!i) return !1;
          var a = i.localNumber,
            o = i.country,
            u = i.banAppeal;
          if ("ok" === t.type) {
            var s = (0, r.D)(),
              l = t.result;
            if ("banned" === l.state || "unbanned" === l.state)
              e.updateStore({
                type: "BAN_APPEAL",
                country: o,
                localNumber: a,
                banAppeal: {
                  banAppealState: l,
                  banReason: n.banReason,
                  banAppealToken: n.banAppealToken,
                  banAppealLastSync: s,
                },
              });
            else {
              l.state;
              var c =
                "BAN_APPEAL" === i.type
                  ? {
                      type: "BAN_APPEAL",
                      country: o,
                      localNumber: a,
                      banAppeal: {
                        banAppealState: l,
                        banReason: n.banReason,
                        banAppealToken: n.banAppealToken,
                        banAppealLastSync: s,
                      },
                    }
                  : {
                      type: "BLOCKED_BAN_APPEAL",
                      country: o,
                      localNumber: a,
                      banAppeal: {
                        banAppealState: l,
                        banReason: n.banReason,
                        banAppealToken: n.banAppealToken,
                        banAppealLastSync: s,
                      },
                    };
              e.updateStore(c);
            }
            return u.banAppealState.state !== l.state;
          }
          switch ((t.type, t.error)) {
            case "token-error":
              e.updateStore({
                type: "ENTERING_PHONE_NUMBER",
                prefill: { country: o, localNumber: a },
                state: {
                  type: "BAN_APPEAL_ERROR",
                  reason: "token-error",
                  localNumber: a,
                  cc: o.cc,
                },
              });
              break;
            case "unrecoverable":
              e.updateStore({
                type: "ENTERING_PHONE_NUMBER",
                prefill: { country: o, localNumber: a },
                state: {
                  type: "BAN_APPEAL_ERROR",
                  reason: "error",
                  localNumber: a,
                  cc: o.cc,
                },
              });
          }
          return !1;
        });
      }
      function P(e, t) {
        __LOG__(2)`RegFlow.submitBanAppeal`;
        var n = e.getStoreInState("BAN_APPEAL");
        if (n)
          return (function (e, t) {
            var n = f(
                "6960707423955525",
                (function (e, t) {
                  var n = d(e);
                  return (
                    (n.user_request = {
                      description: t,
                      debug_info: JSON.stringify((0, s.a)("blocked")),
                    }),
                    n
                  );
                })(e, t)
              ),
              r = (0, a.c)(l, c);
            return (0, a.f)(
              r,
              {},
              {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(n),
              }
            )
              .then((e) =>
                e.ok
                  ? e
                      .json()
                      .then((e) =>
                        e.errors && e.errors.length > 0
                          ? { type: "error", error: p(e.errors[0]) }
                          : {
                              type: "ok",
                              result: v(
                                e.data
                                  .whatsapp_support_process_ban_appeal_request
                              ),
                            }
                      )
                  : (__LOG__(4)`submitBanAppealRequest: unexpected ${e.status}`,
                    { type: "error", error: "retry" })
              )
              .catch(() => ({ type: "error", error: "network_error" }));
          })(n.banAppeal.banAppealToken, t).then((t) => {
            var n = e.getStoreInState("BAN_APPEAL");
            if (n) {
              var i = n.banAppeal,
                a = n.localNumber,
                o = n.country;
              if ("ok" !== t.type) {
                t.type;
                var u = t.error;
                switch (u) {
                  case "token-error":
                    return void e.updateStore({
                      type: "ENTERING_PHONE_NUMBER",
                      prefill: { country: o, localNumber: a },
                      state: {
                        type: "BAN_APPEAL_ERROR",
                        reason: "token-error",
                        localNumber: a,
                        cc: o.cc,
                      },
                    });
                  case "unrecoverable":
                    return void e.updateStore({
                      type: "ENTERING_PHONE_NUMBER",
                      prefill: { country: o, localNumber: a },
                      state: {
                        type: "BAN_APPEAL_ERROR",
                        reason: "error",
                        localNumber: a,
                        cc: o.cc,
                      },
                    });
                  default:
                    return void e.updateStore({
                      type: "BAN_APPEAL",
                      country: o,
                      localNumber: a,
                      banAppeal: i,
                      error: {
                        type: "BAN_APPEAL_ERROR",
                        reason: u,
                        localNumber: a,
                        cc: o.cc,
                      },
                    });
                }
              } else
                e.updateStore({
                  type: "BAN_APPEAL",
                  country: o,
                  localNumber: a,
                  banAppeal: {
                    banAppealState: t.result,
                    banAppealToken: i.banAppealToken,
                    banReason: i.banReason,
                    banAppealLastSync: (0, r.D)(),
                  },
                });
            }
          });
      }
      function T(e) {
        return null == e || -1 === e ? null : (0, r.k)(e);
      }
    },
    function (e, t, n) {
      var r = Object.prototype.hasOwnProperty,
        i = "function" == typeof WeakMap ? new WeakMap() : new Map();
      function a(e) {
        var t = i.get(e);
        if (void 0 !== t) return t;
        var n = new Map();
        return (
          Object.getOwnPropertyNames(e).forEach(function (t) {
            n.set(e[t], t);
          }),
          i.set(e, n),
          n
        );
      }
      var o = Object.freeze(
        Object.defineProperties(Object.create(null), {
          isValid: {
            value: function (e) {
              return a(this).has(e);
            },
          },
          cast: {
            value: function (e) {
              return this.isValid(e) ? e : void 0;
            },
          },
          members: {
            value: function () {
              return a(this).keys();
            },
          },
          getName: {
            value: function (e) {
              return a(this).get(e);
            },
          },
        })
      );
      function u(e) {
        var t = Object.create(o);
        for (var n in e)
          r.call(e, n) && Object.defineProperty(t, n, { value: e[n] });
        return Object.freeze(t);
      }
      var s = Object.freeze(
        Object.defineProperties(Object.create(null), {
          isValid: {
            value: function (e) {
              return "string" == typeof e && r.call(this, e);
            },
          },
          cast: { value: o.cast },
          members: {
            value: function () {
              return Object.getOwnPropertyNames(this).values();
            },
          },
          getName: {
            value: function (e) {
              return e;
            },
          },
        })
      );
      (u.Mirrored = function (e) {
        for (var t = Object.create(s), n = 0, r = e.length; n < r; ++n)
          Object.defineProperty(t, e[n], { value: e[n] });
        return Object.freeze(t);
      }),
        Object.freeze(u.Mirrored),
        (e.exports = Object.freeze(u));
    },
    ,
    function (e, t, n) {
      n.d(t, "e", function () {
        return l;
      }),
        n.d(t, "b", function () {
          return c;
        }),
        n.d(t, "a", function () {
          return f;
        }),
        n.d(t, "d", function () {
          return _;
        }),
        n.d(t, "f", function () {
          return p;
        }),
        n.d(t, "c", function () {
          return h;
        });
      var r = n(98),
        i = n(2),
        a = n(11),
        o = n(3),
        u = n(6),
        s = n(73);
      function l(e, t) {
        var n = e.chatId;
        if (n && u.Q.get())
          return (0, s.g)(e) && !(0, s.h)(t)
            ? {
                type: i.f.IDENTITY_CHANGE,
                author: i.c,
                subtype: "unavailable",
                externalId: "keychange/unavailable/" + n,
                ts: (0, o.D)(),
                ack: i.a.RECEIVED,
                altIndex: "",
              }
            : void 0;
      }
      function c(e, t) {
        if (e.chatId) {
          var n = e.chatId,
            r = d(e.verifiedInfo, t);
          return null != r
            ? {
                externalId: "/privacy/" + n,
                ts: (0, o.D)(),
                author: i.c,
                ack: i.a.RECEIVED,
                type: i.f.PRIVACY_CHANGE,
                subtype: r,
                altIndex: "",
              }
            : void 0;
        }
      }
      function d(e, t) {
        var n = e && e.bsp && e.bsp.host === r.b.FB,
          i = e && e.bsp && e.bsp.actors === r.a.BSP,
          a = t && t.bsp && t.bsp.actors === r.a.BSP,
          o = t && t.bsp && t.bsp.host === r.b.FB,
          u = null;
        return (
          a || o
            ? o
              ? n || (u = "now_fb")
              : a && ((i && !n) || (u = "now_bsp"))
            : (!i && !n) || (u = "now_e2ee"),
          u
        );
      }
      function f(e) {
        if (e.chatId) {
          var t = e.chatId,
            n = e.verifiedInfo,
            a = n && n.bsp && n.bsp.host === r.b.FB;
          return (n && n.bsp && n.bsp.actors === r.a.BSP) || a
            ? {
                externalId: "/privacy/" + t,
                ts: (0, o.D)(),
                author: i.c,
                ack: i.a.RECEIVED,
                type: i.f.PRIVACY_CHANGE,
                subtype: "now_e2ee",
                altIndex: "",
              }
            : void 0;
        }
      }
      function _(e, t, n, r) {
        var i, a, o;
        return (
          !e ||
          null == e.verifiedInfo ||
          e.verifiedInfo.level !== n ||
          e.verifiedInfo.serial !== t ||
          (null == (i = e.verifiedInfo.bsp) ? void 0 : i.ts) !==
            (null == r ? void 0 : r.ts) ||
          (null == (a = e.verifiedInfo.bsp) ? void 0 : a.actors) !==
            (null == r ? void 0 : r.actors) ||
          (null == (o = e.verifiedInfo.bsp) ? void 0 : o.host) !==
            (null == r ? void 0 : r.host)
        );
      }
      function p(e, t, n) {
        var r = e.verifiedInfo,
          i = n.msg;
        return t
          ? r
            ? Object.assign({}, n, {
                msg: (0, a.j)(i, { bizInfo: { bsp: r.bsp } }),
              })
            : n
          : null != d(r, i.bizInfo)
          ? Object.assign({}, n, { msg: (0, a.j)(i, { bizConflict: !0 }) })
          : n;
      }
      var v = { validateBusinessCertificate: !1 };
      function h(e, t) {
        if ("NO_BIZ" === t)
          return e
            ? (__LOG__(3)`hasMsgConflict: unexpected empty receipt`,
              { validateBusinessCertificate: !0 })
            : v;
        var n = "NO_BSP" === t ? { bsp: void 0 } : { bsp: t };
        return null != d(e, n)
          ? (__LOG__(3)`hasMsgConflict: conflict with receipt`,
            { bizConflict: !0, validateBusinessCertificate: !0, msgBizInfo: n })
          : v;
      }
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return i;
      }),
        n.d(t, "e", function () {
          return a;
        }),
        n.d(t, "a", function () {
          return o;
        }),
        n.d(t, "d", function () {
          return u;
        }),
        n.d(t, "c", function () {
          return s;
        });
      var r = n(0),
        i = Object.assign({}, null),
        a = Object.assign({}, null),
        o = Object.assign({}, null),
        u = Object.assign({}, null),
        s = Object.assign({}, null);
      (i.internalSpec = {
        rawId: [1, r.d.UINT32],
        timestamp: [2, r.d.UINT64],
        currentIndex: [3, r.d.UINT32],
        validIndexes: [4, r.b.REPEATED | r.b.PACKED | r.d.UINT32],
      }),
        (a.internalSpec = {
          details: [1, r.d.BYTES],
          accountSignature: [2, r.d.BYTES],
        }),
        (o.internalSpec = {
          rawId: [1, r.d.UINT32],
          timestamp: [2, r.d.UINT64],
          keyIndex: [3, r.d.UINT32],
        }),
        (u.internalSpec = {
          details: [1, r.d.BYTES],
          accountSignatureKey: [2, r.d.BYTES],
          accountSignature: [3, r.d.BYTES],
          deviceSignature: [4, r.d.BYTES],
        }),
        (s.internalSpec = { details: [1, r.d.BYTES], hmac: [2, r.d.BYTES] });
    },
    ,
    function (e, t, n) {
      n.d(t, "k", function () {
        return C;
      }),
        n.d(t, "l", function () {
          return R;
        }),
        n.d(t, "i", function () {
          return x;
        }),
        n.d(t, "h", function () {
          return D;
        }),
        n.d(t, "f", function () {
          return U;
        }),
        n.d(t, "d", function () {
          return j;
        }),
        n.d(t, "e", function () {
          return $;
        }),
        n.d(t, "c", function () {
          return F;
        }),
        n.d(t, "b", function () {
          return B;
        }),
        n.d(t, "a", function () {
          return V;
        }),
        n.d(t, "g", function () {
          return K;
        }),
        n.d(t, "j", function () {
          return H;
        });
      var r = n(8),
        i = n.n(r),
        a = n(2),
        o = n(36),
        u = n(10),
        s = (n(135), n(46)),
        l = n(364),
        c = n(75),
        d = n(101),
        f = n(56),
        _ = n(24),
        p = n(209),
        v = n(175)({ POLL_VOTE: "Poll Vote", ENC_REACTION: "Enc Reaction" });
      function h(e) {
        var t = e.messageSecret,
          n = e.stanzaId,
          r = e.parentMsgOriginalSender,
          i = e.modificationSender,
          a = e.modificationType,
          o = _.a.build(n, r, i, a).readBuffer();
        return (0, p.a)(
          t instanceof ArrayBuffer ? new Uint8Array(t) : t,
          o,
          32
        );
      }
      var m = n(33),
        g = n(115),
        y = n(32),
        b = n(9),
        w = n(6),
        O = n(39),
        E = n(16),
        I = n(5),
        S = n(3),
        k = n(12),
        L = n(84),
        G = n(65),
        M = n(58),
        A = n(66),
        P = n(62),
        T = n(42),
        N = n(117);
      function C(e) {
        return (function (e) {
          var t = ["orphanedStanzas", "msgs", "chats"];
          return (0, u.f)("findPollMessageOrStoreAsOrphan", (n) =>
            (0, s.a)(n, "rw", t, (t) => {
              var n = e.content,
                r = e.msgRef,
                i = n.chatJid,
                a = r.msgAuthor,
                u = r.msgExternalId;
              return z(t, i, a, u).then((n) =>
                n && "futureproof" !== n
                  ? "dropped" !== n
                    ? n
                    : void 0
                  : (__LOG__(
                      2
                    )`findPollMessageOrStoreAsOrphan message not found. Storing as orphan`,
                    (function (e, t) {
                      var n = t.content,
                        r = t.msgRef,
                        i = n.chatJid,
                        a = r.msgExternalId,
                        u = r.msgAuthor;
                      return (0, o.s)(e, a, u, i).then((t) => {
                        if (!t.revoke) {
                          var r,
                            o = n.author,
                            s = t.pollUpdates.find((e) => e.author === o);
                          if (null != s) {
                            var l = n.senderTimestampMs;
                            if ((0, L.b)(s.content.senderTimestampMs, l))
                              return void __LOG__(
                                2
                              )`maybeStoreOrphanPollUpdateInTransaction: newer orphan found`;
                            r = e.orphanedStanzas.delete(s.id);
                          }
                          __LOG__(
                            2
                          )`maybeStoreOrphanPollUpdateInTransaction: storing new orphan poll update`;
                          var c = {
                            type: "poll-update",
                            ts: n.ts,
                            chatJid: i,
                            content: n,
                            externalId: a,
                            author: u,
                          };
                          return (0, I.e)(r)
                            .then(() => e.orphanedStanzas.add(c))
                            .then(() => {});
                        }
                        __LOG__(
                          2
                        )`maybeStoreOrphanPollUpdateInTransaction: msg is revoked, ignoring orphaned poll update`;
                      });
                    })(t, e))
              );
            })
          );
        })(e).then((t) => {
          if (null != t) return q(t, [e]);
        });
      }
      function R(e) {
        var t = [
          "pollUpdates",
          "chats",
          "msgs",
          "groups",
          "groupParticipantsInfo",
          "receipts",
          "contacts",
        ];
        return (0, u.c)(
          "writeOutgoingPollVote",
          (n) =>
            (0, s.a)(n.table, "rw", t, (t) => {
              var n = e.msgId,
                r = e.externalId,
                u = (0, y.m)(n);
              return (0, I.c)([
                Q(t, r, b.a),
                (0, o.h)(t, u),
                (0, o.r)(t, n),
                Z(t, n, "@me"),
              ]).then((u) => {
                var s = i()(u, 4),
                  l = s[0],
                  c = s[1],
                  d = s[2],
                  f = s[3];
                if (null != c)
                  if (null != d)
                    if (d.type === a.f.POLL) {
                      var _ = c.dbChat,
                        p = c.dbGroup;
                      if (null != p) {
                        var v = p.groupInfo;
                        if (!v.isInTheGroup)
                          return void __LOG__(
                            4
                          )`writeOutgoingPollVote no longer in group`;
                        var h = v.leftTs;
                        if (null != h && h > d.ts)
                          return void __LOG__(
                            4
                          )`writeOutgoingPollVote left group after poll creation`;
                      }
                      var m = 1e3 * e.senderTimestamp;
                      if (null != f && (0, L.b)(f.senderTimestampMs, m))
                        __LOG__(3)`writeOutgoingPollVote found a newer vote`;
                      else {
                        if (null != l) {
                          __LOG__(3)`writeOutgoingPollVote deduped`;
                          var g = (0, y.s)(l.id);
                          return (0, P.h)(t, g).then((e) => {
                            if (e)
                              return {
                                dbPollMsg: d,
                                dbChat: _,
                                dbGroup: p,
                                successResult: {
                                  pollUpdateMsgId: g,
                                  outgoingTo: (0, P.g)(e),
                                },
                              };
                            __LOG__(4)`writeOutgoingPollVote receipt not found`;
                          });
                        }
                        var w = e.votes;
                        if (w.size > d.options.length)
                          __LOG__(
                            4
                          )`writeOutgoingPollVote too many votes (options limit)`;
                        else if (
                          d.selectableOptionsCount > 0 &&
                          w.size > d.selectableOptionsCount
                        )
                          __LOG__(
                            4
                          )`writeOutgoingPollVote too many votes (selectable options limit)`;
                        else {
                          if (
                            null ==
                            Array.from(w.values()).find(
                              (e) => e < 0 || e >= d.options.length
                            )
                          ) {
                            var O = _.jid,
                              E = {
                                updateType: "vote",
                                externalId: r,
                                author: b.a,
                                chatJid: O,
                                msgId: n,
                                senderTimestampMs: m,
                                ts: (0, S.D)(),
                                ack: a.a.CLOCK,
                              };
                            return (
                              w.size > 0 && (E.votes = w),
                              (function (e, t) {
                                var n = t.msgId,
                                  r = t.author,
                                  i = t.votes,
                                  a = Object.assign({}, t, {
                                    idx: (0, y.r)(
                                      n,
                                      r,
                                      t.updateType,
                                      null == i ? "deleted" : void 0
                                    ),
                                  });
                                return Z(e, n, r)
                                  .then((t) => {
                                    if (null != t) {
                                      var n = t.id;
                                      return (0, I.c)([
                                        e.pollUpdates.delete(n),
                                        r === b.a
                                          ? (0, P.e)(e, [(0, y.s)(n)])
                                          : null,
                                      ]);
                                    }
                                  })
                                  .then(() =>
                                    e.pollUpdates
                                      .add(a)
                                      .then((e) =>
                                        Object.assign({}, a, { id: e })
                                      )
                                  );
                              })(t, E).then((e) => {
                                var n = (0, y.s)(e.id);
                                return (function (e, t, n, r) {
                                  return (0, o.u)(e, t).then((i) => {
                                    var a = { to: i, identityIds: new Map() };
                                    return (0, P.b)(
                                      e,
                                      (0, P.l)(n, t, r, a)
                                    ).then(() => a);
                                  });
                                })(t, _.jid, n, e.ts).then((e) =>
                                  J(t, d).then((t) => ({
                                    dbPollMsg: t,
                                    dbChat: _,
                                    dbGroup: p,
                                    successResult: {
                                      pollUpdateMsgId: n,
                                      outgoingTo: e,
                                    },
                                  }))
                                );
                              })
                            );
                          }
                          __LOG__(4)`writeOutgoingPollVote incorrect vote`;
                        }
                      }
                    } else __LOG__(4)`writeOutgoingPollVote msg not a poll`;
                  else __LOG__(2)`writeOutgoingPollVote msg not found`;
                else __LOG__(2)`writeOutgoingPollVote chat not found`;
              });
            }),
          (e) => {
            if (null != e) {
              var t = e.dbPollMsg,
                n = e.dbChat,
                r = e.dbGroup,
                i = e.successResult;
              return X(t, n, r), i;
            }
            (0, k.c)("event", "votesNotSent", {});
          }
        );
      }
      function x(e, t, n) {
        var r = ["msgs", "pollUpdates", "orphanedStanzas", "chats"];
        return (0, u.f)("processPollUpdateOrphans", (i) =>
          (0, s.a)(i, "rw", r, (r) =>
            (function (e, t, n, r) {
              return z(e, r, n, t).then((i) => {
                if (null != i && "dropped" !== i && "futureproof" !== i)
                  return (0, o.s)(e, t, n, r).then((e) => {
                    if (!e.revoke)
                      return { dbMsg: i, dbOrphans: e.pollUpdates };
                    __LOG__(2)`findPollMessageAndItsOrphans: msg is revoked`;
                  });
              });
            })(r, e, t, n)
          )
        ).then((n) => {
          if (null != n) {
            var r = n.dbMsg,
              i = n.dbOrphans;
            if (0 !== i.length) {
              __LOG__(
                2
              )`processPollUpdateOrphans: found ${i.length} poll votes to add`;
              var a = { msgAuthor: t, msgExternalId: e };
              return q(
                r,
                i.map((e) => {
                  var t = e.content;
                  return { msgRef: a, content: t };
                }),
                i.map((e) => e.id)
              );
            }
          } else
            __LOG__(
              3
            )`processPollUpdateOrphans: message disappeared after adding it to the DB`;
        });
      }
      function D(e) {
        if (e) {
          var t = e.dbMsg;
          if (t.type !== a.f.POLL) return Promise.resolve(e);
          var n = t.author,
            r = t.externalId;
          if ("@me" === n || "@system" === n)
            return (
              __LOG__(
                4
              )`maybeProcessRemainingOrphanedStanzas: incoming message from ${n}`,
              Promise.resolve(e)
            );
          var i = e.chat.jid;
          return (0, O.b)()
            .waitUntilPersisted(E.e.processPollUpdateOrphans(r, n, i))
            .then(() => e);
        }
      }
      function U(e) {
        var t = ["msgs", "pollUpdates"];
        return (0, u.f)("getPollResults", (n) =>
          (0, s.a)(n, "rw", t, (t) =>
            (0, o.r)(t, e).then((e) => {
              if (null != e) {
                if (e.type === a.f.POLL) {
                  var n = e.options;
                  return Y(t, e).then((e) => {
                    var t = n.map(() => []);
                    return (
                      e.forEach((e) => {
                        var n = e.author,
                          r = e.votes,
                          i = e.ts;
                        r.forEach((e) => {
                          var r = t[e];
                          null != r
                            ? r.push({ author: n, ts: i })
                            : __LOG__(
                                4
                              )`getPollResults found result for non-existing option`;
                        });
                      }),
                      t
                    );
                  });
                }
                __LOG__(2)`getPollResults msg is not a poll`;
              } else __LOG__(2)`getPollResults msg not found`;
            })
          )
        );
      }
      function j(e, t) {
        var n = (0, y.E)(t);
        return e.pollUpdates.get(n).then((e) => {
          if (e && e.author === b.a)
            return Object.assign({}, e, { author: b.a });
        });
      }
      function $(e, t) {
        return j(e, t).then((t) => {
          if (t)
            return (0, o.r)(e, t.msgId).then((e) => {
              if (e && "@system" !== e.author && e.type === a.f.POLL) {
                var n = e.secret,
                  r = e.externalId,
                  i = e.author,
                  o = e.options;
                if (null != n) {
                  var u = t.ack;
                  return Object.assign({}, t, {
                    ack: u,
                    type: a.f.POLL_UPDATE,
                    author: b.a,
                    id: (0, y.s)(t.id),
                    msgRef: { msgAuthor: i, msgExternalId: r },
                    poll: { secret: n, options: o },
                  });
                }
              }
            });
        });
      }
      function F(e) {
        var t;
        if (null == e) return Promise.resolve();
        var n = e.votes,
          r = e.poll,
          i = r.options,
          a = [];
        return (
          null == n ||
            n.forEach((e) => {
              var t = i[e];
              null != t && a.push(t);
            }),
          a.length !== (null != (t = null == n ? void 0 : n.size) ? t : 0)
            ? Promise.resolve()
            : ee(a).then((t) => {
                var n = e.msgRef,
                  i = n.msgExternalId,
                  a = n.msgAuthor,
                  o = (function () {
                    var e = new Uint8Array(12);
                    return self.crypto.getRandomValues(e), e;
                  })().buffer,
                  u = w.t.get();
                return (function (e, t, n, r, i, a) {
                  return h({
                    messageSecret: t,
                    stanzaId: r,
                    parentMsgOriginalSender: i,
                    modificationSender: a,
                    modificationType: v.POLL_VOTE,
                  }).then((t) => {
                    var i = (0, d.a)(f.g, e).readBuffer();
                    return (0, l.b)(t, n, i, `${r}\0${a}`);
                  });
                })(
                  { selectedOptions: t },
                  r.secret,
                  o,
                  i,
                  "@me" === a ? u : a,
                  u
                ).then((e) => ({ encIv: o, encPayload: e }));
              })
        );
      }
      function B(e, t) {
        return e.pollUpdates
          .where("msgId")
          .anyOf(t)
          .toArray()
          .then((n) => {
            var r = n.map((e) => (0, y.s)(e.id));
            return (0, I.c)([
              e.pollUpdates.where("msgId").anyOf(t).delete(),
              (0, P.e)(e, r),
            ]).then(() => {});
          });
      }
      function V(e, t, n, r) {
        var i = [];
        return e.pollUpdates
          .where("msgId")
          .between(t, n, !1, !0)
          .filter((e) => {
            var t = null == r || !r.has(e.msgId);
            return t && i.push((0, y.s)(e.id)), t;
          })
          .delete()
          .then(() => (0, P.e)(e, i))
          .then(() => {});
      }
      function K(e, t, n) {
        return (0, I.j)(e.pollUpdates, ["externalId", "author"])
          .anyOf(t.map((e) => [e, b.a]))
          .filter((e) => e.chatJid === n)
          .toArray()
          .then((e) => e.map((e) => Object.assign({}, e, { author: b.a })));
      }
      function H(e, t) {
        return (0, o.r)(e, t).then((t) => {
          if (null != t && t.type === a.f.POLL) return J(e, t);
        });
      }
      function q(e, t, n) {
        var r = e.secret;
        if (null == r)
          return (
            __LOG__(4)`writeIncomingPollUpdate: missing message secret`,
            Promise.resolve()
          );
        var d = e.author;
        if ("@system" === d)
          return (
            __LOG__(4)`writeIncomingPollUpdate: poll created by system`,
            Promise.resolve()
          );
        var _ = [];
        return (
          t.forEach((t) => {
            var n = t.content,
              i = t.msgRef,
              a = i.msgAuthor,
              o = i.msgExternalId;
            if (a === e.author)
              if (o === e.externalId) {
                n.updateType;
                var u = n.encIv,
                  s = n.encPayload,
                  p = n.author,
                  m = (function (e, t, n, r, i, a) {
                    return h({
                      messageSecret: n,
                      stanzaId: r,
                      parentMsgOriginalSender: i,
                      modificationSender: a,
                      modificationType: v.POLL_VOTE,
                    }).then((n) =>
                      (0, l.a)(n, t, e, `${r}\0${a}`).then((e) =>
                        (0, c.a)(f.g, e)
                      )
                    );
                  })(s, u, r, o, "@me" === d ? w.t.get() : d, p);
                _.push(Promise.all([t, m]));
              } else
                __LOG__(
                  4
                )`writeIncomingPollUpdate: vote message refers to a different external id`;
            else
              __LOG__(
                4
              )`writeIncomingPollUpdate: vote message refers to a different author`;
          }),
          0 === _.length
            ? Promise.resolve()
            : Promise.all([Promise.all(_), ee(e.options)]).then((t) => {
                var r = i()(t, 2),
                  l = r[0],
                  c = r[1],
                  f = [];
                if (
                  (l.forEach((t) => {
                    var n = i()(t, 2),
                      r = n[0],
                      o = n[1].selectedOptions;
                    if (
                      o.length > c.length ||
                      (e.selectableOptionsCount > 0 &&
                        o.length > e.selectableOptionsCount)
                    )
                      __LOG__(
                        4
                      )`writeIncomingPollUpdate: poll_vote_invalid_options_count`;
                    else {
                      var u = o.map((e) => (0, m.m)(new Uint8Array(e))),
                        s = c.map((e) => (0, m.m)(new Uint8Array(e))),
                        l = new Map();
                      s.forEach((e, t) => {
                        l.set(e, t);
                      });
                      for (var d = new Set(), _ = 0; _ < u.length; _++) {
                        var p = l.get(u[_]);
                        if (null == p)
                          return void __LOG__(
                            4
                          )`writeIncomingPollUpdate: poll_vote_option_not_found`;
                        d.add(p);
                      }
                      var v = r.content,
                        h = v.author,
                        g = v.externalId,
                        b = v.chatJid,
                        w = v.ts,
                        O = v.senderTimestampMs,
                        E = 0 === d.size,
                        I = {
                          idx: (0, y.r)(
                            e.id,
                            h,
                            "vote",
                            E ? "deleted" : void 0
                          ),
                          updateType: "vote",
                          msgId: e.id,
                          author: h,
                          externalId: g,
                          chatJid: b,
                          ts: w,
                          senderTimestampMs: O,
                          ack: a.a.RECEIVED,
                        };
                      E || (I.votes = d), f.push(I);
                    }
                  }),
                  0 !== f.length)
                )
                  return (function (e, t, n, r, a) {
                    var l = [
                      "chats",
                      "msgs",
                      "pollUpdates",
                      "groups",
                      "groupParticipantsInfo",
                      "orphanedStanzas",
                      "contacts",
                    ];
                    return (0, u.c)(
                      "savePollVotes",
                      (u) =>
                        (0, s.a)(u.table, "rw", l, (u) =>
                          W(u, n, t, e)
                            .then((e) => {
                              if (e && "dropped" !== e) {
                                if ("futureproof" !== e) {
                                  var t = r.map((e) =>
                                    Z(u, e.msgId, e.author).then((t) =>
                                      null == t
                                        ? e
                                        : (0, L.b)(
                                            t.senderTimestampMs,
                                            e.senderTimestampMs
                                          )
                                        ? void __LOG__(
                                            2
                                          )`savePollVotes: found a newer vote`
                                        : u.pollUpdates
                                            .delete(t.id)
                                            .then(() => e)
                                    )
                                  );
                                  return (0, I.c)(t).then((t) => {
                                    var n = t.filter(Boolean);
                                    if (0 !== n.length) {
                                      var r = n.map((t) =>
                                        Object.assign({}, t, { msgId: e.id })
                                      );
                                      return u.pollUpdates
                                        .bulkAdd(r)
                                        .then(() => J(u, e))
                                        .then((e) => [e, r.length]);
                                    }
                                    __LOG__(
                                      2
                                    )`savePollVotes: all incoming votes were too old`;
                                  });
                                }
                                __LOG__(
                                  4
                                )`savePollVote: poll message became futureproof`;
                              } else
                                __LOG__(
                                  3
                                )`savePollVote: poll message deleted between transactions`;
                            })
                            .then((e) =>
                              null == a || 0 === a.length
                                ? e
                                : u.orphanedStanzas
                                    .where("id")
                                    .anyOf(a)
                                    .delete()
                                    .then(() => e)
                            )
                            .then((e) => {
                              if (null != e) {
                                var t = i()(e, 2),
                                  n = t[0],
                                  r = t[1];
                                return (0, o.g)(u, n.chat).then((e) => {
                                  if (null != e) {
                                    var t = e.dbChat,
                                      i = e.dbGroup,
                                      a = e.dbContact;
                                    return [n, t, i, a, r];
                                  }
                                });
                              }
                            })
                        ),
                      (e) => {
                        if (null != e) {
                          var t = i()(e, 5),
                            n = t[0],
                            r = t[1],
                            a = t[2],
                            o = t[3],
                            u = t[4];
                          X(n, r, a), (0, N.m)(r.jid, u, o);
                        }
                      }
                    );
                  })(e.externalId, d, e.chat, f, n);
              })
        );
      }
      function z(e, t, n, r) {
        return (0, o.j)(e, t).then((t) => {
          if (null != t) return W(e, t, n, r);
          __LOG__(2)`findPollMessageForIncomingPollUpdate chat not found`;
        });
      }
      function W(e, t, n, r) {
        return (0, o.q)(e, t, n, r).then((e) => {
          if (null != e)
            return e.type === a.f.POLL
              ? e
              : e.type === a.f.FUTUREPROOF
              ? "futureproof"
              : (__LOG__(
                  4
                )`findExistingChatPollMessageForIncomingPollUpdate  message is not a poll`,
                "dropped");
        });
      }
      function J(e, t) {
        return (0, I.c)([Y(e, t), Z(e, t.id, "@me")]).then((n) => {
          var r,
            a = i()(n, 2),
            o = a[0],
            u = a[1],
            s = new Map();
          return (
            o.forEach((e) => {
              var t = e.votes;
              e.author === b.a &&
                ((r = { type: "voted", votes: t, pollUpdateId: e.id }),
                (0, T.g)(e.ack) && (r.ackError = !0)),
                t.forEach((e) => {
                  var t = s.get(e);
                  s.set(e, (null != t ? t : 0) + 1);
                });
            }),
            null == r &&
              (null == u
                ? (r = { type: "not-voted" })
                : ((r = { type: "voted", votes: "reset", pollUpdateId: u.id }),
                  (0, T.g)(u.ack) && (r.ackError = !0))),
            (t.pollVotes = { myVotes: r, voteCounts: s }),
            e.msgs.put(t).then(() => t)
          );
        });
      }
      function Y(e, t) {
        var n = t.id;
        return e.pollUpdates
          .where("idx")
          .between((0, y.k)(n, "vote"), (0, y.x)(n, "vote"))
          .toArray();
      }
      function Q(e, t, n) {
        return (0, I.j)(e.pollUpdates, ["externalId", "author"])
          .equals([t, n])
          .first();
      }
      function Z(e, t, n) {
        var r = (0, y.r)(t, n, "vote"),
          i = (0, y.r)(t, n, "vote", "deleted");
        return e.pollUpdates.where("idx").anyOf([r, i]).first();
      }
      function X(e, t, n) {
        var r = (0, M.a)(t, n),
          i = {
            result: "modified",
            dbMsg: e,
            msg: (0, A.c)(e),
            chat: r,
            updatedContact: null,
            shouldDownloadMmsThumb: !1,
            outgoingTo: null,
          };
        (0, G.c)(i);
      }
      function ee(e) {
        var t = new TextEncoder(),
          n = e.map((e) => t.encode(e)).map(g.a);
        return Promise.all(n);
      }
    },
    function (e, t, n) {
      n.d(t, "f", function () {
        return A;
      }),
        n.d(t, "j", function () {
          return P;
        }),
        n.d(t, "g", function () {
          return T;
        }),
        n.d(t, "h", function () {
          return N;
        }),
        n.d(t, "i", function () {
          return C;
        }),
        n.d(t, "a", function () {
          return R;
        }),
        n.d(t, "d", function () {
          return D;
        }),
        n.d(t, "c", function () {
          return U;
        }),
        n.d(t, "b", function () {
          return j;
        }),
        n.d(t, "e", function () {
          return $;
        });
      var r = n(8),
        i = n.n(r),
        a = n(5),
        o = n(3),
        u = n(15),
        s = n(36),
        l = n(10),
        c = n(14),
        d = n(223),
        f = n(109),
        _ = n(65),
        p = n(2),
        v = n(66),
        h = n(58),
        m = n(52),
        g = n(46),
        y = n(91),
        b = n(84),
        w = n(9),
        O = n(7),
        E = n(168),
        I = n(25),
        S = n(72),
        k = n(199),
        L = n(12),
        G = n(32),
        M = n(62);
      function A(e, t) {
        if (!(0, m.l)()) return Promise.resolve((0, S.d)("feature-disabled"));
        var n = [
          "msgs",
          "chats",
          "groups",
          "groupParticipantsInfo",
          "contacts",
          "receipts",
        ];
        return (0, l.c)(
          "keepMessage",
          (r) =>
            (0, g.a)(r.table, "rw", n, (n) =>
              F(n, e, t, w.a, (0, o.D)(), (0, o.E)())
            ),
          (e) => {
            if (null == e) return (0, S.d)("unknown");
            if ("success" === e.type) {
              var t = i()(e.result, 4),
                n = t[0],
                r = t[1],
                a = t[2],
                o = t[3];
              return (
                K("modified", n, r, a),
                null == o ? (0, S.d)("unknown") : { result: o }
              );
            }
            switch ((e.type, e.reason)) {
              case "unkept-by-author":
                return (0, S.d)("unkept-by-author");
              case "author-left":
                return (0, S.d)("author-left");
              case "message-expired":
                return (0, S.d)("message-expired");
              default:
                return (
                  e.reason,
                  { error: { reason: "contact-blocked", extra: e.jid } }
                );
            }
          }
        );
      }
      function P(e, t) {
        if (!(0, m.l)()) return Promise.resolve((0, S.d)("feature-disabled"));
        var n = [
          "msgs",
          "chats",
          "groups",
          "groupParticipantsInfo",
          "contacts",
          "receipts",
        ];
        return (0, l.c)(
          "unkeepMessage",
          (r) =>
            (0, g.a)(r.table, "rw", n, (n) =>
              B(n, e, t, w.a, (0, o.D)(), (0, o.E)())
            ),
          (e) => {
            if (null == e) return (0, S.d)("unknown");
            if ("success" === e.type) {
              var t = i()(e.result, 5),
                n = t[0],
                r = t[1],
                a = t[2],
                o = t[3],
                u = t[4];
              return (
                K("modified", n, r, a),
                null != u && (0, d.d)(u.ts),
                null == o ? (0, S.d)("unknown") : { result: o }
              );
            }
            switch ((e.type, e.reason)) {
              case "author-left":
                return (0, S.d)("author-left");
              default:
                return (
                  e.reason,
                  { error: { reason: "contact-blocked", extra: e.jid } }
                );
            }
          }
        );
      }
      function T(e, t, n) {
        return (0, l.f)("loadChatKeptMessages", (r) =>
          (function (e, t, n, r) {
            if (!(0, m.l)()) return Promise.resolve([]);
            var i = [(0, s.b)(t), u.i],
              o = r ? [r.msgId, r.kept] : [(0, s.e)(t), u.i];
            return (0, a.i)(
              (0, a.j)(e.stores.msgs, ["id", "keptInfo.kept"])
                .between(i, o, !1, !1)
                .reverse()
                .limit(n)
                .toArray()
            );
          })(r, e, t, n).then((e) => ({ msgs: e.map(v.c) }))
        );
      }
      function N(e) {
        var t = [
          "chats",
          "orphanedStanzas",
          "msgs",
          "groups",
          "groupParticipantsInfo",
          "contacts",
          "receipts",
        ];
        return (0, l.c)(
          "saveIncomingKeepInChatMessage",
          (n) => (0, g.a)(n.table, "rw", t, (t) => C(t, e)),
          (e) => {
            if (null != e) {
              var t = i()(e, 3),
                n = t[0];
              K("modified", [n], t[1], t[2]);
              var r = n.keptInfo,
                a = n.author;
              null != r &&
                null != r.kept &&
                "@me" === a &&
                1 === r.repeatedTimes &&
                (0, L.c)("event", "notifyMessageKept", { msg: (0, v.c)(n) });
            }
          }
        );
      }
      function C(e, t) {
        var n = t.content,
          r = t.msgRef,
          a = n.chatJid,
          o = n.keepType,
          u = n.author,
          l = n.senderTimestampMs,
          c = n.ts,
          d = n.externalId;
        return (0, s.j)(e, a).then((n) => {
          if (null == n)
            return (
              __LOG__(
                2
              )`saveIncomingKeepInChatMessage chat not found. Storing as orphan`,
              V(e, t)
            );
          var a = r.msgAuthor,
            f = r.msgExternalId;
          return (0, s.q)(e, n, a, f)
            .then((r) => {
              if (!r)
                return (
                  __LOG__(
                    2
                  )`saveIncomingKeepInChatMessage msg not found. Storing as orphan`,
                  V(e, t)
                );
              var i = new Map();
              return (
                i.set(r.id, d),
                o === y.b.KEEP_FOR_ALL
                  ? F(e, i, n, u, c, l)
                  : B(e, i, n, u, c, l)
              );
            })
            .then((e) => {
              if (null != e && "error" !== e.type) {
                var t = i()(e.result, 5),
                  n = t[0],
                  r = t[1],
                  a = t[2],
                  o = t[3],
                  u = t[4];
                return (
                  null != o &&
                    __LOG__(
                      4
                    )`saveIncomingKeepInChatMessageWithStores: outgoing success result in incoming message`,
                  [n[0], r, a, u]
                );
              }
            });
        });
      }
      function R() {
        var e = [
          "chats",
          "msgs",
          "groups",
          "groupParticipantsInfo",
          "contacts",
        ];
        return (0, l.c)(
          "addKeepInChatSystemMessageToAllEphemeralChats",
          (t) =>
            (0, g.a)(t.table, "rw", e, (e) =>
              (function (e) {
                var t = e.contacts
                    .filter((e) => {
                      if (null == e.chatId) return !1;
                      var t = e.ephemeral;
                      return null != t && t.expiration > c.k;
                    })
                    .toArray()
                    .then((e) => e.map((e) => e.jid)),
                  n = e.groups
                    .filter((e) => {
                      var t = e.expiration;
                      return null != t && t > c.k;
                    })
                    .toArray()
                    .then((e) => e.map((e) => e.jid)),
                  r = (0, I.d)(e.meta, I.a.KEEP_IN_CHAT_SYSTEM_MESSAGES_ADDED);
                return (0, a.c)([r, t, n]).then((t) => {
                  var n = i()(t, 3),
                    r = n[0],
                    u = n[1],
                    l = n[2];
                  if (!0 === (null == r ? void 0 : r.value))
                    return (
                      __LOG__(
                        4
                      )`_addKeepInChatSystemMessageToAllEphemeralChats: already added, de-duping`,
                      "deduped"
                    );
                  var c = e.chats
                      .where("jid")
                      .anyOf([...u, ...l])
                      .toArray(),
                    d = e.meta.put({
                      key: I.a.KEEP_IN_CHAT_SYSTEM_MESSAGES_ADDED,
                      value: !0,
                    });
                  return (0, a.c)([c, d])
                    .then((t) => {
                      var n = i()(t, 1)[0],
                        r = (0, o.D)(),
                        u = n.map((t) => {
                          var n = {
                            type: p.f.EPHEMERAL,
                            subtype: "keep-in-chat",
                            externalId: "/ephemeral-kic/" + t.id,
                            ts: r,
                            author: w.b,
                            ack: p.a.RECEIVED,
                            altIndex: "",
                          };
                          return (0, E.b)(e, t, n);
                        });
                      return (0, a.c)(u);
                    })
                    .then((t) => {
                      var n = l.map((t) => (0, s.o)(e, t));
                      return (0, a.c)(n).then((e) => [t, e]);
                    })
                    .then((e) => {
                      var t = i()(e, 2),
                        n = t[0],
                        r = t[1],
                        a = new Map();
                      return (
                        r.forEach((e) => {
                          e && a.set(e.groupInfo.jid, e);
                        }),
                        n.reduce((e, t) => {
                          var n = t.dbChat,
                            r = t.dbMsg;
                          return (
                            (0, O.x)(n.jid, {
                              user: (t) => {
                                e.push([r, n, void 0]);
                              },
                              group: (t) => {
                                var i = a.get(t);
                                null != i
                                  ? e.push([r, n, i])
                                  : __LOG__(
                                      3
                                    )`_addKeepInChatSystemMessageToAllEphemeralChats: group not found`;
                              },
                            }),
                            e
                          );
                        }, [])
                      );
                    });
                });
              })(e)
            ),
          (e) => {
            "deduped" !== e &&
              e.forEach((e) => {
                var t = i()(e, 3);
                K("new", [t[0]], t[1], t[2]);
              });
          }
        );
      }
      function x(e, t) {
        var n = (0, G.D)(t);
        return (0, s.r)(e, n);
      }
      function D(e, t) {
        return x(e, t).then((e) => {
          if (null != e) {
            var t = e.keptInfo;
            if (null != t) {
              var n = t.author;
              if ("@me" === n) {
                var r = t.resendCount,
                  i = t.ack,
                  a = t.externalId,
                  o = t.ts;
                return {
                  keepInChat: !0,
                  msgId: e.id,
                  author: n,
                  resendCount: r,
                  ack: i,
                  externalId: a,
                  ts: o,
                };
              }
            }
          }
        });
      }
      function U(e, t) {
        return x(e, t).then((t) => {
          if (null != t)
            return (0, s.h)(e, t.chat).then((e) => {
              if (null != e) {
                var n = e.dbChat,
                  r = t.keptInfo;
                if (null != r && r.author === w.a) {
                  var i = t.author;
                  if ("@system" !== i) {
                    var a = r.repeatedTimes,
                      o = r.kept,
                      u = (0, G.p)(t.id, a, null != o),
                      s = {
                        repeatedTimes: r.repeatedTimes,
                        ts: r.ts,
                        senderTimestampMs: r.senderTimestampMs,
                        externalId: r.externalId,
                        resendCount: r.resendCount,
                        ack: r.ack,
                        type: p.f.KEEP_IN_CHAT,
                        author: w.a,
                        msgRef: { msgAuthor: i, msgExternalId: t.externalId },
                        id: u,
                        chatJid: n.jid,
                      };
                    if (null == o) {
                      var l = e.dbGroup;
                      return l &&
                        l.groupInfo.announcement &&
                        !l.groupInfo.isAdmin &&
                        t.author === w.a
                        ? Object.assign({}, s, { senderSuperpower: !0 })
                        : s;
                    }
                    var c = r.validUntil;
                    if (null != c)
                      return Object.assign({ kept: o, validUntil: c }, s);
                  }
                }
              }
            });
        });
      }
      function j(e, t) {
        return z(
          e,
          t.reduce((e, t) => {
            var n = t.keptInfo;
            if (null == n) return e;
            var r = (0, G.p)(t.id, n.repeatedTimes, null != n.kept);
            return e.push(r), e;
          }, [])
        );
      }
      function $(e, t, n) {
        return (0, s.j)(e, n).then((n) =>
          null == n
            ? []
            : e.msgs
                .where("keptInfo.externalId")
                .anyOf(t)
                .filter((e) => {
                  var t;
                  return (
                    (null == (t = e.keptInfo) ? void 0 : t.author) === w.a &&
                    e.chat === n
                  );
                })
                .toArray()
                .then((e) =>
                  e.reduce((e, t) => {
                    if ("@system" === t.author) return e;
                    var n = t.keptInfo;
                    return (
                      null == n ||
                        e.push({
                          keepInChatMsgId: (0, G.p)(
                            t.id,
                            n.repeatedTimes,
                            null != n.kept
                          ),
                          keepInChatAck: n.ack,
                        }),
                      e
                    );
                  }, [])
                )
        );
      }
      function F(e, t, n, r, u, l) {
        var d = Array.from(t.keys());
        return (0, a.c)([
          (0, s.f)(e, d),
          (0, s.h)(e, n),
          (0, f.getBlocklistWithStores)(e),
        ]).then((d) => {
          var _,
            v = i()(d, 3),
            h = v[0],
            m = v[1],
            g = v[2];
          if (null != m) {
            var y = m.dbChat,
              b = m.dbGroup;
            if (!b || b.groupInfo.isInTheGroup) {
              var O,
                E = "@me" === r,
                I = !1,
                S = [],
                k = [],
                L = [];
              h.forEach((e) => {
                if (e.chat !== n)
                  return (
                    __LOG__(
                      4
                    )`_keepMessagesInTransaction: chat id does not match the message`,
                    void SEND_LOGS("keep-message-wrong-chat")
                  );
                if (null == e.expiration || e.expiration === c.k)
                  return (
                    __LOG__(
                      4
                    )`_keepMessagesInTransaction: tried to keep a non-ephemeral message`,
                    void SEND_LOGS("keep-message-non-ephemeral")
                  );
                if (null != e.viewOnceState)
                  return (
                    __LOG__(
                      4
                    )`_keepMessagesInTransaction: tried to keep a view once message`,
                    void SEND_LOGS("keep-message-view-once")
                  );
                var i = e.author;
                if ("@system" === i)
                  return (
                    __LOG__(
                      4
                    )`_keepMessagesInTransaction: tried to keep a system message`,
                    void SEND_LOGS("keep-message-system")
                  );
                var a = t.get(e.id);
                if (null == a)
                  return (
                    __LOG__(
                      4
                    )`_keepMessagesInTransaction: externalId not provided`,
                    void SEND_LOGS("keep-message-missing-external-id")
                  );
                var s = e.keptInfo;
                if (!s || !H(s, u, l, a))
                  if (null != (null == s ? void 0 : s.kept) && E)
                    __LOG__(
                      2
                    )`_keepMessagesInTransaction: message already kept`;
                  else {
                    if (
                      null != s &&
                      null == s.kept &&
                      (function (e, t, n) {
                        return "@me" === t
                          ? "@me" === e && "@me" !== n
                          : "@me" !== e && e === t && ("@me" === n || t !== n);
                      })(i, s.author, r)
                    )
                      return (
                        __LOG__(
                          3
                        )`_keepMessagesInTransaction: message unkept by author`,
                        void (O = { type: "error", reason: "unkept-by-author" })
                      );
                    if (E) {
                      var d = (0, w.E)(y.jid);
                      if (null != d && g.includes(d))
                        return (
                          __LOG__(
                            3
                          )`_keepMessagesInTransaction: message in a 1-1 chat with a blocked contact`,
                          void (O = {
                            type: "error",
                            reason: "contact-blocked",
                            jid: d,
                          })
                        );
                    }
                    if (
                      null != b &&
                      E &&
                      "@me" !== i &&
                      !b.participantsInfo.participants.includes(i)
                    )
                      return (
                        __LOG__(3)`_keepMessagesInTransaction: author left`,
                        void (O = { type: "error", reason: "author-left" })
                      );
                    var _ =
                      null != (null == s ? void 0 : s.kept)
                        ? s.validUntil
                        : e.validUntil;
                    if (null != _) {
                      if (_ < (0, o.D)())
                        return (
                          __LOG__(
                            4
                          )`_keepMessagesInTransaction: message already expired`,
                          void (O = {
                            type: "error",
                            reason: "message-expired",
                          })
                        );
                      var v = E ? p.a.CLOCK : p.a.RECEIVED;
                      if (null == s) {
                        var h = {
                          kept: e.rowId,
                          validUntil: _,
                          repeatedTimes: 1,
                          author: r,
                          ts: u,
                          senderTimestampMs: l,
                          externalId: a,
                          ack: v,
                        };
                        (e.keptInfo = h), k.push((0, G.p)(e.id, 1, !0));
                      } else {
                        var m = s.repeatedTimes + 1,
                          M = {
                            kept: e.rowId,
                            validUntil: _,
                            repeatedTimes: m,
                            author: r,
                            ts: u,
                            senderTimestampMs: l,
                            externalId: a,
                            ack: v,
                          };
                        (e.keptInfo = M),
                          k.push((0, G.p)(e.id, m, !0)),
                          s.author === w.a && L.push((0, G.p)(e.id, m - 1, !1));
                      }
                      delete e.validUntil,
                        I || (I = (0, f.maybeMutateChatMsgPreview)(y, e)),
                        S.push(e);
                    } else
                      __LOG__(
                        4
                      )`_keepMessagesInTransaction: ephemeral message without validUntil`;
                  }
              });
              var M = S.length;
              if (0 === S.length)
                return (
                  __LOG__(
                    2
                  )`_keepMessagesInTransaction: keepable messages not found`,
                  O
                );
              var A = (null != (_ = y.keptMsgCount) ? _ : 0) + M;
              if (A <= 0)
                return (
                  __LOG__(
                    4
                  )`_keepMessagesInTransaction: keptMsgCount below zero`,
                  void SEND_LOGS("keep-message-count-too-low")
                );
              y.keptMsgCount = A;
              var P = e.msgs.bulkPut(S),
                T = (0, s.D)(e, y),
                N = E ? q(e, y.jid, k, u) : (0, a.e)(),
                C = z(e, L);
              return (0, a.c)([N, T, P, C]).then((e) => {
                var t = i()(e, 1)[0];
                return {
                  type: "success",
                  result: [
                    S,
                    y,
                    b,
                    t && { keepInChatMsgIds: k, outgoingTo: t },
                    void 0,
                  ],
                };
              });
            }
            __LOG__(3)`_keepMessagesInTransaction: no longer in group`;
          } else __LOG__(2)`_keepMessagesInTransaction chat not found`;
        });
      }
      function B(e, t, n, r, o, u) {
        var l = Array.from(t.keys());
        return (0, a.c)([
          (0, s.f)(e, l),
          (0, s.h)(e, n),
          (0, f.getBlocklistWithStores)(e),
        ]).then((l) => {
          var d,
            _ = i()(l, 3),
            v = _[0],
            h = _[1],
            m = _[2];
          if (null != h) {
            var g = h.dbChat,
              y = h.dbGroup;
            if (!y || y.groupInfo.isInTheGroup) {
              var b,
                O = "@me" === r,
                E = !1,
                I = [],
                S = [],
                L = [];
              v.forEach((e) => {
                if (e.chat !== n)
                  return (
                    __LOG__(
                      4
                    )`_unkeepMessagesInTransaction: chat id does not match the message`,
                    void SEND_LOGS("unkeep-message-wrong-chat")
                  );
                if (null == e.expiration || e.expiration === c.k)
                  return (
                    __LOG__(
                      4
                    )`_unkeepMessagesInTransaction: tried to unkeep a non-ephemeral message`,
                    void SEND_LOGS("unkeep-message-non-ephemeral")
                  );
                var i = e.keptInfo;
                if (null != i && null != i.kept) {
                  if (null == i.validUntil)
                    return (
                      __LOG__(
                        4
                      )`_unkeepMessagesInTransaction: missing original validUntil`,
                      void SEND_LOGS("unkeep-message-missing-expiration")
                    );
                  if ((i.validUntil, !O || (0, k.a)(i.validUntil))) {
                    var a = t.get(e.id);
                    if (null == a)
                      return (
                        __LOG__(
                          4
                        )`_unkeepMessagesInTransaction: externalId not provided`,
                        void SEND_LOGS("unkeep-message-missing-external-id")
                      );
                    if (O) {
                      var s = (0, w.E)(g.jid);
                      if (null != s && m.includes(s))
                        return (
                          __LOG__(
                            3
                          )`_unkeepMessagesInTransaction: message in a 1-1 chat with a blocked contact`,
                          void (b = {
                            type: "error",
                            reason: "contact-blocked",
                            jid: s,
                          })
                        );
                    }
                    var l = e.author;
                    if (
                      null != y &&
                      O &&
                      "@me" !== l &&
                      !y.participantsInfo.participants.includes(l)
                    )
                      return (
                        __LOG__(3)`_unkeepMessagesInTransaction: author left`,
                        void (b = { type: "error", reason: "author-left" })
                      );
                    if (!H(i, o, u, a)) {
                      e.validUntil = i.validUntil;
                      var d = i.repeatedTimes,
                        _ = {
                          author: r,
                          ts: o,
                          senderTimestampMs: u,
                          repeatedTimes: d,
                          externalId: a,
                          ack: O ? p.a.CLOCK : p.a.RECEIVED,
                        };
                      (e.keptInfo = _),
                        S.push((0, G.p)(e.id, d, !1)),
                        i.author === w.a && L.push((0, G.p)(e.id, d, !0)),
                        E || (E = (0, f.maybeMutateChatMsgPreview)(g, e)),
                        I.push(e);
                    }
                  } else
                    __LOG__(
                      2
                    )`_unkeepMessagesInTransaction: message can no longer be unkept`;
                } else
                  __LOG__(
                    2
                  )`_unkeepMessagesInTransaction: message already unkept`;
              });
              var M = I.length;
              if (0 === M)
                return (
                  __LOG__(
                    2
                  )`_unkeepMessagesInTransaction: unkeepable messages not found`,
                  b
                );
              var A = (null != (d = g.keptMsgCount) ? d : 0) - M;
              if (A < 0)
                return (
                  __LOG__(
                    4
                  )`_unkeepMessagesInTransaction: keptMsgCount below zero`,
                  void SEND_LOGS("unkeep-message-count-too-low")
                );
              0 === A ? delete g.keptMsgCount : (g.keptMsgCount = A);
              var P = e.msgs.bulkPut(I),
                T = (0, s.D)(e, g),
                N = O ? q(e, g.jid, S, o) : (0, a.e)(),
                C = z(e, L);
              return (0, a.c)([N, T, P, C]).then((e) => {
                var t = i()(e, 1)[0],
                  n = I.reduce((e, t) => {
                    var n = t.validUntil;
                    return null == n ? e : null == e ? n : e < n ? e : n;
                  }, null);
                return {
                  type: "success",
                  result: [
                    I,
                    g,
                    y,
                    t && { keepInChatMsgIds: S, outgoingTo: t },
                    null != n
                      ? { result: "ephemeral_timestamp_update", ts: n }
                      : null,
                  ],
                };
              });
            }
            __LOG__(3)`_unkeepMessagesInTransaction: no longer in group`;
          } else __LOG__(2)`_unkeepMessagesInTransaction chat not found`;
        });
      }
      function V(e, t) {
        var n = t.content,
          r = t.msgRef,
          i = n.chatJid,
          a = r.msgExternalId,
          o = r.msgAuthor;
        return (0, s.s)(e, a, o, i).then((t) => {
          if (!t.revoke) {
            __LOG__(
              2
            )`_maybeStoreOrphanKeepInChat: storing new orphan keep in chat`;
            var r = {
              type: "keep-in-chat",
              ts: n.ts,
              chatJid: i,
              content: n,
              externalId: a,
              author: o,
            };
            return e.orphanedStanzas.add(r).then(() => {});
          }
          __LOG__(
            2
          )`_maybeStoreOrphanKeepInChat: msg is revoked, ignoring orphaned keep in chat`;
        });
      }
      function K(e, t, n, r) {
        var i = (0, h.a)(n, r),
          a = t.map((t) => ({
            result: e,
            dbMsg: t,
            msg: (0, v.c)(t),
            chat: i,
            updatedContact: null,
            shouldDownloadMmsThumb: !1,
            outgoingTo: null,
          }));
        (0, _.d)(a);
      }
      function H(e, t, n, r) {
        var i = e.ts;
        if (i > t)
          return (
            __LOG__(2)`_shouldSkipMessage: request too old (server timestamp)`,
            !0
          );
        if (i === t) {
          var a = e.senderTimestampMs;
          if ((0, b.b)(a, n))
            return (
              __LOG__(
                2
              )`_shouldSkipMessage: request too old (sender timestamp)`,
              !0
            );
          if (a === n) {
            var o = e.externalId;
            if (o < r)
              return (
                __LOG__(2)`_shouldSkipMessage: request too old (tie-breaker)`,
                !0
              );
            if (o === r)
              return __LOG__(2)`_shouldSkipMessage: dropping identical`, !0;
          }
        }
        return !1;
      }
      function q(e, t, n, r) {
        return (0, s.u)(e, t).then((i) => {
          var a = { to: i, identityIds: new Map() },
            o = n.map((e) => (0, M.k)(e, t, r, a));
          return (0, M.d)(e, o).then(() => a);
        });
      }
      function z(e, t) {
        return 0 === t.length ? (0, a.e)() : (0, M.e)(e, t);
      }
    },
    function (e, t, n) {
      n.d(t, "o", function () {
        return S;
      }),
        n.d(t, "m", function () {
          return k;
        }),
        n.d(t, "l", function () {
          return L;
        }),
        n.d(t, "i", function () {
          return T;
        }),
        n.d(t, "c", function () {
          return N;
        }),
        n.d(t, "d", function () {
          return C;
        }),
        n.d(t, "j", function () {
          return R;
        }),
        n.d(t, "e", function () {
          return x;
        }),
        n.d(t, "k", function () {
          return D;
        }),
        n.d(t, "h", function () {
          return U;
        }),
        n.d(t, "b", function () {
          return j;
        }),
        n.d(t, "f", function () {
          return $;
        }),
        n.d(t, "g", function () {
          return F;
        }),
        n.d(t, "p", function () {
          return B;
        }),
        n.d(t, "q", function () {
          return V;
        }),
        n.d(t, "n", function () {
          return q;
        }),
        n.d(t, "a", function () {
          return z;
        });
      var r = n(8),
        i = n.n(r),
        a = n(10),
        o = n(2),
        u = n(7),
        s = n(6),
        l = n(11),
        c = n(15),
        d = n(152),
        f = n(20),
        _ = n(5),
        p = n(58),
        v = n(65),
        h = n(16),
        m = n(17),
        g = n(124),
        y = n(9),
        b = n(52),
        w = n(54),
        O = n(285),
        E = {
          CAGPromote: function (e, t, n) {
            var r,
              i = e.participantsInfo,
              a = i.admins,
              l = i.participants,
              _ = i.knowsSenderKey,
              p = f.m(t.participants),
              v = f.n(p, a),
              h = (0, u.e)(s.t.get()),
              g = [];
            if (
              (n.forEach((e) => {
                _.has(e) || e === h || g.push(e);
              }),
              0 === v.length && 0 === g.length)
            )
              return null;
            ae(a)
              ? (r = _)
              : ((r = new Map(_)), g.forEach((e) => r.set(e, !1)));
            var y = f.j(a, v),
              b = f.j(l, v),
              w = Object.assign({}, e.participantsInfo, {
                knowsSenderKey: r,
                participants: b,
                admins: y,
              });
            return {
              groupInfo: Object.assign({}, e.groupInfo, {
                isInTheGroup: (0, d.b)(w),
                isAdmin: (0, d.a)(w),
              }),
              participantsInfo: w,
              msg: (0, m.a)("parent_group_view_enabled")
                ? {
                    externalId: "/cag_promote/" + t.id,
                    ts: t.ts,
                    author: t.author,
                    ack: c.a.RECEIVED,
                    type: o.f.GROUP_NOTIFICATION,
                    subtype: "cag_promote",
                    involvesMe: ae(p),
                    participants: b.filter((e) => e !== s.t.get()),
                    altIndex: "",
                  }
                : null,
            };
          },
          CAGDemote: function (e, t) {
            var n = e.participantsInfo,
              r = n.admins,
              i = n.participants,
              a = n.knowsSenderKey,
              u = n.superadmins,
              l = f.h(f.m(t.participants), i);
            if (0 === l.length) return null;
            var _ = f.n(r, l),
              p = f.n(u, l),
              v = ae(_),
              h = ae(l),
              g = i;
            if (h) {
              var b = (0, f.c)(new Set([s.t.get()]));
              g = f.j(b, _);
            } else v || (g = f.n(i, l));
            var w = a,
              O = new Set(g);
            w.forEach((e, t) => {
              var n = (0, y.u)(t);
              O.has(n) || w.delete(t);
            });
            var E = Object.assign({}, e.participantsInfo, {
              superadmins: p,
              admins: _,
              participants: g,
              invitations: h ? [] : e.participantsInfo.invitations,
              knowsSenderKey: w,
              rotateSenderKey: !0,
            });
            return {
              groupInfo: Object.assign({}, e.groupInfo, {
                isAdmin: v,
                isInTheGroup: (0, d.b)(E),
              }),
              participantsInfo: E,
              msg: (0, m.a)("parent_group_view_enabled")
                ? {
                    externalId: "/cag_demote/" + t.id,
                    ts: t.ts,
                    author: t.author,
                    ack: c.a.RECEIVED,
                    type: o.f.GROUP_NOTIFICATION,
                    subtype: "cag_demote",
                    involvesMe: h,
                    participants: g.filter((e) => e !== s.t.get()),
                    altIndex: "",
                  }
                : null,
            };
          },
        },
        I = Object.assign(
          {
            add: function (e, t, n) {
              var r = e.participantsInfo.participants,
                i = e.participantsInfo.knowsSenderKey,
                a = f.n(f.m(t.participants), r),
                l = (0, u.e)(s.t.get()),
                _ = [];
              if (
                (n.forEach((e) => {
                  i.has(e) || e === l || _.push(e);
                }),
                0 === a.length && 0 === _.length)
              )
                return null;
              var p = f.j(r, a),
                v = ie(a),
                h = v.involvesMe,
                m = v.others,
                g = new Map(i);
              _.forEach((e) => g.set(e, !1));
              var y = "add";
              if (t.reason)
                switch (t.reason) {
                  case "invite":
                    (h ? 0 === m.length : 1 === m.length) && (y = "invite");
                    break;
                  case "accept":
                    t.author === o.b && (y = "accept");
                    break;
                  default:
                    t.reason;
                }
              var b = Object.assign({}, e.participantsInfo, {
                participants: p,
                knowsSenderKey: g,
              });
              return (
                (function (e, t) {
                  var n = e.pastParticipants;
                  n &&
                    (t.forEach((e) => n.delete((0, w.k)(e))),
                    0 === n.size && delete e.pastParticipants);
                })(b, a),
                {
                  groupInfo: Object.assign({}, e.groupInfo, {
                    isInTheGroup: (0, d.b)(b),
                  }),
                  participantsInfo: b,
                  msg: {
                    externalId: "/add/" + t.id,
                    ts: t.ts,
                    author: t.author,
                    ack: c.a.RECEIVED,
                    type: o.f.GROUP_NOTIFICATION,
                    subtype: y,
                    involvesMe: h,
                    participants: m,
                    altIndex: "",
                  },
                }
              );
            },
            remove: M,
            promote: function (e, t) {
              var n = e.participantsInfo.admins,
                r = f.h(f.m(t.participants), e.participantsInfo.participants),
                i = f.n(r, n);
              if (0 === i.length) return null;
              var a = f.j(i, n),
                u = ie(i),
                s = u.involvesMe,
                l = u.others,
                _ = Object.assign({}, e.participantsInfo, { admins: a });
              return {
                groupInfo: Object.assign({}, e.groupInfo, {
                  isAdmin: (0, d.a)(_),
                }),
                participantsInfo: _,
                msg: s
                  ? {
                      externalId: "/promote/" + t.id,
                      ts: t.ts,
                      author: t.author,
                      ack: c.a.RECEIVED,
                      type: o.f.GROUP_NOTIFICATION,
                      subtype: "promote",
                      involvesMe: s,
                      participants: l,
                      altIndex: "",
                    }
                  : null,
              };
            },
            demote: function (e, t) {
              var n = e.participantsInfo.admins,
                r = f.h(f.m(t.participants), n);
              if (0 === r.length) return null;
              var i = f.n(n, r),
                a = ie(r),
                u = a.involvesMe,
                s = a.others,
                l = Object.assign({}, e.participantsInfo, {
                  admins: i,
                  invitations: u ? [] : e.participantsInfo.invitations,
                });
              return {
                groupInfo: Object.assign({}, e.groupInfo, {
                  isAdmin: (0, d.a)(l),
                }),
                participantsInfo: l,
                msg: u
                  ? {
                      externalId: "/demote/" + t.id,
                      ts: t.ts,
                      author: t.author,
                      ack: c.a.RECEIVED,
                      type: o.f.GROUP_NOTIFICATION,
                      subtype: "demote",
                      involvesMe: u,
                      participants: s,
                      altIndex: "",
                    }
                  : null,
              };
            },
            delete: function (e, t, n) {
              var r = e;
              if ("parent" !== e.groupInfo.groupType && !(r = M(e, t, n)))
                return null;
              var i,
                a = "delete";
              return (
                null != t.deleteReason
                  ? ((r.groupInfo.deleteReason = t.deleteReason),
                    "integrity_delete_parent" === t.deleteReason &&
                      (a = "deactivate"))
                  : r.groupInfo.support && (a = "closed"),
                (i = e.groupInfo.isCAG
                  ? "/deletion/cag/" + t.id
                  : "/deletion/" + t.id),
                Object.assign({}, r, {
                  msg: {
                    externalId: i,
                    ts: t.ts,
                    author: o.c,
                    ack: c.a.RECEIVED,
                    type: o.f.GROUP_NOTIFICATION,
                    subtype: a,
                    altIndex: "",
                  },
                })
              );
            },
          },
          E
        );
      function S(e, t, n) {
        var r =
            n.author === s.t.get() ? Object.assign({}, n, { author: o.b }) : n,
          i = ["groups", "groupParticipantsInfo", "msgs", "chats", "contacts"];
        return (0, a.c)(
          "runGeneralGroupAction",
          (n) => n.table.transact("rw", i, () => L(n, e, t, r)),
          (e, n) =>
            (function (e, t, n, r) {
              var i = r.action,
                a = r.results;
              if (null != a) {
                var o = a.filter(Boolean);
                0 !== o.length &&
                  (o.forEach((e) => {
                    "updated_chat" === e.result ? (0, v.e)(e) : (0, v.c)(e);
                  }),
                  k(e, i, t, n.participants));
              }
            })(n, t, r, e)
        );
      }
      function k(e, t, n, r) {
        ("add" !== t && "CAGPromote" !== t) ||
          e.fireAndForget(h.e.syncDeviceList((0, f.m)(r))),
          "CAGPromote" === t && ae(r) && e.fireAndForget(h.e.queryGroup(n));
      }
      function L(e, t, n, r) {
        var i;
        return (
          __LOG__(
            2
          )`maybeRunGroupWithCustomActionInTransaction for ${t} on jid`,
          e.table
            .getGroupInfoWithParticipantsInTransaction(n)
            .then((a) =>
              a
                ? (a.groupInfo.isCAG &&
                    ("promote" === t
                      ? (i = "CAGPromote")
                      : "demote" === t && (i = "CAGDemote")),
                  (function (e, t, n, r, i) {
                    switch (t) {
                      case "add":
                      case "remove":
                      case "delete":
                      case "CAGPromote":
                        return e.table
                          .getDevicesInTransaction(r.participants)
                          .then((a) => {
                            if (
                              "delete" === t &&
                              "parent" === i.groupInfo.groupType
                            )
                              return (function (e, t, n, r, i) {
                                var a = I.delete(i, n, r);
                                return e.table
                                  .getLinkedGroupsWithParticipants(t)
                                  .then((u) => {
                                    var s = u.find((e) => {
                                        var n = e.groupInfo;
                                        return (
                                          "parent" !== n.groupType &&
                                          n.isCAG &&
                                          n.linkedParent === t
                                        );
                                      }),
                                      l = null;
                                    null != s && (l = I.delete(s, n, r));
                                    var c = u.filter((e) => {
                                        var n = e.groupInfo;
                                        return (
                                          "parent" !== n.groupType &&
                                          !n.isCAG &&
                                          n.linkedParent === t
                                        );
                                      }),
                                      d = [];
                                    return (
                                      c.forEach((t, r) => {
                                        d.push(
                                          P(e, t, Q, {
                                            id: n.id,
                                            ts: n.ts,
                                            unlinkType: "parent_group",
                                            group: {
                                              jid: i.groupInfo.jid,
                                              subject: i.groupInfo.title,
                                            },
                                            author: o.c,
                                            index: r,
                                          }).then((e) =>
                                            null == e
                                              ? void 0
                                              : e.msgWrittenResult
                                          )
                                        );
                                      }),
                                      (0, _.c)([
                                        null == a ? (0, _.e)() : G(e, a),
                                        null != l ? G(e, l) : (0, _.e)(),
                                        ...d,
                                      ])
                                    );
                                  });
                              })(e, n, r, a, i);
                            var u = I[t](i, r, a);
                            return u
                              ? G(e, u).then((e) => [e])
                              : (__LOG__(
                                  2
                                )`_runGroupActionInTransaction ${t} had no change on jid:`,
                                []);
                          });
                      default:
                        var a = I[t](i, r);
                        return a
                          ? G(e, a).then((e) => [e])
                          : (__LOG__(
                              2
                            )`_runGroupActionInTransaction ${t} had no change on jid:`,
                            (0, _.e)([]));
                    }
                  })(e, i || t, n, r, a))
                : (__LOG__(
                    2
                  )`maybeRunGroupWithCustomActionInTransaction for ${t} on non-existent jid`,
                  null)
            )
            .then((e) => ({ results: e, action: i || t }))
        );
      }
      function G(e, t) {
        var n = t.groupInfo,
          r = t.participantsInfo,
          a = t.msg,
          o = (0, _.c)([
            e.table.setGroupInfo(n),
            e.table.setParticipantsInfo(r),
          ]);
        return "parent" === n.groupType
          ? (0, _.e)()
          : a
          ? (0, _.c)([
              e.addGroupSystemMsgWithResult(n.chatId, a, {
                groupInfo: n,
                participantsInfo: r,
              }),
              o,
            ]).then((e) => i()(e, 1)[0])
          : o.then(() =>
              e.table
                .getChatInTransaction(n.chatId)
                .then(
                  (e) =>
                    e && {
                      result: "updated_chat",
                      chat: (0, p.a)(e, { groupInfo: n, participantsInfo: r }),
                    }
                )
            );
      }
      function M(e, t, n) {
        var r = e.participantsInfo.participants,
          i = e.participantsInfo.knowsSenderKey,
          a = f.h(f.m(t.participants), r),
          u = [];
        if (
          (n.forEach((e) => {
            i.has(e) && u.push(e);
          }),
          0 === a.length && 0 === u.length)
        )
          return null;
        var s = f.n(e.participantsInfo.superadmins, a),
          l = f.n(e.participantsInfo.admins, a),
          _ = f.n(r, a),
          p = ie(a),
          v = p.involvesMe,
          h = p.others,
          g = new Map(i);
        u.forEach((e) => g.delete(e));
        var y = Object.assign({}, e.participantsInfo, {
            superadmins: s,
            admins: l,
            participants: _,
            invitations: v ? [] : e.participantsInfo.invitations,
            knowsSenderKey: g,
            rotateSenderKey: !0,
          }),
          O = e.groupInfo.isInTheGroup,
          E = (0, d.b)(y),
          I = Object.assign({}, e.groupInfo, {
            isAdmin: (0, d.a)(y),
            isInTheGroup: E,
          });
        O && !E && (I.leftTs = t.ts);
        var S = (function (e, t, n) {
            return e === o.b
              ? t && 0 === n.length
              : !t && 1 === n.length && n[0] === e;
          })(t.author, v, h)
            ? "leave"
            : "remove",
          k =
            I.isAdmin || "remove" === S || (0, b.n)()
              ? {
                  externalId: "/delete/" + t.id,
                  ts: t.ts,
                  author: t.author,
                  ack: c.a.RECEIVED,
                  type: o.f.GROUP_NOTIFICATION,
                  subtype: S,
                  involvesMe: v,
                  participants: h,
                  altIndex: "",
                }
              : null;
        return (
          (function (e, t, n, r) {
            var i;
            if ((0, m.a)("silent_group_exit_db") && 0 !== t.length) {
              var a = null != (i = e.pastParticipants) ? i : new Map();
              t.forEach((e) => {
                var t = (0, w.k)(e);
                a.set(t, { exitTime: r, reason: n });
              }),
                (e.pastParticipants = a);
            }
          })(y, a, S, t.ts),
          { groupInfo: I, participantsInfo: y, msg: k }
        );
      }
      function A(e, t, n, r) {
        return e.table
          .transact(
            "rw",
            ["groups", "groupParticipantsInfo", "msgs", "chats"],
            () =>
              e.table
                .getGroupInfoWithParticipantsInTransaction(t)
                .then((i) =>
                  i
                    ? P(e, i, n, r)
                    : (__LOG__(2)`groupChanged for non existent group ${t}`,
                      null)
                )
          )
          .then(
            (e) => (
              null != (null == e ? void 0 : e.notify) && (0, v.e)(e.notify),
              null == e ? void 0 : e.msgWrittenResult
            )
          );
      }
      function P(e, t, n, r) {
        var a = n(t, r);
        if (!a) return (0, _.e)();
        var o = a.groupInfo,
          u = a.participantsInfo,
          s = a.msg,
          l = t,
          c = [];
        o && ((l.groupInfo = o), c.push(e.table.setGroupInfo(o))),
          u &&
            ((l.participantsInfo = u), c.push(e.table.setParticipantsInfo(u)));
        var d = t.groupInfo.chatId,
          f =
            null != d && s
              ? e.addGroupSystemMsgWithResult(d, s, l)
              : (0, _.e)(),
          v = null != d && s ? e.table.getChatInTransaction(d) : (0, _.e)();
        return (0, _.c)([f, ...c]).then((e) => {
          var n = i()(e, 1)[0];
          return a.notifyChat
            ? v.then((e) => {
                var r = null;
                return (
                  null != e &&
                    (r = {
                      result: "updated_chat",
                      chat: (0, p.a)(e, {
                        groupInfo: o || t.groupInfo,
                        participantsInfo: u || t.participantsInfo,
                      }),
                    }),
                  { msgWrittenResult: n, notify: r }
                );
              })
            : { msgWrittenResult: n };
        });
      }
      function T(e, t) {
        return (0, a.c)("groupMemberModified", (n) => A(n, e, W, t), v.c);
      }
      function N(e, t) {
        return (0, a.c)("groupCommunityLink", (n) => A(n, e, Y, t), v.c);
      }
      function C(e, t) {
        return (0, a.c)("groupCommunityUnlink", (n) => A(n, e, Q, t), v.c);
      }
      function R(e, t) {
        return (0, a.c)("groupSubjectChanged", (n) => A(n, e, J, t), v.c);
      }
      function x(e, t) {
        return (0, a.c)(
          "groupDescriptionChanged",
          (n) => A(n, e, Z, t),
          v.c
        ).then(() => {});
      }
      function D(e, t) {
        return (0, a.c)(
          "groupSuspendStatusChanged",
          (n) => A(n, e, ee, t),
          v.c
        );
      }
      function U(e, t) {
        return (0, a.c)("groupLockedChanged", (n) => A(n, e, X, t), v.c);
      }
      function j(e, t) {
        return (0, a.c)("groupAnnouncementChanged", (n) => A(n, e, te, t), v.c);
      }
      function $(e, t) {
        return (0, a.c)(
          "groupEphemeralSettingChange",
          (n) => A(n, e, ne, t),
          v.c
        );
      }
      function F(e, t) {
        return (0, a.c)("groupInviteCodeChanged", (n) => A(n, e, re, t), v.c);
      }
      function B(e, t) {
        return (0, a.c)("setGroupGrowthLocked", (n) => A(n, e, O.a, t), v.c);
      }
      function V(e, t) {
        return (0, a.c)("setGroupGrowthUnlocked", (n) => A(n, e, O.b, t), v.c);
      }
      function K(e, t) {
        var n = e.participantsInfo,
          r = n.admins,
          i = n.participants,
          a = f.m(t.promotedParticipants),
          o = f.n(a, r);
        if (0 === o.length) return null;
        var u = f.j(r, o),
          s = f.j(i, o);
        if ("parent" === e.groupInfo.groupType) {
          e.groupInfo;
          var l = Object.assign({}, e.participantsInfo, {
            participants: s,
            admins: u,
          });
          return {
            groupInfo: Object.assign({}, e.groupInfo, { isAdmin: (0, d.a)(l) }),
            participantsInfo: l,
            msg: null,
          };
        }
      }
      function H(e, t) {
        var n = e.participantsInfo,
          r = n.admins,
          i = n.participants,
          a = n.superadmins,
          o = f.h(f.m(t.demotedParticipants), i);
        if (0 === o.length) return null;
        var u = f.n(r, o),
          l = f.n(a, o),
          c = ae(u),
          _ = i;
        if (ae(o)) {
          var p = (0, f.c)(new Set([s.t.get()]));
          _ = f.j(p, u);
        } else c || (_ = f.n(i, o));
        if ("parent" === e.groupInfo.groupType) {
          e.groupInfo;
          var v = Object.assign({}, e.participantsInfo, {
            superadmins: l,
            admins: u,
            participants: _,
          });
          return {
            groupInfo: Object.assign({}, e.groupInfo, {
              isAdmin: c,
              isInTheGroup: (0, d.b)(v),
            }),
            participantsInfo: v,
            msg: null,
          };
        }
      }
      function q(e, t) {
        return (0, a.c)("promoteInParentGroup", (n) => A(n, e, K, t), v.c);
      }
      function z(e, t) {
        return (0, a.c)("demoteInParentGroup", (n) => A(n, e, H, t), v.c);
      }
      function W(e, t) {
        var n = e.participantsInfo.participants,
          r = f.h(f.l(t.changedFrom), n),
          i = f.n(f.l(t.changedTo), n);
        if (0 === r.length && 0 === i.length) return null;
        var a = f.j(i, f.n(n, r)),
          u = f.o(e.participantsInfo.admins, t.changedFrom, t.changedTo),
          s = f.o(e.participantsInfo.superadmins, t.changedFrom, t.changedTo);
        return {
          participantsInfo: Object.assign({}, e.participantsInfo, {
            superadmins: s,
            admins: u,
            participants: a,
            knowsSenderKey: oe(a),
            rotateSenderKey: !0,
          }),
          groupInfo: null,
          msg: {
            externalId: "/modify/" + t.id,
            ts: t.ts,
            author: t.changedTo,
            participants: [t.changedFrom],
            ack: c.a.RECEIVED,
            type: o.f.GROUP_NOTIFICATION,
            subtype: "modify",
            altIndex: "",
          },
        };
      }
      function J(e, t) {
        return t.subject === e.groupInfo.title ||
          (null != e.groupInfo.titleTs && e.groupInfo.titleTs > t.subjectTs)
          ? null
          : {
              groupInfo: (0, l.j)(e.groupInfo, {
                title: t.subject,
                titleTs: t.subjectTs,
              }),
              participantsInfo: null,
              msg: {
                externalId: "/subject/" + t.id,
                ts: t.ts,
                author: t.author,
                ack: c.a.RECEIVED,
                type: o.f.GROUP_NOTIFICATION,
                title: t.subject,
                subtype: "subject",
                altIndex: "",
              },
            };
      }
      function Y(e, t) {
        return "parent" === e.groupInfo.groupType
          ? null
          : {
              groupInfo:
                "parent_group" === t.linkType
                  ? (0, l.j)(e.groupInfo, {
                      linkedParent: t.group.jid,
                      groupType: void 0,
                    })
                  : e.groupInfo,
              participantsInfo: null,
              msg: (0, m.a)("parent_group_view_enabled")
                ? {
                    externalId: "/link/" + t.id,
                    ts: t.ts,
                    author: t.author,
                    subject: t.group.subject,
                    ack: c.a.RECEIVED,
                    type: o.f.GROUP_NOTIFICATION,
                    subtype:
                      "parent_group" === t.linkType
                        ? "link_subgroup"
                        : "link_cag",
                    altIndex: "",
                  }
                : null,
            };
      }
      function Q(e, t) {
        return "parent" === e.groupInfo.groupType
          ? null
          : ((n =
              null != t.index
                ? `/unlink/${t.id}/${t.index}`
                : "/unlink/" + t.id),
            {
              groupInfo:
                "parent_group" === t.unlinkType
                  ? (0, l.j)(e.groupInfo, {
                      linkedParent: void 0,
                      isCAG: void 0,
                    })
                  : e.groupInfo,
              participantsInfo: null,
              msg: (0, m.a)("parent_group_view_enabled")
                ? {
                    externalId: n,
                    ts: t.ts,
                    author: t.author,
                    subject: t.group.subject,
                    ack: c.a.RECEIVED,
                    type: o.f.GROUP_NOTIFICATION,
                    subtype:
                      "parent_group" === t.unlinkType
                        ? "unlink_subgroup"
                        : "unlink_cag",
                    altIndex: "",
                  }
                : null,
            });
        var n;
      }
      function Z(e, t) {
        if (
          (t.deleted && t.descriptionId !== e.groupInfo.descriptionId) ||
          (!t.deleted && t.descriptionId === e.groupInfo.descriptionId)
        )
          return null;
        var n = t.deleted ? "description_remove" : "description";
        return {
          groupInfo: (0, l.j)(e.groupInfo, {
            description: t.description,
            descriptionId: t.deleted ? null : t.descriptionId,
          }),
          participantsInfo: null,
          msg: {
            externalId: "/description/" + t.id,
            ts: t.ts,
            author: t.author,
            ack: c.a.RECEIVED,
            type: o.f.GROUP_NOTIFICATION,
            subtype: n,
            altIndex: "",
          },
        };
      }
      function X(e, t) {
        if (t.locked === e.groupInfo.locked) return null;
        var n = t.locked ? "locked" : "unlocked";
        return {
          groupInfo: (0, l.j)(e.groupInfo, { locked: t.locked }),
          participantsInfo: null,
          msg: {
            externalId: "/locked/" + t.id,
            ts: t.ts,
            author: t.author,
            ack: c.a.RECEIVED,
            type: o.f.GROUP_NOTIFICATION,
            subtype: n,
            altIndex: "",
          },
        };
      }
      function ee(e, t) {
        if (t.suspended === e.groupInfo.suspended) return null;
        var n = (0, l.v)(e.groupInfo);
        return (
          t.suspended ? (n.suspended = !0) : delete n.suspended,
          { groupInfo: n, participantsInfo: null, msg: null, notifyChat: !0 }
        );
      }
      function te(e, t) {
        if (t.announcement === e.groupInfo.announcement) return null;
        var n = t.announcement ? "announcement" : "not_announcement";
        return {
          groupInfo: (0, l.j)(e.groupInfo, { announcement: t.announcement }),
          participantsInfo: null,
          msg: {
            externalId: "/announcement/" + t.id,
            ts: t.ts,
            author: t.author,
            ack: c.a.RECEIVED,
            type: o.f.GROUP_NOTIFICATION,
            subtype: n,
            altIndex: "",
          },
        };
      }
      function ne(e, t) {
        if (
          e.groupInfo.expiration === t.expiration ||
          (void 0 === e.groupInfo.expiration && null == t.expiration)
        )
          return null;
        var n = {
          externalId: "/ephemeral/" + t.id,
          ts: t.ts,
          author: t.author,
          ack: c.a.RECEIVED,
          type: o.f.GROUP_NOTIFICATION,
          subtype: "ephemeral",
          expiration: t.expiration,
          altIndex: "",
        };
        return (
          (0, g.b)(e.groupInfo.expiration, t.expiration) && (n.updated = !0),
          {
            groupInfo: Object.assign({}, e.groupInfo, {
              expiration: t.expiration,
            }),
            participantsInfo: null,
            msg: n,
          }
        );
      }
      function re(e, t) {
        return {
          groupInfo: e.groupInfo,
          participantsInfo: null,
          msg: {
            externalId: "/revoke_invite/" + t.id,
            ts: t.ts,
            author: t.author,
            ack: c.a.RECEIVED,
            type: o.f.GROUP_NOTIFICATION,
            subtype: "revoke_invite",
            altIndex: "",
          },
        };
      }
      function ie(e) {
        var t = s.t.get(),
          n = e.filter((e) => e !== t);
        return { involvesMe: e.length !== n.length, others: n };
      }
      function ae(e) {
        var t = s.t.get();
        return e.includes(t);
      }
      function oe(e) {
        var t = s.t.get(),
          n = new Map();
        return (
          e.forEach((e) => {
            e !== t && n.set((0, u.e)(e), !1);
          }),
          n
        );
      }
    },
    function (e, t, n) {
      n.d(t, "g", function () {
        return S;
      }),
        n.d(t, "f", function () {
          return k;
        }),
        n.d(t, "d", function () {
          return L;
        }),
        n.d(t, "e", function () {
          return G;
        }),
        n.d(t, "h", function () {
          return M;
        }),
        n.d(t, "j", function () {
          return A;
        }),
        n.d(t, "k", function () {
          return P;
        }),
        n.d(t, "a", function () {
          return N;
        }),
        n.d(t, "i", function () {
          return R;
        }),
        n.d(t, "c", function () {
          return D;
        }),
        n.d(t, "b", function () {
          return U;
        });
      var r = n(8),
        i = n.n(r),
        a = n(2),
        o = n(9),
        u = n(32),
        s = n(36),
        l = n(10),
        c = n(12),
        d = (n(135), n(84)),
        f = n(66),
        _ = n(3),
        p = n(5),
        v = n(58),
        h = n(155);
      function m(e) {
        return (function (e) {
          var t = Array.from(e.values());
          if (0 === t.length) return { sortedReactions: [] };
          var n = {
              sortedReactions: t.sort((e, t) => {
                if (e.hasFromMe || t.hasFromMe) return e.hasFromMe ? -1 : 1;
                var n = t.reactions.length - e.reactions.length;
                return 0 !== n ? n : (0, d.b)(e.lastTs, t.lastTs) ? -1 : 1;
              }),
            },
            r = n.sortedReactions[0].hasFromMe;
          return r && (n.reactionFromMe = r), n;
        })(
          (function (e) {
            var t = new Map();
            return (
              e.forEach((e) => {
                var n = (0, h.c)(e.text),
                  r = t.get(n);
                if (r)
                  if (
                    (r.reactions.push({
                      author: e.author,
                      text: e.text,
                      ts: e.senderTimestampMs,
                    }),
                    e.author === o.a)
                  ) {
                    if (null == e.ack) return;
                    t.set(n, {
                      label: e.text,
                      reactions: r.reactions,
                      hasFromMe: { id: e.id, ack: e.ack, text: e.text },
                    });
                  } else
                    !r.hasFromMe &&
                      (0, d.b)(e.senderTimestampMs, r.lastTs) &&
                      ((r.lastTs = e.senderTimestampMs), (r.label = e.text));
                else {
                  var i,
                    a = [
                      {
                        author: e.author,
                        text: e.text,
                        ts: e.senderTimestampMs,
                      },
                    ];
                  if (e.author === o.a) {
                    if (null == e.ack) return;
                    i = {
                      label: e.text,
                      reactions: a,
                      hasFromMe: { id: e.id, ack: e.ack, text: e.text },
                    };
                  } else
                    i = {
                      label: e.text,
                      reactions: a,
                      lastTs: e.senderTimestampMs,
                    };
                  t.set(n, i);
                }
              }),
              t
            );
          })(e)
        );
      }
      var g = n(117),
        y = n(46),
        b = n(62),
        w = n(217),
        O = n(52);
      function E(e) {
        var t,
          n = (0, o.n)(e.author);
        return null == n
          ? { fromMe: !0, ack: null != (t = e.ack) ? t : 2 }
          : { fromMe: !1, author: n };
      }
      var I = n(237);
      function S(e, t, n) {
        return e.reactions
          .where("externalId")
          .anyOf(t)
          .filter((e) => e.author === o.a && e.chatJid === n)
          .toArray()
          .then((e) => e.map((e) => Object.assign({}, e, { author: o.a })));
      }
      function k(e) {
        return (0, l.f)("getMsgReactions", (t) =>
          (0, y.b)(t, (t) =>
            (function (e, t) {
              return j(e, t).then((e) => m(e).sortedReactions);
            })(t, e)
          )
        );
      }
      function L(e, t) {
        var n = (0, u.G)(t);
        return e.reactions.get(n).then((e) => {
          if (e && e.author === o.a)
            return Object.assign({}, e, { author: o.a });
        });
      }
      function G(e, t) {
        return L(e, t).then((t) => {
          if (t && t.author === o.a)
            return (0, s.r)(e, t.msgId).then((e) => {
              if (e && "@system" !== e.author) {
                var n = t.ack;
                if (null != n) {
                  var r = e.author;
                  return Object.assign({}, t, {
                    ack: n,
                    type: a.f.REACTION,
                    author: o.a,
                    id: (0, u.t)(t.id),
                    msgRef: { msgAuthor: r, msgExternalId: e.externalId },
                  });
                }
              }
            });
        });
      }
      function M(e, t, n, r) {
        if (!(0, O.f)()) return (0, p.e)();
        if (!r.text)
          return null != t.previewMsg &&
            "reaction" === t.previewMsg.type &&
            (function (e, t) {
              var n = t.author === o.a;
              return (
                t.msgId === e.msg.id &&
                (e.meta.fromMe ? n : e.meta.author === t.author)
              );
            })(t.previewMsg, r)
            ? (0, I.a)(e, t.id).then(
                (e) => (null == e ? delete t.previewMsg : (t.previewMsg = e), t)
              )
            : (0, p.e)();
        var i = r.author === o.a,
          a = n.author === o.a;
        if (i || a) {
          var u = (function (e, t) {
            if ((0, O.f)()) {
              var n = e.text;
              if (null != n) {
                var r = (0, w.a)(t);
                if (null != r)
                  return { type: "reaction", reaction: n, meta: E(e), msg: r };
              }
            }
          })(r, n);
          if (null != u)
            return (0, p.e)(Object.assign({}, t, { previewMsg: u }));
        }
        return (0, p.e)();
      }
      function A(e) {
        var t = [
          "reactions",
          "msgs",
          "chats",
          "groups",
          "groupParticipantsInfo",
          "orphanedStanzas",
          "contacts",
          "receipts",
        ];
        return (0, l.f)("writeIncomingReaction", (n) =>
          (0, y.a)(n, "rw", t, (t) => {
            var n = e.content,
              r = e.msgRef,
              u = n.chatJid;
            return (0, s.i)(t, u).then((u) => {
              if (!u)
                return (
                  __LOG__(
                    2
                  )`writeIncomingReaction chat not found. Storing as orphan`,
                  T(t, e)
                );
              var l = u.dbChat,
                c = u.dbGroup,
                d = l.id,
                f = r.msgAuthor,
                _ = r.msgExternalId;
              return (0, s.q)(t, d, f, _).then((r) => {
                if (!r)
                  return (
                    __LOG__(
                      2
                    )`writeIncomingReaction msg not found. Storing as orphan`,
                    T(t, e)
                  );
                if (r.type !== a.f.REVOKED && "@system" !== r.author) {
                  var u = r.id;
                  return C(
                    t,
                    Object.assign({}, n, { msgId: u, ack: a.a.RECEIVED })
                  ).then((e) => {
                    if (e)
                      return M(t, l, r, e)
                        .then((e) => {
                          if (e)
                            return t.chats
                              .put(e)
                              .then(() => ({ dbChat: e, dbGroup: c }));
                        })
                        .then((n) => {
                          var r = (0, o.E)(l.jid),
                            a = null != r ? (0, s.l)(t, r) : void 0;
                          return (0, p.c)([R(t, u), a]).then((t) => {
                            var r = i()(t, 2),
                              a = r[0],
                              o = r[1];
                            return {
                              dbReaction: e,
                              dbMsg: a,
                              dbChatInfo: n,
                              dbContact: o,
                            };
                          });
                        });
                  });
                }
                __LOG__(
                  2
                )`writeIncomingReaction msg was not reactable. Dropping`;
              });
            });
          })
        ).then((e) => {
          if (e) {
            var t = e.dbMsg,
              n = e.dbReaction,
              r = e.dbChatInfo,
              i = e.dbContact,
              a = (0, f.c)(t);
            if (
              ((0, c.c)("event", "reactionReceived", { msg: a }),
              (function (e, t) {
                "@me" !== t.author &&
                  e.meta.fromMe &&
                  (0, c.c)("event", "notifyNewReaction", {
                    msg: {
                      id: e.id,
                      chatId: e.chatId,
                      content: e.content,
                      mentionedJids: e.mentionedJids,
                    },
                    reaction: {
                      id: t.id,
                      author: t.author,
                      msgId: t.msgId,
                      text: t.text,
                    },
                  });
              })(a, n),
              r)
            ) {
              var o = r.dbChat,
                u = r.dbGroup;
              (0, c.c)("event", "chatModified", { chat: (0, v.a)(o, u) });
            }
            (0, g.n)(n, i);
          }
        });
      }
      function P(e, t) {
        var n = [
          "reactions",
          "msgs",
          "chats",
          "receipts",
          "groups",
          "groupParticipantsInfo",
        ];
        return (0, l.f)("writeOutgoingReaction", (r) =>
          (0, y.a)(r, "rw", n, (n) => {
            var l = e.msgId,
              c = e.text,
              d = e.externalId,
              f = e.groupingKey,
              v = e.senderTimestamp,
              h = (0, u.m)(l);
            return (0, p.c)([
              n.reactions.where("externalId").equals(d).first(),
              n.chats.get(h),
            ]).then((e) => {
              var h = i()(e, 2),
                m = h[0],
                g = h[1];
              if (g)
                return m
                  ? (__LOG__(2)`writeOutgoingReaction: deduped`,
                    (0, b.h)(n, (0, u.t)(m.id)).then((e) => {
                      if (e)
                        return (0, s.r)(n, l).then(
                          (t) =>
                            t && {
                              dbMsg: t,
                              dbReaction: m,
                              outgoingTo: (0, b.g)(e),
                            }
                        );
                      __LOG__(4)`writeOutgoingReaction receipt not found`;
                    }))
                  : C(n, {
                      author: "@me",
                      msgId: l,
                      chatJid: g.jid,
                      externalId: d,
                      groupingKey: f,
                      text: c,
                      ts: (0, _.D)(),
                      senderTimestampMs: 1e3 * v,
                      ack: a.a.CLOCK,
                    }).then((e) => {
                      if (null != e)
                        return (0, b.b)(n, (0, b.m)(e.id, g.jid, e.ts, t))
                          .then(() =>
                            R(n, l).then((n) => ({
                              dbReaction: e,
                              dbMsg: n,
                              outgoingTo: t,
                            }))
                          )
                          .then((e) => {
                            var t = e.dbReaction,
                              a = e.dbMsg,
                              u = e.outgoingTo;
                            return M(n, g, a, t).then((e) => {
                              if (!e)
                                return {
                                  dbReaction: t,
                                  dbMsg: a,
                                  outgoingTo: u,
                                };
                              var l = (0, o.C)(e.jid);
                              return (0, p.c)([
                                null != l ? (0, s.o)(r.stores, l) : void 0,
                                n.chats.put(e),
                              ]).then((n) => {
                                var r = i()(n, 1)[0];
                                return {
                                  dbReaction: t,
                                  dbMsg: a,
                                  dbChat: e,
                                  dbGroup: r,
                                  outgoingTo: u,
                                };
                              });
                            });
                          });
                    });
              __LOG__(4)`writeOutgoingReaction chat not found`;
            });
          })
        ).then((e) => {
          if (e) {
            var t = e.dbMsg,
              n = e.dbReaction,
              r = e.outgoingTo;
            if (
              ((0, c.c)("event", "reactionReceived", { msg: (0, f.c)(t) }),
              e.dbChat)
            ) {
              var i = e.dbChat,
                a = e.dbGroup;
              (0, c.c)("event", "chatModified", { chat: (0, v.a)(i, a) });
            }
            return { reactionId: n.id, outgoingTo: r };
          }
        });
      }
      function T(e, t) {
        var n = t.content,
          r = t.msgRef,
          i = n.author,
          a = n.senderTimestampMs,
          o = n.chatJid,
          u = r.msgExternalId,
          l = r.msgAuthor;
        return (0, s.s)(e, u, l, o).then((t) => {
          if (!t.revoke) {
            var r,
              s = t.reactions.get(i);
            if (s) {
              if ((0, d.b)(s.content.senderTimestampMs, a))
                return void __LOG__(
                  2
                )`maybeStoreOrphanReactionInTransaction: newest orphan reaction exists. Skipping`;
              r = e.orphanedStanzas.delete(s.id);
            }
            __LOG__(
              2
            )`maybeStoreOrphanReactionInTransaction: storing new orphan reaction`;
            var c = {
              type: "reaction",
              ts: n.ts,
              chatJid: o,
              content: n,
              externalId: u,
              author: l,
            };
            return (0, p.e)(r).then(() =>
              e.orphanedStanzas.add(c).then(() => {})
            );
          }
          __LOG__(
            2
          )`maybeStoreOrphanReactionInTransaction: msg is revoked, ignoring orphaned reaction`;
        });
      }
      function N(e, t, n) {
        return (0, p.c)(
          Array.from(n.values()).map((n) => {
            var r = n.content;
            return x(e, Object.assign({}, r, { msgId: t, ack: a.a.RECEIVED }));
          })
        ).then(() => R(e, t));
      }
      function C(e, t) {
        var n = t.author,
          r = t.msgId,
          i = t.senderTimestampMs;
        return (function (e, t, n) {
          var r = (0, u.n)(t, n),
            i = (0, u.n)(t, n, "deleted");
          return e.reactions.where("idx").anyOf([r, i]).limit(1).first();
        })(e, r, n).then((n) => {
          if (!n || !(0, d.b)(n.senderTimestampMs, i))
            return (
              n
                ? (function (e, t) {
                    return (0, p.c)([
                      e.reactions.delete(t),
                      e.receipts.delete((0, u.t)(t)),
                    ]).then(() => {});
                  })(e, n.id)
                : (0, p.e)()
            ).then(() => x(e, t));
        });
      }
      function R(e, t) {
        return (0, p.c)([j(e, t), (0, s.r)(e, t)]).then((t) => {
          var n = i()(t, 3),
            r = n[0],
            a = n[1];
          if ((n[2], !a))
            throw new Error(
              "refreshDbMsgReactionInfoInTransaction msg not found"
            );
          var o = (function (e) {
            if (0 !== e.length) {
              var t = e.length,
                n = m(e),
                r = n.sortedReactions,
                i = n.reactionFromMe,
                a = {
                  count: t,
                  reactions: (function (e) {
                    for (
                      var t = [], n = Math.min(e.length, 3), r = 0;
                      r < n;
                      r++
                    ) {
                      var i = e[r];
                      t.push(i.label);
                    }
                    return t;
                  })(r),
                };
              return i && (a.reactionFromMe = i), a;
            }
          })(r);
          return (
            o ? (a.reactions = o) : delete a.reactions,
            e.msgs.put(a).then(() => a)
          );
        });
      }
      function x(e, t) {
        var n = t.msgId,
          r = t.author,
          i = t.text,
          a = Object.assign({}, t, {
            idx: (0, u.n)(n, r, null == i ? "deleted" : void 0),
          });
        return e.reactions.add(a).then((e) => Object.assign({}, a, { id: e }));
      }
      function D(e, t) {
        return e.reactions
          .where("msgId")
          .anyOf(t)
          .toArray()
          .then((n) => {
            var r = n.map((e) => (0, u.t)(e.id));
            return (0, p.c)([
              e.reactions.where("msgId").anyOf(t).delete(),
              (0, b.e)(e, r),
            ]).then(() => {});
          });
      }
      function U(e, t, n, r) {
        var i = [];
        return e.reactions
          .where("msgId")
          .between(t, n, !1, !0)
          .filter((e) => {
            var t = !r || !r.has(e.msgId);
            return t && i.push((0, u.t)(e.id)), t;
          })
          .delete()
          .then(() => (0, b.e)(e, i))
          .then(() => {});
      }
      function j(e, t) {
        return e.reactions
          .where("idx")
          .between((0, u.l)(t), (0, u.y)(t))
          .toArray()
          .then((e) => e);
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.r(t),
        n.d(t, "verifyUserCert", function () {
          return k;
        }),
        n.d(t, "validateBusinessMsg", function () {
          return T;
        }),
        n.d(t, "VLEVEL_TYPES", function () {
          return N;
        }),
        n.d(t, "getBspInfo", function () {
          return C;
        }),
        n.d(t, "getBusinessInfoFromNode", function () {
          return x;
        }),
        n.d(t, "maybeGetBusinessNode", function () {
          return D;
        });
      var r = n(98),
        i = n(30),
        a = n(4),
        o = n(0),
        u = Object.assign({}, null),
        s = Object.assign({}, null),
        l = Object.assign({}, null),
        c = Object.assign({}, null),
        d = Object.assign({}, null),
        f = Object.assign({}, null);
      (u.internalSpec = {
        lg: [1, o.d.STRING],
        lc: [2, o.d.STRING],
        verifiedName: [3, o.d.STRING],
      }),
        (s.internalSpec = {
          details: [1, o.d.BYTES],
          signature: [2, o.d.BYTES],
          serverSignature: [3, o.d.BYTES],
        }),
        (l.internalSpec = {
          serial: [1, o.d.UINT64],
          issuer: [2, o.d.STRING],
          verifiedName: [4, o.d.STRING],
          localizedNames: [8, o.b.REPEATED | o.d.MESSAGE, u],
          issueTime: [10, o.d.UINT64],
        }),
        (c.internalSpec = {
          vnameCert: [1, o.d.MESSAGE, s],
          bizAcctLinkInfo: [2, o.d.BYTES],
        }),
        (d.internalSpec = {
          whatsappBizAcctFbid: [1, o.d.UINT64],
          whatsappAcctNumber: [2, o.d.STRING],
          issueTime: [3, o.d.UINT64],
          hostStorage: [4, o.d.ENUM, { on_premise: 0, facebook: 1 }],
          accountType: [5, o.d.ENUM, { enterprise: 0 }],
        }),
        (f.internalSpec = {
          vlevel: [1, o.d.ENUM, { unknown: 0, low: 1, high: 2 }],
          vnameCert: [2, o.d.MESSAGE, s],
          signed: [3, o.d.BOOL],
          revoked: [4, o.d.BOOL],
          hostStorage: [5, o.d.ENUM, { on_premise: 0, facebook: 1 }],
          actualActors: [6, o.d.ENUM, { self: 0, bsp: 1 }],
          privacyModeTs: [7, o.d.UINT64],
          featureControls: [8, o.d.UINT64],
        });
      var _ = n(11),
        p = n(88),
        v = n(51),
        h = n(22),
        m = n(67),
        g = n(54),
        y = n(6),
        b = n(75),
        w = n(177),
        O = n(39),
        E = n(16),
        I = n(89),
        S = n(3);
      function k(e, t, n, r) {
        return L(e, t, n, r).then((t) => {
          if ("error" === t)
            return (
              __LOG__(4)`verifyUserCert error`,
              SEND_LOGS("biz-cert-error", 0.01),
              (0, O.b)().waitUntilPersisted(E.e.validateBusinessCertificate(e))
            );
        });
      }
      function L(e, t, n, r) {
        var i = (function (e) {
          var t = (0, b.a)(s, e).details;
          if (!t)
            return __LOG__(4)`verifyCertificate cert missing details`, "error";
          var n = (0, b.a)(l, t),
            r = n.issuer,
            i = n.verifiedName,
            a = n.serial;
          return i
            ? null == a
              ? (__LOG__(4)`verifyCertificate details missing serial`, "error")
              : M.includes(r)
              ? { serial: a, name: i, isApi: r === G }
              : (__LOG__(4)`verifyCertificate unrecognized issuer "${String(
                  r
                )}"`,
                "error")
            : (__LOG__(3)`verifyCertificate verified name missing`,
              "name-missing");
        })(n);
        if ("name-missing" === i) return Promise.resolve();
        if ("error" === i) return Promise.resolve("error");
        var a = i.serial,
          o = i.name,
          u = i.isApi;
        return h.Oc(
          e,
          u
            ? { level: t, serial: a, name: o, bsp: r, isApi: !0 }
            : { level: t, serial: a, name: o, isApi: !1 }
        );
      }
      var G = "ent:wa",
        M = [G, "smb:wa"],
        A = { algo: { type: "constant", delay: 1e3 * S.b } };
      function P(e) {
        var t = e.chat,
          n = e.content,
          r = (0, g.i)(n.msg.author);
        return null == r
          ? Promise.resolve()
          : (0, O.b)()
              .waitUntilPersisted(E.e.validateBusinessCertificate(r))
              .then(() => h.Qc(t, n));
      }
      t.default = (0, p.c)()
        .finalStep("validateBusinessCertificate", (e) =>
          j(e.jid, "background").then((e) => {
            if ("error" === e)
              throw (
                (__LOG__(4)`validateBusinessCertificate error`,
                SEND_LOGS("biz-cert-error", 0.01),
                new I.b(A))
              );
          })
        )
        .end();
      var T = (0, p.c)()
          .finalStep("validateBusinessMsg", {
            code: (e) => {
              var t = e.chat,
                n = e.content;
              return (function (e, t) {
                var n = (0, g.i)(t.msg.author);
                if (null == n) return Promise.resolve();
                if (t.contactVerification) {
                  var r = t.contactVerification,
                    i = r.level,
                    a = r.serial,
                    o = r.cert,
                    u = r.bsp;
                  return (0, m.b)(n).then((e) => {
                    if ((0, w.d)(e, a, i, u)) {
                      var t,
                        r,
                        s =
                          null == e ||
                          null == (t = e.verifiedInfo) ||
                          null == (r = t.bsp)
                            ? void 0
                            : r.ts,
                        l = null == u ? void 0 : u.ts;
                      if (l && s && l < s) return;
                      return o ? L(n, i, o, u || void 0) : j(n, "interactive");
                    }
                  });
                }
                return j(n, "interactive");
              })(0, n).then((e) =>
                e ? P({ chat: t, content: n }) : h.Qc(t, n)
              );
            },
            stopRetryIf: { timePassedSeconds: S.b, onStopRetry: P },
          })
          .end(),
        N = { high: "high", low: "low", unknown: "unknown" };
      function C(e) {
        if (e.hasAttr("actual_actors") && e.hasAttr("host_storage"))
          return {
            actors: e.attrEnumValues("actual_actors", (0, _.y)(r.a)),
            host: e.attrEnumValues("host_storage", (0, _.y)(r.b)),
            ts: e.attrTime("privacy_mode_ts"),
          };
      }
      var R = { high: "high", low: "low", unknown: "unknown" };
      function x(e) {
        if (!e.hasChild("business")) return "NO_BIZ";
        var t = e.child("business").maybeChild("verified_name");
        return t
          ? {
              verifiedInfo: {
                level: t.attrEnumOrDefault("verified_level", R, "unknown"),
                cert: t.hasContent() ? t.contentBytes() : "UNCHANGED",
                bsp: C(t),
              },
            }
          : "NO_BIZ";
      }
      function D(e) {
        if (null != (null == e ? void 0 : e.verifiedInfo))
          return (0, a.w)(
            "business",
            null,
            (0, a.w)("verified_name", {
              serial: (0, a.h)(e.verifiedInfo.serial),
            })
          );
      }
      var U = new v.a("syncBusinessResult", (e) => {
        e.assertAttr("type", "result");
        var t = e.child("usync"),
          n = t.child("result").child("business"),
          r = t.child("list"),
          i = new Map();
        return (
          r.forEachChildWithTag("user", (e) => {
            i.set(e.attrPhoneUserJid("jid"), x(e));
          }),
          { refresh: n.maybeAttrInt("refresh", 0) || 0, updates: i }
        );
      });
      function j(e, t) {
        return (0, m.b)(e).then((n) => {
          var r = (0, a.w)(
            "iq",
            {
              to: (0, a.g)(y.t.get()),
              id: (0, a.u)(),
              xmlns: "usync",
              type: "get",
            },
            (0, a.w)(
              "usync",
              {
                mode: "query",
                context: t,
                sid: (0, a.u)(),
                index: "0",
                last: "true",
              },
              (0, a.w)(
                "query",
                null,
                (0, a.w)("business", null, (0, a.w)("verified_name", null))
              ),
              (0, a.w)(
                "list",
                null,
                (0, a.w)("user", { jid: (0, a.g)(e) }, D(n))
              )
            )
          );
          return (0, i.b)(r, U).then((t) => {
            if (!t.success)
              return (
                __LOG__(
                  4
                )`Error while attempting to update business in query sync ${t.errorCode}`,
                "error"
              );
            var n = t.result.updates.get(e);
            if (!n || "NO_BIZ" === n) return h.zc(e);
            var r = n.verifiedInfo;
            return "UNCHANGED" !== r.cert
              ? L(e, r.level, r.cert, r.bsp)
              : (0, m.b)(e).then((t) => {
                  var n = null == t ? void 0 : t.verifiedInfo;
                  if (t && n && (0, w.d)(t, n.serial, r.level, r.bsp)) {
                    var i = n.isApi
                      ? Object.assign({}, n, { level: r.level, bsp: r.bsp })
                      : Object.assign({}, n, { level: r.level });
                    return h.Oc(e, i);
                  }
                });
          });
        });
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return r;
      });
      var r = n(4).w;
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "d", function () {
        return u;
      }),
        n.d(t, "b", function () {
          return s;
        }),
        n.d(t, "c", function () {
          return l;
        }),
        n.d(t, "a", function () {
          return c;
        });
      var r = n(25),
        i = n(71),
        a = n(10),
        o = (n(5), Math.pow(2, 32) - 1);
      function u() {
        return (0, a.f)("incrementADVCurrentKeyIndex", (e) =>
          e.transact("rw", ["meta"], () =>
            (0, r.d)(e.stores.meta, r.a.ADV_COMPANION_INFO).then((e) => {
              var t =
                null == e ||
                null == e.value ||
                e.value.rawId <= 0 ||
                e.value.currentIndex <= 0;
              return null == e || t
                ? {
                    rawId: Math.floor(Math.random() * o) + 1,
                    currentIndex: (0, i.e)(1),
                    timestamp: null,
                  }
                : Object.assign({}, e.value, {
                    currentIndex: (0, i.e)(e.value.currentIndex + 1),
                  });
            })
          )
        );
      }
      function s() {
        return (0, a.f)("getADVCompanions", (e) =>
          e.transact("r", ["meta"], () =>
            (0, r.d)(e.stores.meta, r.a.ADV_COMPANION_INFO).then((e) => {
              if (e) return Object.assign({}, e.value).devices;
            })
          )
        );
      }
      function l(e) {
        return (0, a.f)("getADVDeviceInfo", (t) =>
          t.transact("r", ["meta"], () =>
            (0, r.d)(t.stores.meta, r.a.ADV_COMPANION_INFO).then((t) => {
              if (t) {
                var n = Object.assign({}, t.value).devices;
                return null == n ? void 0 : n.find((t) => t.deviceId === e);
              }
            })
          )
        );
      }
      function c() {
        return (0, a.f)("getADVCompanionInfo", (e) =>
          e.transact("r", ["meta"], () =>
            (0, r.d)(e.stores.meta, r.a.ADV_COMPANION_INFO).then((e) => {
              if (e) return null == e ? void 0 : e.value;
            })
          )
        );
      }
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return r;
      }),
        n.d(t, "a", function () {
          return i;
        }),
        n.d(t, "c", function () {
          return a;
        });
      var r = "1",
        i = "2",
        a = { 14: "other_harm", 15: "spam", 21: "other_scam" };
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return o;
      }),
        n.d(t, "c", function () {
          return u;
        }),
        n.d(t, "b", function () {
          return s;
        });
      var r = n(112),
        i = n(28),
        a = n(29);
      function o(e, t, n, r, i) {
        var a = l(t, n);
        if (!a.success) return c(a);
        var o = e(a.value, n[n.length - 1], r, i);
        return o.success ? o : c(o);
      }
      function u(e, t, n, i, u) {
        return (function (e, t) {
          var n = l(e, t);
          return n.success && (0, r.a)(n.value.attrs, t[t.length - 1]);
        })(t, n)
          ? o(e, t, n, i, u)
          : a.s;
      }
      function s(e, t) {
        return o(a.e, e, t);
      }
      function l(e, t) {
        for (var n = t.length, r = e, o = 0; o < n - 1; o++) {
          var u = t[o],
            s = (0, a.k)(r, u);
          if (!s.success) return s;
          r = s.value;
        }
        return (0, i.c)(r);
      }
      function c(e) {
        return (0, i.b)("in the reference, " + e.error);
      }
    },
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.r(t),
        n.d(t, "IMPLICIT_LEAD_BYTE", function () {
          return m;
        }),
        n.d(t, "parseUserKeysNode", function () {
          return g;
        }),
        n.d(t, "ensureE2eSession", function () {
          return b;
        }),
        n.d(t, "handleE2eIdentityChange", function () {
          return O;
        }),
        n.d(t, "establishE2eSession", function () {
          return E;
        }),
        n.d(t, "fetchMissingKeysForContact", function () {
          return k;
        }),
        n.d(t, "prependByte", function () {
          return L;
        });
      var r = n(26),
        i = n.n(r),
        a = n(30),
        o = n(41),
        u = n(81),
        s = n(114),
        l = n(4),
        c = n(22),
        d = n(67),
        f = n(7),
        _ = n(88),
        p = n(71),
        v = n(134),
        h = new u.b(),
        m = 5;
      function g(e) {
        var t = e.child("skey"),
          n = e.hasChild("key") ? e.child("key") : null,
          r = e.attrPhoneDeviceJid("jid"),
          i = e.child("identity").contentBytes(32),
          a = {
            jid: r,
            identity: i,
            info: {
              regId: e.child("registration").contentUint(4),
              identity: L(m, i),
              signedKey: {
                id: t.child("id").contentUint(3),
                publicKey: L(m, t.child("value").contentBytes(32)),
                signature: t.child("signature").contentBytes(64),
              },
              oneTimeKey: n && {
                id: n.child("id").contentUint(3),
                publicKey: L(m, n.child("value").contentBytes(32)),
              },
            },
          };
        return (0, f.r)(r)
          ? { type: "primary", sessionInfo: a }
          : {
              type: "companion",
              sessionInfo: a,
              signedDeviceIdentity: (0, v.d)(
                e.child("device-identity").contentBytes()
              ),
            };
      }
      var y = new s.b("userKeys", (e) => e.child("list").mapChildren(g));
      function b(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        __LOG__(2)`ensureE2eSession ${e}`;
        var n = h.waitIfPending(e);
        if (n) return __LOG__(2)`ensureE2eSession deduped ${e}`, n;
        var r = (0, o.y)(e).then((n) => {
          if (!n) return (0, f.r)(e) ? E(e, t) : I(e);
        });
        return h.enqueueHandlers(e, r);
      }
      var w = new s.b(
          "identityChange",
          (e) => (
            e.assertTag("notification"),
            e.assertAttr("type", "encrypt"),
            e.child("identity"),
            { jid: e.attrPhoneDeviceJid("from"), stanzaId: e.attrString("id") }
          )
        ),
        O = (0, s.c)("handleE2eIdentityChange", w, (e) => {
          var t = e.jid,
            n = e.stanzaId;
          return h.enqueue(t, () =>
            (0, o.y)(t)
              .then((e) => {
                if (e)
                  return (
                    __LOG__(
                      2
                    )`handleE2eIdentityChange ${t} updated, establishing session`,
                    (0, o.k)(t).then(() => E(t, !0))
                  );
              })
              .then(() =>
                (0, l.w)("ack", {
                  to: (0, l.g)(t),
                  id: (0, l.b)(n),
                  class: "notification",
                })
              )
          );
        });
      function E(e, t) {
        if (!(0, f.r)(e))
          throw new Error(
            "establishE2eSession called for companion device " + e
          );
        var n = (0, l.w)(
          "iq",
          { id: (0, l.u)(), xmlns: "encrypt", type: "get", to: l.l },
          (0, l.w)(
            "key",
            null,
            (0, l.w)("user", { jid: (0, l.g)(e), reason: t ? "identity" : l.c })
          )
        );
        return (0, a.b)(n, y).then((t) => {
          if (!t.success)
            throw new Error("establishE2eSession bad response " + String(t));
          var n = t.result;
          if (n.length <= 0) throw new Error("No key for " + e);
          var r = n[0];
          if (r.sessionInfo.jid !== e) throw new Error("Mismatch jid");
          return (0, o.f)(r.sessionInfo);
        });
      }
      function I(e) {
        return S.apply(this, arguments);
      }
      function S() {
        return (S = i()(function* (e) {
          if ((0, f.r)(e))
            throw new Error(
              "establishE2eSessionForCompanionDevice called for primary device " +
                e
            );
          var t = (0, f.h)(e),
            n = (0, f.e)(t),
            r = yield (0, o.u)(n),
            i = r ? null : (0, l.w)("user", { jid: (0, l.g)(n) }),
            u = (0, l.w)(
              "iq",
              { id: (0, l.u)(), xmlns: "encrypt", type: "get", to: l.l },
              (0, l.w)("key", null, i, (0, l.w)("user", { jid: (0, l.g)(e) }))
            ),
            s = yield (0, a.b)(u, y);
          if (!s.success)
            throw new Error(
              "establishE2eSessionForCompanionDevice bad response " + String(s)
            );
          var d = new Map();
          s.result.forEach((e) => {
            d.set(e.sessionInfo.jid, e);
          });
          var _ = r;
          if (!_) {
            var p = d.get(n);
            if (!p)
              throw new Error(
                "establishE2eSessionForCompanionDevice bad response, no keys for primary device " +
                  String(s)
              );
            yield (0, o.f)(p.sessionInfo), (_ = p.sessionInfo.identity);
          }
          var h = d.get(e);
          if (!h)
            throw new Error(
              "establishE2eSessionForCompanionDevice bad response, no keys for companion device " +
                String(s)
            );
          if ("companion" !== h.type)
            throw new Error(
              "establishE2eSessionForCompanionDevice bad response, companionKeyInfo type is not companion"
            );
          var m = h.sessionInfo,
            g = h.signedDeviceIdentity,
            b = yield (0, v.g)(e, g, m.identity, _);
          if (!b)
            throw new Error(
              "establishE2eSessionForCompanionDevice failed to verify received ADV object"
            );
          yield (0, c.jb)(t, { identity: b, isPkMsg: !1 }),
            yield (0, o.g)(m, { rawId: b.rawId, keyIndex: b.keyIndex });
        })).apply(this, arguments);
      }
      var k = (0, _.c)()
        .finalStep("fetchMissingKeysForContact", (e) => {
          var t = e.jid;
          return (0, d.b)(t)
            .then((e) => {
              if (e) return Promise.all((0, p.c)(e).map((e) => b(e, !0)));
            })
            .then(() => {});
        })
        .end();
      function L(e, t) {
        var n = new Uint8Array(1 + t.length);
        return (n[0] = e), n.set(t, 1), n;
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return C;
      }),
        n.d(t, "b", function () {
          return R;
        }),
        n.d(t, "c", function () {
          return x;
        }),
        n.d(t, "e", function () {
          return D;
        }),
        n.d(t, "d", function () {
          return U;
        });
      var r = n(8),
        i = n.n(r),
        a = n(15),
        o = n(32),
        u = n(11),
        s = n(36),
        l = n(109),
        c = n(58),
        d = n(5),
        f = n(7),
        _ = n(2),
        p = n(62),
        v = n(66),
        h = n(49),
        m = n(82),
        g = n(79),
        y = n(122),
        b = n(35),
        w = n(65),
        O = n(39),
        E = n(16),
        I = n(10),
        S = n(14),
        k = n(3),
        L = n(186),
        G = n(187),
        M = n(185),
        A = n(52),
        P = n(199),
        T = n(237),
        N = n(184);
      function C(e, t, n) {
        var r = [
          "msgs",
          "chats",
          "groups",
          "groupParticipantsInfo",
          "media",
          "receipts",
          "meta",
          "previews",
          "reactions",
        ];
        return (
          r.push("pollUpdates"), e.table.transact("rw", r, () => x(e, t, n))
        );
      }
      function R(e, t) {
        var n = [
          "msgs",
          "chats",
          "groups",
          "groupParticipantsInfo",
          "media",
          "receipts",
          "meta",
          "previews",
          "status",
          "authors",
          "reactions",
        ];
        return (
          n.push("pollUpdates"),
          e.table.transact("rw", n, () =>
            (0, d.l)(e.table.stores.media, "msgIds")
              .anyOf(t)
              .toArray()
              .then((t) => {
                var n = new Set(),
                  r = [];
                t.forEach((e) =>
                  e.msgIds.forEach((e) => {
                    (0, o.I)(e, {
                      chat: (e) => {
                        n.add(e);
                      },
                      status: (e) => {
                        r.push(e);
                      },
                    });
                  })
                );
                var i = new Map();
                n.forEach((e) => {
                  var t = (0, a.v)(e),
                    n = i.get(t) || [];
                  n.push(e), i.set(t, n);
                });
                var u = [];
                return (
                  i.forEach((t, n) => {
                    u.push(() => x(e, n, t));
                  }),
                  (0, m.b)(e.table.stores, r).then(() =>
                    (0, d.f)(u).then((e) => e.filter(Boolean))
                  )
                );
              })
          )
        );
      }
      function x(e, t, n) {
        var r = new Set(),
          o = [];
        return (
          n.forEach((e) => {
            (0, a.v)(e) === t
              ? (o.push(e), r.add(e))
              : __LOG__(
                  3
                )`Tried to delete ${e} from different chat ${t}. Skipping`;
          }),
          e.table.getChatInTransaction(t).then((n) => {
            if (null != n)
              return e.table.getAllMsgsFromIds(o).then((u) =>
                (0, d.c)([
                  (0, h.Q)(e.table.stores, (0, g.e)(u), !1),
                  e.table.stores.msgs.bulkDelete(u.map((e) => e.rowId)),
                  (0, p.e)(e.table.stores, o),
                  e.table.stores.previews.bulkDelete(o),
                  e.table.stores.previews.bulkDelete(o.map(a.E)),
                  (0, G.c)(e.table.stores, o),
                  (0, M.b)(e.table.stores, u),
                  (0, N.b)(e.table.stores, o),
                ])
                  .then((a) => {
                    var o,
                      u,
                      s,
                      l,
                      c = i()(a, 1)[0],
                      f = n.newest,
                      _ = n.oldest,
                      p = n.oldestUnread;
                    return (
                      (o =
                        _ && f && r.has(n.newest)
                          ? (0, T.b)(e.table.stores, t)
                          : f),
                      (u =
                        _ && f && n.previewMsg && r.has(n.previewMsg.id)
                          ? (0, T.a)(e.table.stores, t)
                          : n.previewMsg),
                      (s =
                        _ && f && r.has(_) ? (0, T.c)(e.table.stores, t) : _),
                      (l =
                        p && f && r.has(p)
                          ? (0, T.d)(e.table.stores, t, p)
                          : p),
                      (0, d.c)([c, o, u, s, l])
                    );
                  })
                  .then((t) => {
                    var r = i()(t, 5),
                      a = r[0],
                      o = r[1],
                      s = r[2],
                      l = r[3],
                      c = r[4];
                    u.forEach((e) => {
                      var t;
                      n.msgCount--,
                        n.oldestUnread &&
                          e.id >= n.oldestUnread &&
                          (0, y.b)(e) &&
                          n.unreadMsgCount--,
                        (0, y.d)(n, e) &&
                          null != n.importantMsgCount &&
                          n.importantMsgCount--,
                        e.starred &&
                          null != n.starredMsgCount &&
                          n.starredMsgCount--,
                        (null == (t = e.keptInfo) ? void 0 : t.kept) &&
                          null != n.keptMsgCount &&
                          n.keptMsgCount--;
                    }),
                      null != n.starredMsgCount &&
                        n.starredMsgCount <= 0 &&
                        delete n.starredMsgCount,
                      null != n.keptMsgCount &&
                        n.keptMsgCount <= 0 &&
                        delete n.keptMsgCount,
                      null != n.importantMsgCount &&
                        n.importantMsgCount <= 0 &&
                        delete n.importantMsgCount,
                      (n.newest = o),
                      (n.oldest = l),
                      (n.oldestUnread = c),
                      null == s ? delete n.previewMsg : (n.previewMsg = s);
                    var _ = (0, f.p)(n.jid),
                      p =
                        null != _
                          ? e.table.getGroupInfoWithParticipantsInTransaction(_)
                          : void 0;
                    return (0, d.c)([n, p, a, e.table.updateChat(n)]);
                  })
                  .then((e) => {
                    var t = i()(e, 3),
                      n = t[0],
                      r = t[1],
                      a = t[2];
                    return {
                      chat: (0, c.a)(n, r),
                      msgIds: o,
                      deletedMediaStats: a,
                    };
                  })
              );
          })
        );
      }
      function D(e, t) {
        return (0, I.c)(
          "revokeChatMsgs",
          (n) =>
            (function (e, t, n) {
              var r = [
                "groups",
                "groupParticipantsInfo",
                "msgs",
                "receipts",
                "chats",
                "media",
                "meta",
                "previews",
                "reactions",
                "contacts",
              ];
              return (
                r.push("pollUpdates"),
                e.table.transact("rw", r, () =>
                  (0, d.c)([
                    e.table.getAllMsgsFromIds(n),
                    e.table.getChatAndGroupInTransaction(t),
                  ]).then((n) => {
                    var r = i()(n, 2),
                      o = r[0],
                      f = r[1];
                    if (!f)
                      return (
                        __LOG__(3)`Ignoring revoke for inexisting chat ${t}.`,
                        []
                      );
                    var m = f.dbChat,
                      b = f.dbGroup,
                      w = {},
                      O = {},
                      E = [],
                      I = [],
                      S = [],
                      k = [],
                      L = [],
                      A = m.starredMsgCount,
                      T = m.keptMsgCount,
                      C = m.importantMsgCount;
                    o.forEach((e) => {
                      var t, n, r, i, o;
                      if (
                        !(null == (t = e.keptInfo) ? void 0 : t.validUntil) ||
                        (0, P.a)(
                          null == (n = e.keptInfo) ? void 0 : n.validUntil
                        )
                      ) {
                        var u = e.author === _.b;
                        if (u) S.push(e.id);
                        else {
                          if (null == b)
                            return void __LOG__(
                              4
                            )`_revokeChatMsgs: tried to revoke in 1-1 from other author`;
                          if (!b.groupInfo.isAdmin)
                            return void __LOG__(
                              4
                            )`_revokeChatMsgs: tried to admin revoke when not admin`;
                          k.push({ msgId: e.id, ts: e.ts });
                        }
                        if (e.type !== _.f.REVOKED) {
                          null != e.starred &&
                            null != m.starredMsgCount &&
                            m.starredMsgCount--,
                            null !=
                              (null == (r = e.keptInfo) ? void 0 : r.kept) &&
                              null != m.keptMsgCount &&
                              m.keptMsgCount--,
                            null != m.importantMsgCount &&
                              (0, y.d)(m, e) &&
                              m.importantMsgCount--,
                            I.push(e.id),
                            E.push(e);
                          var l = {
                            rowId: e.rowId,
                            id: e.id,
                            chat: e.chat,
                            ts: e.ts,
                            type: _.f.REVOKED,
                            externalId: (0, g.p)(),
                            author: e.author,
                            ack: _.a.CLOCK,
                            revokedExternalId: e.externalId,
                            chatJid: m.jid,
                            altIndex: (0, s.c)("revoked", e.id),
                            validUntil:
                              null !=
                              (null == (i = e.keptInfo) ? void 0 : i.kept)
                                ? null == (o = e.keptInfo)
                                  ? void 0
                                  : o.validUntil
                                : e.validUntil,
                          };
                          u || (l.adminJid = _.b),
                            (O[e.id] = l),
                            L.push((0, a.E)(e.id));
                        } else w[e.id] = e;
                      } else
                        __LOG__(
                          4
                        )`_revokeChatMsgs: revoking kept message beyond its original expiry time`;
                    });
                    var R = (0, u.y)(O),
                      x =
                        S.length > 0
                          ? e.table.resetReceiptsOnRevokedInTransaction(S)
                          : (0, d.e)([]),
                      D =
                        k.length > 0 && b
                          ? (0, s.u)(e.table.stores, b.groupInfo.jid).then(
                              (t) =>
                                e.table.addReceiptsOnAdminRevokedInTransaction(
                                  b.groupInfo.jid,
                                  k,
                                  { to: t, identityIds: new Map() }
                                )
                            )
                          : (0, d.e)([]);
                    0 === m.starredMsgCount && delete m.starredMsgCount,
                      0 === m.keptMsgCount && delete m.keptMsgCount,
                      null != m.importantMsgCount &&
                        m.importantMsgCount <= 0 &&
                        delete m.importantMsgCount;
                    var U =
                        (0, l.maybeMutateChatMsgPreviewFromMsgs)(m, R) ||
                        A !== m.starredMsgCount ||
                        T !== m.keptMsgCount ||
                        C !== m.importantMsgCount
                          ? e.table.updateChat(m).then(() => m)
                          : (0, d.e)(m),
                      j = e.table.stores.msgs.bulkPut(R),
                      $ = (0, h.Q)(e.table.stores, (0, g.e)(o), !1),
                      F = e.table.stores.previews.bulkDelete(I),
                      B = e.table.stores.previews.bulkDelete(L),
                      V = (0, G.c)(e.table.stores, I),
                      K = (0, N.b)(e.table.stores, I),
                      H = (0, M.b)(e.table.stores, E);
                    return (0, d.c)([x, D, U, j, $, F, B, V, K, H]).then(
                      (e) => {
                        var t = i()(e, 3),
                          n = t[0],
                          r = t[1],
                          a = t[2],
                          o = (0, u.t)([...n, ...r], (e) => e.msgId),
                          s = (0, c.a)(a, b),
                          l = k.map((e) => e.msgId);
                        return [...S, ...l].map((e) => {
                          var t, n;
                          w[e]
                            ? ((n = "deduped"), (t = w[e]))
                            : ((n = "revoked"), (t = O[e]));
                          var r = o[t.id];
                          return {
                            result: n,
                            chat: s,
                            msg: (0, v.c)(t),
                            dbMsg: t,
                            outgoingTo: r && (0, p.g)(r),
                            updatedContact: null,
                            shouldDownloadMmsThumb: !1,
                          };
                        });
                      }
                    );
                  })
                )
              );
            })(n, e, t),
          (e) => (
            (0, w.d)(e),
            (0, O.b)().fireAndForget(E.e.removeDeadMediaContent("revoke-msgs")),
            e
          )
        );
      }
      function U(e, t, n, r, o) {
        var u, c, f, _;
        if (
          (null == (u = r.keptInfo) ? void 0 : u.validUntil) &&
          !(0, P.a)(null == (c = r.keptInfo) ? void 0 : c.validUntil)
        )
          return (
            __LOG__(
              3
            )`remoteRevokeMsgInTransaction: revoking kept message beyond its original expiry time`,
            (0, d.e)()
          );
        var p = Object.assign({}, o, {
            rowId: r.rowId,
            id: r.id,
            ts: r.ts,
            author: r.author,
            chat: r.chat,
            validUntil:
              null != (null == (f = r.keptInfo) ? void 0 : f.kept)
                ? null == (_ = r.keptInfo)
                  ? void 0
                  : _.validUntil
                : r.validUntil,
            altIndex: (0, s.c)("revoked", r.id),
          }),
          v = p.adminJid,
          m = [];
        if (null != v) {
          if (
            (__LOG__(2)`remoteRevokeMsgInTransaction: group admin revoke`,
            "@me" === v)
          )
            return (
              __LOG__(4)`remoteRevokeMsgInTransaction: admin revoke from @me`,
              (0, d.e)()
            );
          if (!(0, k.n)(o.ts, r.ts, S.a * k.d))
            return (
              __LOG__(
                3
              )`remoteRevokeMsgInTransaction: admin revoke outside of time window`,
              (0, d.e)()
            );
          if (null == n)
            return (
              __LOG__(
                4
              )`remoteRevokeMsgInTransaction: admin revoke sent to 1-1 chat`,
              (0, d.e)()
            );
          if (!n.groupInfo.isInTheGroup)
            return (
              __LOG__(
                3
              )`remoteRevokeMsgInTransaction: receiver no longer in group`,
              (0, d.e)()
            );
          if (!n.participantsInfo.participants.includes(v)) {
            __LOG__(
              2
            )`remoteRevokeMsgInTransaction: add admin to group for admin revoke`;
            var g = {
              id: o.externalId,
              participants: [v],
              ts: o.ts,
              author: "@system",
            };
            m.push(() => (0, L.l)(e, "add", n.groupInfo.jid, g));
          }
          if (!n.participantsInfo.admins.includes(v)) {
            __LOG__(
              2
            )`remoteRevokeMsgInTransaction: promote to admin for admin revoke`;
            var w = {
              id: o.externalId,
              participants: [v],
              ts: o.ts,
              author: "@system",
            };
            m.push(() => (0, L.l)(e, "promote", n.groupInfo.jid, w));
          }
        } else if ((0, A.r)() && !(0, k.n)(o.ts, r.ts, S.O * k.d))
          return (
            __LOG__(
              3
            )`remoteRevokeMsgInTransaction: sender revoke outside of time window`,
            (0, d.e)()
          );
        return (0, d.f)(m).then((o) =>
          (o.length > 1
            ? (0, s.h)(e.table.stores, t.id)
            : (0, d.e)({ dbChat: t, dbGroup: n })
          ).then((t) => {
            if (null != t)
              return ((t, n) => {
                var o,
                  u = !1;
                null != r.starred &&
                  null != t.starredMsgCount &&
                  (t.starredMsgCount--,
                  (u = !0),
                  0 === t.starredMsgCount && delete t.starredMsgCount);
                var s = !1;
                null != (null == (o = r.keptInfo) ? void 0 : o.kept) &&
                  null != t.keptMsgCount &&
                  (t.keptMsgCount--,
                  (s = !0),
                  0 === t.keptMsgCount && delete t.keptMsgCount);
                var c = !1;
                (0, y.d)(t, r) &&
                  null != t.importantMsgCount &&
                  (t.importantMsgCount--,
                  (c = !0),
                  t.importantMsgCount <= 0 && delete t.importantMsgCount);
                var f =
                  (0, l.maybeMutateChatMsgPreview)(t, p) || u || c || s
                    ? e.table.updateChat(t).then(() => t)
                    : (0, d.e)(t);
                return (0, d.c)([
                  f,
                  e.table.stores.msgs.put(p),
                  (0, b.e)(r) && (0, h.Q)(e.table.stores, [r], !1),
                  e.table.stores.previews.delete(r.id),
                  e.table.stores.previews.delete((0, a.E)(r.id)),
                  (0, G.c)(e.table.stores, [r.id]),
                  (0, N.b)(e.table.stores, [r.id]),
                  (0, M.b)(e.table.stores, [r]),
                ]).then((e) => ({
                  result: "revoked",
                  dbChat: i()(e, 1)[0],
                  dbGroup: n,
                  dbMsg: p,
                  outgoingTo: null,
                  shouldDownloadMmsThumb: !1,
                }));
              })(t.dbChat, t.dbGroup).then(
                (e) => (
                  o.forEach((t) => {
                    var n, r;
                    null == e.notifications && (e.notifications = []);
                    var i,
                      a = null == (n = t.results) ? void 0 : n[0];
                    null != a && (null == (i = e.notifications) || i.push(a)),
                      null == (r = e.notifications) ||
                        r.push({ result: "group_update", action: t.action });
                  }),
                  e
                )
              );
          })
        );
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return h;
      }),
        n.d(t, "b", function () {
          return m;
        }),
        n.d(t, "c", function () {
          return g;
        }),
        n.d(t, "d", function () {
          return O;
        });
      var r = n(2),
        i = n(6),
        a = n(3),
        o = n(7),
        u = n(12),
        s = n(91),
        l = n(124),
        c = n(39),
        d = n(16),
        f = n(37),
        _ = n.n(f),
        p = n(17),
        v = n(14);
      function h(e, t, n) {
        var r = n.groupInfo.expiration;
        if (null == r || !y(t)) return null;
        var i = t.expiration || v.k;
        if (((!e && b(r, i)) || (i = r), i > v.k)) {
          var o = (0, a.k)(i, e ? (0, a.D)() : t.ts);
          return O(o), { expiration: i, validUntil: o };
        }
        return null;
      }
      function m(e, t, n, r) {
        var i = null == n ? void 0 : n.ephemeral;
        if (null == i || !y(t)) return null;
        var o,
          u = t.expiration;
        if (
          (e ? ((u = i.expiration), (o = i.ts)) : r && (u = r),
          null != u && u > v.k)
        ) {
          var s = (0, a.k)(u, e ? (0, a.D)() : t.ts),
            l = { expiration: u, validUntil: s };
          if (
            (O(s),
            null != o && (l.ephemeralSettingTimestamp = o),
            (0, p.a)("disappearing_mode"))
          ) {
            var c = i.initiator;
            null != c && (l.disappearingModeInitiator = c);
          }
          return l;
        }
        return null;
      }
      function g(e, t, n, u, f) {
        var _,
          p,
          h,
          m,
          g,
          O = e || t || { jid: n },
          I = null == O ? void 0 : O.ephemeral,
          S = null == I ? void 0 : I.expiration,
          k = null == I ? void 0 : I.ts,
          L = null == I ? void 0 : I.initiator;
        if (
          f.type !== r.f.EPHEMERAL ||
          ("setting" !== f.subtype && "sync_response" !== f.subtype)
        ) {
          if (
            u ||
            null == f.expiration ||
            null == f.ephemeralSettingTimestamp ||
            !y(f)
          )
            return { contact: O };
          if (
            ((_ = f.expiration),
            (p = f.ephemeralSettingTimestamp),
            (h = f.disappearingModeInitiator),
            _ > v.k && (0, a.k)(_, f.ts) <= (0, a.D)())
          )
            return (
              __LOG__(2)`maybeUpdateEphemeralSetting dropping expired message`,
              { dropMsg: !0 }
            );
          if (S && !b(S, _))
            __LOG__(
              2
            )`maybeUpdateEphemeralSetting restoring expiry from ${f.expiration}s to ${S}s`,
              (_ = S);
          else if (S === _ && k === p && ((null == L && null == h) || L === h))
            return { contact: O };
        } else {
          if (
            ((_ = f.ephemeralExpiration),
            (m = S),
            (g = f.ephemeralExpiration) < v.k ||
              (g !== m &&
                g > v.k &&
                !E(g) &&
                (__LOG__(2)`maybeUpdateEphemeralSetting ${g}s isn't allowed`,
                1)))
          )
            return { dropMsg: !0 };
          "setting" === f.subtype
            ? ((p = f.ts), (h = s.a.CHANGED_IN_CHAT))
            : (f.subtype,
              (p = f.ephemeralSettingTimestamp),
              (h = f.ephemeralInitiator));
        }
        if (!u && (p > f.ts || (0, a.y)(p) > 15))
          return (
            __LOG__(
              2
            )`maybeUpdateEphemeralSetting ignoring incoming msg from future`,
            { dropMsg: !0 }
          );
        var G = null != f.deviceId ? (0, o.B)(n, f.deviceId) : (0, o.e)(n),
          M = (null == I ? void 0 : I.deviceJid) || (0, o.e)(i.t.get()),
          A =
            u ||
            null == S ||
            null == k ||
            p > k ||
            (f.type === r.f.EPHEMERAL && S !== _ && k === p && G <= M) ||
            (null == L && null != h),
          P = (0, l.b)(S, _);
        if (A) {
          var T;
          __LOG__(2)`maybeUpdateEphemeralSetting client is out-of-sync`;
          var N = _ !== S,
            C = N ? f.ts : null == I ? void 0 : I.notificationTs,
            R = Object.assign({}, O, {
              ephemeral: {
                expiration: _,
                ts: p,
                notificationTs: C,
                deviceJid: u ? void 0 : G,
                syncResponse: void 0,
                initiator: null != (T = h) ? T : L,
              },
            });
          return f.type === r.f.EPHEMERAL
            ? N
              ? (P &&
                  ("setting" === f.subtype || "sync_response" === f.subtype
                    ? (f.updated = !0)
                    : f.subtype),
                { contact: R })
              : { dropMsg: !0, contact: R }
            : { contact: R, changedByMsg: N };
        }
        __LOG__(2)`maybeUpdateEphemeralSetting remote client is out-of-sync`;
        var x = O;
        if (
          (f.type !== r.f.EPHEMERAL || "sync_response" !== f.subtype) &&
          null != S &&
          null != k
        ) {
          var D = (function (e) {
            var t = (null == e ? void 0 : e.attempt) || 0,
              n = null == e ? void 0 : e.ts,
              r = (0, a.D)();
            return null == n || (t < 3 && !(0, a.n)(n, r, w.get(t) || 0))
              ? { sync: !0, attempt: t + 1, ts: r }
              : { sync: !1 };
          })(null == I ? void 0 : I.syncResponse);
          if (D.sync) {
            __LOG__(
              2
            )`maybeUpdateEphemeralSetting sending EPHEMERAL_SYNC_RESPONSE`,
              (0, c.b)().fireAndForget(
                d.e.sendEphemeralSyncResponse(n, S, k, L)
              );
            var U = D.attempt,
              j = D.ts,
              $ = Object.assign({}, I, {
                expiration: S,
                ts: k,
                initiator: L,
                syncResponse: { attempt: U, ts: j },
              });
            x = Object.assign({}, O, { ephemeral: $ });
          } else
            __LOG__(
              2
            )`maybeUpdateEphemeralSetting backed off sending EPHEMERAL_SYNC_RESPONSE`;
        }
        return f.type === r.f.EPHEMERAL
          ? { dropMsg: !0, contact: x }
          : { overrideExpiration: { expiration: _, updated: P }, contact: x };
      }
      function y(e) {
        switch (e.type) {
          case r.f.CIPHERTEXT:
          case r.f.IDENTITY_CHANGE:
          case r.f.PRIVACY_CHANGE:
          case r.f.MD_PLACEHOLDER:
          case r.f.FUTUREPROOF:
          case r.f.GROUP_NOTIFICATION:
          case r.f.BUSINESS_NOTIFICATION:
          case r.f.EPHEMERAL:
          case r.f.CONTACT_BLOCK_CHANGE:
            return !1;
          case r.f.TEXT:
          case r.f.VCARD:
          case r.f.IMAGE:
          case r.f.STICKER:
          case r.f.PTT:
          case r.f.AUDIO:
          case r.f.VIDEO:
          case r.f.GIF:
          case r.f.RICH_HSM:
          case r.f.LOCATION:
          case r.f.EXTENDED_TEXT:
          case r.f.GROUP_INVITE:
          case r.f.DOCUMENT:
          case r.f.HSM_BUTTON_REPLY:
          case r.f.POLL:
          case r.f.REVOKED:
            return !0;
          default:
            return (0, _.a)(e.type), !0;
        }
      }
      function b(e, t) {
        return e === v.k ? t === v.k : e > v.k && (t === e || E(t));
      }
      var w = new Map([
        [0, 0],
        [1, 180],
        [2, 900],
      ]);
      function O(e) {
        (0, u.d)()
          ? (0, u.c)("event", "uiEphemeralTimestamp", { validUntil: e })
          : (0, u.c)("backend", "ephemeralTimestamp", { validUntil: e });
      }
      function E(e) {
        return !!i.I.get().ephemeralMessagesAllowedValues.has(e);
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return r;
      }),
        n.d(t, "c", function () {
          return i;
        }),
        n.d(t, "a", function () {
          return a;
        });
      var r = 2,
        i = [
          "xmlstreamstart",
          "xmlstreamend",
          "s.whatsapp.net",
          "type",
          "participant",
          "from",
          "receipt",
          "id",
          "broadcast",
          "status",
          "message",
          "notification",
          "notify",
          "to",
          "jid",
          "user",
          "class",
          "offline",
          "g.us",
          "result",
          "mediatype",
          "enc",
          "skmsg",
          "off_cnt",
          "xmlns",
          "presence",
          "participants",
          "ack",
          "t",
          "iq",
          "device_hash",
          "read",
          "value",
          "media",
          "picture",
          "chatstate",
          "unavailable",
          "text",
          "urn:xmpp:whatsapp:push",
          "devices",
          "verified_name",
          "contact",
          "composing",
          "edge_routing",
          "routing_info",
          "item",
          "image",
          "verified_level",
          "get",
          "fallback_hostname",
          "2",
          "media_conn",
          "1",
          "v",
          "handshake",
          "fallback_class",
          "count",
          "config",
          "offline_preview",
          "download_buckets",
          "w:profile:picture",
          "set",
          "creation",
          "location",
          "fallback_ip4",
          "msg",
          "urn:xmpp:ping",
          "fallback_ip6",
          "call-creator",
          "relaylatency",
          "success",
          "subscribe",
          "video",
          "business_hours_config",
          "platform",
          "hostname",
          "version",
          "unknown",
          "0",
          "ping",
          "hash",
          "edit",
          "subject",
          "max_buckets",
          "download",
          "delivery",
          "props",
          "sticker",
          "name",
          "last",
          "contacts",
          "business",
          "primary",
          "preview",
          "w:p",
          "pkmsg",
          "call-id",
          "retry",
          "prop",
          "call",
          "auth_ttl",
          "available",
          "relay_id",
          "last_id",
          "day_of_week",
          "w",
          "host",
          "seen",
          "bits",
          "list",
          "atn",
          "upload",
          "is_new",
          "w:stats",
          "key",
          "paused",
          "specific_hours",
          "multicast",
          "stream:error",
          "mmg.whatsapp.net",
          "code",
          "deny",
          "played",
          "profile",
          "fna",
          "device-list",
          "close_time",
          "latency",
          "gcm",
          "pop",
          "audio",
          "26",
          "w:web",
          "open_time",
          "error",
          "auth",
          "ip4",
          "update",
          "profile_options",
          "config_value",
          "category",
          "catalog_not_created",
          "00",
          "config_code",
          "mode",
          "catalog_status",
          "ip6",
          "blocklist",
          "registration",
          "7",
          "web",
          "fail",
          "w:m",
          "cart_enabled",
          "ttl",
          "gif",
          "300",
          "device_orientation",
          "identity",
          "query",
          "401",
          "media-gig2-1.cdn.whatsapp.net",
          "in",
          "3",
          "te2",
          "add",
          "fallback",
          "categories",
          "ptt",
          "encrypt",
          "notice",
          "thumbnail-document",
          "item-not-found",
          "12",
          "thumbnail-image",
          "stage",
          "thumbnail-link",
          "usync",
          "out",
          "thumbnail-video",
          "8",
          "01",
          "context",
          "sidelist",
          "thumbnail-gif",
          "terminate",
          "not-authorized",
          "orientation",
          "dhash",
          "capability",
          "side_list",
          "md-app-state",
          "description",
          "serial",
          "readreceipts",
          "te",
          "business_hours",
          "md-msg-hist",
          "tag",
          "attribute_padding",
          "document",
          "open_24h",
          "delete",
          "expiration",
          "active",
          "prev_v_id",
          "true",
          "passive",
          "index",
          "4",
          "conflict",
          "remove",
          "w:gp2",
          "config_expo_key",
          "screen_height",
          "replaced",
          "02",
          "screen_width",
          "uploadfieldstat",
          "2:47DEQpj8",
          "media-bog1-1.cdn.whatsapp.net",
          "encopt",
          "url",
          "catalog_exists",
          "keygen",
          "rate",
          "offer",
          "opus",
          "media-mia3-1.cdn.whatsapp.net",
          "privacy",
          "media-mia3-2.cdn.whatsapp.net",
          "signature",
          "preaccept",
          "token_id",
          "media-eze1-1.cdn.whatsapp.net",
        ],
        a = [
          [
            "media-for1-1.cdn.whatsapp.net",
            "relay",
            "media-gru2-2.cdn.whatsapp.net",
            "uncompressed",
            "medium",
            "voip_settings",
            "device",
            "reason",
            "media-lim1-1.cdn.whatsapp.net",
            "media-qro1-2.cdn.whatsapp.net",
            "media-gru1-2.cdn.whatsapp.net",
            "action",
            "features",
            "media-gru2-1.cdn.whatsapp.net",
            "media-gru1-1.cdn.whatsapp.net",
            "media-otp1-1.cdn.whatsapp.net",
            "kyc-id",
            "priority",
            "phash",
            "mute",
            "token",
            "100",
            "media-qro1-1.cdn.whatsapp.net",
            "none",
            "media-mrs2-2.cdn.whatsapp.net",
            "sign_credential",
            "03",
            "media-mrs2-1.cdn.whatsapp.net",
            "protocol",
            "timezone",
            "transport",
            "eph_setting",
            "1080",
            "original_dimensions",
            "media-frx5-1.cdn.whatsapp.net",
            "background",
            "disable",
            "original_image_url",
            "5",
            "transaction-id",
            "direct_path",
            "103",
            "appointment_only",
            "request_image_url",
            "peer_pid",
            "address",
            "105",
            "104",
            "102",
            "media-cdt1-1.cdn.whatsapp.net",
            "101",
            "109",
            "110",
            "106",
            "background_location",
            "v_id",
            "sync",
            "status-old",
            "111",
            "107",
            "ppic",
            "media-scl2-1.cdn.whatsapp.net",
            "business_profile",
            "108",
            "invite",
            "04",
            "audio_duration",
            "media-mct1-1.cdn.whatsapp.net",
            "media-cdg2-1.cdn.whatsapp.net",
            "media-los2-1.cdn.whatsapp.net",
            "invis",
            "net",
            "voip_payload_type",
            "status-revoke-delay",
            "404",
            "state",
            "use_correct_order_for_hmac_sha1",
            "ver",
            "media-mad1-1.cdn.whatsapp.net",
            "order",
            "540",
            "skey",
            "blinded_credential",
            "android",
            "contact_remove",
            "enable_downlink_relay_latency_only",
            "duration",
            "enable_vid_one_way_codec_nego",
            "6",
            "media-sof1-1.cdn.whatsapp.net",
            "accept",
            "all",
            "signed_credential",
            "media-atl3-1.cdn.whatsapp.net",
            "media-lhr8-1.cdn.whatsapp.net",
            "website",
            "05",
            "latitude",
            "media-dfw5-1.cdn.whatsapp.net",
            "forbidden",
            "enable_audio_piggyback_network_mtu_fix",
            "media-dfw5-2.cdn.whatsapp.net",
            "note.m4r",
            "media-atl3-2.cdn.whatsapp.net",
            "jb_nack_discard_count_fix",
            "longitude",
            "Opening.m4r",
            "media-arn2-1.cdn.whatsapp.net",
            "email",
            "timestamp",
            "admin",
            "media-pmo1-1.cdn.whatsapp.net",
            "America/Sao_Paulo",
            "contact_add",
            "media-sin6-1.cdn.whatsapp.net",
            "interactive",
            "8000",
            "acs_public_key",
            "sigquit_anr_detector_release_rollover_percent",
            "media.fmed1-2.fna.whatsapp.net",
            "groupadd",
            "enabled_for_video_upgrade",
            "latency_update_threshold",
            "media-frt3-2.cdn.whatsapp.net",
            "calls_row_constraint_layout",
            "media.fgbb2-1.fna.whatsapp.net",
            "mms4_media_retry_notification_encryption_enabled",
            "timeout",
            "media-sin6-3.cdn.whatsapp.net",
            "audio_nack_jitter_multiplier",
            "jb_discard_count_adjust_pct_rc",
            "audio_reserve_bps",
            "delta",
            "account_sync",
            "default",
            "media.fjed4-6.fna.whatsapp.net",
            "06",
            "lock_video_orientation",
            "media-frt3-1.cdn.whatsapp.net",
            "w:g2",
            "media-sin6-2.cdn.whatsapp.net",
            "audio_nack_algo_mask",
            "media.fgbb2-2.fna.whatsapp.net",
            "media.fmed1-1.fna.whatsapp.net",
            "cond_range_target_bitrate",
            "mms4_server_error_receipt_encryption_enabled",
            "vid_rc_dyn",
            "fri",
            "cart_v1_1_order_message_changes_enabled",
            "reg_push",
            "jb_hist_deposit_value",
            "privatestats",
            "media.fist7-2.fna.whatsapp.net",
            "thu",
            "jb_discard_count_adjust_pct",
            "mon",
            "group_call_video_maximization_enabled",
            "mms_cat_v1_forward_hot_override_enabled",
            "audio_nack_new_rtt",
            "media.fsub2-3.fna.whatsapp.net",
            "media_upload_aggressive_retry_exponential_backoff_enabled",
            "tue",
            "wed",
            "media.fruh4-2.fna.whatsapp.net",
            "audio_nack_max_seq_req",
            "max_rtp_audio_packet_resends",
            "jb_hist_max_cdf_value",
            "07",
            "audio_nack_max_jb_delay",
            "mms_forward_partially_downloaded_video",
            "media-lcy1-1.cdn.whatsapp.net",
            "resume",
            "jb_inband_fec_aware",
            "new_commerce_entry_point_enabled",
            "480",
            "payments_upi_generate_qr_amount_limit",
            "sigquit_anr_detector_rollover_percent",
            "media.fsdu2-1.fna.whatsapp.net",
            "fbns",
            "aud_pkt_reorder_pct",
            "dec",
            "stop_probing_before_accept_send",
            "media_upload_max_aggressive_retries",
            "edit_business_profile_new_mode_enabled",
            "media.fhex4-1.fna.whatsapp.net",
            "media.fjed4-3.fna.whatsapp.net",
            "sigquit_anr_detector_64bit_rollover_percent",
            "cond_range_ema_jb_last_delay",
            "watls_enable_early_data_http_get",
            "media.fsdu2-2.fna.whatsapp.net",
            "message_qr_disambiguation_enabled",
            "media-mxp1-1.cdn.whatsapp.net",
            "sat",
            "vertical",
            "media.fruh4-5.fna.whatsapp.net",
            "200",
            "media-sof1-2.cdn.whatsapp.net",
            "-1",
            "height",
            "product_catalog_hide_show_items_enabled",
            "deep_copy_frm_last",
            "tsoffline",
            "vp8/h.264",
            "media.fgye5-3.fna.whatsapp.net",
            "media.ftuc1-2.fna.whatsapp.net",
            "smb_upsell_chat_banner_enabled",
            "canonical",
            "08",
            "9",
            ".",
            "media.fgyd4-4.fna.whatsapp.net",
            "media.fsti4-1.fna.whatsapp.net",
            "mms_vcache_aggregation_enabled",
            "mms_hot_content_timespan_in_seconds",
            "nse_ver",
            "rte",
            "third_party_sticker_web_sync",
            "cond_range_target_total_bitrate",
            "media_upload_aggressive_retry_enabled",
            "instrument_spam_report_enabled",
            "disable_reconnect_tone",
            "move_media_folder_from_sister_app",
            "one_tap_calling_in_group_chat_size",
            "10",
            "storage_mgmt_banner_threshold_mb",
            "enable_backup_passive_mode",
            "sharechat_inline_player_enabled",
            "media.fcnq2-1.fna.whatsapp.net",
            "media.fhex4-2.fna.whatsapp.net",
            "media.fist6-3.fna.whatsapp.net",
            "ephemeral_drop_column_stage",
            "reconnecting_after_network_change_threshold_ms",
            "media-lhr8-2.cdn.whatsapp.net",
            "cond_jb_last_delay_ema_alpha",
            "entry_point_block_logging_enabled",
            "critical_event_upload_log_config",
            "respect_initial_bitrate_estimate",
            "smaller_image_thumbs_status_enabled",
            "media.fbtz1-4.fna.whatsapp.net",
            "media.fjed4-1.fna.whatsapp.net",
            "width",
            "720",
            "enable_frame_dropper",
            "enable_one_side_mode",
            "urn:xmpp:whatsapp:dirty",
            "new_sticker_animation_behavior_v2",
            "media.flim3-2.fna.whatsapp.net",
            "media.fuio6-2.fna.whatsapp.net",
            "skip_forced_signaling",
            "dleq_proof",
            "status_video_max_bitrate",
            "lazy_send_probing_req",
            "enhanced_storage_management",
            "android_privatestats_endpoint_dit_enabled",
            "media.fscl13-2.fna.whatsapp.net",
            "video_duration",
          ],
          [
            "group_call_discoverability_enabled",
            "media.faep9-2.fna.whatsapp.net",
            "msgr",
            "bloks_loggedin_access_app_id",
            "db_status_migration_step",
            "watls_prefer_ip6",
            "jabber:iq:privacy",
            "68",
            "media.fsaw1-11.fna.whatsapp.net",
            "mms4_media_conn_persist_enabled",
            "animated_stickers_thread_clean_up",
            "media.fcgk3-2.fna.whatsapp.net",
            "media.fcgk4-6.fna.whatsapp.net",
            "media.fgye5-2.fna.whatsapp.net",
            "media.flpb1-1.fna.whatsapp.net",
            "media.fsub2-1.fna.whatsapp.net",
            "media.fuio6-3.fna.whatsapp.net",
            "not-allowed",
            "partial_pjpeg_bw_threshold",
            "cap_estimated_bitrate",
            "mms_chatd_resume_check_over_thrift",
            "smb_upsell_business_profile_enabled",
            "product_catalog_webclient",
            "groups",
            "sigquit_anr_detector_release_updated_rollout",
            "syncd_key_rotation_enabled",
            "media.fdmm2-1.fna.whatsapp.net",
            "media-hou1-1.cdn.whatsapp.net",
            "remove_old_chat_notifications",
            "smb_biztools_deeplink_enabled",
            "use_downloadable_filters_int",
            "group_qr_codes_enabled",
            "max_receipt_processing_time",
            "optimistic_image_processing_enabled",
            "smaller_video_thumbs_status_enabled",
            "watls_early_data",
            "reconnecting_before_relay_failover_threshold_ms",
            "cond_range_packet_loss_pct",
            "groups_privacy_blacklist",
            "status-revoke-drop",
            "stickers_animated_thumbnail_download",
            "dedupe_transcode_shared_images",
            "dedupe_transcode_shared_videos",
            "media.fcnq2-2.fna.whatsapp.net",
            "media.fgyd4-1.fna.whatsapp.net",
            "media.fist7-1.fna.whatsapp.net",
            "media.flim3-3.fna.whatsapp.net",
            "add_contact_by_qr_enabled",
            "https://faq.whatsapp.com/payments",
            "multicast_limit_global",
            "sticker_notification_preview",
            "smb_better_catalog_list_adapters_enabled",
            "bloks_use_minscript_android",
            "pen_smoothing_enabled",
            "media.fcgk4-5.fna.whatsapp.net",
            "media.fevn1-3.fna.whatsapp.net",
            "media.fpoj7-1.fna.whatsapp.net",
            "media-arn2-2.cdn.whatsapp.net",
            "reconnecting_before_network_change_threshold_ms",
            "android_media_use_fresco_for_gifs",
            "cond_in_congestion",
            "status_image_max_edge",
            "sticker_search_enabled",
            "starred_stickers_web_sync",
            "db_blank_me_jid_migration_step",
            "media.fist6-2.fna.whatsapp.net",
            "media.ftuc1-1.fna.whatsapp.net",
            "09",
            "anr_fast_logs_upload_rollout",
            "camera_core_integration_enabled",
            "11",
            "third_party_sticker_caching",
            "thread_dump_contact_support",
            "wam_privatestats_enabled",
            "vcard_as_document_size_kb",
            "maxfpp",
            "fbip",
            "ephemeral_allow_group_members",
            "media-bom1-2.cdn.whatsapp.net",
            "media-xsp1-1.cdn.whatsapp.net",
            "disable_prewarm",
            "frequently_forwarded_max",
            "media.fbtz1-5.fna.whatsapp.net",
            "media.fevn7-1.fna.whatsapp.net",
            "media.fgyd4-2.fna.whatsapp.net",
            "sticker_tray_animation_fully_visible_items",
            "green_alert_banner_duration",
            "reconnecting_after_p2p_failover_threshold_ms",
            "connected",
            "share_biz_vcard_enabled",
            "stickers_animation",
            "0a",
            "1200",
            "WhatsApp",
            "group_description_length",
            "p_v_id",
            "payments_upi_intent_transaction_limit",
            "frequently_forwarded_messages",
            "media-xsp1-2.cdn.whatsapp.net",
            "media.faep8-1.fna.whatsapp.net",
            "media.faep8-2.fna.whatsapp.net",
            "media.faep9-1.fna.whatsapp.net",
            "media.fdmm2-2.fna.whatsapp.net",
            "media.fgzt3-1.fna.whatsapp.net",
            "media.flim4-2.fna.whatsapp.net",
            "media.frao1-1.fna.whatsapp.net",
            "media.fscl9-2.fna.whatsapp.net",
            "media.fsub2-2.fna.whatsapp.net",
            "superadmin",
            "media.fbog10-1.fna.whatsapp.net",
            "media.fcgh28-1.fna.whatsapp.net",
            "media.fjdo10-1.fna.whatsapp.net",
            "third_party_animated_sticker_import",
            "delay_fec",
            "attachment_picker_refresh",
            "android_linked_devices_re_auth_enabled",
            "rc_dyn",
            "green_alert_block_jitter",
            "add_contact_logging_enabled",
            "biz_message_logging_enabled",
            "conversation_media_preview_v2",
            "media-jnb1-1.cdn.whatsapp.net",
            "ab_key",
            "media.fcgk4-2.fna.whatsapp.net",
            "media.fevn1-1.fna.whatsapp.net",
            "media.fist6-1.fna.whatsapp.net",
            "media.fruh4-4.fna.whatsapp.net",
            "media.fsti4-2.fna.whatsapp.net",
            "mms_vcard_autodownload_size_kb",
            "watls_enabled",
            "notif_ch_override_off",
            "media.fsaw1-14.fna.whatsapp.net",
            "media.fscl13-1.fna.whatsapp.net",
            "db_group_participant_migration_step",
            "1020",
            "cond_range_sterm_rtt",
            "invites_logging_enabled",
            "triggered_block_enabled",
            "group_call_max_participants",
            "media-iad3-1.cdn.whatsapp.net",
            "product_catalog_open_deeplink",
            "shops_required_tos_version",
            "image_max_kbytes",
            "cond_low_quality_vid_mode",
            "db_receipt_migration_step",
            "jb_early_prob_hist_shrink",
            "media.fdmm2-3.fna.whatsapp.net",
            "media.fdmm2-4.fna.whatsapp.net",
            "media.fruh4-1.fna.whatsapp.net",
            "media.fsaw2-2.fna.whatsapp.net",
            "remove_geolocation_videos",
            "new_animation_behavior",
            "fieldstats_beacon_chance",
            "403",
            "authkey_reset_on_ban",
            "continuous_ptt_playback",
            "reconnecting_after_relay_failover_threshold_ms",
            "false",
            "group",
            "sun",
            "conversation_swipe_to_reply",
            "ephemeral_messages_setting",
            "smaller_video_thumbs_enabled",
            "md_device_sync_enabled",
            "bloks_shops_pdp_url_regex",
            "lasso_integration_enabled",
            "media-bom1-1.cdn.whatsapp.net",
            "new_backup_format_enabled",
            "256",
            "media.faep6-1.fna.whatsapp.net",
            "media.fasr1-1.fna.whatsapp.net",
            "media.fbtz1-7.fna.whatsapp.net",
            "media.fesb4-1.fna.whatsapp.net",
            "media.fjdo1-2.fna.whatsapp.net",
            "media.frba2-1.fna.whatsapp.net",
            "watls_no_dns",
            "600",
            "db_broadcast_me_jid_migration_step",
            "new_wam_runtime_enabled",
            "group_update",
            "enhanced_block_enabled",
            "sync_wifi_threshold_kb",
            "mms_download_nc_cat",
            "bloks_minification_enabled",
            "ephemeral_messages_enabled",
            "reject",
            "voip_outgoing_xml_signaling",
            "creator",
            "dl_bw",
            "payments_request_messages",
            "target_bitrate",
            "bloks_rendercore_enabled",
            "media-hbe1-1.cdn.whatsapp.net",
            "media-hel3-1.cdn.whatsapp.net",
            "media-kut2-2.cdn.whatsapp.net",
            "media-lax3-1.cdn.whatsapp.net",
            "media-lax3-2.cdn.whatsapp.net",
            "sticker_pack_deeplink_enabled",
            "hq_image_bw_threshold",
            "status_info",
            "voip",
            "dedupe_transcode_videos",
            "grp_uii_cleanup",
            "linked_device_max_count",
            "media.flim1-1.fna.whatsapp.net",
            "media.fsaw2-1.fna.whatsapp.net",
            "reconnecting_after_call_active_threshold_ms",
            "1140",
            "catalog_pdp_new_design",
            "media.fbtz1-10.fna.whatsapp.net",
            "media.fsaw1-15.fna.whatsapp.net",
            "0b",
            "consumer_rc_provider",
            "mms_async_fast_forward_ttl",
            "jb_eff_size_fix",
            "voip_incoming_xml_signaling",
            "media_provider_share_by_uuid",
            "suspicious_links",
            "dedupe_transcode_images",
            "green_alert_modal_start",
            "media-cgk1-1.cdn.whatsapp.net",
            "media-lga3-1.cdn.whatsapp.net",
            "template_doc_mime_types",
            "important_messages",
            "user_add",
            "vcard_max_size_kb",
            "media.fada2-1.fna.whatsapp.net",
            "media.fbog2-5.fna.whatsapp.net",
            "media.fbtz1-3.fna.whatsapp.net",
            "media.fcgk3-1.fna.whatsapp.net",
            "media.fcgk7-1.fna.whatsapp.net",
            "media.flim1-3.fna.whatsapp.net",
            "media.fscl9-1.fna.whatsapp.net",
            "ctwa_context_enterprise_enabled",
            "media.fsaw1-13.fna.whatsapp.net",
            "media.fuio11-2.fna.whatsapp.net",
            "status_collapse_muted",
            "db_migration_level_force",
            "recent_stickers_web_sync",
            "bloks_session_state",
            "bloks_shops_enabled",
            "green_alert_setting_deep_links_enabled",
            "restrict_groups",
            "battery",
            "green_alert_block_start",
            "refresh",
            "ctwa_context_enabled",
            "md_messaging_enabled",
            "status_image_quality",
            "md_blocklist_v2_server",
            "media-del1-1.cdn.whatsapp.net",
            "13",
            "userrate",
            "a_v_id",
            "cond_rtt_ema_alpha",
            "invalid",
          ],
          [
            "media.fada1-1.fna.whatsapp.net",
            "media.fadb3-2.fna.whatsapp.net",
            "media.fbhz2-1.fna.whatsapp.net",
            "media.fcor2-1.fna.whatsapp.net",
            "media.fjed4-2.fna.whatsapp.net",
            "media.flhe4-1.fna.whatsapp.net",
            "media.frak1-2.fna.whatsapp.net",
            "media.fsub6-3.fna.whatsapp.net",
            "media.fsub6-7.fna.whatsapp.net",
            "media.fvvi1-1.fna.whatsapp.net",
            "search_v5_eligible",
            "wam_real_time_enabled",
            "report_disk_event",
            "max_tx_rott_based_bitrate",
            "product",
            "media.fjdo10-2.fna.whatsapp.net",
            "video_frame_crc_sample_interval",
            "media_max_autodownload",
            "15",
            "h.264",
            "wam_privatestats_buffer_count",
            "md_phash_v2_enabled",
            "account_transfer_enabled",
            "business_product_catalog",
            "enable_non_dyn_codec_param_fix",
            "is_user_under_epd_jurisdiction",
            "media.fbog2-4.fna.whatsapp.net",
            "media.fbtz1-2.fna.whatsapp.net",
            "media.fcfc1-1.fna.whatsapp.net",
            "media.fjed4-5.fna.whatsapp.net",
            "media.flhe4-2.fna.whatsapp.net",
            "media.flim1-2.fna.whatsapp.net",
            "media.flos5-1.fna.whatsapp.net",
            "android_key_store_auth_ver",
            "010",
            "anr_process_monitor",
            "delete_old_auth_key",
            "media.fcor10-3.fna.whatsapp.net",
            "storage_usage_enabled",
            "android_camera2_support_level",
            "dirty",
            "consumer_content_provider",
            "status_video_max_duration",
            "0c",
            "bloks_cache_enabled",
            "media.fadb2-2.fna.whatsapp.net",
            "media.fbko1-1.fna.whatsapp.net",
            "media.fbtz1-9.fna.whatsapp.net",
            "media.fcgk4-4.fna.whatsapp.net",
            "media.fesb4-2.fna.whatsapp.net",
            "media.fevn1-2.fna.whatsapp.net",
            "media.fist2-4.fna.whatsapp.net",
            "media.fjdo1-1.fna.whatsapp.net",
            "media.fruh4-6.fna.whatsapp.net",
            "media.fsrg5-1.fna.whatsapp.net",
            "media.fsub6-6.fna.whatsapp.net",
            "minfpp",
            "5000",
            "locales",
            "video_max_bitrate",
            "use_new_auth_key",
            "bloks_http_enabled",
            "heartbeat_interval",
            "media.fbog11-1.fna.whatsapp.net",
            "ephemeral_group_query_ts",
            "fec_nack",
            "search_in_storage_usage",
            "c",
            "media-amt2-1.cdn.whatsapp.net",
            "linked_devices_ui_enabled",
            "14",
            "async_data_load_on_startup",
            "voip_incoming_xml_ack",
            "16",
            "db_migration_step",
            "init_bwe",
            "max_participants",
            "wam_buffer_count",
            "media.fada2-2.fna.whatsapp.net",
            "media.fadb3-1.fna.whatsapp.net",
            "media.fcor2-2.fna.whatsapp.net",
            "media.fdiy1-2.fna.whatsapp.net",
            "media.frba3-2.fna.whatsapp.net",
            "media.fsaw2-3.fna.whatsapp.net",
            "1280",
            "status_grid_enabled",
            "w:biz",
            "product_catalog_deeplink",
            "media.fgye10-2.fna.whatsapp.net",
            "media.fuio11-1.fna.whatsapp.net",
            "optimistic_upload",
            "work_manager_init",
            "lc",
            "catalog_message",
            "cond_net_medium",
            "enable_periodical_aud_rr_processing",
            "cond_range_ema_rtt",
            "media-tir2-1.cdn.whatsapp.net",
            "frame_ms",
            "group_invite_sending",
            "payments_web_enabled",
            "wallpapers_v2",
            "0d",
            "browser",
            "hq_image_max_edge",
            "image_edit_zoom",
            "linked_devices_re_auth_enabled",
            "media.faly3-2.fna.whatsapp.net",
            "media.fdoh5-3.fna.whatsapp.net",
            "media.fesb3-1.fna.whatsapp.net",
            "media.fknu1-1.fna.whatsapp.net",
            "media.fmex3-1.fna.whatsapp.net",
            "media.fruh4-3.fna.whatsapp.net",
            "255",
            "web_upgrade_to_md_modal",
            "audio_piggyback_timeout_msec",
            "enable_audio_oob_fec_feature",
            "from_ip",
            "image_max_edge",
            "message_qr_enabled",
            "powersave",
            "receipt_pre_acking",
            "video_max_edge",
            "full",
            "011",
            "012",
            "enable_audio_oob_fec_for_sender",
            "md_voip_enabled",
            "enable_privatestats",
            "max_fec_ratio",
            "payments_cs_faq_url",
            "media-xsp1-3.cdn.whatsapp.net",
            "hq_image_quality",
            "media.fasr1-2.fna.whatsapp.net",
            "media.fbog3-1.fna.whatsapp.net",
            "media.ffjr1-6.fna.whatsapp.net",
            "media.fist2-3.fna.whatsapp.net",
            "media.flim4-3.fna.whatsapp.net",
            "media.fpbc2-4.fna.whatsapp.net",
            "media.fpku1-1.fna.whatsapp.net",
            "media.frba1-1.fna.whatsapp.net",
            "media.fudi1-1.fna.whatsapp.net",
            "media.fvvi1-2.fna.whatsapp.net",
            "gcm_fg_service",
            "enable_dec_ltr_size_check",
            "clear",
            "lg",
            "media.fgru11-1.fna.whatsapp.net",
            "18",
            "media-lga3-2.cdn.whatsapp.net",
            "pkey",
            "0e",
            "max_subject",
            "cond_range_lterm_rtt",
            "announcement_groups",
            "biz_profile_options",
            "s_t",
            "media.fabv2-1.fna.whatsapp.net",
            "media.fcai3-1.fna.whatsapp.net",
            "media.fcgh1-1.fna.whatsapp.net",
            "media.fctg1-4.fna.whatsapp.net",
            "media.fdiy1-1.fna.whatsapp.net",
            "media.fisb4-1.fna.whatsapp.net",
            "media.fpku1-2.fna.whatsapp.net",
            "media.fros9-1.fna.whatsapp.net",
            "status_v3_text",
            "usync_sidelist",
            "17",
            "announcement",
            "...",
            "md_group_notification",
            "0f",
            "animated_pack_in_store",
            "013",
            "America/Mexico_City",
            "1260",
            "media-ams4-1.cdn.whatsapp.net",
            "media-cgk1-2.cdn.whatsapp.net",
            "media-cpt1-1.cdn.whatsapp.net",
            "media-maa2-1.cdn.whatsapp.net",
            "media.fgye10-1.fna.whatsapp.net",
            "e",
            "catalog_cart",
            "hfm_string_changes",
            "init_bitrate",
            "packless_hsm",
            "group_info",
            "America/Belem",
            "50",
            "960",
            "cond_range_bwe",
            "decode",
            "encode",
            "media.fada1-8.fna.whatsapp.net",
            "media.fadb1-2.fna.whatsapp.net",
            "media.fasu6-1.fna.whatsapp.net",
            "media.fbog4-1.fna.whatsapp.net",
            "media.fcgk9-2.fna.whatsapp.net",
            "media.fdoh5-2.fna.whatsapp.net",
            "media.ffjr1-2.fna.whatsapp.net",
            "media.fgua1-1.fna.whatsapp.net",
            "media.fgye1-1.fna.whatsapp.net",
            "media.fist1-4.fna.whatsapp.net",
            "media.fpbc2-2.fna.whatsapp.net",
            "media.fres2-1.fna.whatsapp.net",
            "media.fsdq1-2.fna.whatsapp.net",
            "media.fsub6-5.fna.whatsapp.net",
            "profilo_enabled",
            "template_hsm",
            "use_disorder_prefetching_timer",
            "video_codec_priority",
            "vpx_max_qp",
            "ptt_reduce_recording_delay",
            "25",
            "iphone",
            "Windows",
            "s_o",
            "Africa/Lagos",
            "abt",
            "media-kut2-1.cdn.whatsapp.net",
            "media-mba1-1.cdn.whatsapp.net",
            "media-mxp1-2.cdn.whatsapp.net",
            "md_blocklist_v2",
            "url_text",
            "enable_short_offset",
            "group_join_permissions",
            "enable_audio_piggyback_feature",
            "image_quality",
            "media.fcgk7-2.fna.whatsapp.net",
            "media.fcgk8-2.fna.whatsapp.net",
            "media.fclo7-1.fna.whatsapp.net",
            "media.fcmn1-1.fna.whatsapp.net",
            "media.feoh1-1.fna.whatsapp.net",
            "media.fgyd4-3.fna.whatsapp.net",
            "media.fjed4-4.fna.whatsapp.net",
            "media.flim1-4.fna.whatsapp.net",
            "media.flim2-4.fna.whatsapp.net",
            "media.fplu6-1.fna.whatsapp.net",
            "media.frak1-1.fna.whatsapp.net",
            "media.fsdq1-1.fna.whatsapp.net",
            "to_ip",
            "015",
            "vp8",
            "19",
            "21",
            "1320",
            "auth_key_ver",
            "message_processing_dedup",
            "server-error",
            "wap4_enabled",
            "420",
            "014",
            "cond_range_rtt",
            "ptt_fast_lock_enabled",
            "media-ort2-1.cdn.whatsapp.net",
            "fwd_ui_start_ts",
          ],
          [
            "contact_blacklist",
            "Asia/Jakarta",
            "media.fepa10-1.fna.whatsapp.net",
            "media.fmex10-3.fna.whatsapp.net",
            "disorder_prefetching_start_when_empty",
            "America/Bogota",
            "use_local_probing_rx_bitrate",
            "America/Argentina/Buenos_Aires",
            "cross_post",
            "media.fabb1-1.fna.whatsapp.net",
            "media.fbog4-2.fna.whatsapp.net",
            "media.fcgk9-1.fna.whatsapp.net",
            "media.fcmn2-1.fna.whatsapp.net",
            "media.fdel3-1.fna.whatsapp.net",
            "media.ffjr1-1.fna.whatsapp.net",
            "media.fgdl5-1.fna.whatsapp.net",
            "media.flpb1-2.fna.whatsapp.net",
            "media.fmex2-1.fna.whatsapp.net",
            "media.frba2-2.fna.whatsapp.net",
            "media.fros2-2.fna.whatsapp.net",
            "media.fruh2-1.fna.whatsapp.net",
            "media.fybz2-2.fna.whatsapp.net",
            "options",
            "20",
            "a",
            "017",
            "018",
            "mute_always",
            "user_notice",
            "Asia/Kolkata",
            "gif_provider",
            "locked",
            "media-gua1-1.cdn.whatsapp.net",
            "piggyback_exclude_force_flush",
            "24",
            "media.frec39-1.fna.whatsapp.net",
            "user_remove",
            "file_max_size",
            "cond_packet_loss_pct_ema_alpha",
            "media.facc1-1.fna.whatsapp.net",
            "media.fadb2-1.fna.whatsapp.net",
            "media.faly3-1.fna.whatsapp.net",
            "media.fbdo6-2.fna.whatsapp.net",
            "media.fcmn2-2.fna.whatsapp.net",
            "media.fctg1-3.fna.whatsapp.net",
            "media.ffez1-2.fna.whatsapp.net",
            "media.fist1-3.fna.whatsapp.net",
            "media.fist2-2.fna.whatsapp.net",
            "media.flim2-2.fna.whatsapp.net",
            "media.fmct2-3.fna.whatsapp.net",
            "media.fpei3-1.fna.whatsapp.net",
            "media.frba3-1.fna.whatsapp.net",
            "media.fsdu8-2.fna.whatsapp.net",
            "media.fstu2-1.fna.whatsapp.net",
            "media_type",
            "receipt_agg",
            "016",
            "enable_pli_for_crc_mismatch",
            "live",
            "enc_rekey",
            "frskmsg",
            "d",
            "media.fdel11-2.fna.whatsapp.net",
            "proto",
            "2250",
            "audio_piggyback_enable_cache",
            "skip_nack_if_ltrp_sent",
            "mark_dtx_jb_frames",
            "web_service_delay",
            "7282",
            "catalog_send_all",
            "outgoing",
            "360",
            "30",
            "LIMITED",
            "019",
            "audio_picker",
            "bpv2_phase",
            "media.fada1-7.fna.whatsapp.net",
            "media.faep7-1.fna.whatsapp.net",
            "media.fbko1-2.fna.whatsapp.net",
            "media.fbni1-2.fna.whatsapp.net",
            "media.fbtz1-1.fna.whatsapp.net",
            "media.fbtz1-8.fna.whatsapp.net",
            "media.fcjs3-1.fna.whatsapp.net",
            "media.fesb3-2.fna.whatsapp.net",
            "media.fgdl5-4.fna.whatsapp.net",
            "media.fist2-1.fna.whatsapp.net",
            "media.flhe2-2.fna.whatsapp.net",
            "media.flim2-1.fna.whatsapp.net",
            "media.fmex1-1.fna.whatsapp.net",
            "media.fpat3-2.fna.whatsapp.net",
            "media.fpat3-3.fna.whatsapp.net",
            "media.fros2-1.fna.whatsapp.net",
            "media.fsdu8-1.fna.whatsapp.net",
            "media.fsub3-2.fna.whatsapp.net",
            "payments_chat_plugin",
            "cond_congestion_no_rtcp_thr",
            "green_alert",
            "not-a-biz",
            "..",
            "shops_pdp_urls_config",
            "source",
            "media-dus1-1.cdn.whatsapp.net",
            "mute_video",
            "01b",
            "currency",
            "max_keys",
            "resume_check",
            "contact_array",
            "qr_scanning",
            "23",
            "b",
            "media.fbfh15-1.fna.whatsapp.net",
            "media.flim22-1.fna.whatsapp.net",
            "media.fsdu11-1.fna.whatsapp.net",
            "media.fsdu15-1.fna.whatsapp.net",
            "Chrome",
            "fts_version",
            "60",
            "media.fada1-6.fna.whatsapp.net",
            "media.faep4-2.fna.whatsapp.net",
            "media.fbaq5-1.fna.whatsapp.net",
            "media.fbni1-1.fna.whatsapp.net",
            "media.fcai3-2.fna.whatsapp.net",
            "media.fdel3-2.fna.whatsapp.net",
            "media.fdmm3-2.fna.whatsapp.net",
            "media.fhex3-1.fna.whatsapp.net",
            "media.fisb4-2.fna.whatsapp.net",
            "media.fkhi5-2.fna.whatsapp.net",
            "media.flos2-1.fna.whatsapp.net",
            "media.fmct2-1.fna.whatsapp.net",
            "media.fntr7-1.fna.whatsapp.net",
            "media.frak3-1.fna.whatsapp.net",
            "media.fruh5-2.fna.whatsapp.net",
            "media.fsub6-1.fna.whatsapp.net",
            "media.fuab1-2.fna.whatsapp.net",
            "media.fuio1-1.fna.whatsapp.net",
            "media.fver1-1.fna.whatsapp.net",
            "media.fymy1-1.fna.whatsapp.net",
            "product_catalog",
            "1380",
            "audio_oob_fec_max_pkts",
            "22",
            "254",
            "media-ort2-2.cdn.whatsapp.net",
            "media-sjc3-1.cdn.whatsapp.net",
            "1600",
            "01a",
            "01c",
            "405",
            "key_frame_interval",
            "body",
            "media.fcgh20-1.fna.whatsapp.net",
            "media.fesb10-2.fna.whatsapp.net",
            "125",
            "2000",
            "media.fbsb1-1.fna.whatsapp.net",
            "media.fcmn3-2.fna.whatsapp.net",
            "media.fcpq1-1.fna.whatsapp.net",
            "media.fdel1-2.fna.whatsapp.net",
            "media.ffor2-1.fna.whatsapp.net",
            "media.fgdl1-4.fna.whatsapp.net",
            "media.fhex2-1.fna.whatsapp.net",
            "media.fist1-2.fna.whatsapp.net",
            "media.fjed5-2.fna.whatsapp.net",
            "media.flim6-4.fna.whatsapp.net",
            "media.flos2-2.fna.whatsapp.net",
            "media.fntr6-2.fna.whatsapp.net",
            "media.fpku3-2.fna.whatsapp.net",
            "media.fros8-1.fna.whatsapp.net",
            "media.fymy1-2.fna.whatsapp.net",
            "ul_bw",
            "ltrp_qp_offset",
            "request",
            "nack",
            "dtx_delay_state_reset",
            "timeoffline",
            "28",
            "01f",
            "32",
            "enable_ltr_pool",
            "wa_msys_crypto",
            "01d",
            "58",
            "dtx_freeze_hg_update",
            "nack_if_rpsi_throttled",
            "253",
            "840",
            "media.famd15-1.fna.whatsapp.net",
            "media.fbog17-2.fna.whatsapp.net",
            "media.fcai19-2.fna.whatsapp.net",
            "media.fcai21-4.fna.whatsapp.net",
            "media.fesb10-4.fna.whatsapp.net",
            "media.fesb10-5.fna.whatsapp.net",
            "media.fmaa12-1.fna.whatsapp.net",
            "media.fmex11-3.fna.whatsapp.net",
            "media.fpoa33-1.fna.whatsapp.net",
            "1050",
            "021",
            "clean",
            "cond_range_ema_packet_loss_pct",
            "media.fadb6-5.fna.whatsapp.net",
            "media.faqp4-1.fna.whatsapp.net",
            "media.fbaq3-1.fna.whatsapp.net",
            "media.fbel2-1.fna.whatsapp.net",
            "media.fblr4-2.fna.whatsapp.net",
            "media.fclo8-1.fna.whatsapp.net",
            "media.fcoo1-2.fna.whatsapp.net",
            "media.ffjr1-4.fna.whatsapp.net",
            "media.ffor9-1.fna.whatsapp.net",
            "media.fisb3-1.fna.whatsapp.net",
            "media.fkhi2-2.fna.whatsapp.net",
            "media.fkhi4-1.fna.whatsapp.net",
            "media.fpbc1-2.fna.whatsapp.net",
            "media.fruh2-2.fna.whatsapp.net",
            "media.fruh5-1.fna.whatsapp.net",
            "media.fsub3-1.fna.whatsapp.net",
            "payments_transaction_limit",
            "252",
            "27",
            "29",
            "tintagel",
            "01e",
            "237",
            "780",
            "callee_updated_payload",
            "020",
            "257",
            "price",
            "025",
            "239",
            "payments_cs_phone_number",
            "mediaretry",
            "w:auth:backup:token",
            "Glass.caf",
            "max_bitrate",
            "240",
            "251",
            "660",
            "media.fbog16-1.fna.whatsapp.net",
            "media.fcgh21-1.fna.whatsapp.net",
            "media.fkul19-2.fna.whatsapp.net",
            "media.flim21-2.fna.whatsapp.net",
            "media.fmex10-4.fna.whatsapp.net",
            "64",
            "33",
            "34",
            "35",
            "interruption",
            "media.fabv3-1.fna.whatsapp.net",
            "media.fadb6-1.fna.whatsapp.net",
            "media.fagr1-1.fna.whatsapp.net",
            "media.famd1-1.fna.whatsapp.net",
            "media.famm6-1.fna.whatsapp.net",
            "media.faqp2-3.fna.whatsapp.net",
          ],
        ];
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return p;
      }),
        n.d(t, "d", function () {
          return w;
        }),
        n.d(t, "e", function () {
          return O;
        }),
        n.d(t, "c", function () {
          return I;
        }),
        n.d(t, "b", function () {
          return C;
        });
      var r = n(37),
        i = n.n(r),
        a = n(43),
        o = n(56),
        u = n(2),
        s = n(6),
        l = n(54),
        c = n(148),
        d = n(17),
        f = n(52),
        _ = n(35);
      function p(e, t, n) {
        var r = e.forwardingScore;
        null == r && (r = e.isForwarded ? 1 : 0);
        var a = r > 0 ? { isForwarded: !0, forwardingScore: r } : void 0;
        a = (function (e, t, n, r) {
          if (null == t) return e;
          var i = e || {};
          return (
            (i.expiration = t),
            null != n && (i.ephemeralSettingTimestamp = n),
            (0, d.a)("disappearing_mode") &&
              (i.disappearingMode = {
                initiator: null != r ? r : o.a.CHANGED_IN_CHAT,
              }),
            i
          );
        })(
          (a = v((a = h(a, e.remoteJid)), e.mentionedJids)),
          e.expiration,
          e.ephemeralSettingTimestamp,
          e.disappearingModeInitiator
        );
        var p = e.quoted,
          w = p && (0, l.d)(p.content);
        if (null != p && null != w) {
          if (!n) throw new Error("sendMsg has a quote without its info");
          ((a = (a = h(a, p.remoteJid)) || {}).stanzaId = p.externalId),
            (a.participant = p.author === u.b ? s.t.get() : p.author);
          var O,
            E = v(void 0, p.mentionedJids);
          switch (w.type) {
            case u.f.TEXT:
              O = g(w, m(n.preview), E);
              break;
            case u.f.STICKER:
              O = y(w, m(n.preview, w.media), E);
              break;
            case u.f.IMAGE:
              O =
                null != w.viewOnceState
                  ? {
                      imageMessage: {
                        fileSha256: new ArrayBuffer(1),
                        fileLength: 1,
                        fileEncSha256: new ArrayBuffer(1),
                        mediaKey: new ArrayBuffer(1),
                        viewOnce: !0,
                      },
                    }
                  : b(w, m(n.preview, w.media), E);
              break;
            case u.f.AUDIO:
              O = S(w, m(n.preview, w.media), E);
              break;
            case u.f.PTT:
              O = I(w, m(n.preview, w.media), E);
              break;
            case u.f.VIDEO:
              O =
                null != w.viewOnceState
                  ? {
                      videoMessage: {
                        fileSha256: new ArrayBuffer(1),
                        fileLength: 1,
                        fileEncSha256: new ArrayBuffer(1),
                        mediaKey: new ArrayBuffer(1),
                        viewOnce: !0,
                      },
                    }
                  : L(w, m(n.preview, w.media), E);
              break;
            case u.f.GIF:
              O = G(w, m(n.preview, w.media), E);
              break;
            case u.f.VCARD:
              O = M(w, m(n.preview), E);
              break;
            case u.f.LOCATION:
              O = A(w, m(n.preview), E);
              break;
            case u.f.GROUP_INVITE:
              O = P(w, m(n.preview), E);
              break;
            case u.f.RICH_HSM:
              O = (function (e, t, n) {
                var r = e.richContent;
                if (!r) return { conversation: (0, c.c)(e.title, e.content) };
                switch (r.type) {
                  case u.f.IMAGE:
                    return b(r, t, n);
                  case u.f.VIDEO:
                    return L(r, t, n);
                  case u.f.DOCUMENT:
                    return N(r, t, n);
                  default:
                    return r.type, A(r, t, n);
                }
              })(w, m(n.preview, w.media), E);
              break;
            case u.f.HSM_BUTTON_REPLY:
              O = T(w, E);
              break;
            case u.f.DOCUMENT:
              O = N(w, m(n.preview, w.media), E);
              break;
            case u.f.POLL:
              O = (function (e, t) {
                return {
                  pollCreationMessage: {
                    contextInfo: t,
                    name: e.name,
                    selectableOptionsCount: e.selectableOptionsCount,
                    options: e.options.map((e) => ({ optionName: e })),
                  },
                };
              })(w, E);
              break;
            default:
              return (0, i.a)(w.type);
          }
          a.quotedMessage = O;
        }
        var k = null;
        switch (e.type) {
          case u.f.TEXT:
            k = g(e, t, a);
            break;
          case u.f.STICKER:
            k = y(e, t, a);
            break;
          case u.f.IMAGE:
            k = b(e, t, a);
            break;
          case u.f.AUDIO:
            k = S(e, t, a);
            break;
          case u.f.PTT:
            k = I(e, t, a);
            break;
          case u.f.VIDEO:
            k = L(e, t, a);
            break;
          case u.f.GIF:
            k = G(e, t, a);
            break;
          case u.f.VCARD:
            k = M(e, 0, a);
            break;
          case u.f.LOCATION:
            k = A(e, t, a);
            break;
          case u.f.GROUP_INVITE:
            k = P(e, t, a);
            break;
          case u.f.HSM_BUTTON_REPLY:
            k = T(e, a);
            break;
          case u.f.DOCUMENT:
            k = N(e, t, a);
            break;
          case u.f.EPHEMERAL:
            k = (function (e) {
              if ("fail" === e.subtype || "keep-in-chat" === e.subtype)
                throw Error("asEphemeralProtocolMsg is never sent or received");
              var t = e.ephemeralExpiration;
              if ("setting" === e.subtype)
                return {
                  protocolMessage: {
                    type: o.d.EPHEMERAL_SETTING,
                    ephemeralExpiration: t,
                  },
                };
              e.subtype;
              var n = e.ephemeralSettingTimestamp,
                r = {
                  type: o.d.EPHEMERAL_SYNC_RESPONSE,
                  ephemeralExpiration: t,
                  ephemeralSettingTimestamp: n,
                };
              if ((0, d.a)("disappearing_mode")) {
                var i = e.disappearingModeInitiator;
                null != i && (r.disappearingMode = { initiator: i });
              }
              return { protocolMessage: r };
            })(e);
            break;
          case u.f.REVOKED:
            k = {
              protocolMessage: {
                key:
                  null == e.adminJid
                    ? {
                        remoteJid: e.chatJid,
                        fromMe: !0,
                        id: e.revokedExternalId,
                      }
                    : {
                        remoteJid: e.chatJid,
                        fromMe: !1,
                        id: e.revokedExternalId,
                        participant: e.author,
                      },
                type: o.d.REVOKE,
              },
            };
            break;
          default:
            throw new Error(`sendMsg has not implemented ${e.type} msgs`);
        }
        return (
          e.secret &&
            (k = Object.assign({}, k, {
              messageContextInfo: Object.assign({}, k.messageContextInfo, {
                messageSecret: e.secret,
              }),
            })),
          (function (e, t, n) {
            var r = t;
            return (
              (0, _.q)(e) &&
                (r = (function (e) {
                  var t = { message: e };
                  return (0, f.w)()
                    ? { viewOnceMessageV2: t }
                    : { viewOnceMessage: t };
                })(r)),
              (e.type !== u.f.EPHEMERAL &&
                null == (null == n ? void 0 : n.expiration)) ||
                (r = C(r)),
              r
            );
          })(e, k, a)
        );
      }
      function v(e, t) {
        return null == t || 0 === t.length
          ? e
          : e
          ? ((e.mentionedJid = t), e)
          : { mentionedJid: t };
      }
      function h(e, t) {
        return null == t
          ? e
          : null != (null == e ? void 0 : e.remoteJid) && null != t
          ? (__LOG__(
              4
            )`Trying to assign remoteJid ${t} to ContextInfo already containing remoteJid ${
              null == e ? void 0 : e.remoteJid
            }`,
            SEND_LOGS("assignRemoteJid-contextInfo-already-has-remoteJid"),
            e)
          : e
          ? ((e.remoteJid = t), e)
          : { remoteJid: t };
      }
      function m(e, t) {
        return {
          plaintextHash: null == t ? void 0 : t.plaintextHash,
          partialPlaintextHash: null,
          mediaEntry: null == t ? void 0 : t.mediaEntry,
          preview: e,
          thumbPlaintextHash: void 0,
        };
      }
      function g(e, t, n) {
        var r, i, a, o;
        return n || null != e.linkPreview
          ? {
              extendedTextMessage: {
                text: e.text,
                contextInfo: n,
                matchedText:
                  null == (r = e.linkPreview) ? void 0 : r.matchedText,
                canonicalUrl:
                  null == (i = e.linkPreview) ? void 0 : i.canonicalUrl,
                description:
                  null == (a = e.linkPreview) ? void 0 : a.description,
                title: null == (o = e.linkPreview) ? void 0 : o.title,
                jpegThumbnail: (null == t ? void 0 : t.preview) || void 0,
              },
            }
          : { conversation: e.text };
      }
      function y(e, t, n) {
        var r =
          (null == t ? void 0 : t.partialPlaintextHash) ||
          (null == t ? void 0 : t.plaintextHash);
        if (!r) throw new Error("asProtoMessage no hash for sticker");
        var o = (null == t ? void 0 : t.mediaEntry) || void 0,
          u = { fileSha256: (0, a.c)(r), fileLength: e.size, contextInfo: n };
        if (
          (null != e.mimetype && (u.mimetype = e.mimetype),
          null != e.isAnimated && (u.isAnimated = e.isAnimated),
          null != e.width &&
            null != e.height &&
            ((u.width = e.width), (u.height = e.height)),
          null != (null == t ? void 0 : t.preview) &&
            (u.pngThumbnail = t.preview),
          null != (null == t ? void 0 : t.stickerInfo))
        ) {
          var s = t.stickerInfo;
          null != s.firstFrameLength &&
            (u.firstFrameLength = s.firstFrameLength),
            null != s.firstFrameSidecar &&
              (u.firstFrameSidecar = s.firstFrameSidecar);
        }
        if (null != o)
          if (
            ((u.url = o.url), (u.mediaKey = o.cryptoKey), "mms4" === o.version)
          )
            (u.mediaKeyTimestamp = o.mediaKeyTs),
              (u.fileEncSha256 = o.ciphertextHash),
              (u.directPath = o.directPath);
          else if ("mms3" !== o.version) return (0, i.a)(o.version);
        return { stickerMessage: u };
      }
      function b(e, t, n) {
        var r = w(e, t);
        if (!r) throw new Error("asProtoMessage no hash for image");
        var i = r.fileLength,
          o = r.hash,
          u = null != e.viewOnceState,
          s = (!u && (null == t ? void 0 : t.preview)) || void 0,
          l = {
            mimetype: "image/jpeg",
            caption: e.text || void 0,
            fileSha256: (0, a.c)(o),
            fileLength: i,
            height: e.height || void 0,
            width: e.width || void 0,
            jpegThumbnail: s,
            contextInfo: n,
            viewOnce: u || void 0,
          };
        return O(l, null == t ? void 0 : t.mediaEntry), { imageMessage: l };
      }
      function w(e, t) {
        var n = (null == t ? void 0 : t.mediaEntry) || void 0,
          r =
            ((null == n ? void 0 : n.uploadToken) &&
              (null == t ? void 0 : t.partialPlaintextHash)) ||
            (null == t ? void 0 : t.plaintextHash),
          i = (null == n ? void 0 : n.size) || e.size;
        return r ? { hash: r, fileLength: i } : void 0;
      }
      function O(e, t) {
        if (null == t);
        else if (
          ((e.url = t.url || void 0),
          (e.mediaKey = t.cryptoKey),
          "mms4" === t.version)
        ) {
          if (
            ((e.mediaKeyTimestamp = t.mediaKeyTs),
            (e.fileEncSha256 = t.ciphertextHash),
            (e.directPath = t.directPath),
            t.progressiveJpeg)
          ) {
            var n = t.progressiveJpeg,
              r = n.scanLengths,
              i = n.scansSidecar,
              a = n.midQualityFileSha256;
            4 === r.length
              ? a &&
                ((e.midQualityFileSha256 = a),
                (e.scanLengths = r),
                (e.scansSidecar = i))
              : ((e.scanLengths = r), (e.scansSidecar = i));
          }
        } else t.version;
      }
      function E(e) {
        var t = e.msg,
          n = e.media,
          r = e.contextInfo,
          o = e.isPtt,
          u = null == n ? void 0 : n.plaintextHash,
          s = (null == n ? void 0 : n.mediaEntry) || void 0;
        if (!u) throw new Error("asProtoMessage no hash for ptt");
        var l = {
          mimetype: t.mimetype || void 0,
          fileSha256: (0, a.c)(u),
          fileLength: t.size,
          seconds: t.duration,
          ptt: o,
          contextInfo: r,
        };
        if (null == s);
        else if (
          ((l.url = s.url || void 0),
          (l.streamingSidecar = s.sidecar || void 0),
          (l.mediaKey = s.cryptoKey),
          "mms4" === s.version)
        )
          (l.mediaKeyTimestamp = s.mediaKeyTs),
            (l.fileEncSha256 = s.ciphertextHash),
            (l.directPath = s.directPath);
        else if ("mms3" !== s.version) return (0, i.a)(s.version);
        return { audioMessage: l };
      }
      function I(e, t, n) {
        var r = E({ msg: e, media: t, contextInfo: n, isPtt: !0 });
        return (
          (null == e ? void 0 : e.waveform) &&
            r.audioMessage &&
            (r.audioMessage = Object.assign({}, r.audioMessage, {
              waveform: e.waveform,
            })),
          r
        );
      }
      function S(e, t, n) {
        return E({ msg: e, media: t, contextInfo: n, isPtt: !1 });
      }
      function k(e, t, n, r, o, u) {
        var s = null == t ? void 0 : t.plaintextHash,
          l = (null == t ? void 0 : t.mediaEntry) || void 0,
          c = (!o && (null == t ? void 0 : t.preview)) || void 0;
        if (!s) throw new Error("asProtoMessage no hash for video");
        var d = {
          mimetype: e.mimetype || void 0,
          fileSha256: (0, a.c)(s),
          fileLength: e.size,
          seconds: e.duration,
          caption: e.text || void 0,
          gifPlayback: !!r || void 0,
          height: e.height || void 0,
          width: e.width || void 0,
          jpegThumbnail: c,
          gifAttribution: u,
          contextInfo: n,
          viewOnce: o || void 0,
        };
        if (null == l);
        else if (
          ((d.url = l.url || void 0),
          (d.streamingSidecar = l.sidecar || void 0),
          (d.mediaKey = l.cryptoKey),
          "mms4" === l.version)
        )
          (d.mediaKeyTimestamp = l.mediaKeyTs),
            (d.fileEncSha256 = l.ciphertextHash),
            (d.directPath = l.directPath);
        else if ("mms3" !== l.version) return (0, i.a)(l.version);
        return { videoMessage: d };
      }
      function L(e, t, n) {
        return k(e, t, n, !1, null != e.viewOnceState);
      }
      function G(e, t, n) {
        return k(e, t, n, !0, !1, e.gifAttribution);
      }
      function M(e, t, n) {
        var r = e.contacts;
        return 1 === r.length
          ? {
              contactMessage: {
                displayName: r[0].displayName,
                vcard: r[0].vcard,
                contextInfo: n,
              },
            }
          : { contactsArrayMessage: { contacts: r, contextInfo: n } };
      }
      function A(e, t, n) {
        return {
          locationMessage: {
            degreesLatitude: e.degreesLatitude,
            degreesLongitude: e.degreesLongitude,
            name: e.name,
            address: e.address,
            url: e.url,
            jpegThumbnail: (null == t ? void 0 : t.preview) || void 0,
            contextInfo: n,
          },
        };
      }
      function P(e, t, n) {
        return {
          groupInviteMessage: {
            groupJid: e.groupJid,
            groupName: e.groupName,
            inviteCode: e.inviteCode,
            inviteExpiration: e.inviteExpiration,
            jpegThumbnail: (null == t ? void 0 : t.preview) || void 0,
            contextInfo: n,
          },
        };
      }
      function T(e, t) {
        return {
          templateButtonReplyMessage: {
            contextInfo: t,
            selectedId: e.payload,
            selectedDisplayText: e.selectedDisplayText,
            selectedIndex: e.selectedButtonIndex,
          },
        };
      }
      function N(e, t, n) {
        var r = null == t ? void 0 : t.plaintextHash,
          i = (null == t ? void 0 : t.mediaEntry) || void 0;
        if (!r) throw new Error("asProtoMessage no hash for document");
        var o = e.isVCard ? e.contactsCount : e.pages,
          u = {
            mimetype: e.mimetype,
            title: e.fileName,
            fileName: e.fileName,
            fileSha256: (0, a.c)(r),
            fileLength: e.size,
            pageCount: o,
            contextInfo: n,
            contactVcard: e.isVCard,
            jpegThumbnail: (null == t ? void 0 : t.preview) || void 0,
          };
        if (null == i);
        else if (
          ((u.url = i.url || void 0),
          (u.mediaKey = i.cryptoKey),
          "mms4" === i.version)
        ) {
          if (
            ((u.mediaKeyTimestamp = i.mediaKeyTs),
            (u.fileEncSha256 = i.ciphertextHash),
            (u.directPath = i.directPath),
            t &&
              t.thumbPlaintextHash &&
              i.mmsThumb &&
              i.mmsThumb.directPath &&
              e.mmsThumb &&
              (0, d.a)("upload_document_thumb_mms_enabled"))
          ) {
            var s = e.mmsThumb,
              l = s.height,
              c = s.width,
              f = i.mmsThumb,
              _ = f.ciphertextHash,
              p = f.directPath;
            (u.thumbnailSha256 = (0, a.c)(t.thumbPlaintextHash)),
              (u.thumbnailHeight = l),
              (u.thumbnailWidth = c),
              (u.thumbnailEncSha256 = _),
              (u.thumbnailDirectPath = p);
          }
        } else i.version;
        return { documentMessage: u };
      }
      function C(e) {
        return { ephemeralMessage: { message: e } };
      }
    },
    function (e, t, n) {
      n.d(t, "d", function () {
        return d;
      }),
        n.d(t, "c", function () {
          return f;
        }),
        n.d(t, "b", function () {
          return _;
        }),
        n.d(t, "a", function () {
          return p;
        });
      var r = n(156),
        i = n(7),
        a = n(2),
        o = n(14),
        u = n(17),
        s = n(137),
        l = n(11),
        c = new Set([
          "$$unknownFieldCount",
          "vote",
          "pollCreationMessageKey",
          "senderTimestampMs",
        ]);
      function d(e, t) {
        var n;
        if ((0, l.x)(t).some((e) => !c.has(e)))
          return (
            __LOG__(3)`pollUpdateProtoMsgToDbPollUpdateMsg: found unknown key`,
            "futureproof"
          );
        var a = t.pollCreationMessageKey,
          o = t.vote,
          u = null == (n = e.meta) ? void 0 : n.pollType;
        if (null == u && null == o) return "futureproof";
        if ("vote" === u && null != o)
          if (null != a) {
            var s = o.encIv,
              d = o.encPayload;
            if (null != s)
              if (null != d) {
                var f = e.jid,
                  _ = e.author,
                  p = (0, i.h)(_),
                  v = (0, r.b)(f, p, a);
                if (v) {
                  var h = t.senderTimestampMs;
                  if (null != h) {
                    var m = v.msgAuthor;
                    return {
                      msgRef: { msgExternalId: v.msgExternalId, msgAuthor: m },
                      content: {
                        externalId: e.externalId,
                        ts: e.ts,
                        chatJid: f,
                        author: p,
                        updateType: "vote",
                        encPayload: d,
                        encIv: s,
                        senderTimestampMs: h,
                      },
                    };
                  }
                  __LOG__(
                    4
                  )`writeIncomingPollUpdate: poll_vote_missing_sender_timestamp`;
                } else
                  __LOG__(
                    4
                  )`pollUpdateProtoMsgToDbPollUpdateMsg: invalid poll message key`;
              } else
                __LOG__(
                  4
                )`pollUpdateProtoMsgToDbPollUpdateMsg: poll_update_missing_vote_enc_payload`;
            else
              __LOG__(
                4
              )`pollUpdateProtoMsgToDbPollUpdateMsg: poll_update_missing_vote_enc_iv`;
          } else
            __LOG__(
              4
            )`pollUpdateProtoMsgToDbPollUpdateMsg: poll_update_missing_poll_message_key`;
        else
          __LOG__(
            4
          )`pollUpdateProtoMsgToDbPollUpdateMsg: poll_update_message_stanza_invalid`;
      }
      function f(e, t, n) {
        var r = n.secret;
        if (null != r)
          if (r.byteLength === o.I) {
            var i = _(t);
            if (null != i) return Object.assign({}, i, n, { media: void 0 });
          } else
            __LOG__(4)`parsePollCreationMessage: poll_creation_invalid_enc_key`;
        else
          __LOG__(4)`parsePollCreationMessage: poll_creation_missing_enc_key`;
      }
      function _(e) {
        var t = e.name;
        if (null != t)
          if (t.length > (0, u.a)("poll_name_length"))
            __LOG__(
              4
            )`parsePollCreationContent: poll_creation_invalid_name too long`;
          else {
            for (var n = e.options, r = n.length, i = [], l = 0; l < r; l++) {
              var c = n[l].optionName;
              if (null == c)
                return void __LOG__(
                  4
                )`parsePollCreationContent: poll_creation_invalid_option missing`;
              if (c.length > (0, u.a)("poll_option_length"))
                return void __LOG__(
                  4
                )`parsePollCreationContent: poll_creation_invalid_option too long`;
              i.push(c);
            }
            var d = i.length;
            if (d < 2 || d > o.o || d > (0, u.a)("poll_option_count"))
              __LOG__(
                4
              )`parsePollCreationContent: poll_creation_invalid_options_count incorrect`;
            else {
              var f = e.selectableOptionsCount;
              if (null != f) {
                if (!(f > d))
                  return {
                    type: a.f.POLL,
                    name: t,
                    selectableOptionsCount: f,
                    options: i.map(s.g),
                  };
                __LOG__(
                  4
                )`parsePollCreationContent: poll_creation_invalid_selectable_options_count`;
              } else
                __LOG__(
                  4
                )`parsePollCreationContent: poll_creation_missing_selectable_options_count`;
            }
          }
        else __LOG__(4)`parsePollCreationContent: poll_creation_missing_name`;
      }
      function p(e, t) {
        var n = e.senderTimestampMs,
          i = e.chatJid,
          a = e.msgRef;
        return {
          pollUpdateMessage: {
            vote: { encIv: t.encIv, encPayload: t.encPayload },
            pollCreationMessageKey: (0, r.a)(i, a),
            senderTimestampMs: n,
          },
        };
      }
    },
    function (e, t, n) {
      n.r(t),
        n.d(t, "extractDescription", function () {
          return w;
        }),
        n.d(t, "simpleQueryGroupParser", function () {
          return I;
        }),
        n.d(t, "buildSimpleGroupResult", function () {
          return S;
        }),
        n.d(t, "queryAllGroups", function () {
          return G;
        }),
        n.d(t, "queryGroup", function () {
          return M;
        }),
        n.d(t, "queryAllGroupsWithRetry", function () {
          return A;
        }),
        n.d(t, "queryAddRequest", function () {
          return N;
        });
      var r = n(26),
        i = n.n(r),
        a = n(30),
        o = n(4),
        u = n(88),
        s = n(51),
        l = n(289),
        c = n(22),
        d = n(7),
        f = n(70),
        _ = n(12),
        p = n(89),
        v = n(86),
        h = n(72),
        m = n(118),
        g = n(256),
        y = n(341),
        b = {
          superadmin: "superadmin",
          admin: "admin",
          participant: "participant",
        };
      function w(e) {
        if (e.hasChild("description")) {
          var t = e.child("description");
          if (t.hasChild("body")) {
            var n = t.child("body");
            if (n.hasContent())
              return { content: n.contentString(), id: t.attrString("id") };
          }
        }
        return null;
      }
      function O(e) {
        var t = w(e),
          n = e.mapChildrenWithTag("participant", (e) => ({
            jid: e.attrPhoneUserJid("jid"),
            type: e.attrEnumOrDefault("type", b, "participant"),
          })),
          r = {
            phashMatch: !1,
            creatorJid: e.maybeAttrPhoneUserJid("creator"),
            creationTs: e.attrTime("creation"),
            groupJid: (0, d.A)(e.attrString("id")),
            title: e.attrString("subject"),
            titleTs: e.attrTime("s_t"),
            description: t ? t.content : null,
            descriptionId: t ? t.id : null,
            locked: e.hasChild("locked"),
            announcement: e.hasChild("announcement"),
            support: e.hasChild("support"),
            size: e.hasAttr("size") ? e.attrInt("size") : n.length,
            participants: n,
            expiration: e.hasChild("ephemeral")
              ? e.child("ephemeral").attrInt("expiration")
              : null,
            growthLocked: (0, g.b)(e),
            groupType: void 0,
          },
          i = (0, y.a)(e),
          a = i.linkedParent,
          o = i.groupType,
          u = i.isCAG,
          s = i.numSubGroups;
        return (
          (r.groupType = o),
          a && (r.linkedParent = a),
          u && (r.isCAG = u),
          s && (r.numSubGroups = s),
          r
        );
      }
      var E = new s.a("queryGroup", (e) =>
          e.hasChild("group") ? O(e.child("group")) : { phashMatch: !0 }
        ),
        I = new s.a("simpleQueryGroup", (e) => {
          if (!e.hasChild("group"))
            throw (
              (__LOG__(4)`simpleQueryGroupParser: no group node found`,
              SEND_LOGS("no-group-node"),
              new l.b("simpleQueryGroup", "501"))
            );
          return O(e.child("group"));
        });
      function S(e) {
        return k.apply(this, arguments);
      }
      function k() {
        return (k = i()(function* (e) {
          var t = yield (0, c.K)(e.groupJid);
          if (null == t ? void 0 : t.isInGroup)
            return { error: { reason: "already-in-group", extra: e.groupJid } };
          var n = {
            group: e.groupJid,
            title: e.title,
            description: e.description,
            participantJids: e.participants.map((e) => e.jid),
            creatorJid: e.creatorJid,
            size: e.size,
            groupType: e.groupType,
          };
          return (
            e.linkedParent && (n.linkedParent = e.linkedParent),
            e.isDefault && (n.isDefault = e.isDefault),
            e.numSubGroups && (n.numSubGroups = e.numSubGroups),
            { result: n }
          );
        })).apply(this, arguments);
      }
      var L = new s.a("queryAllGroups", (e) => ({
        groups: e.child("groups").mapChildren(O),
      }));
      function G() {
        __LOG__(2)`queryAllGroups invoked`;
        var e = (0, o.w)(
          "iq",
          { to: o.e, type: "get", xmlns: "w:g2", id: (0, o.u)() },
          (0, o.w)(
            "participating",
            null,
            (0, o.w)("participants", null),
            (0, o.w)("description", null)
          )
        );
        return (0, a.b)(e, L).then((e) => {
          if (!e.success) return (0, h.d)("unknown");
          var t = e.result.groups.map((e) => e.groupJid),
            n = [
              (0, f.getProfilePicTable)()
                .clearRecords(t)
                .then(() => {
                  (0, _.c)("event", "avatarsUpdated", { cleared: t });
                }),
            ];
          return (
            e.result.groups.forEach((e) => {
              var t = {
                jid: e.groupJid,
                title: e.title,
                titleTs: e.titleTs,
                description: e.description,
                descriptionId: e.descriptionId,
                participants: e.participants,
                creatorJid: e.creatorJid,
                creationTs: e.creationTs,
                locked: e.locked,
                announcement: e.announcement,
                support: e.support,
                expiration: e.expiration,
                growthLocked: e.growthLocked,
              };
              "parent" === e.groupType
                ? n.push(
                    (0, c.nb)(Object.assign({}, t, { groupType: "parent" }))
                  )
                : n.push(
                    (0, c.mb)(
                      Object.assign(
                        { linkedParent: e.linkedParent, isCAG: e.isCAG },
                        t
                      )
                    )
                  );
            }),
            Promise.all(n).then(() => "success")
          );
        });
      }
      var M = (0, u.c)()
          .finalStep("queryGroup", (e) => {
            var t = e.groupJid,
              n = e.request,
              r = e.phash;
            return (function (e, t, n) {
              var r = (0, o.w)(
                "iq",
                { to: (0, o.g)(e), type: "get", xmlns: "w:g2", id: (0, o.u)() },
                (0, o.w)("query", { request: t || o.c, phash: (0, o.i)(n) })
              );
              return (0, a.b)(r, E);
            })(t, n, r).then((e) => {
              if (e.success) {
                var n = e.result;
                if (!n.phashMatch) {
                  var r = {
                      jid: t,
                      title: n.title,
                      titleTs: n.titleTs,
                      description: n.description,
                      descriptionId: n.descriptionId,
                      locked: n.locked,
                      announcement: n.announcement,
                      support: n.support,
                      participants: n.participants,
                      creatorJid: n.creatorJid,
                      creationTs: n.creationTs,
                      expiration: n.expiration,
                      growthLocked: n.growthLocked,
                    },
                    i = [];
                  return (
                    "parent" === n.groupType
                      ? i.push(
                          (0, c.nb)(
                            Object.assign({}, r, { groupType: "parent" })
                          )
                        )
                      : i.push(
                          (0, c.mb)(
                            Object.assign(
                              {
                                groupType: void 0,
                                linkedParent: n.linkedParent,
                                isCAG: n.isCAG,
                              },
                              r
                            )
                          )
                        ),
                    Promise.all([
                      (0, f.getProfilePicTable)()
                        .clearRecord(t)
                        .then(() => {
                          (0, _.c)("event", "avatarsUpdated", { cleared: [t] });
                        }),
                      ...i,
                    ]).then(() => {})
                  );
                }
              }
            });
          })
          .end(),
        A = (0, u.c)()
          .finalStep("queryAllGroups", () =>
            G()
              .catch((0, m.a)(v.b, () => "disconnected"))
              .then((e) => {
                if ("success" !== e)
                  throw new p.b({ algo: { type: "constant", delay: 3e5 } });
              })
          )
          .end(),
        P = {
          400: (0, h.d)("malformed"),
          404: (0, h.d)("group-not-found"),
          419: (0, h.d)("too-many-participants"),
          429: (0, h.d)("rate-overlimit"),
          500: (0, h.d)("unknown"),
        };
      function T(e, t, n, r) {
        var i = (0, o.w)(
          "iq",
          { to: (0, o.g)(e), type: "get", xmlns: "w:g2", id: (0, o.u)() },
          (0, o.w)(
            "query",
            null,
            (0, o.w)("add_request", {
              code: (0, o.b)(t),
              expiration: (0, o.f)(n),
              admin: (0, o.g)(r),
            })
          )
        );
        return (0, a.b)(i, I);
      }
      function N(e, t, n, r) {
        return C.apply(this, arguments);
      }
      function C() {
        return (C = i()(function* (e, t, n, r) {
          var i = yield (0, c.K)(e);
          return (null == i ? void 0 : i.isInGroup)
            ? { error: { reason: "already-in-group", extra: e } }
            : T(e, t, n, r).then((e) =>
                e.success ? S(e.result) : (0, h.f)(e, P)
              );
        })).apply(this, arguments);
      }
    },
    function (e, t, n) {
      n.r(t),
        n.d(t, "statusQuerySync", function () {
          return ee;
        }),
        n.d(t, "syncAllContacts", function () {
          return re;
        }),
        n.d(t, "oneTimeSyncAllContacts", function () {
          return ie;
        }),
        n.d(t, "deltaSync", function () {
          return ae;
        }),
        n.d(t, "contactQuerySync", function () {
          return oe;
        }),
        n.d(t, "addContactToSidelist", function () {
          return Z;
        });
      var r = n(26),
        i = n.n(r),
        a = n(8),
        o = n.n(a),
        u = n(86),
        s = n(30),
        l = n(4),
        c = n(51),
        d = n(22),
        f = n(67),
        _ = n(12),
        p = n(234),
        v = n(191),
        h = n(6),
        m = n(3),
        g = n(68),
        y = n(110),
        b = null;
      function w() {
        if (null != b) return b;
        b = new (class {
          constructor() {
            (this.bG = {}),
              (this.bH = []),
              (this.bI = {}),
              (this.bJ = null),
              (this.bL = null);
          }
          enqueue(e, t) {
            if (this.bI[e]) return this.bI[e].promise;
            var n = new g.a();
            if (
              ((this.bI[e] = n),
              this.bH.push(e),
              (this.bG[e] = t),
              null == this.bJ)
            ) {
              var r = () => {
                if (!(this.bH.length < 1)) {
                  if (this.bL && (0, m.o)(this.bL))
                    return (0, y.a)(1e3 * (0, m.y)(this.bL)).then(() => r());
                  this.bL = null;
                  var e = this.bH.shift();
                  this.bJ = e;
                  var t = this.bG[e]();
                  return (
                    this.bI[e].resolve(t),
                    t
                      .catch(() => {})
                      .then(() => (delete this.bG[e], delete this.bI[e], r()))
                  );
                }
                this.bJ = null;
              };
              this.bK = r();
            }
            return n.promise;
          }
          pause(e) {
            return (this.bL = e), null == this.bJ;
          }
        })();
        var e = h.P.get();
        return null != e && (0, m.o)(e) && b.pause(e), b;
      }
      function O(e) {
        h.P.set(e), null != b && b.pause(e);
      }
      var E = n(44),
        I = n(73),
        S = n(72),
        k = n(11),
        L = n(39),
        G = n(16),
        M = n(89),
        A = n(41),
        P = n(367),
        T = n(322),
        N = n(134),
        C = n(88),
        R = n(177),
        x = n(118),
        D = n(17),
        U = { algo: { type: "constant", delay: 1e4 } },
        j = m.d;
      function $(e) {
        if (!e.hasChild("status")) return "UNCHANGED";
        var t = e.child("status");
        return "fail" === t.maybeAttrString("type")
          ? { status: "blocked" }
          : t.hasAttr("t")
          ? {
              status: "loaded",
              content: t.contentString(),
              ts: t.attrTime("t"),
            }
          : { status: "empty" };
      }
      function F(e) {
        if (e.hasChild("devices"))
          return (0, P.parseUSyncDevices)(e.child("devices"));
      }
      function B(e) {
        if (ue()) {
          if (!e.hasChild("disappearing_mode")) return "blocked";
          var t = e.child("disappearing_mode");
          return {
            expiration: t.attrInt("duration"),
            lastChangedTs: t.attrTime("t"),
          };
        }
      }
      var V = new c.a("syncContactsResult", (e) => {
        e.assertAttr("type", "result");
        var t = e.child("usync"),
          n = t.child("result").child("contact"),
          r = t.maybeChild("list"),
          i = t.maybeChild("side_list"),
          a = [],
          o = new Map(),
          u = new Map(),
          s = [];
        return (
          null != r &&
            r.forEachChildWithTag("user", (e) => {
              if (e.hasChild("contact")) {
                var t = e.child("contact"),
                  n = t.attrString("type");
                if ("in" === n || "out" === n) {
                  var r = e.attrPhoneUserJid("jid"),
                    i = t.contentString();
                  if (
                    (a.push({
                      phonebookKey: i,
                      jid: r,
                      about: $(e),
                      inWhatsApp: "in" === n,
                      business: (0, v.getBusinessInfoFromNode)(e),
                      disappearingMode: B(e),
                    }),
                    "in" === n)
                  ) {
                    var l = F(e);
                    l && u.set(r, l);
                  }
                } else
                  "invalid" === n
                    ? s.push(t.contentString())
                    : __LOG__(3)`<contact> node with unrecognized type ${n}`;
              } else {
                var c = e.attrPhoneUserJid("jid");
                o.set(c, {
                  jid: c,
                  about: $(e),
                  business: (0, v.getBusinessInfoFromNode)(e),
                  inWhatsApp: !0,
                  disappearingMode: B(e),
                });
              }
            }),
          null != i &&
            i.forEachChildWithTag("user", (e) => {
              var t = e.maybeChild("sidelist");
              if (t) {
                var n = t.attrString("type");
                if ("in" === n || "out" === n) {
                  var r = "in" === n,
                    i = e.attrPhoneUserJid("jid"),
                    a = o.get(i);
                  if (
                    (a
                      ? o.set(i, Object.assign({}, a, { inWhatsApp: r }))
                      : o.set(i, {
                          jid: i,
                          about: $(e),
                          business: (0, v.getBusinessInfoFromNode)(e),
                          inWhatsApp: r,
                          disappearingMode: B(e),
                        }),
                    "in" === n)
                  ) {
                    var s = F(e);
                    s && u.set(i, s);
                  }
                } else __LOG__(3)`<sidelist> node with unrecognized type ${n}`;
              }
            }),
          {
            refresh: n.maybeAttrInt("refresh", 0) || 0,
            inPhonebook: a,
            inSidelist: Array.from(o.values()),
            invalid: s,
            unverifiedDevicesInfo: u,
          }
        );
      });
      function K(e) {
        var t;
        return (
          null != e.about &&
            "loaded" === e.about.status &&
            (t = (0, l.w)("status", { t: (0, l.f)(e.about.ts) })),
          {
            about: t,
            devices: e.noWhatsApp
              ? Promise.resolve()
              : (0, P.getDevicesNode)(e),
            business: (0, v.maybeGetBusinessNode)(e),
          }
        );
      }
      function H(e, t) {
        return (
          __LOG__(2)`syncAllContacts`,
          Promise.all([
            (0, _.e)("page", "getContactsFromPhoneBook", {}),
            (0, f.c)(),
          ]).then((n) => {
            var r = o()(n, 2),
              i = r[0],
              a = r[1],
              u = {},
              s = {},
              c = new Set(),
              f = new Set(),
              _ = [],
              v = "interactive" !== e;
            i.forEach((e) => {
              if (Array.isArray(e.tel))
                for (var t = 0; t < e.tel.length; t++) {
                  var n = (0, E.g)(e.tel[t]);
                  n && ((u[n] = (0, p.a)(e)), c.add(n));
                }
            });
            var m = {};
            a.forEach((e) => {
              var t = e.phonebookPhone;
              if (
                (null == t || c.has(t) || f.add(e.jid), null != t && c.has(t))
              )
                s[t] = e;
              else if (!e.noWhatsApp) {
                if (!v) return;
                if (e.jid === h.t.get()) return;
                null != e.chatId ? _.push(e) : (0, I.e)(e) && (m[e.jid] = e);
              }
            });
            var g,
              y = Array.from(c).map((e) => {
                var t = s[e];
                if (!t)
                  return (0, l.w)("user", null, (0, l.w)("contact", null, e));
                var n = K(t),
                  r = n.about,
                  i = n.devices,
                  a = n.business;
                return i.then((t) =>
                  (0, l.w)("user", null, (0, l.w)("contact", null, e), r, t, a)
                );
              }),
              b = Array.from(_).map((e) => {
                var t = K(e),
                  n = t.about,
                  r = t.devices,
                  i = t.business;
                return r.then((t) =>
                  (0, l.w)("user", { jid: (0, l.g)(e.jid) }, n, t, i)
                );
              }),
              w = (0, k.x)(m);
            return (
              w.length > 0 &&
                (g = (0, d.r)(w).then((e) =>
                  Promise.all(
                    e.map((e) => {
                      var t = K(m[e]),
                        n = t.about,
                        r = t.devices,
                        i = t.business;
                      return r.then((t) =>
                        (0, l.w)("user", { jid: (0, l.g)(e) }, n, t, i)
                      );
                    })
                  )
                )),
              Promise.all([Promise.all(y), Promise.all(b), g]).then((n) => {
                var r = o()(n, 3),
                  a = r[0],
                  s = r[1],
                  c = r[2],
                  d = (0, l.w)(
                    "iq",
                    {
                      to: (0, l.g)(h.t.get()),
                      id: (0, l.u)(),
                      xmlns: "usync",
                      type: "get",
                    },
                    (0, l.w)(
                      "usync",
                      {
                        mode: "full",
                        context: e,
                        sid: (0, l.u)(),
                        index: "0",
                        last: "true",
                      },
                      (0, l.w)(
                        "query",
                        null,
                        (0, l.w)("contact", null),
                        (0, l.w)("status", null),
                        (0, l.w)("devices", { version: (0, l.f)(2) }),
                        v ? (0, l.w)("sidelist", null) : null,
                        (0, l.w)(
                          "business",
                          null,
                          (0, l.w)("verified_name", null)
                        ),
                        ue() ? (0, l.w)("disappearing_mode", null) : null
                      ),
                      (0, l.w)("list", null, a),
                      v
                        ? (0, l.w)("side_list", null, c ? [...s, ...c] : s)
                        : null
                    )
                  );
                return {
                  phoneToNames: u,
                  deletedJids: f,
                  revision: t,
                  phoneContactsSize: i.length,
                  iq: d,
                };
              })
            );
          })
        );
      }
      function q(e, t) {
        var n = e.deletedJids,
          r = e.phoneToNames,
          a = e.phoneContactsSize,
          o = e.revision;
        if (!t.success)
          return (
            __LOG__(4)`Error while sending contacts to WA server in full sync`,
            t.errorBackoff > 0
              ? (O((0, m.k)(t.errorBackoff)), 1)
              : h.l.get()
              ? 3 * m.b
              : m.b
          );
        for (
          var u = t.result.unverifiedDevicesInfo,
            s = new Map(),
            l = Array.from(t.result.inPhonebook.values()),
            c = new Map(),
            d = 0,
            f = 0;
          f < l.length;
          f++
        ) {
          var _ = l[f],
            p = _.jid,
            v = _.phonebookKey,
            g = _.business,
            y = z(_, r[v]);
          y.noWhatsApp || d++, n.delete(p), c.set(p, y), s.set(p, g);
        }
        for (var b = t.result.inSidelist, w = 0; w < b.length; w++) {
          var E = b[w],
            I = E.jid,
            S = E.business;
          if (!c.has(I)) {
            var k = W(E);
            k && (n.delete(I), c.set(I, k));
          }
          s.has(I) || s.set(I, S);
        }
        return te(c, n, t.result.invalid, u, s).then(
          i()(function* () {
            return (
              h.l.get() ||
                (yield h.l.set(!0),
                __LOG__(2)`initLocalSettingsFromServer after syncAllContacts`,
                yield (0, L.b)().waitUntilPersisted(
                  G.e.initLocalSettingsFromServer()
                )),
              h.v.set(o),
              h.w.set({ addressbookSize: a, addressbookWhatsappSize: d }),
              t.result.refresh > 0 ? t.result.refresh : 3 * m.b
            );
          })
        );
      }
      function z(e, t) {
        var n = e.phonebookKey,
          r = e.about,
          i = e.inWhatsApp,
          a = e.disappearingMode,
          o = {
            phonebook: {
              fullName: (null == t ? void 0 : t.fullName) || void 0,
              shortName: (null == t ? void 0 : t.shortName) || void 0,
              phonebookPhone: n,
            },
          };
        return (
          i
            ? ("UNCHANGED" !== r && (o.about = r),
              null != a && (o.defaultDisappearingMode = a))
            : (o.noWhatsApp = !0),
          o
        );
      }
      function W(e) {
        var t,
          n = e.about,
          r = e.inWhatsApp,
          i = e.disappearingMode;
        return (
          r
            ? ("UNCHANGED" !== n && (t = { about: n }),
              null != i &&
                (t
                  ? (t.defaultDisappearingMode = i)
                  : (t = { defaultDisappearingMode: i })))
            : (t = { noWhatsApp: !0 }),
          t
        );
      }
      function J(e, t, n) {
        var r = null == t ? void 0 : t.verifiedInfo;
        if ("NO_BIZ" === n) {
          if (null != r) return (0, d.zc)(e);
        } else {
          var i = n.verifiedInfo;
          if ("UNCHANGED" !== i.cert) {
            var a = i.cert,
              o = i.level,
              u = i.bsp;
            return (0, v.verifyUserCert)(e, o, a, u);
          }
          if (r && (0, R.d)(t, r.serial, i.level, i.bsp)) {
            var s = r.isApi
              ? Object.assign({}, r, { level: i.level, bsp: i.bsp })
              : Object.assign({}, r, { level: i.level });
            return (0, d.Oc)(e, s);
          }
        }
      }
      function Y(e, t, n) {
        var r = (0, p.a)(t);
        return {
          jid: e,
          fullName: r.fullName || void 0,
          shortName: r.shortName || void 0,
          phonebookPhone: n,
        };
      }
      var Q = new c.a("syncSidelistResult", (e) => {
          e.assertAttr("type", "result");
          var t = e.child("usync"),
            n = t.child("result").child("sidelist"),
            r = t.child("side_list"),
            i = new Map(),
            a = new Map();
          return (
            r.forEachChildWithTag("user", (e) => {
              var t = e.maybeChild("sidelist");
              if (t) {
                var n = t.attrString("type");
                if ("in" === n || "out" === n) {
                  var r = "in" === n,
                    o = e.attrPhoneUserJid("jid");
                  if (
                    (i.set(o, {
                      jid: o,
                      about: $(e),
                      inWhatsApp: r,
                      business: (0, v.getBusinessInfoFromNode)(e),
                      disappearingMode: B(e),
                    }),
                    "in" === n)
                  ) {
                    var u = F(e);
                    u && a.set(o, u);
                  }
                } else __LOG__(3)`<sidelist> node with unrecognized type ${n}`;
              }
            }),
            {
              refresh: n.maybeAttrInt("refresh", 0) || 0,
              updates: i,
              unverifiedDevicesInfo: a,
            }
          );
        }),
        Z = (0, C.c)()
          .finalStep("addToSidelist", (e) => {
            var t = e.userJid;
            if (t !== h.t.get())
              return (0, f.b)(t)
                .then(
                  (function () {
                    var e = i()(function* (e) {
                      var n;
                      if (e) {
                        if (null != e.phonebookPhone)
                          return void __LOG__(
                            2
                          )`addContactToSidelist: contact in phonebook`;
                        var r = K(e),
                          i = r.business,
                          a = r.devices,
                          o = r.about;
                        n = (0, l.w)(
                          "user",
                          { jid: (0, l.g)(e.jid) },
                          o,
                          yield a,
                          i
                        );
                      } else n = (0, l.w)("user", { jid: (0, l.g)(t) });
                      var u = (0, l.w)(
                        "iq",
                        {
                          to: (0, l.g)(h.t.get()),
                          id: (0, l.u)(),
                          xmlns: "usync",
                          type: "get",
                        },
                        (0, l.w)(
                          "usync",
                          {
                            mode: "delta",
                            context: "interactive",
                            sid: (0, l.u)(),
                            index: "0",
                            last: "true",
                          },
                          (0, l.w)(
                            "query",
                            null,
                            (0, l.w)("status", null),
                            (0, l.w)("devices", { version: (0, l.f)(2) }),
                            (0, l.w)(
                              "business",
                              null,
                              (0, l.w)("verified_name", null)
                            ),
                            (0, l.w)("sidelist", null),
                            ue() ? (0, l.w)("disappearing_mode", null) : null
                          ),
                          (0, l.w)("side_list", null, n)
                        )
                      );
                      return (0, s.b)(u, Q);
                    });
                    return function (t) {
                      return e.apply(this, arguments);
                    };
                  })()
                )
                .then((e) => {
                  if (e) {
                    if (!e.success) {
                      if (
                        (__LOG__(4)`addContactToSidelist: error`,
                        409 === e.errorCode)
                      )
                        throw new M.b(U);
                      throw (
                        (e.errorBackoff > 0 && O((0, m.k)(e.errorBackoff)),
                        new Error("addContactToSideList error"))
                      );
                    }
                    var t = Array.from(e.result.updates.values());
                    if (0 !== t.length) {
                      t.length > 1 &&
                        (__LOG__(
                          4
                        )`addContactToSidelist: Received more than one result`,
                        SEND_LOGS("multiple-results-usync-contact"));
                      var n = t[0],
                        r = new Map(),
                        i = new Map(),
                        a = n.jid,
                        o = W(n);
                      return (
                        o && r.set(a, o),
                        i.set(a, n.business),
                        te(r, null, [], e.result.unverifiedDevicesInfo, i)
                      );
                    }
                    __LOG__(3)`addContactToSidelist: Received no results`;
                  }
                });
          })
          .end(),
        X = new c.a("syncAboutResult", (e) => {
          e.assertAttr("type", "result");
          var t = e.child("usync"),
            n = t.child("result").child("status"),
            r = t.child("list"),
            i = new Map();
          return (
            r.forEachChildWithTag("user", (e) => {
              var t = $(e);
              "UNCHANGED" !== t && i.set(e.attrPhoneUserJid("jid"), t);
            }),
            { refresh: n.maybeAttrInt("refresh", 0) || 0, updates: i }
          );
        });
      function ee(e) {
        var t = (0, l.w)(
          "iq",
          {
            to: (0, l.g)(h.t.get()),
            id: (0, l.u)(),
            xmlns: "usync",
            type: "get",
          },
          (0, l.w)(
            "usync",
            {
              mode: "query",
              context: (0, _.d)() ? "interactive" : "notification",
              sid: (0, l.u)(),
              index: "0",
              last: "true",
            },
            (0, l.w)("query", null, (0, l.w)("status", null)),
            (0, l.w)(
              "list",
              null,
              e.map((e) => (0, l.w)("user", { jid: (0, l.g)(e) }))
            )
          )
        );
        return (0, s.b)(t, X).then((e) => {
          if (!e.success)
            throw (
              (__LOG__(
                4
              )`Error while attempting to update status in query sync`,
              new Error("status query sync unsuccessful"))
            );
          e.result.updates.forEach((e, t) => {
            (0, d.Ac)(t, e);
          });
        });
      }
      function te(e, t, n, r, i) {
        return ne(r)
          .then(() => {
            return (
              (e = i),
              (0, f.c)().then((t) => {
                var n = (0, k.t)(t, (e) => e.jid),
                  r = [];
                return (
                  Array.from(e.entries()).forEach((e) => {
                    var t = o()(e, 2),
                      i = t[0],
                      a = t[1],
                      u = n[i];
                    r.push(J(i, u, a));
                  }),
                  Promise.all(r).then(() => {})
                );
              })
            );
            var e;
          })
          .then(() => (0, f.i)(e, t, n));
      }
      function ne(e) {
        return (0, T.a)(Array.from(e.keys())).then(() =>
          (0, N.i)(e).then((e) => {
            var t = [];
            return (
              e.forEach((e, n) => {
                t.push(
                  (0, A.w)(n, e).then(() => (0, d.jb)(n, { usyncResponse: e }))
                );
              }),
              Promise.all(t)
            );
          })
        );
      }
      var re = function (e, t) {
          return (
            (0, M.c)("full-sync"),
            w().enqueue("syncAll", () =>
              H(e, t).then((e) => {
                var t = e.phoneToNames,
                  n = e.phoneContactsSize,
                  r = e.deletedJids,
                  i = e.revision,
                  a = e.iq;
                return (0, s.b)(a, V).then((e) =>
                  q(
                    {
                      phoneToNames: t,
                      phoneContactsSize: n,
                      deletedJids: r,
                      revision: i,
                    },
                    e
                  )
                );
              })
            )
          );
        },
        ie = function (e, t) {
          (0, M.c)("full-sync");
          var n = H(e, t).then((e) => {
            var t = e.phoneToNames,
              n = e.phoneContactsSize,
              r = e.deletedJids,
              i = e.revision,
              a = e.iq;
            return (0, s.e)(a, V)
              .then((e) =>
                q(
                  {
                    phoneToNames: t,
                    phoneContactsSize: n,
                    deletedJids: r,
                    revision: i,
                  },
                  e
                )
              )
              .then(() => {})
              .catch(
                (0, x.a)(
                  u.b,
                  () => (
                    __LOG__(3)`Disconnected while trying to sync contacts`,
                    (0, S.d)("network-error")
                  )
                )
              );
          });
          return w()
            .enqueue("syncAll", () => n.then(() => -1))
            .then(() => n);
        },
        ae = function (e, t, n) {
          return (
            (0, M.c)("delta-sync"),
            w().enqueue("deltaSync", () =>
              (function (e, t, n) {
                return (
                  __LOG__(2)`Running deltaSync`,
                  (r = h.y.get()).length < 50 || !(0, m.m)(r[0], j)
                    ? Promise.all([
                        (0, _.e)("page", "getContactsFromPhoneBook", {}),
                        (0, f.c)(),
                        (0, f.e)(),
                      ])
                        .then((t) => {
                          var r = o()(t, 3),
                            i = r[0],
                            a = r[1],
                            u = r[2],
                            c = i.length,
                            _ = 0,
                            v = new Map(),
                            g = new Set(),
                            y = new Set(),
                            b = new Set(),
                            w = new Map();
                          a.forEach((e) => {
                            var t = e.phonebookPhone;
                            null != t &&
                              (v.set(t, e),
                              g.add(t),
                              b.add(t),
                              e.noWhatsApp || _++);
                          }),
                            u.forEach((e) => {
                              g.add(e), b.add(e);
                            });
                          var S = {};
                          if (
                            (i.forEach((e) => {
                              if (Array.isArray(e.tel))
                                for (var t = 0; t < e.tel.length; t++) {
                                  var r = (0, E.g)(e.tel[t]);
                                  if (r)
                                    if (((S[r] = e), g.has(r))) {
                                      var i = v.get(r);
                                      if (i && i.phonebookPhone) {
                                        var a = (0, p.a)(e);
                                        if (
                                          i.fullName !== a.fullName ||
                                          i.shortName !== a.shortName
                                        ) {
                                          var o = {
                                            jid: i.jid,
                                            fullName: a.fullName || void 0,
                                            shortName: a.shortName || void 0,
                                            phonebookPhone: i.phonebookPhone,
                                          };
                                          w.set(i.jid, o);
                                        } else w.has(i.jid) && w.delete(i.jid);
                                      }
                                      b.delete(r);
                                    } else if (
                                      (y.add(r), n && n.hasOwnProperty(r))
                                    ) {
                                      var u = n[r],
                                        s = Y(u, e, r);
                                      w.set(u, s);
                                    }
                                }
                            }),
                            0 === y.size && 0 === b.size)
                          )
                            return (
                              __LOG__(2)`syncContacts phonebook unchanged`,
                              (w.size > 0
                                ? (0, f.a)(w)
                                : Promise.resolve()
                              ).then(() => {
                                h.w.set({
                                  addressbookSize: c,
                                  addressbookWhatsappSize: _,
                                });
                              })
                            );
                          var L = [],
                            G = [],
                            M = {},
                            A = new Set();
                          y.forEach((e) => {
                            L.push(
                              (0, l.w)(
                                "user",
                                null,
                                (0, l.w)("contact", null, e)
                              )
                            );
                          });
                          for (
                            var P = Array.from(b),
                              T = function (e) {
                                var t = P[e],
                                  n = v.get(t);
                                if (n) {
                                  if (
                                    (A.add(n.jid),
                                    L.push(
                                      (0, l.w)(
                                        "user",
                                        { jid: (0, l.g)(n.jid) },
                                        (0, l.w)("contact", { type: "delete" })
                                      )
                                    ),
                                    n.jid === h.t.get())
                                  )
                                    return "continue";
                                  if (null != n.chatId) {
                                    var r = K(n),
                                      i = r.devices,
                                      a = r.about,
                                      o = r.business;
                                    G.push(
                                      i.then((e) =>
                                        (0, l.w)(
                                          "user",
                                          { jid: (0, l.g)(n.jid) },
                                          a,
                                          e,
                                          o
                                        )
                                      )
                                    );
                                  } else (0, I.e)(n) && (M[n.jid] = n);
                                }
                              },
                              N = 0;
                            N < P.length;
                            N++
                          )
                            T(N);
                          if (0 === L.length) {
                            var C = Array.from(b);
                            return (
                              w.size > 0 ? (0, f.a)(w, C) : (0, f.g)(C)
                            ).then(() => {
                              h.w.set({
                                addressbookSize: c,
                                addressbookWhatsappSize: _,
                              });
                            });
                          }
                          var R = Promise.resolve(G)
                            .then((e) => {
                              var t = (0, k.x)(M);
                              return t.length > 0
                                ? (0, d.r)(t).then(
                                    (t) => (
                                      t.forEach((t) => {
                                        var n = M[t],
                                          r = K(n),
                                          i = r.devices,
                                          a = r.about,
                                          o = r.business;
                                        e.push(
                                          i.then((e) =>
                                            (0, l.w)(
                                              "user",
                                              { jid: (0, l.g)(n.jid) },
                                              a,
                                              e,
                                              o
                                            )
                                          )
                                        );
                                      }),
                                      Promise.all(e)
                                    )
                                  )
                                : Promise.all(e);
                            })
                            .then((t) => {
                              var n = (0, l.w)(
                                "iq",
                                {
                                  to: (0, l.g)(h.t.get()),
                                  id: (0, l.u)(),
                                  xmlns: "usync",
                                  type: "get",
                                },
                                (0, l.w)(
                                  "usync",
                                  {
                                    mode: "delta",
                                    context: e,
                                    sid: (0, l.u)(),
                                    index: "0",
                                    last: "true",
                                  },
                                  (0, l.w)(
                                    "query",
                                    null,
                                    (0, l.w)("contact", null),
                                    (0, l.w)("status", null),
                                    (0, l.w)(
                                      "business",
                                      null,
                                      (0, l.w)("verified_name", null)
                                    ),
                                    (0, l.w)("devices", {
                                      version: (0, l.f)(2),
                                    }),
                                    ue()
                                      ? (0, l.w)("disappearing_mode", null)
                                      : null,
                                    t.length > 0
                                      ? (0, l.w)("sidelist", null)
                                      : null
                                  ),
                                  (0, l.w)("list", null, L),
                                  t.length > 0
                                    ? (0, l.w)("side_list", null, t)
                                    : null
                                )
                              );
                              return (0, s.b)(n, V);
                            });
                          return Promise.all([
                            R,
                            w.size > 0 || A.size > 0
                              ? (0, f.a)(w, null, A).catch(
                                  (e) =>
                                    __LOG__(3)`updateContactNames failed: ${e}`
                                )
                              : null,
                          ]).then((e) => {
                            var t = o()(e, 1)[0];
                            if (!t.success)
                              throw (
                                (__LOG__(
                                  4
                                )`Error while sending contacts to WA server in delta sync`,
                                t.errorBackoff > 0 &&
                                  O((0, m.k)(t.errorBackoff)),
                                new Error("delta sync unsuccessful"))
                              );
                            for (
                              var n = t.result.inPhonebook,
                                r = t.result.unverifiedDevicesInfo,
                                i = new Map(),
                                a = new Map(),
                                s = 0;
                              s < n.length;
                              s++
                            ) {
                              var l = n[s],
                                f = l.phonebookKey,
                                _ = l.jid,
                                v = l.business,
                                g = z(l, (0, p.a)(S[f]));
                              A.delete(_), i.set(_, g), a.set(_, v);
                            }
                            for (
                              var y = t.result.inSidelist, b = 0;
                              b < y.length;
                              b++
                            ) {
                              var w = y[b],
                                E = w.jid,
                                I = w.business;
                              if (!i.has(E)) {
                                var k = W(w);
                                k && (A.delete(E), i.set(E, k));
                              }
                              a.has(E) || a.set(E, I);
                            }
                            var L = [
                              ...u.filter((e) => S.hasOwnProperty(e)),
                              ...t.result.invalid,
                            ];
                            return te(i, A, L, r, a).then(() => {
                              for (
                                var e = [...h.y.get(), (0, m.D)()];
                                e.length > 50;

                              )
                                e.shift();
                              return Promise.all([
                                (0, d.t)().then((e) => {
                                  h.w.set({
                                    addressbookSize: c,
                                    addressbookWhatsappSize: e,
                                  });
                                }),
                                h.y.set(e),
                              ]);
                            });
                          });
                        })
                        .then(() => h.v.set(t))
                    : (__LOG__(3)`Delta sync has been throttled`,
                      Promise.resolve())
                );
                var r;
              })(e, t, n).then(() => -1)
            )
          );
        },
        oe = function (e) {
          var t = new g.a();
          return (
            w().enqueue("contactQuerySync-" + e, () =>
              (function (e) {
                var t = "+" + e,
                  n = (0, l.w)(
                    "iq",
                    {
                      to: (0, l.g)(h.t.get()),
                      id: (0, l.u)(),
                      xmlns: "usync",
                      type: "get",
                    },
                    (0, l.w)(
                      "usync",
                      {
                        mode: "query",
                        context: "interactive",
                        sid: (0, l.u)(),
                        index: "0",
                        last: "true",
                      },
                      (0, l.w)(
                        "query",
                        null,
                        (0, l.w)("contact", null),
                        (0, l.w)("status", null),
                        (0, l.w)("devices", { version: (0, l.f)(2) }),
                        (0, l.w)(
                          "business",
                          null,
                          (0, l.w)("verified_name", null)
                        ),
                        ue() ? (0, l.w)("disappearing_mode", null) : null
                      ),
                      (0, l.w)(
                        "list",
                        null,
                        (0, l.w)("user", null, (0, l.w)("contact", null, t))
                      )
                    )
                  );
                return (0, s.d)(n, V, 5)
                  .then((e) => {
                    if (
                      (__LOG__(2)`syncContacts: finished waiting, executing`,
                      !e.success)
                    )
                      throw new Error("contact query sync unsuccessful");
                    if (e.result.invalid.length > 0) return "invalid";
                    var t = e.result.inPhonebook;
                    if (0 === t.length)
                      return (
                        __LOG__(
                          3
                        )`contactQuerySync: no updates and no invalid received`,
                        "invalid"
                      );
                    var n = t[0],
                      r = n.jid;
                    return (0, f.b)(r).then((t) => {
                      var i = new Map(),
                        a = W(n);
                      if (a) {
                        if (t && null != t.phonebookPhone) {
                          var o = t.phonebookPhone,
                            u = t.shortName,
                            s = t.fullName;
                          a.phonebook = {
                            phonebookPhone: o,
                            shortName: u,
                            fullName: s,
                          };
                        }
                        i.set(r, a);
                      }
                      return ne(e.result.unverifiedDevicesInfo)
                        .then(() => {
                          var e = n.business;
                          return J(r, t, e);
                        })
                        .then(() => (0, f.i)(i, null, []))
                        .then(() => (n.inWhatsApp ? r : "not-found"));
                    });
                  })
                  .catch(
                    (0, x.a)(
                      u.b,
                      () => (__LOG__(3)`syncContacts: timeout`, "offline")
                    )
                  );
              })(e)
                .then((e) => (t.resolve(e), -1))
                .catch((e) => (t.reject(e), -1))
            ),
            t.promise
          );
        };
      function ue() {
        return (0, D.a)("disappearing_mode");
      }
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return u;
      }),
        n.d(t, "b", function () {
          return s;
        }),
        n.d(t, "c", function () {
          return l;
        }),
        n.d(t, "d", function () {
          return c;
        });
      var r = n(122),
        i = n(217),
        a = n(36);
      function o(e, t) {
        var n = (0, a.b)(t),
          r = (0, a.e)(t);
        return e.msgs.where("id").between(n, r, !0, !0);
      }
      function u(e, t) {
        return o(e, t)
          .filter((e) => (0, r.c)(e) > r.a.GARBAGE)
          .reverse()
          .first()
          .then((e) => {
            if (e) {
              var t = (0, i.a)(e);
              if (null != t) return t;
            }
          });
      }
      function s(e, t) {
        return o(e, t)
          .reverse()
          .first()
          .then((e) => (e ? e.id : void 0));
      }
      function l(e, t) {
        return o(e, t)
          .first()
          .then((e) => (e ? e.id : void 0));
      }
      function c(e, t, n) {
        return e.msgs
          .where("id")
          .between(n, (0, a.e)(t), !0, !0)
          .filter(r.b)
          .first()
          .then((e) => (e ? e.id : void 0));
      }
    },
    function (e, t, n) {
      n.d(t, "l", function () {
        return h;
      }),
        n.d(t, "a", function () {
          return m;
        }),
        n.d(t, "b", function () {
          return g;
        }),
        n.d(t, "r", function () {
          return y;
        }),
        n.d(t, "j", function () {
          return b;
        }),
        n.d(t, "k", function () {
          return w;
        }),
        n.d(t, "s", function () {
          return O;
        }),
        n.d(t, "q", function () {
          return E;
        }),
        n.d(t, "c", function () {
          return G;
        }),
        n.d(t, "m", function () {
          return M;
        }),
        n.d(t, "n", function () {
          return A;
        }),
        n.d(t, "f", function () {
          return P;
        }),
        n.d(t, "g", function () {
          return T;
        }),
        n.d(t, "h", function () {
          return N;
        }),
        n.d(t, "o", function () {
          return C;
        }),
        n.d(t, "d", function () {
          return R;
        }),
        n.d(t, "e", function () {
          return x;
        }),
        n.d(t, "p", function () {
          return D;
        }),
        n.d(t, "i", function () {
          return U;
        });
      var r = n(8),
        i = n.n(r),
        a = n(32),
        o = n(5),
        u = n(50),
        s = n(3),
        l = n(25),
        c = n(10),
        d = n(11),
        f = n(2),
        _ = n(119),
        p = n(398),
        v = n(12);
      function h(e) {
        return (0, c.f)("hasGifRecentOrRecompute", (t) =>
          t.transact("rw", ["meta"], () =>
            I(t).then((n) => {
              var r = n.recentGifs,
                i = n.toDelete,
                a = r.get(e);
              if (a) {
                if (null == a.contentPath)
                  return (
                    __LOG__(
                      2
                    )`hasGifRecentOrRecompute: gif exists without content`,
                    a
                  );
                var o = S(r, e);
                return t.stores.meta
                  .put({
                    key: l.a.RECENT_GIFS,
                    value: { recentGifs: o, toDelete: i },
                  })
                  .then(() => a);
              }
              __LOG__(2)`hasGifRecentOrRecompute: gif does not exist`;
            })
          )
        );
      }
      function m(e) {
        return (0, c.f)("addRecentWorthGifOrRecompute", (t) =>
          t.transact("rw", ["meta"], () =>
            I(t).then((n) => {
              var r,
                i = n.recentGifs,
                a = n.toDelete,
                o = i.get(e);
              if (
                (o && null != o.contentPath
                  ? (__LOG__(
                      3
                    )`addRecentWorthGifOrRecompute: recent gif already exist`,
                    (r = !1))
                  : (r = (function (e, t) {
                      var n = k(e);
                      return n.length < 12 || n[11].weight < (t || 0) + 1e3;
                    })(i, null == o ? void 0 : o.weight)),
                !r)
              ) {
                var u = S(i, e);
                return t.stores.meta
                  .put({
                    key: l.a.RECENT_GIFS,
                    value: { recentGifs: u, toDelete: a },
                  })
                  .then(() => r);
              }
              return !0;
            })
          )
        );
      }
      function g(e, t) {
        return (0, c.f)("createEmptyRecentGif", (n) =>
          n.transact("rw", ["meta"], () =>
            I(n).then((r) => {
              var i = r.recentGifs,
                a = r.toDelete;
              if (!i.get(e))
                return (
                  i.set(e, {
                    plaintextHash: e,
                    lastSent: (0, s.D)(),
                    weight: 0,
                    relativePath: t,
                  }),
                  n.stores.meta
                    .put({
                      key: l.a.RECENT_GIFS,
                      value: { recentGifs: i, toDelete: a },
                    })
                    .then(() => {})
                );
              __LOG__(3)`createEmptyRecentGif: recent gif already exists`;
            })
          )
        );
      }
      function y(e, t, n) {
        return (0, c.f)("markRecentGifAsStored", (r) =>
          r.transact("rw", ["meta"], () =>
            I(r).then((i) => {
              var a = i.recentGifs,
                o = i.toDelete,
                u = a.get(e);
              if (u) {
                if (null == u.contentPath) {
                  a.set(
                    e,
                    Object.assign({}, u, { contentPath: n, info: L(t) })
                  ),
                    __LOG__(
                      2
                    )`markRecentGifAsStored: Recomputing recentGifs weights`;
                  var s = S(a, e),
                    c = (function (e) {
                      return k(e).slice(12);
                    })(s);
                  return (
                    __LOG__(2)`markRecentGifAsStored purging ${c.length}`,
                    c.forEach((e) => {
                      null != e.contentPath &&
                        (o.push(e.contentPath),
                        s.set(
                          e.plaintextHash,
                          (0, d.j)(e, { contentPath: void 0, info: void 0 })
                        ));
                    }),
                    r.stores.meta
                      .put({
                        key: l.a.RECENT_GIFS,
                        value: { recentGifs: s, toDelete: o },
                      })
                      .then(() => o)
                  );
                }
                __LOG__(3)`markRecentGifAsStored recent gif already stored`;
              } else __LOG__(3)`markRecentGifAsStored: recent gif not found`;
            })
          )
        );
      }
      function b() {
        return (0, c.f)("getRecentGifs", (e) =>
          e.transact("rw", ["meta"], () =>
            I(e).then((e) => {
              var t = e.recentGifs,
                n = [];
              return (
                t.forEach((e) => {
                  void 0 !== e.contentPath && n.push(e);
                }),
                n
                  .sort((e, t) => t.weight - e.weight)
                  .map((e) => ({
                    plaintextHash: e.plaintextHash,
                    contentPath: e.contentPath,
                    info: e.info,
                  }))
              );
            })
          )
        );
      }
      function w() {
        return (0, c.f)("getRecentGifsToDelete", (e) =>
          (0, o.i)(
            (0, l.d)(e.stores.meta, l.a.RECENT_GIFS).then((e) =>
              null == e ? void 0 : e.value.toDelete
            )
          )
        );
      }
      function O(e) {
        return (0, c.f)("markRecentGifContentAsDeleted", (t) =>
          t.transact("rw", ["meta"], () =>
            I(t).then((n) => {
              var r = n.recentGifs,
                i = n.toDelete,
                a = r.get(e);
              if (a)
                return (
                  r.set(e, (0, d.j)(a, { contentPath: void 0, info: void 0 })),
                  t.stores.meta
                    .put({
                      key: l.a.RECENT_GIFS,
                      value: { recentGifs: r, toDelete: i },
                    })
                    .then(() => {})
                );
              __LOG__(3)`markRecentGifContentAsDeleted: No recent gif found`;
            })
          )
        );
      }
      function E(e) {
        return (0, c.f)("markPathAsDeleted", (t) =>
          t.transact("rw", ["meta"], () =>
            I(t).then((n) => {
              var r = n.recentGifs,
                i = n.toDelete,
                a = i.filter((t) => t !== e);
              if (a.length !== i.length)
                return t.stores.meta
                  .put({
                    key: l.a.RECENT_GIFS,
                    value: { recentGifs: r, toDelete: a },
                  })
                  .then(() => {});
              __LOG__(3)`markPathAsDeleted path not found in toDelete`;
            })
          )
        );
      }
      function I(e) {
        return (0, l.d)(e.stores.meta, l.a.RECENT_GIFS).then((e) =>
          e
            ? { recentGifs: e.value.recentGifs, toDelete: e.value.toDelete }
            : { recentGifs: new Map(), toDelete: [] }
        );
      }
      function S(e, t) {
        var n = new Map();
        return (
          Array.from(e.entries()).forEach((e) => {
            var r = i()(e, 2),
              a = r[0],
              o = r[1],
              u = t === a ? o.weight + 1e3 : Math.floor(0.9 * o.weight);
            null == o.contentPath && u < 500
              ? __LOG__(
                  2
                )`_recomputeRecentGifWeights: No need to keep gif ${a} with weight ${u}`
              : n.set(a, (0, d.j)(o, { weight: u }));
          }),
          n
        );
      }
      function k(e) {
        return Array.from(e.values())
          .filter((e) => null != e.contentPath)
          .sort((e, t) =>
            e.weight === t.weight
              ? e.lastSent > t.lastSent
                ? -1
                : 1
              : e.weight > t.weight
              ? -1
              : 1
          );
      }
      function L(e) {
        return {
          gifId: e.gifId,
          size: e.plaintext.size,
          gifAttribution: e.gifAttribution,
          preview: e.preview,
          highResPreview: e.frame,
          bg: e.bg,
          width: e.width,
          height: e.height,
          duration: e.duration,
          rotation: e.rotation,
        };
      }
      function G(e, t, n) {
        return (0, c.f)("createFavoriteGif", (r) =>
          r.transact("rw", ["favoriteGifs"], () =>
            r.stores.favoriteGifs
              .where("plaintextHash")
              .equals(e)
              .first()
              .then((i) => {
                if (i)
                  return __LOG__(3)`setFavoriteGifContent gif already saved`, i;
                var a = {
                  plaintextHash: e,
                  created: (0, s.D)(),
                  relativePath: t,
                  gifId: n.gifId,
                  gifAttribution: n.gifAttribution,
                };
                return r.stores.favoriteGifs
                  .add(a)
                  .then((e) => Object.assign({ id: e }, a));
              })
          )
        );
      }
      function M(e) {
        return (0, c.f)("isFavoriteGif", (t) =>
          (0, o.i)(
            t.stores.favoriteGifs
              .where("plaintextHash")
              .equals(e)
              .first()
              .then((e) => null != e)
          )
        );
      }
      function A(e, t) {
        return (0, c.f)("isFavoriteGifFromId", (n) =>
          (0, o.i)(
            (0, o.j)(n.stores.favoriteGifs, ["gifAttribution", "gifId"])
              .equals([e, t])
              .first()
              .then((e) => null != e)
          )
        );
      }
      function P(e) {
        return (0, c.f)("getFavoriteGif", (t) =>
          t.transact("rw", ["favoriteGifs"], () =>
            t.stores.favoriteGifs.where("plaintextHash").equals(e).first()
          )
        );
      }
      function T(e, t) {
        return (0, c.f)("getFavoriteGifFromId", (n) =>
          n.transact("rw", ["favoriteGifs"], () =>
            (0, o.j)(n.stores.favoriteGifs, ["gifAttribution", "gifId"])
              .equals([t, e])
              .first()
          )
        );
      }
      function N(e, t) {
        return (0, c.f)("getFavoriteGifs", (n) =>
          n
            .transact("rw", ["favoriteGifs"], () =>
              null == e
                ? n.stores.favoriteGifs
                    .orderBy("id")
                    .reverse()
                    .limit(t)
                    .toArray()
                : n.stores.favoriteGifs
                    .where("id")
                    .below(e)
                    .reverse()
                    .limit(t)
                    .toArray()
            )
            .then((e) => {
              var t = [];
              return (
                e.forEach((e) => {
                  var n = j(e);
                  null != n && t.push(n);
                }),
                t
              );
            })
        );
      }
      function C(e, t, n) {
        return (0, c.f)("markFavoriteGifAsStored", (r) =>
          r.transact("rw", ["favoriteGifs"], () =>
            r.stores.favoriteGifs
              .where("plaintextHash")
              .equals(e)
              .first()
              .then((e) => {
                if (e) {
                  var i = Object.assign({}, e, { contentPath: t, info: L(n) });
                  return r.stores.favoriteGifs.put(i).then(() => j(i));
                }
                __LOG__(3)`markFavoriteGifAsStored no ref found`;
              })
          )
        );
      }
      function R(e) {
        return (0, c.f)("deleteFavoriteGif", (t) =>
          t.transact("rw", ["favoriteGifs"], () =>
            t.stores.favoriteGifs
              .where("plaintextHash")
              .equals(e)
              .delete()
              .then(() => {})
          )
        );
      }
      function x(e, t) {
        return (0, c.f)("deleteFavoriteGifFromId", (n) =>
          n.transact("rw", ["favoriteGifs"], () =>
            (0, o.j)(n.stores.favoriteGifs, ["gifAttribution", "gifId"])
              .equals([t, e])
              .delete()
              .then(() => {})
          )
        );
      }
      function D(e) {
        return (0, c.f)("markFavoriteGifContentAsDeleted", (t) =>
          (0, o.i)(
            t.stores.favoriteGifs
              .where("plaintextHash")
              .equals(e)
              .delete()
              .then(() => {})
          )
        );
      }
      function U(e) {
        return (0, c.f)("getGifUploadRequest", (t) =>
          (0, o.i)(
            t.stores.msgs
              .where("id")
              .anyOf(e)
              .toArray()
              .then((e) => {
                var n = [];
                return (
                  e.forEach((e) => {
                    if (
                      e.type === f.f.GIF &&
                      e.hasPreview &&
                      e.media &&
                      e.frame &&
                      e.plaintext &&
                      e.bg &&
                      e.gifAttribution
                    ) {
                      var r = e.bg,
                        s = e.media,
                        l = e.frame,
                        c = e.plaintext,
                        h = e.gifAttribution,
                        m = (0, a.C)(s),
                        g = (0, u.e)(c);
                      if (null != g) {
                        var y = (0, o.c)([
                          t.stores.media.get(s),
                          t.stores.previews.get(m),
                        ]).then((n) => {
                          var a = i()(n, 2),
                            o = a[0],
                            u = a[1];
                          if (null == o || null == u)
                            return (
                              __LOG__(
                                2
                              )`getGifUploadRequestsByIds: ${e.id} has no media`,
                              null
                            );
                          var s = o.plaintextHash;
                          return t.stores.favoriteGifs
                            .where("plaintextHash")
                            .equals(s)
                            .first()
                            .then((t) =>
                              t && t.contentPath
                                ? (__LOG__(
                                    2
                                  )`getGifUploadRequestsByIds: ${e.id} already favorited and has content`,
                                  null)
                                : (__LOG__(
                                    2
                                  )`getGifUploadRequestsByIds: obtaining ${e.id} info`,
                                  (function (e, t, n) {
                                    return Promise.all([
                                      (0, v.e)(
                                        "page",
                                        "getBlobFromPhoneStorage",
                                        { path: e }
                                      ),
                                      (0, _.getChunkTable)().getFrame(t),
                                      (0, d.h)(n),
                                    ]).then((n) => {
                                      var r = i()(n, 3),
                                        a = r[0],
                                        o = r[1],
                                        u = r[2];
                                      if (null == o)
                                        return (
                                          __LOG__(
                                            3
                                          )`getGifVideoInfo: ${t} has no frame data`,
                                          null
                                        );
                                      if (null == u)
                                        return (
                                          __LOG__(
                                            3
                                          )`getGifVideoInfo: error converting blob`,
                                          null
                                        );
                                      var s = a.blob;
                                      return null == s
                                        ? (__LOG__(
                                            3
                                          )`getGifVideoInfo: ${e} has no blob data`,
                                          null)
                                        : (0, p.a)(s).then((e) => {
                                            if ("error" === e.type)
                                              return (
                                                __LOG__(
                                                  3
                                                )`getGifVideoInfo: unable to parse stored gif`,
                                                null
                                              );
                                            e.type;
                                            var t = e.info.video;
                                            if (null == t)
                                              return (
                                                __LOG__(
                                                  3
                                                )`'getGifVideoInfo: stored gif not video!'`,
                                                null
                                              );
                                            var n = t.duration;
                                            return isNaN(n)
                                              ? (__LOG__(
                                                  3
                                                )`'getGifVideoInfo: stored gif has unknown length'`,
                                                null)
                                              : {
                                                  plaintext: s,
                                                  info: Object.assign({}, t, {
                                                    duration: Math.ceil(n),
                                                  }),
                                                  frame: o,
                                                  preview: u,
                                                };
                                          });
                                    });
                                  })(g, l, u.preview).then((e) => {
                                    if (null == e) return null;
                                    var t = e.frame,
                                      n = e.plaintext,
                                      i = e.info,
                                      a = e.preview;
                                    return {
                                      request: Object.assign(
                                        {
                                          type: "gif",
                                          bg: r,
                                          gifAttribution: h,
                                          frame: t,
                                          preview: a,
                                          plaintext: n,
                                        },
                                        i,
                                        { gifId: null, caption: null }
                                      ),
                                      plaintextHash: s,
                                    };
                                  }))
                            );
                        });
                        n.push(y);
                      }
                    }
                  }),
                  (0, o.c)(n).then((e) => e.filter((e) => null != e))
                );
              })
          )
        );
      }
      function j(e) {
        return void 0 === e.contentPath
          ? null
          : {
              id: e.id,
              plaintextHash: e.plaintextHash,
              contentPath: e.contentPath,
              info: e.info,
            };
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return Xr;
      }),
        n.d(t, "a", function () {
          return ei;
        }),
        n.d(t, "c", function () {
          return ti;
        });
      var r = n(30),
        i = n(10),
        a = n(22),
        o = n(238),
        u = n(41),
        s = n(116),
        l = n(275),
        c = n(4),
        d = n(26),
        f = n.n(d),
        _ = n(8),
        p = n.n(_),
        v = n(114),
        h = n(320),
        m = n(399),
        g = n(55),
        y = n(73),
        b = n(67),
        w = n(187),
        O = n(184),
        E = n(185),
        I = n(56),
        S = n(75),
        k = n(150),
        L = n(440),
        G = n(230),
        M = n(441),
        A = n(442),
        P = n(2),
        T = n(38),
        N = n(37),
        C = n.n(N),
        R = n(7),
        x = n(9),
        D = n(39),
        U = n(16),
        j = n(3),
        $ = n(14),
        F = n(6),
        B = n(258),
        V = n(134),
        K = n(191),
        H = n(24),
        q = n(43),
        z = n(0),
        W = Object.assign({}, null);
      W.internalSpec = {
        duration: [1, z.d.SFIXED32],
        timestamp: [2, z.d.SFIXED64],
      };
      var J = n(84),
        Y = new Uint8Array(32),
        Q = n(287),
        Z = n(117),
        X = (function () {
          var e = f()(function* (e, t, n) {
            for (var r = n, i = e.length, a = 0; a < i; a++)
              r = yield t(r, e[a], a);
            return r;
          });
          return function (t, n, r) {
            return e.apply(this, arguments);
          };
        })();
      function ee(e, t, n, r, i) {
        if (t >= e || (n && n >= e)) return { type: "skip-update" };
        var a = e,
          o = i.lastRunTs,
          u = r;
        return (
          (null != u && 0 !== u) || (u = Date.now()),
          {
            type: "update",
            expectedTs: a,
            expectedTsUpdatedTs: u,
            expectedTsDeleteExpiredJobTs: o,
          }
        );
      }
      var te = n(251);
      n(348), n(126), n(443), n(338), n(201);
      var ne = n(20),
        re = n(34),
        ie = (n(286), n(52)),
        ae = { skmsg: "skmsg", pkmsg: "pkmsg", msg: "msg", none: "none" },
        oe = { high: "high", low: "low", unknown: "unknown" },
        ue = { creation: "creation", vote: "vote" },
        se = new v.b("incomingMsgParser", (e) => {
          e.assertTag("message"), e.hasAttr("to") && (0, m.a)(e, "to");
          var t = e.hasChild("unavailable"),
            n = e
              .mapChildrenWithTag("enc", (e) => {
                var t = e.attrEnum("type", ae);
                if ("none" !== t)
                  return {
                    e2eType: t,
                    ciphertext: e.contentBytes(),
                    retryCount: e.hasAttr("count") ? e.attrInt("count") : 0,
                    hideFail: "hide" === e.maybeAttrString("decrypt-fail"),
                  };
              })
              .filter(Boolean);
          0 !== n.length ||
            t ||
            e.throw("to have enc node children or unavailable");
          var r = e.hasChild("device-identity")
              ? (0, V.d)(e.child("device-identity").contentBytes())
              : null,
            i = e.hasChild("biz") ? (0, K.getBspInfo)(e.child("biz")) : void 0,
            a = {
              externalId: e.attrString("id"),
              ts: e.attrTime("t"),
              rawTs: e.attrString("t"),
              encs: n,
              isHsm: e.hasChild("hsm"),
              edit: e.hasAttr("edit") ? e.attrInt("edit") : re.c,
              verifiedNameSerial: e.hasAttr("verified_name")
                ? e.attrLongInt("verified_name")
                : null,
              verifiedLevel: e.attrEnumOrDefault("verified_level", oe, null),
              verifiedNameCert: e.hasChild("verified_name")
                ? e.child("verified_name").contentBytes()
                : null,
              bspInfo: i,
              pushname: e.maybeAttrString("notify"),
              urlNumber: e.hasChild("url_number"),
              urlText: e.hasChild("url_text"),
              expiration: e.maybeAttrInt("expiration"),
              ephSetting: e.maybeAttrString("eph_setting"),
              unavailable: t,
              signedDeviceIdentity: r,
              recipient: null,
            },
            o = e.maybeChild("meta");
          if (null != o && o.hasAttr("polltype")) {
            var u = o.attrEnumOrNullIfUnknown("polltype", ue);
            null != u && (a.meta = { pollType: u });
          }
          return { from: e.attrFromPhoneJid(), content: a };
        }),
        le = (0, v.c)("handleMsg", se, (e) =>
          "status" === e.from.type
            ? (0, b.b)((0, R.h)(e.from.author)).then((t) => {
                if (!t || null == t.phonebookPhone) {
                  __LOG__(3)`Received status for non-existing contact`;
                  var n =
                    null != t &&
                    null != t.lastKnownName &&
                    (null != t.lastKnownName.fullName ||
                      null != t.lastKnownName.shortName);
                  return (
                    WAM.log("regular", 1260, void 0, [1, 1, n]),
                    de(e.content, e.from)
                  );
                }
                return ce(e.content, e.from, ye, be);
              })
            : ce(e.content, e.from, ve, ge)
        );
      function ce(e, t, n, a) {
        var o = e.externalId,
          s = t.author,
          l = (function (e) {
            switch (e.type) {
              case "device":
                return null;
              case "group":
                return e.groupJid;
              case "broadcast":
                return e.broadcastJid;
              case "status":
                return x.h;
              default:
                return (0, C.a)(e.type);
            }
          })(t),
          d = (function (e) {
            switch (e.type) {
              case "device":
              case "group":
              case "broadcast":
                return e.chat;
              case "status":
                return x.h;
              default:
                return (0, C.a)(e.type);
            }
          })(t);
        return (0, i.d)(d, () =>
          e.unavailable && "status" !== t.type
            ? (function (e, t) {
                var n = e.externalId,
                  r = e.ts,
                  i = e.verifiedNameSerial,
                  a = e.verifiedLevel,
                  o = e.verifiedNameCert,
                  u = e.bspInfo,
                  s = (0, R.h)(t.author),
                  l = {
                    msg: {
                      type: P.f.MD_PLACEHOLDER,
                      externalId: n,
                      ts: r,
                      author: s,
                      ack: P.a.RECEIVED,
                      altIndex: "",
                    },
                  };
                if (a) {
                  var c = { level: a, serial: i || -1, cert: o, bsp: u };
                  l.contactVerification = c;
                }
                return me(t.chat, s, l).then(() => {});
              })(e, t).then(() =>
                (0, c.w)("ack", {
                  id: (0, c.b)(o),
                  from: (0, c.g)(F.t.get()),
                  to: (0, c.m)(t),
                  class: "message",
                })
              )
            : X(
                e.encs,
                (r, i) => {
                  if ("success" !== r.result) return Promise.resolve(r);
                  var c = i.e2eType,
                    d = i.ciphertext,
                    f = i.retryCount,
                    _ = i.hideFail,
                    p =
                      null != l
                        ? { type: "multicast", to: l }
                        : { type: "user", to: s },
                    v = {
                      onSuccess: (r) => {
                        var i = (0, h.a)(r),
                          a = (0, S.a)(I.h, i);
                        (0, Q.a)({
                          type: c,
                          destination: p,
                          e2eSenderType: (0, Z.d)(s),
                          e2eSuccessful: !0,
                          messageMediaType: (0, Z.e)(a),
                        });
                        var o = (function (e, t, n) {
                          var r = e.senderKeyDistributionMessage;
                          if (r) {
                            var i = r.groupId;
                            if (t)
                              if (i && t === i) {
                                var a = r.axolotlSenderKeyDistributionMessage;
                                if (a)
                                  return u.e({
                                    group: t,
                                    sender: n,
                                    skdist: a,
                                  });
                                __LOG__(4)`skmsg from ${n} has no content`;
                              } else
                                __LOG__(
                                  4
                                )`skmsg from ${n} mismatched to ${t}, says ${i}`;
                            else
                              __LOG__(
                                4
                              )`skmsg from ${n} says ${i} but unattached`;
                          }
                        })(a, l, s);
                        return Promise.resolve(o).then(() => n(e, t, a, i));
                      },
                      onDecryptFailure: (n) => {
                        var r = (0, Z.c)(n),
                          i = {
                            type: c,
                            destination: p,
                            e2eSenderType: (0, Z.d)(s),
                            e2eFailureReason: null != r ? r : void 0,
                            e2eSuccessful: !1,
                          };
                        (0, Q.a)(i);
                        var u = (0, te.a)(o);
                        switch (n) {
                          case g.b.ERR_DUPLICATE_MESSAGE:
                            return (
                              __LOG__(2)`Msg ${u} is duplicate`,
                              { result: "success" }
                            );
                          case g.b.ERR_NO_SESSION:
                            __LOG__(2)`Msg ${u} has no session`;
                            break;
                          case g.b.ERR_INVALID_KEY_ID:
                            __LOG__(2)`Msg ${o} has invalid key id`;
                            break;
                          case g.b.ERR_INVALID_KEY:
                            __LOG__(2)`Msg ${u} has invalid key`;
                            break;
                          case g.b.ERR_INVALID_SIGNED_PRE_KEY:
                            __LOG__(2)`Msg ${u} has invalid signed pre key`;
                            break;
                          case g.b.ERR_SIGNED_PRE_KEY_ID_MISMATCH:
                            __LOG__(
                              2
                            )`Msg ${u} has mismatched signed pre key id`;
                            break;
                          case g.b.ERR_SIGNED_PRE_KEY_DESERIALIZATION:
                            __LOG__(
                              2
                            )`Cannot deserialize local signed pre key while processing msg ${u}`;
                            break;
                          case g.b.ERR_INVALID_ONE_TIME_KEY:
                            __LOG__(2)`Msg ${u} has invalid one time key`;
                            break;
                          case g.b.ERR_ONE_TIME_KEY_ID_MISMATCH:
                            __LOG__(2)`Msg ${u} has mismatched one time key id`;
                            break;
                          case g.b.ERR_ONE_TIME_KEY_DESERIALIZATION:
                            __LOG__(
                              2
                            )`Cannot deserialize local one time key while processing msg ${u}`;
                            break;
                          case g.b.ERR_INVALID_MESSAGE:
                            __LOG__(2)`Msg ${u} has invalid message`;
                            break;
                          default:
                            return (
                              __LOG__(
                                4
                              )`TODO: unhandled error code ${n} for msg ${u}`,
                              { result: "success" }
                            );
                        }
                        return _
                          ? { result: "retry", retryCount: f }
                          : a(e, t, f);
                      },
                    };
                  if ("skmsg" === c)
                    return l
                      ? u.h(l, s, d, v)
                      : (__LOG__(4)`Can not do skmsg for non group ${s}`,
                        Promise.resolve({ result: "success" }));
                  if ("pkmsg" !== c || (0, R.r)(s)) return u.i(s, c, d, v);
                  var m = e.signedDeviceIdentity;
                  return m
                    ? (0, V.f)(m, d, s).then((n) =>
                        n
                          ? u.i(s, c, d, v)
                          : (__LOG__(4)`handleMsg failed ADV verification`,
                            a(e, t, f))
                      )
                    : (__LOG__(
                        4
                      )`handleMsg pkmsg from companion device must have device-identity`,
                      a(e, t, f));
                },
                { result: "success" }
              ).then((n) => {
                switch (n.result) {
                  case "success":
                    return de(e, t, n.type);
                  case "hsm-envelope-mismatch":
                    return (0, r.g)(
                      (0, c.w)(
                        "receipt",
                        {
                          to: (0, c.m)(t),
                          participant: (0, c.j)(t),
                          id: (0, c.b)(o),
                          type: "error",
                        },
                        (0, c.w)("error", { type: "hsm-envelope-mismatch" })
                      ),
                      {
                        id: o,
                        class: "receipt",
                        from: (0, c.t)(t),
                        participant: (0, c.s)(t),
                        type: "error",
                      }
                    ).then(() => de(e, t));
                  case "retry":
                    var i,
                      a = n.retryCount + 1,
                      s = () =>
                        u
                          .F()
                          .then((e) => ({
                            registrationNode: (0, c.w)(
                              "registration",
                              null,
                              (0, v.a)(e)
                            ),
                            keysNode: null,
                          }));
                    i =
                      a >= 2
                        ? u
                            .L()
                            .then((e) => ({
                              registrationNode: (0, c.w)(
                                "registration",
                                null,
                                (0, v.a)(e.regId)
                              ),
                              keysNode: (0, c.w)(
                                "keys",
                                null,
                                (0, c.w)("type", null, ""),
                                (0, c.w)("identity", null, e.staticPublicKey),
                                (0, B.a)(e.preKey),
                                (0, B.b)(e.signedPreKey)
                              ),
                            }))
                            .catch(
                              (e) => (
                                __LOG__(4)`handleMsg error with info: ${e}`, s()
                              )
                            )
                        : s();
                    var l =
                      a >= 3
                        ? (0, D.b)().waitUntilCompleted(
                            U.e.requestPreKeyDigest()
                          )
                        : null;
                    return Promise.all([i, l]).then((n) => {
                      var i = p()(n, 1)[0],
                        u = (0, c.w)(
                          "receipt",
                          {
                            id: (0, c.b)(o),
                            to: (0, c.m)(t),
                            participant: (0, c.j)(t),
                            type: "retry",
                          },
                          (0, c.w)("retry", {
                            v: "1",
                            count: (0, c.f)(a),
                            id: (0, c.b)(o),
                            t: (0, c.b)(e.rawTs),
                          }),
                          i.registrationNode,
                          i.keysNode
                        );
                      return (0, r.g)(u, {
                        id: o,
                        class: "receipt",
                        from: (0, c.t)(t),
                        participant: (0, c.s)(t),
                        type: "retry",
                      }).then(() => "NO_ACK");
                    });
                  default:
                    return (0, C.a)(n.result);
                }
              })
        );
      }
      function de(e, t, n) {
        return (0, c.w)("receipt", {
          id: (0, c.b)(e.externalId),
          to: (0, c.m)(t),
          participant: (0, c.j)(t),
          type: n ? (0, c.b)(n) : c.c,
        });
      }
      function fe() {
        return (
          __LOG__(
            4
          )`Received message with <hsm/> tag but the message is actually not an HSM`,
          Promise.resolve({ result: "hsm-envelope-mismatch" })
        );
      }
      function _e(e) {
        return Promise.resolve({ result: "success", type: e });
      }
      function pe(e, t, n) {
        var r = n.hydratedTemplate,
          i = n.contextInfo;
        if (!r) return fe();
        var a = r.hydratedContentText,
          o = r.templateId;
        if (!a || !o) return fe();
        var u =
            "broadcast" === t.type
              ? { broadcastJid: t.broadcastJid }
              : Object.freeze({}),
          s = (0, k.a)(
            Object.assign(
              {
                externalId: e.externalId,
                jid: t.chat,
                author: t.author,
                ts: e.ts,
                hydratedTemplate: r,
                verifiedLevel: e.verifiedLevel,
                verifiedNameSerial: e.verifiedNameSerial,
                verifiedNameCert: e.verifiedNameCert,
                bspInfo: e.bspInfo,
                pushname: e.pushname,
                contextInfo: i,
              },
              u
            )
          );
        if (!s) return fe();
        var l = (0, R.h)(t.author);
        return me(t.chat, l, s).then(_e);
      }
      function ve(e, t, n, r) {
        return (
          (function (e, t) {
            he.apply(this, arguments);
          })(t.author, n.messageContextInfo),
          e.isHsm
            ? (e.isHsm,
              n.highlyStructuredMessage
                ? (function (e, t, n) {
                    return n.hydratedHsm
                      ? pe(e, t, n.hydratedHsm)
                      : (__LOG__(
                          4
                        )`Got dehydrated HSM message, even though server was supposed not to send it`,
                        SEND_LOGS("handle-msg-got-dehydrated-hsm"),
                        fe());
                  })(e, t, n.highlyStructuredMessage)
                : n.templateMessage
                ? (function (e, t, n) {
                    return n.hydratedTemplate
                      ? pe(e, t, n)
                      : (__LOG__(
                          4
                        )`Got dehydrated template HSM message, even though server was supposed not to send it`,
                        SEND_LOGS("handle-msg-got-dehydrated-hsm"),
                        fe());
                  })(e, t, n.templateMessage)
                : fe())
            : n.highlyStructuredMessage ||
              (n.templateMessage && n.templateMessage.hydratedTemplate)
            ? Promise.resolve({ result: "hsm-envelope-mismatch" })
            : (function (e, t, n, r) {
                var i = {
                  externalId: e.externalId,
                  jid: t.chat,
                  author: t.author,
                  ts: e.ts,
                  proto: n,
                  bytes: r,
                  edit: e.edit,
                  verifiedNameSerial: e.verifiedNameSerial,
                  verifiedLevel: e.verifiedLevel,
                  verifiedNameCert: e.verifiedNameCert,
                  bspInfo: e.bspInfo,
                  pushname: e.pushname,
                  urlNumber: e.urlNumber,
                  urlText: e.urlText,
                  expiration: e.expiration,
                };
                "broadcast" === t.type &&
                  ((i.broadcastJid = t.broadcastJid),
                  e.ephSetting && (i.ephSetting = e.ephSetting));
                var o = e.meta;
                if (
                  (null != o && (i.meta = o),
                  (0, ie.b)() && null != n.reactionMessage)
                ) {
                  var u = (0, L.a)(i, n.reactionMessage);
                  return u
                    ? (0, w.j)(u).then(() => _e("inactive"))
                    : (__LOG__(4)`Invalid reaction msg`, _e("inactive"));
                }
                if ((0, ie.q)()) {
                  var s,
                    l = n.pollUpdateMessage;
                  if (
                    "vote" === (null == (s = i.meta) ? void 0 : s.pollType) &&
                    null == l
                  )
                    return (
                      __LOG__(
                        4
                      )`processNormalMsg: poll_update_message_stanza_invalid`,
                      _e()
                    );
                  if (null != l) {
                    var c = (0, G.d)(i, l);
                    if (!c) return __LOG__(4)`Invalid poll update msg`, _e();
                    if ("futureproof" !== c) return (0, O.k)(c).then(_e);
                    __LOG__(
                      2
                    )`Received unsupported poll update message. Storing it as a futureproof`;
                  }
                }
                var d = n.keepInChatMessage;
                if (null != d) {
                  if ((0, ie.l)()) {
                    var f = (0, M.a)(i, d);
                    return f
                      ? (0, E.h)(f).then(_e)
                      : (__LOG__(4)`Invalid keep in chat msg`, _e());
                  }
                  __LOG__(
                    2
                  )`Received unsupported keep in chat message. Storing it as a futureproof`;
                }
                var _ = (0, k.i)(i);
                if (!_)
                  return (
                    n.senderKeyDistributionMessage
                      ? __LOG__(2)`msg was just sender key`
                      : __LOG__(4)`Poorly formatted protobuf!`,
                    _e()
                  );
                if (_.ephSetting || _.ephemeralSharedSecret)
                  return (function (e, t) {
                    var n = e.ephSetting;
                    if (!n)
                      return (
                        __LOG__(
                          4
                        )`maybeProcessEphemeralBCLMessage called with missing ephSetting`,
                        SEND_LOGS(
                          "maybeProcessEphemeralBCLMessage-undefined-ephSetting"
                        ),
                        _e()
                      );
                    var r = e.ephemeralSharedSecret;
                    if (!r)
                      return (
                        __LOG__(
                          4
                        )`maybeProcessEphemeralBCLMessage called with missing ephemeralSharedSecret`,
                        SEND_LOGS(
                          "maybeProcessEphemeralBCLMessage-undefined-shared-secret"
                        ),
                        _e()
                      );
                    var i = e.msg.broadcastJid;
                    return i
                      ? (function (e, t, n, r, i) {
                          var a = H.a
                              .build(`Ephemeral ${t} ${e}`)
                              .readByteArray(),
                            o = new Uint8Array(i),
                            u = (0, q.b)(r),
                            s = H.a.build((0, R.h)(n)).readBuffer();
                          return (function (e, t) {
                            return self.crypto.subtle
                              .importKey("raw", e, "HKDF", !1, ["deriveKey"])
                              .then((e) =>
                                self.crypto.subtle.deriveKey(
                                  {
                                    name: "HKDF",
                                    hash: "SHA-256",
                                    salt: Y,
                                    info: t,
                                  },
                                  e,
                                  { name: "HMAC", hash: "SHA-256" },
                                  !0,
                                  ["verify"]
                                )
                              )
                              .then((e) =>
                                self.crypto.subtle.exportKey("raw", e)
                              );
                          })(o, a)
                            .then((e) =>
                              (function (e, t, n) {
                                var r = e.slice(0, 12),
                                  i = e.slice(12, 44);
                                return self.crypto.subtle
                                  .importKey("raw", i, "AES-GCM", !1, [
                                    "decrypt",
                                  ])
                                  .then((e) =>
                                    self.crypto.subtle.decrypt(
                                      {
                                        name: "AES-GCM",
                                        iv: new Uint8Array(r),
                                        additionalData: n,
                                      },
                                      e,
                                      t
                                    )
                                  );
                              })(e, u, s)
                            )
                            .then((e) => {
                              var t = (0, S.a)(W, e),
                                n = t.duration,
                                r = t.timestamp;
                              return null == n || null == r
                                ? (__LOG__(
                                    3
                                  )`ephSetting decoded into malformed proto`,
                                  Promise.reject(
                                    "ephSetting decoded into malformed proto"
                                  ))
                                : {
                                    expiration: n,
                                    timestamp: (0, j.i)((0, J.e)(r)),
                                  };
                            });
                        })(i, F.t.get(), t.author, n, r)
                          .then(
                            (n) => (
                              (e.msg.expiration = n.expiration),
                              (e.msg.ephemeralSettingTimestamp = n.timestamp),
                              (0, a.Qc)(t.chat, e).then(_e)
                            )
                          )
                          .catch(
                            () => (
                              __LOG__(3)`ephSetting Failed to decode`,
                              SEND_LOGS("eph-setting-failed-to-decode"),
                              _e()
                            )
                          )
                      : (__LOG__(
                          3
                        )`maybeProcessEphemeralBCLMessage for non-broadcast message`,
                        SEND_LOGS(
                          "maybeProcessEphemeralBCLMessage-non-broadcast"
                        ),
                        _e());
                  })(_, t);
                var p = (0, R.h)(t.author);
                return me(t.chat, p, _).then(_e);
              })(e, t, n, r)
        );
      }
      function he() {
        return (he = f()(function* (e, t) {
          var n = null == t ? void 0 : t.deviceListMetadata;
          if (null != n) {
            var r = (0, R.h)(e),
              i = yield (0, a.F)(r),
              o = i.contact,
              s = i.jobInfo,
              l = null == o ? void 0 : o.deviceVerification;
            if (null != o && null != l) {
              var c = n.senderTimestamp,
                d = n.senderKeyHash;
              if (null != c)
                if ((0, R.r)(e) && null == d) {
                  var f = parseInt(c, 10);
                  if (f >= l.timestamp) {
                    var _ = o.devices;
                    null != _ &&
                      (yield u.l(
                        r,
                        _.map((e) => e.id)
                      ),
                      yield (0, a.jb)(r, {
                        usyncResponse: {
                          type: "adv_devices_reset",
                          rawId: l.rawId,
                          newIncomingTs: f + 1,
                        },
                      }));
                  }
                } else {
                  var p = ee(
                    parseInt(c, 10),
                    l.timestamp,
                    l.expectedTs,
                    l.expectedTsUpdatedTs,
                    s
                  );
                  "update" === p.type &&
                    (yield (0, a.Cc)(
                      r,
                      p.expectedTs,
                      p.expectedTsUpdatedTs,
                      p.expectedTsDeleteExpiredJobTs
                    ));
                }
            }
          }
        })).apply(this, arguments);
      }
      function me(e, t, n) {
        return null != n.contactVerification
          ? (0, D.b)().waitUntilPersisted(U.e.validateBusinessMsg(e, n))
          : (0, b.b)(t).then((t) =>
              t && (0, y.e)(t)
                ? (0, D.b)().waitUntilPersisted(U.e.validateBusinessMsg(e, n))
                : (0, a.Qc)(e, n)
            );
      }
      function ge(e, t, n) {
        var r = (0, R.h)(t.author),
          i = {
            msg: {
              type: P.f.CIPHERTEXT,
              externalId: e.externalId,
              ts: e.ts,
              author: r,
              deviceId: (0, R.f)(t.author),
              ack: P.a.RECEIVED,
              altIndex: "",
            },
          };
        if (e.verifiedLevel) {
          var a = {
            level: e.verifiedLevel,
            serial: e.verifiedNameSerial || -1,
            cert: e.verifiedNameCert,
            bsp: e.bspInfo,
          };
          i.contactVerification = a;
        }
        return me(t.chat, r, i).then(() => ({
          result: "retry",
          retryCount: n,
        }));
      }
      function ye(e, t, n, r) {
        var i = (0, A.a)({
          externalId: e.externalId,
          author: t.author,
          ts: e.ts,
          proto: n,
          bytes: r,
          edit: e.edit,
          verifiedNameSerial: e.verifiedNameSerial,
          verifiedLevel: e.verifiedLevel,
          verifiedNameCert: e.verifiedNameCert,
          pushname: e.pushname,
          urlNumber: e.urlNumber,
          urlText: e.urlText,
        });
        return i
          ? (0, j.m)(i.msg.ts, $.V)
            ? (0, a.Sc)((0, R.h)(t.author), i).then(() => ({
                result: "success",
              }))
            : (__LOG__(2)`status msg arrived after it was expired. Ignoring`,
              Promise.resolve({ result: "success" }))
          : (n.senderKeyDistributionMessage
              ? __LOG__(2)`msg was just sender key`
              : __LOG__(4)`Poorly formatted protobuf!`,
            Promise.resolve({ result: "success" }));
      }
      function be(e, t, n) {
        if (!(0, j.m)(e.ts, $.V))
          return (
            __LOG__(
              2
            )`ciphertext status msg arrived after it was expired. Ignoring`,
            Promise.resolve({ result: "success" })
          );
        var r = (0, R.h)(t.author),
          i = {
            msg: {
              type: T.c.CIPHERTEXT,
              externalId: e.externalId,
              ts: e.ts,
              author: r,
              deviceId: (0, R.f)(t.author),
              ack: P.a.RECEIVED,
              altIndex: "",
            },
          };
        return (0, a.Sc)(r, i).then(() => ({ result: "retry", retryCount: n }));
      }
      var we = Promise.resolve();
      function Oe(e, t) {
        var n = we.then(() => e);
        return (
          (we = n),
          n.then((e) =>
            Promise.resolve(t(e)).then((e) => (null != e ? e : "NO_ACK"))
          )
        );
      }
      function Ee(e, t) {
        var r = e.attrs;
        switch (e.tag) {
          case "iq":
            return (function (e) {
              var t = e.attrs;
              if ("urn:xmpp:ping" === t.xmlns)
                return (0, c.w)("iq", { type: "result", to: t.from });
              throw new Error("handleIq unrecognized " + e.toString());
            })(e);
          case "receipt":
            if ("retry" === r.type)
              return Oe(
                Promise.all([n.e(0), n.e(11), n.e(71)]).then(n.bind(null, 620)),
                (t) => t.default(e)
              );
            var i = e.content;
            if (Array.isArray(i) && i.length > 0) {
              var a = i[0].tag;
              if ("offer" === a || "accept" === a || "reject" === a)
                return Oe(n.e(55).then(n.bind(null, 621)), (t) => t.default(e));
            }
            return Oe(
              Promise.all([
                n.e(0),
                n.e(1),
                n.e(5),
                n.e(11),
                n.e(22),
                n.e(68),
              ]).then(n.bind(null, 728)),
              (t) => t.default(e)
            );
          case "notification":
            switch (r.type) {
              case "w:gp2":
                return Oe(
                  Promise.all([n.e(21), n.e(60)]).then(n.bind(null, 713)),
                  (t) => t.default(e)
                );
              case "picture":
                return Oe(
                  Promise.all([n.e(2), n.e(28), n.e(70)]).then(
                    n.bind(null, 622)
                  ),
                  (t) => t.default(e)
                );
              case "business":
                return Oe(
                  Promise.all([n.e(2), n.e(54)]).then(n.bind(null, 623)),
                  (t) => t.default(e)
                );
              case "contacts":
                return Oe(
                  Promise.all([n.e(2), n.e(57)]).then(n.bind(null, 624)),
                  (t) => t.default(e)
                );
              case "mediaretry":
                return Oe(
                  Promise.all([n.e(5), n.e(67)]).then(n.bind(null, 625)),
                  (t) => t.default(e)
                );
              case "encrypt":
                var o = e.content;
                if (!Array.isArray(o) || !o.length) break;
                var u = o[0].tag;
                if ("count" === u)
                  return Oe(Promise.resolve().then(n.bind(null, 411)), (n) =>
                    n.handlePreKeysLow(e, t)
                  );
                if ("identity" === u)
                  return Oe(Promise.resolve().then(n.bind(null, 215)), (t) =>
                    t.handleE2eIdentityChange(e)
                  );
                if ("digest" === u)
                  return Oe(n.e(63).then(n.bind(null, 626)), (t) =>
                    t.handleDigestNotification(e)
                  );
                break;
              case "server":
                return Oe(n.e(72).then(n.bind(null, 627)), (t) => t.default(e));
              case "status":
                return Oe(
                  Promise.all([n.e(2), n.e(53)]).then(n.bind(null, 628)),
                  (t) => t.default(e)
                );
              case "gdpr":
                return Oe(n.e(59).then(n.bind(null, 629)), (t) => t.default(e));
              case "devices":
                return Oe(
                  Promise.all([n.e(2), n.e(62)]).then(n.bind(null, 630)),
                  (t) => t.handleDevicesNotification(e)
                );
              case "account_sync":
                return Oe(
                  Promise.all([n.e(22), n.e(61)]).then(n.bind(null, 724)),
                  (t) => t.handleAccountSyncNotification(e)
                );
              case "psa":
                return Oe(n.e(65).then(n.bind(null, 631)), (t) => t.default(e));
              case "disappearing_mode":
                return Oe(n.e(64).then(n.bind(null, 632)), (t) => t.default(e));
              case "privacy_token":
                return Oe(n.e(66).then(n.bind(null, 633)), (t) => t.default(e));
            }
            if (r.hasOwnProperty("id"))
              return (0, c.w)("ack", {
                id: r.id,
                class: "notification",
                from: r.to || c.c,
                to: r.from || c.c,
                type: r.type || c.c,
                participant: r.participant || c.c,
              });
            break;
          case "chatstate":
            return Oe(n.e(56).then(n.bind(null, 634)), (t) => t.default(e));
          case "presence":
            return Oe(n.e(69).then(n.bind(null, 635)), (t) => t.default(e));
          case "message":
            return Oe(Promise.resolve(), () => le(e));
          case "ib":
            return Oe(n.e(23).then(n.bind(null, 595)), (t) => t.default(e));
          case "call":
            return Oe(n.e(55).then(n.bind(null, 621)), (t) => t.default(e));
          case "stream:error":
            return Oe(n.e(73).then(n.bind(null, 636)), (t) => t.default(e));
          case "stream:stream":
            return "NO_ACK";
          case "failure":
            return Oe(Promise.resolve().then(n.bind(null, 261)), (t) =>
              t.default(e)
            );
          case "success":
            return Oe(Promise.resolve().then(n.bind(null, 373)), (t) =>
              t.default(e)
            );
          case "error":
            return Oe(n.e(58).then(n.bind(null, 637)), (t) => t.handleError(e));
        }
        return (
          __LOG__(3)`Comms.handleStanza unrecognized stanza ${e}`, "NO_ACK"
        );
      }
      var Ie = n(12),
        Se = n(17),
        ke = n(250),
        Le = n(44);
      function Ge(e, t) {
        null == t
          ? (0, r.a)(
              (0, c.w)("presence", { to: (0, c.g)(e), type: "subscribe" })
            )
          : (0, r.a)(
              (0, c.w)(
                "presence",
                { to: (0, c.g)(e), type: "subscribe" },
                (0, c.w)("tctoken", null, t)
              )
            );
      }
      var Me = n(339),
        Ae = n(51),
        Pe = new Ae.a("pushResult", (e) => {
          e.assertAttr("type", "result");
        }),
        Te = n(93),
        Ne = n(261),
        Ce = new Ae.a("deleteAccountReply", (e) => {}),
        Re = n(356),
        xe = n(31),
        De = n(340),
        Ue = n(170),
        je = n(81),
        $e = n(78),
        Fe = class {
          constructor() {
            (this.bg = new je.a()),
              (this.bh = new $e.a(() => {
                Ve() ||
                  (__LOG__(2)`BackendEphemeralCleaner::_clearTimer`,
                  this.bg.enqueue(() =>
                    (0, a.I)()
                      .then((e) => {
                        var t = [];
                        return (
                          e.forEach((e, n) => {
                            t.push((0, a.m)(n, e, "expired"));
                          }),
                          Promise.all(t)
                        );
                      })
                      .then(() => (0, a.S)())
                      .then((e) => {
                        null != e && this.update(e);
                      })
                  ));
              })),
              this.bh.forceRunNow();
          }
          update(e) {
            __LOG__(2)`BackendEphemeralCleaner::update ${e}`,
              this.bh.onOrBefore((0, j.g)(e));
          }
        },
        Be = null;
      function Ve() {
        var e = (0, Ie.d)() || !F.I.get().ephemeralPruningEnabled;
        return e && __LOG__(2)`BackendEphemeralCleaner:: disabled`, e;
      }
      var Ke = n(336),
        He = class {
          constructor() {
            (this.bd = new je.a()),
              (this.be = new $e.a(() => {
                this.bd.enqueue(() => this.bf());
              })),
              this.be.forceRunNow();
          }
          update(e) {
            __LOG__(2)`ViewOnceExpirer::update ${e}`,
              this.be.onOrBefore((0, j.g)(e));
          }
          bf() {
            return (
              __LOG__(2)`ViewOnceExpirer::_purge`,
              (0, Ke.a)()
                .then((e) => {
                  var t = e.expiredMsgs,
                    n = e.updatedChats;
                  t.length > 0 &&
                    (0, Ie.c)("event", "viewOnceExpired", {
                      expiredMsgs: t,
                      updatedChats: n,
                    });
                })
                .then(() => (0, a.T)())
                .then((e) => {
                  null != e && this.update(e);
                })
            );
          }
        },
        qe = null,
        ze = n(232),
        We = n(447),
        Je = n(323),
        Ye = n(70),
        Qe = n(85),
        Ze = n(89),
        Xe = n(118),
        et = { preview: "preview", image: "image" },
        tt = new Ae.a("getProfilePic", (e) => {
          if (e.hasChild("picture")) {
            var t = e.child("picture");
            return {
              code: 200,
              id: t.attrInt("id"),
              type: t.attrEnum("type", et),
              url: t.attrString("url"),
            };
          }
          return { code: 304 };
        });
      function nt(e, t) {
        return (0, c.w)(
          "iq",
          {
            to: c.l,
            target: (0, c.g)(e),
            type: "get",
            xmlns: "w:profile:picture",
            id: (0, c.u)(),
          },
          t
        );
      }
      function rt(e) {
        return (0, Ye.getProfilePicTable)()
          .storeEmptyThumb(e)
          .then(
            () => (
              (0, Ie.c)("event", "avatarsUpdated", { cleared: [e] }),
              { jid: e, avatar: null }
            )
          );
      }
      function it(e, t, n) {
        return (0, Ye.getProfilePicTable)()
          .getThumb(e)
          .then((i) => {
            if (i) {
              if (!n && i.lastUpdated && (0, j.m)(i.lastUpdated, j.f)) return i;
              if (i.dontRetryBefore && (0, j.o)(i.dontRetryBefore)) return i;
              null != i.lastUpdated &&
                (0, Ie.c)("event", "avatarsUpdated", {
                  changed: [{ jid: e, photoId: i.photoId }],
                });
            }
            return (
              __LOG__(2)`getProfilePic request ${e} with previous id ${
                i ? i.photoId : "none"
              }`,
              (0, r.b)(t(i && i.photoId), tt).then((t) => {
                if (!t.success)
                  switch (t.errorCode) {
                    case 401:
                      return (0, R.p)(e)
                        ? (0, Ye.getProfilePicTable)()
                            .refreshLastUpdated(e)
                            .then(() => null)
                        : (0, Ye.getProfilePicTable)().storeEmptyThumb(e);
                    case 404:
                    case 406:
                      return (
                        __LOG__(
                          2
                        )`getProfilePic for ${e}: No picture found in server`,
                        (0, Ye.getProfilePicTable)().storeEmptyThumb(e)
                      );
                    case 429:
                    case 500:
                    case 501:
                    case 503:
                      return (
                        __LOG__(2)`getProfilePic error ${e}: Do not retry`,
                        i
                          ? (0, Ye.getProfilePicTable)()
                              .setDontRetryBefore(e, (0, j.k)(j.d))
                              .then(() => i)
                          : (0, Ye.getProfilePicTable)().storeEmptyThumb(
                              e,
                              (0, j.k)(j.d)
                            )
                      );
                    default:
                      throw new Error(
                        `Failed to get profile picture: ${t.errorCode} ${t.errorText}`
                      );
                  }
                var n = t.result;
                if (304 === n.code) {
                  if (null == i)
                    throw new Error(
                      "getProfilePic:  empty success response without id."
                    );
                  return (
                    __LOG__(2)`getProfilePic for ${e}: picture unchanged.`,
                    (0, Ye.getProfilePicTable)()
                      .refreshLastUpdated(e)
                      .then(() => null)
                  );
                }
                var r = n.url;
                return (0, xe.g)((0, xe.h)(r))
                  .then(
                    (t) => (
                      __LOG__(
                        2
                      )`getProfilePic for ${e}: Fetched last version with id ${n.id}`,
                      (0, Ze.c)("image canvas"),
                      (0, Ie.e)("event", "profilePicReceived", {
                        image: t,
                      }).then((r) => {
                        var i = r.croppedImage;
                        return (0, Ye.getProfilePicTable)().storeThumb(e, {
                          photoId: n.id,
                          icon: i,
                          thumb: t,
                        });
                      })
                    )
                  )
                  .catch(
                    (0, Xe.a)(Qe.a, (e) => {
                      if (404 === e.code)
                        return (
                          __LOG__(
                            2
                          )`getProfilePic:fetchRetryBlob thumb not found, probably lost on server. Wait for re-upload.`,
                          null
                        );
                      throw (
                        (__LOG__(
                          2
                        )`getProfilePic:fetchRetryBlob thumburl ${e.code}`,
                        e)
                      );
                    })
                  );
              })
            );
          })
          .then((e) => {
            e &&
              (0, Ie.c)("event", "avatarsUpdated", {
                changed: [{ jid: e.jid, photoId: e.photoId }],
              });
          });
      }
      var at = n(453),
        ot = n.n(at),
        ut = { preview: "preview", image: "image" },
        st = new Ae.a("getProfilePicV2", function (e) {
          if (e.hasChild("picture")) {
            var t = e.child("picture");
            if ("blob" == (t.maybeAttrString("url") ? "url" : "blob"))
              return {
                type: "blob",
                id: t.attrInt("id"),
                imgType: t.attrEnum("type", ut),
                blob: new Blob([t.contentBytes()]),
              };
            if (t.hasAttr("url"))
              return {
                type: "url",
                id: t.attrInt("id"),
                imgType: t.attrEnum("type", ut),
                url: t.attrString("url"),
              };
            throw new Error(
              "getProfilePicResponse: Invalid data returned for avatar picture"
            );
          }
          return { type: "unchanged" };
        });
      function lt(e) {
        var t = e.parentJid,
          n = e.photoId,
          r = e.queryType,
          i = e.subGroupJid,
          a = e.isFullSize,
          o = e.invite;
        return (0, c.w)(
          "iq",
          { to: (0, c.g)(t), type: "get", xmlns: "w:g2", id: (0, c.u)() },
          (0, c.w)(
            "picture",
            ot()(
              {
                id: null != n ? (0, c.f)(n) : c.c,
                type: a ? "image" : "preview",
                query: r,
              },
              o ? { invite: (0, c.b)(o) } : null
            ),
            (0, c.w)("query_linked", {
              type: null == i ? "parent_group" : "sub_group",
              jid: null == i ? (0, c.g)(t) : (0, c.g)(i),
            })
          )
        );
      }
      function ct(e, t) {
        return lt({
          parentJid: e,
          queryType: t,
          photoId: null,
          isFullSize: !0,
        });
      }
      function dt() {
        return (dt = f()(function* (e) {
          var t = yield (0, r.b)(ct(e, "url"), st);
          if (null != t.result && "url" === t.result.type) {
            var n = {
              jid: e,
              avatar: { url: t.result.url, photoId: t.result.id },
            };
            (0, Ie.c)("event", "fullsizeAvatarLoaded", n);
          } else 404 === t.errorCode && (yield (0, Ye.getProfilePicTable)().storeEmptyThumb(e));
        })).apply(this, arguments);
      }
      function ft(e, t) {
        return _t.apply(this, arguments);
      }
      function _t() {
        return (_t = f()(function* (e, t) {
          var n,
            r = yield (0, Ye.getProfilePicTable)().getThumb(e);
          return (
            r &&
              (r.lastUpdated &&
                !(0, j.m)(r.lastUpdated, j.f) &&
                (r = yield (0, Ye.getProfilePicTable)().storeEmptyThumb(e)),
              (0, Ie.c)("event", "avatarsUpdated", {
                changed: [{ jid: e, photoId: r.photoId }],
              })),
            pt(e, null == (n = r) ? void 0 : n.photoId, t)
          );
        })).apply(this, arguments);
      }
      function pt(e, t, n) {
        return vt.apply(this, arguments);
      }
      function vt() {
        return (vt = f()(function* (e, t, n) {
          var i = yield (0, r.b)(n(t), st);
          if (i.success) {
            var a = i.result;
            if ("unchanged" === a.type)
              return (0, Ye.getProfilePicTable)()
                .refreshLastUpdated(e)
                .then((e) => {});
            if ("url" !== a.type) {
              a.type;
              var o = a.blob;
              __LOG__(2)`getProfilePic: Fetched picture with id ${a.id}`,
                (0, Ze.c)("image canvas");
              var u = (yield (0, Ie.e)("event", "profilePicReceived", {
                image: o,
              })).croppedImage;
              yield (0, Ye.getProfilePicTable)().storeThumb(e, {
                photoId: a.id,
                icon: u,
                thumb: o,
              }),
                (0, Ie.c)("event", "avatarsUpdated", {
                  changed: [{ jid: e, photoId: a.id }],
                });
            }
          } else 404 === i.errorCode && (yield (0, Ye.getProfilePicTable)().storeEmptyThumb(e));
        })).apply(this, arguments);
      }
      var ht = n(444),
        mt = new Ae.a("getTwoFactor", (e) =>
          e.hasChild("2fa")
            ? {
                code: e.child("2fa").hasChild("code"),
                email: e.child("2fa").hasChild("email"),
              }
            : { code: !1, email: !1 }
        ),
        gt = new Ae.a(
          "checkTwoFactor",
          (e) => e.hasChild("2fa") && e.child("2fa").hasChild("code")
        ),
        yt = n(313),
        bt = n(151),
        wt = n(255),
        Ot = n(119),
        Et = n(454),
        It = new je.a();
      function St() {
        return It.enqueue(() => Promise.resolve());
      }
      var kt = n(231),
        Lt = n(372),
        Gt = n(129),
        Mt = n(97),
        At = n(342),
        Pt = n(190),
        Tt = n(329),
        Nt = n(445),
        Ct = n(15),
        Rt = n(128),
        xt = n(33),
        Dt = n(11);
      function Ut() {
        return (0, xt.l)(16);
      }
      function jt() {
        var e = F.B.get(),
          t = !1,
          n = new Set(),
          r = $.J.reduce((r, i) => {
            var a,
              o = i.keyHashInt,
              u = i.rotationPeriodDays;
            if ((n.add(o), null != e[o])) return r;
            if (113760892 === o) {
              var s = F.A.get();
              null == s
                ? ((a = Ut()),
                  (0, Se.a)("kaios_privatestats_phase3_enabled")
                    ? WAM.log("regular", 2862, void 0, [
                        2,
                        0,
                        1,
                        1,
                        0,
                        o,
                        3,
                        0,
                        u,
                      ])
                    : WAM.log("regular", 2310, void 0, []))
                : (a = s);
            } else
              (a = Ut()),
                (0, Se.a)("kaios_privatestats_phase3_enabled") &&
                  WAM.log("regular", 2862, void 0, [2, 0, 1, 1, 0, o, 3, 0, u]);
            var l = { value: a, creationTs: (0, j.D)() };
            return (r[o] = l), (t = !0), r;
          }, {}),
          i = (0, Dt.w)(e).reduce((e, r) => {
            var i = p()(r, 1)[0];
            return n.has(parseInt(i, 10)) || (e.push(i), (t = !0)), e;
          }, []);
        if (!t) return Promise.resolve($t(e));
        var a = Object.assign({}, e, r);
        return (
          i.forEach((e) => {
            delete a[e];
            var t = parseInt(e, 10);
            113760892 === t && F.A.set(null),
              (0, Se.a)("kaios_privatestats_phase3_enabled") &&
                WAM.log("regular", 2862, void 0, [2, 0, 3, 1, 0, t]);
          }),
          F.B.set(a).then(() => $t(a))
        );
      }
      function $t(e) {
        var t = new Map();
        return (
          $.J.forEach((n) => {
            var r = n.keyHashInt,
              i = e[r].value;
            t.set(r, i);
          }),
          t
        );
      }
      var Ft = n(46),
        Bt = n(5),
        Vt = n(65),
        Kt = n(54),
        Ht = n(368);
      function qt(e) {
        var t = e.pastParticipants;
        return !!t && (0, Dt.m)(t.values(), Ht.a);
      }
      function zt(e) {
        if (0 !== e.size) {
          var t = new Map();
          e.forEach((e, n) => t.set(n, e ? (0, Kt.m)(e) : null)), (0, Vt.g)(t);
        }
      }
      var Wt = n(304),
        Jt = n(277),
        Yt = n(276),
        Qt = n(410),
        Zt = n(455),
        Xt = n(154),
        en = n(36),
        tn = n(109),
        nn = n(58),
        rn = n(62),
        an = n(152),
        on = n(124),
        un = n(285);
      function sn(e) {
        return new Map(Array.from(e).map((e) => [e, !1]));
      }
      var ln = n(308),
        cn = n(66),
        dn = n(21),
        fn = n(49),
        _n = n(35),
        pn = n(252),
        vn = n(96),
        hn = n(25),
        mn = n(71);
      function gn(e, t) {
        return {
          type: "usync",
          advResult: e,
          deviceVerificationFailed: t || !1,
        };
      }
      function yn(e, t) {
        return {
          type: "device-change",
          advResult: e,
          requestDeviceSync: t || !1,
        };
      }
      function bn(e, t, n) {
        var r = [],
          i = [],
          a = e.jid;
        (0, mn.d)(e).forEach((e) => {
          e !== x.c && i.push((0, R.B)(a, e));
        });
        var o = new Map();
        return (
          n &&
            n.forEach((e) => {
              var t = e.id,
                n = e.index;
              o.set(t, n), r.push((0, R.B)(a, t));
            }),
          {
            addedDevices: r,
            removedDevices: i,
            updatedContact: Object.assign({}, e, {
              devices: On(o),
              deviceVerification: { rawId: t.rawId, timestamp: t.timestamp },
            }),
          }
        );
      }
      function wn(e, t) {
        return !(!t.validIndexes.includes(e) || e > t.currentIndex);
      }
      function On(e) {
        var t = Array.from(e.entries()).map((e) => {
          var t = p()(e, 2);
          return { id: t[0], index: t[1] };
        });
        return e.has(x.c) || t.push(mn.a), t;
      }
      var En = Ct.q.TRIGGERED,
        In = Ct.q.FETCHED,
        Sn = Ct.q.BANNER_SHOW,
        kn = Ct.q.NON_BLOCKING_MODAL_SHOW,
        Ln = Ct.q.BLOCKING_MODAL_SHOW,
        Gn = Ct.q.EXPIRED;
      function Mn(e, t) {
        var n = t.banner,
          r = t.nonBlockingModal,
          i = t.blockingModal;
        return e === En
          ? (__LOG__(
              4
            )`maybeTimeTransitionNotice: can not perform time transitions in state 0`,
            SEND_LOGS("user-notice-time-transition-initial-state"),
            e)
          : e < Sn && n
          ? Sn
          : e < kn && r
          ? kn
          : e < Ln && i
          ? Ln
          : Gn;
      }
      function An(e, t) {
        var n, r, i;
        if (e)
          switch (t) {
            case Sn:
              return null == (n = e.banner) ? void 0 : n.timing;
            case kn:
              return null == (r = e.nonBlockingModal) ? void 0 : r.timing;
            case Ln:
              return null == (i = e.blockingModal) ? void 0 : i.timing;
            default:
              return;
          }
      }
      var Pn = n(79),
        Tn = n(122),
        Nn = n(42),
        Cn = n(219),
        Rn = n(168),
        xn = n(343),
        Dn = n(86),
        Un = class extends Error {
          constructor(e) {
            var t = "SocketClosed";
            super(null != e ? e : t), (this.name = t);
          }
        };
      function jn(e) {
        return !(e.size() < 3) && $n(e) <= e.size();
      }
      function $n(e) {
        return (e.readUint8() << 16) | e.readUint16();
      }
      var Fn = n(209),
        Bn = n(115),
        Vn = Promise.reject("UNINITIALIZED HANDSHAKE"),
        Kn = new Uint8Array(0);
      function Hn(e) {
        var t = new ArrayBuffer(12);
        return new DataView(t).setUint32(8, e), new Uint8Array(t);
      }
      Vn.catch(() => {});
      var qn = n(68),
        zn = Promise.reject("UNINITIALIZED HANDSHAKE"),
        Wn = new Uint8Array(0);
      zn.catch(() => {});
      var Jn = class {
        constructor(e) {
          (this.aW = zn),
            (this.aX = zn),
            (this.aY = zn),
            (this.aZ = 0),
            (this.aV = e),
            (this.aa = new qn.a()),
            (e.onClose = () => {
              this.aa.reject(new Dn.b("NoiseHandshake: SocketClosed"));
            }),
            Xn(this.aa.promise);
        }
        start(e, t) {
          var n = H.a.build(e).readBuffer(),
            r = 32 === n.byteLength ? Promise.resolve(n) : (0, Bn.a)(n);
          (this.aW = r),
            (this.aX = r),
            (this.aY = r.then(Qn)),
            this.authenticate(t);
        }
        sendAndReceive(e) {
          var t = this.aV,
            n = new Promise((n) => {
              (t.onFrame = (e) => {
                (t.onFrame = null), n(e);
              }),
                t.sendFrame(e);
            });
          return this.ab(n);
        }
        send(e) {
          this.aV.sendFrame(e);
        }
        authenticate(e) {
          this.aW = Promise.all([this.aW, e]).then((e) => {
            var t = p()(e, 2),
              n = t[0],
              r = t[1],
              i = H.a.build(n, r).readByteArray();
            return (0, Bn.a)(i);
          });
        }
        encrypt(e) {
          var t = this.aZ++,
            n = Promise.all([this.aY, this.aW, e]).then((e) => {
              var n = p()(e, 3),
                r = n[0],
                i = n[1],
                a = n[2];
              return (function (e, t, n, r) {
                return self.crypto.subtle.encrypt(
                  {
                    name: "AES-GCM",
                    iv: Yn(t),
                    additionalData: n ? new Uint8Array(n) : Wn,
                  },
                  e,
                  r
                );
              })(r, t, i, a);
            });
          return this.authenticate(n), this.ab(n);
        }
        decrypt(e) {
          var t = this.aZ++,
            n = Promise.all([this.aY, this.aW]).then((n) => {
              var r = p()(n, 2),
                i = r[0],
                a = r[1];
              return (function (e, t, n, r) {
                return self.crypto.subtle.decrypt(
                  {
                    name: "AES-GCM",
                    iv: Yn(t),
                    additionalData: n ? new Uint8Array(n) : Wn,
                  },
                  e,
                  r
                );
              })(i, t, a, e);
            });
          return this.authenticate(e), this.ab(n);
        }
        finish() {
          var e = this.aX
            .then((e) => Zn(e, new Uint8Array(0)))
            .then((e) => {
              var t = p()(e, 2),
                n = t[0],
                r = t[1];
              return Promise.all([Qn(n, ["encrypt"]), Qn(r, ["decrypt"])]);
            })
            .then((e) => {
              var t = p()(e, 2),
                n = t[0],
                r = t[1];
              return new (class {
                constructor(e, t, n) {
                  (this.ao = []),
                    (this.ap = new je.a()),
                    (this.aq = new je.a()),
                    (this.ar = 0),
                    (this.as = 0),
                    (this.at = !1),
                    (this.ay = (e) => {
                      this.al.closed
                        ? __LOG__(
                            2
                          )`NoiseSocket socket closed while encrypting frame`
                        : this.al.sendFrame(e);
                    }),
                    (this.aw = (e) => {
                      var t = this.ar++;
                      this.ap.enqueueHandlers(
                        (function (e, t, n, r) {
                          return self.crypto.subtle.decrypt(
                            { name: "AES-GCM", iv: Hn(t), additionalData: Kn },
                            e,
                            r
                          );
                        })(this.am, t, 0, e),
                        this.az
                      );
                    }),
                    (this.ax = () => {
                      (this.at = !0),
                        this.ap.wait().then(() => {
                          this.at = !1;
                          var e = this.av;
                          e && e();
                        });
                    }),
                    (this.az = (e) => {
                      this.au ? this.au(e) : this.ao.push(e);
                    }),
                    (this.al = e),
                    (this.an = t),
                    (this.am = n),
                    (e.onFrame = this.aw),
                    (this.al.onClose = this.ax),
                    e.convertBufferedToFrames();
                }
                sendFrameAsync(e) {
                  var t = this;
                  return f()(function* () {
                    return yield t.sendFrame(e);
                  })();
                }
                sendFrame(e) {
                  if (this.at) return Promise.resolve();
                  this.al.throwIfClosed();
                  var t,
                    n,
                    r,
                    i = this.as++;
                  return this.aq.enqueueHandlers(
                    ((t = this.an),
                    (n = i),
                    (r = e),
                    self.crypto.subtle.encrypt(
                      { name: "AES-GCM", iv: Hn(n), additionalData: Kn },
                      t,
                      r
                    )),
                    this.ay
                  );
                }
                setOnFrame(e) {
                  this.au = e;
                }
                setOnClose(e) {
                  this.av = e;
                }
                close() {
                  this.al.close();
                }
              })(this.aV, n, r);
            });
          return this.ab(e);
        }
        mixIntoKey(e) {
          this.aZ = 0;
          var t = Promise.all([this.aX, e]).then((e) => {
            var t = p()(e, 2),
              n = t[0],
              r = t[1];
            return Zn(n, new Uint8Array(r));
          });
          (this.aX = t.then((e) => e[0])),
            (this.aY = t.then((e) => Qn(e[1]))),
            Xn(this.aX),
            Xn(this.aY);
        }
        ab(e) {
          return Promise.race([e, this.aa.promise]).then((e) =>
            this.aa.resolveWasCalled() ? this.aa.promise : e
          );
        }
      };
      function Yn(e) {
        var t = new ArrayBuffer(12);
        return new DataView(t).setUint32(8, e), new Uint8Array(t);
      }
      function Qn(e) {
        var t =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : ["encrypt", "decrypt"];
        return self.crypto.subtle.importKey(
          "raw",
          new Uint8Array(e),
          "AES-GCM",
          !1,
          t
        );
      }
      function Zn(e, t) {
        return (0, Fn.b)(t, new Uint8Array(e), "", 64).then((e) => [
          e.slice(0, 32),
          e.slice(32),
        ]);
      }
      function Xn(e) {
        e.catch(() => {});
      }
      var er = n(28);
      function tr(e, t, n, r, i) {
        var a = t || {},
          o = a.ephemeral,
          u = a.static,
          s = a.payload;
        if (null == o || null == u || null == s)
          return Promise.reject(
            new Error("doFullHandshakeCore server hello invalid proto")
          );
        e.authenticate(o), e.mixIntoKey(r.generateSharedSecret(o));
        var l = e.decrypt(u);
        e.mixIntoKey(l.then((e) => r.generateSharedSecret(e)));
        var c = e.decrypt(s);
        return Promise.all([l, c])
          .then((e) => {
            var t = p()(e, 2),
              n = t[0],
              r = t[1];
            return (
              __LOG__(
                2
              )`doFullHandshakeCore parsing and verifying server certificate`,
              i.processCertificate({ certificate: r, serverStatic: n })
            );
          })
          .then(() => {
            var t = e.encrypt(i.staticKeyPair.generatePublicKey());
            e.mixIntoKey(i.staticKeyPair.generateSharedSecret(o));
            var r = e.encrypt(Promise.resolve(n));
            return Promise.all([t, r]);
          })
          .then((t) => {
            var n = p()(t, 2),
              r = n[0],
              a = n[1];
            return (
              __LOG__(
                2
              )`doFullHandshakeCore client finish and deriving secrets`,
              e.send(i.encodeHandshakeFinish({ static: r, payload: a })),
              e.finish()
            );
          });
      }
      var nr = n(288),
        rr = n(227),
        ir = n(101),
        ar = {
          CELLULAR_UNKNOWN: 0,
          WIFI_UNKNOWN: 1,
          CELLULAR_EDGE: 100,
          CELLULAR_IDEN: 101,
          CELLULAR_UMTS: 102,
          CELLULAR_EVDO: 103,
          CELLULAR_GPRS: 104,
          CELLULAR_HSDPA: 105,
          CELLULAR_HSUPA: 106,
          CELLULAR_HSPA: 107,
          CELLULAR_CDMA: 108,
          CELLULAR_1XRTT: 109,
          CELLULAR_EHRPD: 110,
          CELLULAR_LTE: 111,
          CELLULAR_HSPAP: 112,
        },
        or = {
          PUSH: 0,
          USER_ACTIVATED: 1,
          SCHEDULED: 2,
          ERROR_RECONNECT: 3,
          NETWORK_SWITCH: 4,
          PING_RECONNECT: 5,
        },
        ur = { RELEASE: 0, BETA: 1, ALPHA: 2, DEBUG: 3 },
        sr = {
          ANDROID: 0,
          IOS: 1,
          WINDOWS_PHONE: 2,
          BLACKBERRY: 3,
          BLACKBERRYX: 4,
          S40: 5,
          S60: 6,
          PYTHON_CLIENT: 7,
          TIZEN: 8,
          ENTERPRISE: 9,
          SMB_ANDROID: 10,
          KAIOS: 11,
          SMB_IOS: 12,
          WINDOWS: 13,
          WEB: 14,
          PORTAL: 15,
          GREEN_ANDROID: 16,
          GREEN_IPHONE: 17,
          BLUE_ANDROID: 18,
          BLUE_IPHONE: 19,
          FBLITE_ANDROID: 20,
          MLITE_ANDROID: 21,
          IGLITE_ANDROID: 22,
          PAGE: 23,
          MACOS: 24,
          OCULUS_MSG: 25,
          OCULUS_CALL: 26,
          MILAN: 27,
          CAPI: 28,
          WEAROS: 29,
          ARDEVICE: 30,
          VRDEVICE: 31,
        },
        lr = Object.assign({}, null),
        cr = Object.assign({}, null),
        dr = Object.assign({}, null),
        fr = Object.assign({}, null),
        _r = Object.assign({}, null),
        pr = Object.assign({}, null),
        vr = Object.assign({}, null),
        hr = Object.assign({}, null),
        mr = Object.assign({}, null),
        gr = Object.assign({}, null),
        yr = Object.assign({}, null);
      function br() {
        var e = F.i.get(),
          t = ur.RELEASE,
          n = {
            username: parseInt(F.t.get(), 10),
            passive: !1,
            connectType: ar.WIFI_UNKNOWN,
            connectReason: or.USER_ACTIVATED,
            pushName: F.C.get(),
            userAgent: {
              mcc: e.mcc,
              mnc: e.mnc,
              appVersion: { primary: 2, secondary: 2245, tertiary: 7 },
              platform: sr.KAIOS,
              osVersion: e.osVersion,
              manufacturer: e.manufacturer,
              device: e.device,
              osBuildNumber: e.osBuild,
              releaseChannel: t,
              localeLanguageIso6391: e.lg,
              localeCountryIso31661Alpha2: e.lc,
            },
          };
        return (0, ir.a)(_r, n).readByteArray();
      }
      (lr.internalSpec = {
        clientHello: [2, z.d.MESSAGE, fr],
        serverHello: [3, z.d.MESSAGE, dr],
        clientFinish: [4, z.d.MESSAGE, cr],
      }),
        (cr.internalSpec = { static: [1, z.d.BYTES], payload: [2, z.d.BYTES] }),
        (dr.internalSpec = {
          ephemeral: [1, z.d.BYTES],
          static: [2, z.d.BYTES],
          payload: [3, z.d.BYTES],
        }),
        (fr.internalSpec = {
          ephemeral: [1, z.d.BYTES],
          static: [2, z.d.BYTES],
          payload: [3, z.d.BYTES],
        }),
        (_r.internalSpec = {
          username: [1, z.d.UINT64],
          passive: [3, z.d.BOOL],
          userAgent: [5, z.d.MESSAGE, gr],
          webInfo: [6, z.d.MESSAGE, hr],
          pushName: [7, z.d.STRING],
          sessionId: [9, z.d.SFIXED32],
          shortConnect: [10, z.d.BOOL],
          connectType: [12, z.d.ENUM, ar],
          connectReason: [13, z.d.ENUM, or],
          shards: [14, z.b.REPEATED | z.d.INT32],
          dnsSource: [15, z.d.MESSAGE, vr],
          connectAttemptCount: [16, z.d.UINT32],
          device: [18, z.d.UINT32],
          devicePairingData: [19, z.d.MESSAGE, pr],
          product: [20, z.d.ENUM, { WHATSAPP: 0, MESSENGER: 1 }],
          fbCat: [21, z.d.BYTES],
          fbUserAgent: [22, z.d.BYTES],
          oc: [23, z.d.BOOL],
          lc: [24, z.d.INT32],
          iosAppExtension: [
            30,
            z.d.ENUM,
            { SHARE_EXTENSION: 0, SERVICE_EXTENSION: 1, INTENTS_EXTENSION: 2 },
          ],
          fbAppId: [31, z.d.UINT64],
          fbDeviceId: [32, z.d.BYTES],
          pull: [33, z.d.BOOL],
          paddingBytes: [34, z.d.BYTES],
          bizMarketSegment: [35, z.d.ENUM, { DEFAULT: 0, DEVX: 1, INBOX: 2 }],
          yearClass: [36, z.d.INT32],
          memClass: [37, z.d.INT32],
        }),
        (pr.internalSpec = {
          eRegid: [1, z.d.BYTES],
          eKeytype: [2, z.d.BYTES],
          eIdent: [3, z.d.BYTES],
          eSkeyId: [4, z.d.BYTES],
          eSkeyVal: [5, z.d.BYTES],
          eSkeySig: [6, z.d.BYTES],
          buildHash: [7, z.d.BYTES],
          deviceProps: [8, z.d.BYTES],
        }),
        (vr.internalSpec = {
          dnsMethod: [
            15,
            z.d.ENUM,
            { SYSTEM: 0, GOOGLE: 1, HARDCODED: 2, OVERRIDE: 3, FALLBACK: 4 },
          ],
          appCached: [16, z.d.BOOL],
        }),
        (hr.internalSpec = {
          refToken: [1, z.d.STRING],
          version: [2, z.d.STRING],
          webdPayload: [3, z.d.MESSAGE, mr],
          webSubPlatform: [
            4,
            z.d.ENUM,
            { WEB_BROWSER: 0, APP_STORE: 1, WIN_STORE: 2, DARWIN: 3, WIN32: 4 },
          ],
        }),
        (mr.internalSpec = {
          usesParticipantInKey: [1, z.d.BOOL],
          supportsStarredMessages: [2, z.d.BOOL],
          supportsDocumentMessages: [3, z.d.BOOL],
          supportsUrlMessages: [4, z.d.BOOL],
          supportsMediaRetry: [5, z.d.BOOL],
          supportsE2EImage: [6, z.d.BOOL],
          supportsE2EVideo: [7, z.d.BOOL],
          supportsE2EAudio: [8, z.d.BOOL],
          supportsE2EDocument: [9, z.d.BOOL],
          documentTypes: [10, z.d.STRING],
          features: [11, z.d.BYTES],
        }),
        (gr.internalSpec = {
          platform: [1, z.d.ENUM, sr],
          appVersion: [2, z.d.MESSAGE, yr],
          mcc: [3, z.d.STRING],
          mnc: [4, z.d.STRING],
          osVersion: [5, z.d.STRING],
          manufacturer: [6, z.d.STRING],
          device: [7, z.d.STRING],
          osBuildNumber: [8, z.d.STRING],
          phoneId: [9, z.d.STRING],
          releaseChannel: [10, z.d.ENUM, ur],
          localeLanguageIso6391: [11, z.d.STRING],
          localeCountryIso31661Alpha2: [12, z.d.STRING],
          deviceBoard: [13, z.d.STRING],
        }),
        (yr.internalSpec = {
          primary: [1, z.d.UINT32],
          secondary: [2, z.d.UINT32],
          tertiary: [3, z.d.UINT32],
          quaternary: [4, z.d.UINT32],
          quinary: [5, z.d.UINT32],
        });
      var wr = Object.assign({}, null),
        Or = Object.assign({}, null),
        Er = Object.assign({}, null),
        Ir = Object.assign({}, null),
        Sr = Object.assign({}, null);
      (wr.internalSpec = {
        details: [1, z.d.BYTES],
        signature: [2, z.d.BYTES],
      }),
        (Or.internalSpec = {
          serial: [1, z.d.UINT32],
          issuer: [2, z.d.STRING],
          expires: [3, z.d.UINT64],
          subject: [4, z.d.STRING],
          key: [5, z.d.BYTES],
        }),
        (Er.internalSpec = {
          leaf: [1, z.d.MESSAGE, Ir],
          intermediate: [2, z.d.MESSAGE, Ir],
        }),
        (Ir.internalSpec = {
          details: [1, z.d.BYTES],
          signature: [2, z.d.BYTES],
        }),
        (Sr.internalSpec = {
          serial: [1, z.d.UINT32],
          issuerSerial: [2, z.d.UINT32],
          key: [3, z.d.BYTES],
          notBefore: [4, z.d.UINT64],
          notAfter: [5, z.d.UINT64],
        });
      var kr = n(120),
        Lr = {
          fb: ["g.whatsapp.net"],
          ips: [
            "2a03:2880:f201:c6:face:b00c:0:7260",
            "2a03:2880:f203:c6:face:b00c:0:7260",
            "2a03:2880:f20d:c6:face:b00c:0:7260",
            "2a03:2880:f20d:1c6:face:b00c:0:7260",
            "2a03:2880:f211:c6:face:b00c:0:7260",
            "2a03:2880:f212:c6:face:b00c:0:7260",
            "2a03:2880:f227:c6:face:b00c:0:7260",
            "2a03:2880:f227:2c6:face:b00c:0:7260",
            "2a03:2880:f22c:c6:face:b00c:0:7260",
            "2a03:2880:f22c:1c6:face:b00c:0:7260",
            "2a03:2880:f231:c7:face:b00c:0:7260",
            "2a03:2880:f234:c7:face:b00c:0:7260",
            "2a03:2880:f234:1c7:face:b00c:0:7260",
          ],
        },
        Gr = n(167),
        Mr = 1,
        Ar = null,
        Pr = new qn.a(),
        Tr = "\r\n",
        Nr = H.a.build(Tr, Tr).readByteArray(),
        Cr = H.a.build(Tr).readByteArray(),
        Rr = new Set(),
        xr = class {
          constructor(e) {
            (this.bM = !1),
              (this.bN = !1),
              (this.dataToSend = new H.a()),
              (this.bP = !1),
              (this.onData = null),
              (this.onClose = null),
              (this.onError = null),
              (this.bQ = (e) => {
                this.bM ||
                  (this.onData
                    ? this.onData(e)
                    : __LOG__(
                        4
                      )`TCPSocket #${this.id} dropped ${e.length} bytes`);
              }),
              (this.bR = () => {
                __LOG__(3)`TCPSocket #${this.id} closed`,
                  (this.bN = !0),
                  this.bM || this.bT();
              }),
              (this.bS = (e) => {
                __LOG__(2)`TCPSocket #${this.id} errored: ${e}`,
                  this.bM || (this.onError && this.onError(e));
              }),
              (this.bU = () => {
                (this.bP = !1),
                  this.bM
                    ? __LOG__(4)`TCPSocket #${this.id} not opened`
                    : this.dataToSend.size() &&
                      this.bO
                        .send(this.dataToSend.readByteArray())
                        .catch((e) => {
                          if (!e || "session_closed" !== e.reason)
                            return Promise.reject(e);
                          __LOG__(
                            2
                          )`TCPSocket::send session owning the socket was closed, buffer is not sent`;
                        });
              });
            var t = Mr++;
            (this.id = t),
              (this.bO = e),
              __LOG__(2)`TCPSocket #${t} opened`,
              e.addEventListener(e.DATA_EVENT, this.bQ),
              e.addEventListener(e.CLOSE_EVENT, this.bR),
              e.addEventListener(e.ERROR_EVENT, this.bS);
          }
          requestSend() {
            this.bM
              ? __LOG__(4)`TCPSocket #${this.id} not opened`
              : this.dataToSend.size() &&
                (this.bP
                  ? __LOG__(2)`TCPSocket #${
                      this.id
                    } delay ${this.dataToSend.size()} bytes`
                  : (this.bU(), (this.bP = setTimeout(this.bU, 100))));
          }
          close() {
            this.bM ||
              (this.bO.close().catch((e) => {
                if (!this.bN)
                  return e && "session_closed" === e.reason
                    ? void __LOG__(
                        2
                      )`TCPSocket::close session owning the socket was closed`
                    : Promise.reject(e);
              }),
              this.bT());
          }
          bT() {
            (this.bM = !0), Rr.delete(this), this.onClose && this.onClose();
          }
        };
      n(69), n(302);
      var Dr = new Promise(() => {}),
        Ur = n(64),
        jr = {},
        $r = [5222, 443];
      function Fr(e) {
        var t,
          n,
          r = (function (e) {
            var t = e % 2 == 0 ? "fb" : "ips",
              n = Lr[t],
              r = jr[t];
            null == r && (r = Math.floor(Math.random() * n.length));
            var i = (r + 1) % n.length,
              a = n[i];
            return (
              (jr[t] = i), __LOG__(2)`getNextUrl round ${e} settled on: ${a}`, a
            );
          })(e),
          i = $r.length > 1 ? $r[(10 * Math.random()) & 1] : $r[0];
        return (
          e % 2 != 0 && (0, Ur.g)(F.t.get()) === $.f && (i = 80),
          (t = `${r}:${i}`),
          (n = () =>
            (function (e, t) {
              return (Ar ||
                (Ar = (0, Gr.a)("tcp", {
                  onConnect(e) {
                    Pr.resolve(self.lib_tcpsocket.TcpSocketService.get(e));
                  },
                  onDisconnect() {
                    Pr = new qn.a();
                    var e = Rr;
                    (Rr = new Set()),
                      e.forEach((e) => {
                        setTimeout(() => {
                          __LOG__(2)`TCPSocket #${e.id} now defunct`, e.close();
                        }, 0);
                      });
                  },
                })),
              Pr.promise)
                .then((n) => n.open({ host: e, port: t }))
                .then((e) => {
                  var n;
                  return (
                    (n =
                      80 === t
                        ? new (class {
                            constructor(e) {
                              (this.bW = !1),
                                (this.bX = "headers"),
                                (this.bZ = new H.a()),
                                (this.bM = !1),
                                (this.dataToSend = new H.a()),
                                (this.onData = null),
                                (this.onClose = null),
                                (this.onError = null),
                                (this.bQ = (e) => {
                                  if (!this.bM) {
                                    var t = this.bZ;
                                    if (
                                      (t.writeByteArray(e),
                                      "headers" === this.bX)
                                    ) {
                                      var n = t.indexOf(Nr);
                                      if (-1 === n) return;
                                      clearTimeout(this.ba);
                                      var r = t.readString(n);
                                      if (
                                        (t.advance(2 * Tr.length),
                                        !(function (e) {
                                          for (
                                            var t = e
                                                .replace(/\r\n[ \t]/g, " ")
                                                .replace(/[ \t]+/g, " ")
                                                .split(Tr),
                                              n = 0;
                                            n < t.length;
                                            n++
                                          ) {
                                            var r = t[n].match(
                                              /^Transfer-Encoding: ?(.*?) ?$/i
                                            );
                                            if (r)
                                              return /^chunked$/i.test(r[1]);
                                          }
                                          return !1;
                                        })(r))
                                      )
                                        return (
                                          __LOG__(
                                            4
                                          )`ChunkedHTTPSocket #${this.id} is closing as Transfer-Encoding is not chunked`,
                                          SEND_LOGS("bad-chunking-header"),
                                          void this.bb(
                                            "Transfer-encoding not chunked"
                                          )
                                        );
                                      this.bX = "chunkLength";
                                    }
                                    this.bc();
                                  }
                                }),
                                (this.bR = () => {
                                  this.bM || this.bT();
                                }),
                                (this.bS = (e) => {
                                  __LOG__(
                                    2
                                  )`ChunkedHTTPSocket #${this.id} errored: ${e}`,
                                    this.bM ||
                                      (this.onError && this.onError(e));
                                }),
                                (this.id = Mr++);
                              var t = new xr(e);
                              (t.onData = this.bQ),
                                (t.onClose = this.bR),
                                (t.onError = this.bS),
                                (this.bV = t);
                            }
                            bc() {
                              if (!this.bM) {
                                var e,
                                  t,
                                  n,
                                  r = this.bZ;
                                if ("chunkLength" === this.bX) {
                                  var i = r.indexOf(Cr);
                                  if (-1 === i) return;
                                  var a =
                                    ((t = i),
                                    (n = (e = r).readString(t)),
                                    e.advance(Tr.length),
                                    parseInt(n, 16));
                                  if (isNaN(a) || 0 === a) {
                                    var o =
                                      0 === a
                                        ? "Server is closing"
                                        : "NaN length chunk";
                                    return void this.bb(o);
                                  }
                                  (this.bY = a), (this.bX = "chunkData");
                                }
                                if ("chunkData" === this.bX) {
                                  var u = this.bY;
                                  if (r.size() < u + Tr.length) return;
                                  var s = r.readByteArray(u);
                                  r.advance(Tr.length),
                                    (this.bX = "chunkLength");
                                  var l = this.onData;
                                  l
                                    ? l(s)
                                    : (__LOG__(
                                        4
                                      )`ChunkedHTTPSocket #${this.id} dropped ${u} bytes.`,
                                      SEND_LOGS("dropped-bytes")),
                                    this.bc();
                                }
                              }
                            }
                            requestSend() {
                              if (this.bM)
                                __LOG__(
                                  3
                                )`Sending data but ChunkedHttpSocket #${this.id} is closed`;
                              else {
                                var e = this.bV.dataToSend;
                                this.bW ||
                                  (e.writeByteArray(
                                    H.a
                                      .build(
                                        "POST /chat HTTP/1.1\r\nHost: c.whatsapp.net\r\nUser-Agent: Mozilla/5.0 (compatible; WAChat/1.2; +http://www.whatsapp.com/contact)\r\nTransfer-Encoding: chunked\r\n\r\n"
                                      )
                                      .readByteArray()
                                  ),
                                  (this.bW = !0),
                                  (this.ba = setTimeout(() => {
                                    this.bb("Timeout");
                                  }, 2e3)));
                                var t = this.dataToSend;
                                e.write(
                                  t.size().toString(16),
                                  Cr,
                                  t.readByteArray(),
                                  Cr
                                ),
                                  this.bV.requestSend();
                              }
                            }
                            bb(e) {
                              if (
                                (__LOG__(
                                  2
                                )`ChunkedHTTPSocket #${this.id} is closing because ${e}`,
                                !this.bM)
                              ) {
                                var t = this.bV;
                                t.dataToSend.write("0", Tr, Tr),
                                  t.requestSend(),
                                  t.close();
                              }
                            }
                            close() {
                              this.bb("External close");
                            }
                            bT() {
                              (this.bM = !0),
                                clearTimeout(this.ba),
                                Rr.delete(this),
                                this.onClose && this.onClose();
                            }
                          })(e)
                        : new xr(e)),
                    Rr.add(n),
                    n
                  );
                });
            })(r, i)),
          __LOG__(2)`openSocketWithLoop (round ${e}) connecting to ${t}`,
          n()
            .then(
              (n) => (
                __LOG__(2)`openSocketWithLoop (round ${e}) to ${t} succeeded`, n
              )
            )
            .catch((t) => {
              throw (
                (__LOG__(3)`openSocketWithLoop (round ${e}) failed: ${t}`, t)
              );
            })
        );
      }
      function Br() {
        return (function (e, t, n, r) {
          var i = 0,
            a = 0,
            o = !1,
            u = null,
            s = null;
          function l(e) {
            return o
              ? (null == r || r(e), Dr)
              : ((o = !0),
                null != u && (clearTimeout(u), (u = null)),
                (0, er.c)(e));
          }
          function c() {
            if (o) return Dr;
            if (3 == ++a) return Promise.resolve((0, er.b)("max-hunters"));
            var e = s;
            return (
              null != e &&
                a === i &&
                (null != u && (clearTimeout(u), (u = null)), e()),
              Dr
            );
          }
          return (function t() {
            var n = i++,
              r = e(n).then(l, c);
            if (i < 3) {
              var a = new Promise((e) => {
                (u = setTimeout(e, 15e3)), (s = e);
              }).then(t);
              return Promise.race([r, a]);
            }
            return r;
          })();
        })(Fr, 0, 0, (e) => {
          e.close();
        }).then(
          (e) => (__LOG__(2)`openSocketWithLoop success, resetting round`, e)
        );
      }
      var Vr = "WhatsAppLongTerm1",
        Kr = "142375574d0a587166aae71ebe516437c4a28b73e3695c6ce1f7f9545da8ee6b";
      function Hr(e) {
        return (0, ir.a)(lr, { clientHello: e }).readByteArray();
      }
      function qr(e) {
        return (0, ir.a)(lr, { clientFinish: e }).readByteArray();
      }
      function zr(e) {
        return (0, S.a)(lr, e).serverHello;
      }
      function Wr(e) {
        var t,
          n = e.certificate,
          r = e.serverStatic,
          i = ((t = n), (0, S.a)(wr, t)),
          a = i.details,
          o = i.signature;
        if (!a) throw new Error("noiseFullHandshake cert missing details");
        if (!o) throw new Error("noiseFullHandshake cert missing signature");
        var s = { details: a, signature: o };
        return (function (e) {
          var t = e.cert,
            n = e.serverStatic,
            r = (0, S.a)(Or, t.details);
          if (r.issuer !== Vr)
            throw new Error(
              `verifyCertificate unrecognized issuer "${String(r.issuer)}"`
            );
          var i = (0, J.d)(r.expires);
          if (null != i && i <= (0, j.D)())
            throw new Error("verifyCertificate cert has expired");
          if (!r.key)
            throw new Error("verifyCertificate cert has no key detail");
          if (!(0, kr.a)(r.key, n))
            throw new Error("verifySignature cert key does not match issuer");
          return (0, u.N)(
            new Uint8Array((0, xt.k)(Kr)),
            new Uint8Array(t.details),
            new Uint8Array(t.signature)
          ).then((e) => {
            if (!e) throw new Error("verifyCertificate cert poorly signed!");
          });
        })({ cert: s, serverStatic: r }).then(() => {
          var e = (0, S.a)(Or, s.details),
            t = (0, J.d)(e.expires);
          F.V.set({
            staticKey: r,
            expires: t,
            certificate: { issuer: Vr, key: Kr },
          });
        });
      }
      function Jr() {
        if (!F.V.isDefined()) return null;
        var e = F.V.get();
        return e &&
          (null == e.expires || e.expires > (0, j.D)()) &&
          e.certificate.issuer === Vr &&
          e.certificate.key === Kr
          ? e
          : null;
      }
      function Yr(e) {
        var t = {
          edgeInfo: F.F.get().edgeInfo,
          getClientPayload: br,
          protoHeader: new Uint8Array([87, 65, 5, rr.b]),
          encodeHandshakeHello: Hr,
          decodeServerHello: zr,
          encodeHandshakeFinish: qr,
          processCertificate: Wr,
          serverInfoIfKnown: Jr,
          staticKeyPair: new nr.a(F.U.get().staticKeyPair),
          openSocket: Br,
          curveSignalDependencies: (0, nr.b)(),
        };
        return {
          openChatSocket: (e) =>
            (function (e, t) {
              return e.openSocket().then(
                (0, er.d)((n) => {
                  Promise.resolve().then(t);
                  var r = void 0,
                    i = e.edgeInfo;
                  if (i) {
                    var a = new H.a();
                    a.write("ED", 0, 1),
                      a.writeUint8(i.byteLength >> 16),
                      a.writeUint16(65535 & i.byteLength),
                      a.writeBuffer(i),
                      (r = a.readByteArray()),
                      __LOG__(2)`openChatSocket preIntro ${r}`;
                  }
                  var o = e.getClientPayload(),
                    u = new xn.a(e.curveSignalDependencies),
                    s = r
                      ? H.a.build(r, e.protoHeader).readByteArray()
                      : e.protoHeader,
                    l = new (class {
                      constructor(e, t) {
                        (this.ae = new H.a()),
                          (this.closed = !1),
                          (this.af = !1),
                          (this.onFrame = null),
                          (this.onClose = null),
                          (this.ag = (e) => {
                            this.ae.writeByteArray(e),
                              this.convertBufferedToFrames();
                          }),
                          (this.ah = () => {
                            if (this.ae.peek(jn))
                              return (
                                __LOG__(
                                  2
                                )`FrameSocket closed, waiting for pending processing`,
                                void (this.af = !0)
                              );
                            this.ak();
                          }),
                          (this.ak = () => {
                            if (!this.closed) {
                              __LOG__(2)`FrameSocket closed`,
                                (this.af = !1),
                                (this.closed = !0);
                              var e = this.onClose;
                              e && e();
                            }
                          }),
                          (this.ai = (e) => {}),
                          (this.ad = t),
                          (this.ac = e),
                          (e.onData = this.ag),
                          (e.onClose = this.ah),
                          (e.onError = this.ai);
                      }
                      sendFrame(e) {
                        if (!this.af) {
                          this.throwIfClosed();
                          var t = this.ad,
                            n = e.byteLength,
                            r = this.ac.dataToSend;
                          t
                            ? ((this.ad = null),
                              r.ensureAdditionalCapacity(t.length + 3 + n),
                              r.writeByteArray(t))
                            : r.ensureAdditionalCapacity(3 + n),
                            r.writeUint8(n >> 16),
                            r.writeUint16(65535 & n),
                            r.write(e),
                            this.aj(),
                            this.ac.requestSend();
                        }
                      }
                      aj() {
                        var e = this.ac.dataToSend.size();
                        if (e >= 1 << 24)
                          throw (
                            (this.ac.dataToSend.readBuffer(),
                            __LOG__(3)`Buffer to send: ${e}`,
                            new Dn.a("Buffer too large: " + e))
                          );
                      }
                      convertBufferedToFrames() {
                        for (
                          var e = this.ae, t = this.onFrame;
                          t && e.peek(jn);

                        ) {
                          var n = $n(e);
                          t(e.readByteArray(n)), (t = this.onFrame);
                        }
                        this.af && !e.peek(jn) && this.ak(),
                          t &&
                            e.size() &&
                            __LOG__(
                              2
                            )`FrameSocket: queueing partial frame of ${e.size()} bytes`;
                      }
                      throwIfClosed() {
                        if (this.closed) throw new Un();
                      }
                      close() {
                        this.ac.close();
                      }
                    })(n, s),
                    c = e.serverInfoIfKnown();
                  return c
                    ? (__LOG__(2)`openChatSocket performing resume handshake`,
                      (function (e, t, n, r, i) {
                        var a = new Jn(e);
                        a.start(
                          "Noise_IK_25519_AESGCM_SHA256\0\0\0\0",
                          i.protoHeader
                        );
                        var o = r.generatePublicKey();
                        a.authenticate(n),
                          a.authenticate(o),
                          a.mixIntoKey(r.generateSharedSecret(n));
                        var u = a.encrypt(i.staticKeyPair.generatePublicKey());
                        a.mixIntoKey(i.staticKeyPair.generateSharedSecret(n));
                        var s = a.encrypt(Promise.resolve(t));
                        return Promise.all([o, s, u])
                          .then((e) => {
                            var t = p()(e, 3),
                              n = t[0],
                              r = t[1],
                              o = t[2];
                            return (
                              __LOG__(2)`resumeNoiseHandshake send hello`,
                              a.sendAndReceive(
                                i.encodeHandshakeHello({
                                  ephemeral: n,
                                  payload: r,
                                  static: o,
                                })
                              )
                            );
                          })
                          .then((n) => {
                            __LOG__(2)`resumeNoiseHandshake rcv hello`;
                            var o = i.decodeServerHello(n),
                              u = o || {},
                              s = u.ephemeral,
                              l = u.static,
                              c = u.payload;
                            if (null == l) {
                              if (
                                (__LOG__(
                                  2
                                )`resumeNoiseHandshake continuing resume handshake`,
                                !s)
                              )
                                throw new Error(
                                  "serverHello missing serverEphemeral"
                                );
                              if (!c)
                                throw new Error(
                                  "serverHello missing certificateCiphertext"
                                );
                              return (
                                a.authenticate(s),
                                a.mixIntoKey(r.generateSharedSecret(s)),
                                a.mixIntoKey(
                                  i.staticKeyPair.generateSharedSecret(s)
                                ),
                                a
                                  .decrypt(c)
                                  .then(
                                    () => (
                                      __LOG__(
                                        2
                                      )`resumeNoiseHandshake deriving secrets`,
                                      a.finish()
                                    )
                                  )
                              );
                            }
                            return (
                              __LOG__(
                                2
                              )`resumeNoiseHandshake performing fallback handshake`,
                              (function (e, t, n, r, i) {
                                var a = new Jn(e);
                                a.start(
                                  "Noise_XXfallback_25519_AESGCM_SHA256",
                                  i.protoHeader
                                );
                                var o = r.generatePublicKey();
                                return (
                                  a.authenticate(o),
                                  __LOG__(
                                    2
                                  )`doFallbackHandshake continuing handshake with given server hello`,
                                  tr(a, t, n, r, i)
                                );
                              })(e, o, t, r, i)
                            );
                          });
                      })(l, o, c.staticKey, u, e))
                    : (__LOG__(2)`openChatSocket performing full handshake`,
                      (function (e, t, n, r) {
                        var i = new Jn(e);
                        i.start(
                          "Noise_XX_25519_AESGCM_SHA256\0\0\0\0",
                          r.protoHeader
                        );
                        var a = n.generatePublicKey();
                        return (
                          i.authenticate(a),
                          a
                            .then(
                              (e) => (
                                __LOG__(2)`fullNoiseHandshake send hello`,
                                i.sendAndReceive(
                                  r.encodeHandshakeHello({ ephemeral: e })
                                )
                              )
                            )
                            .then((e) => {
                              __LOG__(2)`fullNoiseHandshake rcv hello`;
                              var a = r.decodeServerHello(e);
                              return tr(i, a, t, n, r);
                            })
                        );
                      })(l, o, u, e));
                })
              );
            })(t, e),
          healthCheckInterval: 20,
          shouldCloseStaleSocket: !1,
          shouldBlockReceivingUntilSuccess: !1,
          deadSocketTime: 2e4,
          maxSocketLoopWaitTime: 6e4,
          handlers: e,
        };
      }
      var Qr = n(341),
        Zr = n(373);
      function Xr(e) {
        e.setHandlers("basic", {
          sendLogs() {},
          sendSupportRequest() {
            throw new Error("sendSupportRequest during delete");
          },
          wifiStatusChanged() {},
        }),
          e.setNamespaceHandler("backend", (e, t, n) => {
            if (n) throw new Error("backend not supported while deleting");
          }),
          (0, u.M)();
        var t = Yr({
          onConnectionChange: (e) => {},
          onOptimisticConnectionChange: (e) => {},
          onClockSkewUpdate: (e) => {
            (0, Zr.updateClockSkew)(e);
          },
        });
        (0, r.l)(Ee, t, Jt.b),
          (0, Gt.c)(
            Promise.all([(0, i.b)(), (0, Ne.deleteTmpTables)()])
              .then(() => {
                var e = (0, c.w)(
                  "iq",
                  {
                    xmlns: "urn:xmpp:whatsapp:account",
                    type: "get",
                    to: c.l,
                    id: (0, c.u)(),
                  },
                  (0, c.w)("remove", null)
                );
                return (0, r.b)(e, Ce);
              })
              .then(() => (0, Ne.deregister)("deleted"))
              .then(() => {
                __LOG__(2)`deleteAccount success`,
                  (0, Ie.c)("page", "reload", {});
              })
          );
      }
      function ei(e) {
        e.setHandlers("basic", {
          sendLogs(e) {
            var t = e.manual;
            (0, Re.a)(t, null);
          },
          sendSupportRequest(e) {
            var t = e.requestText,
              n = e.email,
              r = e.context,
              i = e.regPhoneNumber;
            return (0, Re.a)(!0, i).then((e) =>
              (function (e, t, n, r, i) {
                var a,
                  o = F.i.get(),
                  u = (0, xe.c)(
                    "https://graph.facebook.com",
                    "/fastdesk_ticket",
                    {
                      access_token:
                        "265339280745412|83b02cdbc885728b0463237fd8882e92",
                    }
                  ),
                  s = {
                    request_description: e,
                    email_address: t,
                    language: o.lg,
                    platform: "kaios",
                  };
                F.t.isDefined()
                  ? ((a = (0, R.u)(F.t.get())),
                    (s = Object.assign({}, s, { phone_number: a })))
                  : i &&
                    ((a = i), (s = Object.assign({}, s, { phone_number: a })));
                var l = (0, De.a)(n, a, r);
                s = Object.assign({}, s, { debug_info: JSON.stringify(l) });
                var c = {
                  method: "POST",
                  body: (0, xe.b)(s),
                  headers: {
                    "Content-Type":
                      "application/x-www-form-urlencoded; charset=utf-8",
                  },
                };
                return (0, xe.f)(u, {}, c)
                  .then((e) => {
                    if (!e.ok)
                      return e.text().then((t) => {
                        throw (
                          (__LOG__(
                            4
                          )`Could not send support request: ${u}: response status = ${e.status}, response body = ${t}`,
                          new Error("Could not send support request: " + u))
                        );
                      });
                  })
                  .catch((e) => {
                    __LOG__(4)`Error while sending support request: ${e}`;
                  });
              })(t, n, r, e, i)
            );
          },
          wifiStatusChanged(e) {
            var t = e.connected,
              n = e.radioType;
            WAM.logAttributes([["regular"], 23, 1, t, ["regular"], 105, 0, n]);
          },
        });
      }
      function ti(e, t, d) {
        __LOG__(2)`startBackendRegistered invoked`;
        var f = !1,
          _ = (o) => {
            var u, _;
            f ||
              ((f = !0),
              (0, Se.b)({ type: "backend", bridge: e }),
              (0, Xt.setContextImplementations)({ getPrivateStatsIds: jt }),
              __LOG__(2)`startBackendRegistered continued, triggered by ${o}`,
              d && ((0, s.o)(), (0, l.b)()),
              (0, Mt.jobsTable)().updateAppRunId(),
              (0, Te.m)(),
              Ve() ||
                (__LOG__(2)`startExpiredMessagesCleaner invoked`,
                Be || (Be = new Fe())),
              __LOG__(2)`ViewOnceExpirer::startViewOnceExpirer`,
              qe || (qe = new He()),
              (0, D.d)(t),
              (u = (0, D.b)()),
              (_ = {
                createGroup: () =>
                  n
                    .e(81)
                    .then(n.bind(null, 638))
                    .then((e) => e.default),
                demoteGroupParticipants: () =>
                  n
                    .e(91)
                    .then(n.bind(null, 639))
                    .then((e) => e.default),
                promoteGroupParticipants: () =>
                  n
                    .e(107)
                    .then(n.bind(null, 640))
                    .then((e) => e.default),
                removeGroupParticipants: () =>
                  n
                    .e(111)
                    .then(n.bind(null, 641))
                    .then((e) => e.default),
                addGroupParticipants: () =>
                  n
                    .e(77)
                    .then(n.bind(null, 642))
                    .then((e) => e.default),
                setGroupSubject: () =>
                  n
                    .e(145)
                    .then(n.bind(null, 643))
                    .then((e) => e.default),
                setGroupDescription: () =>
                  n
                    .e(141)
                    .then(n.bind(null, 644))
                    .then((e) => e.default),
                setGroupEphemeralSetting: () =>
                  n
                    .e(142)
                    .then(n.bind(null, 645))
                    .then((e) => e.default),
                setGroupLocked: () =>
                  n
                    .e(143)
                    .then(n.bind(null, 646))
                    .then((e) => e.default),
                setGroupParticipants: () =>
                  n
                    .e(144)
                    .then(n.bind(null, 647))
                    .then((e) => e.default),
                setGroupAnnouncement: () =>
                  n
                    .e(140)
                    .then(n.bind(null, 648))
                    .then((e) => e.default),
                setOneToOneEphemeralSetting: () =>
                  Promise.all([n.e(0), n.e(1), n.e(6), n.e(147)])
                    .then(n.bind(null, 649))
                    .then((e) => e.setOneToOneEphemeralSetting),
                sendEphemeralSyncResponse: () =>
                  n
                    .e(126)
                    .then(n.bind(null, 650))
                    .then((e) => e.sendEphemeralSyncResponse),
                joinGroupViaInvite: () =>
                  n
                    .e(97)
                    .then(n.bind(null, 651))
                    .then((e) => e.default),
                updateGeneralSettings: () =>
                  Promise.resolve()
                    .then(n.bind(null, 244))
                    .then((e) => e.default),
                setStatusSettings: () =>
                  n
                    .e(3)
                    .then(n.bind(null, 530))
                    .then((e) => e.default),
                initLocalSettingsFromServer: () =>
                  n
                    .e(3)
                    .then(n.bind(null, 530))
                    .then((e) => e.initLocalSettingsFromServer),
                updateServerWhitelist: () =>
                  n
                    .e(3)
                    .then(n.bind(null, 530))
                    .then((e) => e.updateServerWhitelistJob),
                markChatAsRead: () =>
                  n
                    .e(100)
                    .then(n.bind(null, 652))
                    .then((e) => e.default),
                markStatusAsSeen: () =>
                  n
                    .e(104)
                    .then(n.bind(null, 653))
                    .then((e) => e.default),
                starMessagesFromChat: () =>
                  n
                    .e(149)
                    .then(n.bind(null, 654))
                    .then((e) => e.starMessagesFromChatJob),
                unstarMessagesFromChat: () =>
                  n
                    .e(149)
                    .then(n.bind(null, 654))
                    .then((e) => e.unstarMessagesFromChatJob),
                keepMessagesFromChat: () =>
                  n
                    .e(99)
                    .then(n.bind(null, 655))
                    .then((e) => e.keepMessagesFromChatJob),
                unkeepMessagesFromChat: () =>
                  n
                    .e(99)
                    .then(n.bind(null, 655))
                    .then((e) => e.unkeepMessagesFromChatJob),
                saveKeyChange: () =>
                  n
                    .e(124)
                    .then(n.bind(null, 656))
                    .then((e) => e.default),
                queryGroup: () =>
                  Promise.resolve()
                    .then(n.bind(null, 231))
                    .then((e) => e.queryGroup),
                revokeGroupInviteCode: () =>
                  Promise.resolve()
                    .then(n.bind(null, 372))
                    .then((e) => e.resetGroupInviteCode),
                forwardMsgs: () =>
                  Promise.all([n.e(3), n.e(94)])
                    .then(n.bind(null, 657))
                    .then((e) => e.default),
                retryMsg: () =>
                  Promise.all([n.e(0), n.e(1), n.e(119)])
                    .then(n.bind(null, 658))
                    .then((e) => e.default),
                reportUserSpam: () =>
                  Promise.all([n.e(24), n.e(114)])
                    .then(n.bind(null, 659))
                    .then((e) => e.default),
                reportGroupSpam: () =>
                  Promise.all([n.e(24), n.e(113)])
                    .then(n.bind(null, 660))
                    .then((e) => e.default),
                reportCommunityHomeSpam: () =>
                  n
                    .e(112)
                    .then(n.bind(null, 661))
                    .then((e) => e.default),
                requestPreKeyDigest: () =>
                  n
                    .e(116)
                    .then(n.bind(null, 662))
                    .then((e) => e.default),
                markGroupAsMessaged: () =>
                  n
                    .e(101)
                    .then(n.bind(null, 663))
                    .then((e) => e.default),
                queryDirtyInfo: () =>
                  Promise.all([n.e(23), n.e(108)])
                    .then(n.bind(null, 664))
                    .then((e) => e.default),
                deleteChat: () =>
                  n
                    .e(84)
                    .then(n.bind(null, 729))
                    .then((e) => e.deleteChatJob),
                deleteChatContents: () =>
                  n
                    .e(84)
                    .then(n.bind(null, 729))
                    .then((e) => e.deleteChatContentsJob),
                clearChat: () =>
                  n
                    .e(84)
                    .then(n.bind(null, 729))
                    .then((e) => e.clearChatJob),
                markPlayed: () =>
                  n
                    .e(103)
                    .then(n.bind(null, 665))
                    .then((e) => e.default),
                rotateKey: () =>
                  n
                    .e(123)
                    .then(n.bind(null, 666))
                    .then((e) => e.default),
                deleteExpiredPreKeys: () =>
                  n
                    .e(87)
                    .then(n.bind(null, 667))
                    .then((e) => e.deleteExpiredPreKeys),
                deleteExpiredDevices: () =>
                  n
                    .e(86)
                    .then(n.bind(null, 668))
                    .then((e) => e.default),
                fetchMissingKeysForContact: () =>
                  Promise.resolve()
                    .then(n.bind(null, 215))
                    .then((e) => e.fetchMissingKeysForContact),
                removeDeadMediaContent: () =>
                  n
                    .e(110)
                    .then(n.bind(null, 669))
                    .then((e) => e.default),
                sendMetrics: () =>
                  n
                    .e(129)
                    .then(n.bind(null, 670))
                    .then((e) => e.default),
                sendAnonymousMetrics: () =>
                  n
                    .e(125)
                    .then(n.bind(null, 718))
                    .then((e) => e.default),
                deleteTwoFactor: () =>
                  n
                    .e(90)
                    .then(n.bind(null, 671))
                    .then((e) => e.default),
                setTwoFactor: () =>
                  n
                    .e(148)
                    .then(n.bind(null, 672))
                    .then((e) => e.default),
                changeTwoFactorPin: () =>
                  n
                    .e(148)
                    .then(n.bind(null, 672))
                    .then((e) => e.changeTwoFactorPin),
                changeTwoFactorEmail: () =>
                  n
                    .e(148)
                    .then(n.bind(null, 672))
                    .then((e) => e.changeTwoFactorEmail),
                getBlocklist: () =>
                  Promise.resolve()
                    .then(n.bind(null, 456))
                    .then((e) => e.default),
                getBlocklistV2: () =>
                  Promise.resolve()
                    .then(n.bind(null, 457))
                    .then((e) => e.default),
                setBlocklistV2: () =>
                  n
                    .e(139)
                    .then(n.bind(null, 673))
                    .then((e) => e.setBlocklistV2),
                validateBusinessCertificate: () =>
                  Promise.resolve()
                    .then(n.bind(null, 191))
                    .then((e) => e.default),
                validateBusinessMsg: () =>
                  Promise.resolve()
                    .then(n.bind(null, 191))
                    .then((e) => e.validateBusinessMsg),
                deleteChatMsgs: () =>
                  n
                    .e(85)
                    .then(n.bind(null, 674))
                    .then((e) => e.default),
                deleteMsgsFromStorageSetting: () =>
                  n
                    .e(89)
                    .then(n.bind(null, 675))
                    .then((e) => e.default),
                revokeChatMsgs: () =>
                  Promise.all([
                    n.e(0),
                    n.e(1),
                    n.e(6),
                    n.e(15),
                    n.e(25),
                    n.e(121),
                  ])
                    .then(n.bind(null, 676))
                    .then((e) => e.default),
                revokeStatusMsg: () =>
                  Promise.all([
                    n.e(0),
                    n.e(1),
                    n.e(6),
                    n.e(15),
                    n.e(25),
                    n.e(121),
                  ])
                    .then(n.bind(null, 676))
                    .then((e) => e.revokeStatusMsgJob),
                blockUser: () =>
                  n
                    .e(78)
                    .then(n.bind(null, 677))
                    .then((e) => e.blockUser),
                unblockUser: () =>
                  n
                    .e(78)
                    .then(n.bind(null, 677))
                    .then((e) => e.unblockUser),
                sendReaction: () =>
                  n
                    .e(133)
                    .then(n.bind(null, 678))
                    .then((e) => e.sendReaction),
                sendMsg: () =>
                  Promise.all([n.e(3), n.e(130)])
                    .then(n.bind(null, 679))
                    .then((e) => e.default),
                sendStatusMsg: () =>
                  Promise.all([n.e(3), n.e(130)])
                    .then(n.bind(null, 679))
                    .then((e) => e.sendStatusMsg),
                sendWrittenMsg: () =>
                  Promise.all([n.e(0), n.e(1), n.e(6), n.e(15), n.e(136)])
                    .then(n.bind(null, 680))
                    .then((e) => e.sendWrittenMsg),
                resendWrittenRevokeMsg: () =>
                  Promise.all([n.e(0), n.e(1), n.e(118)])
                    .then(n.bind(null, 681))
                    .then((e) => e.resendWrittenRevokeMsg),
                senderBackfill: () =>
                  Promise.all([n.e(0), n.e(1), n.e(6), n.e(15), n.e(137)])
                    .then(n.bind(null, 682))
                    .then((e) => e.senderBackfill),
                sendMediaMsg: () =>
                  Promise.all([n.e(0), n.e(1), n.e(3), n.e(27), n.e(127)])
                    .then(n.bind(null, 683))
                    .then((e) => e.default),
                sendMediaMsgs: () =>
                  Promise.all([n.e(0), n.e(1), n.e(3), n.e(27), n.e(128)])
                    .then(n.bind(null, 684))
                    .then((e) => e.default),
                sendVCardMsg: () =>
                  n
                    .e(135)
                    .then(n.bind(null, 685))
                    .then((e) => e.default),
                sendStatusMediaMsg: () =>
                  Promise.all([n.e(0), n.e(1), n.e(3), n.e(27), n.e(127)])
                    .then(n.bind(null, 683))
                    .then((e) => e.sendStatusMediaMsg),
                uploadMedia: () =>
                  Promise.all([n.e(0), n.e(1), n.e(29)])
                    .then(n.bind(null, 616))
                    .then((e) => e.uploadMedia),
                reuploadMedia: () =>
                  Promise.all([
                    n.e(0),
                    n.e(1),
                    n.e(5),
                    n.e(11),
                    n.e(29),
                    n.e(120),
                  ])
                    .then(n.bind(null, 686))
                    .then((e) => e.reuploadMedia),
                downloadMedia: () =>
                  n
                    .e(92)
                    .then(n.bind(null, 730))
                    .then((e) => e.default),
                requestReupload: () =>
                  Promise.all([n.e(5), n.e(117)])
                    .then(n.bind(null, 687))
                    .then((e) => e.requestReupload),
                getOwnAbout: () =>
                  n
                    .e(95)
                    .then(n.bind(null, 688))
                    .then((e) => e.getOwnAbout),
                getUserAbout: () =>
                  n
                    .e(95)
                    .then(n.bind(null, 688))
                    .then((e) => e.getUserAbout),
                setAbout: () =>
                  n
                    .e(138)
                    .then(n.bind(null, 689))
                    .then((e) => e.setAbout),
                requestGdprReport: () =>
                  n
                    .e(115)
                    .then(n.bind(null, 690))
                    .then((e) => e.requestGdprReport),
                deleteGdprReport: () =>
                  n
                    .e(88)
                    .then(n.bind(null, 691))
                    .then((e) => e.deleteGdprReport),
                setMsgBg: () =>
                  n
                    .e(146)
                    .then(n.bind(null, 692))
                    .then((e) => e.default),
                acceptGroupAddRequest: () =>
                  n
                    .e(76)
                    .then(n.bind(null, 693))
                    .then((e) => e.default),
                revokeGroupInvitations: () =>
                  n
                    .e(25)
                    .then(n.bind(null, 596))
                    .then((e) => e.default),
                syncDeviceList: () =>
                  Promise.resolve()
                    .then(n.bind(null, 367))
                    .then((e) => e.default),
                updateContactPHash: () =>
                  n
                    .e(153)
                    .then(n.bind(null, 694))
                    .then((e) => e.default),
                createMissedCallLog: () =>
                  n
                    .e(82)
                    .then(n.bind(null, 695))
                    .then((e) => e.default),
                finalizeCallLog: () =>
                  n
                    .e(93)
                    .then(n.bind(null, 696))
                    .then((e) => e.default),
                deleteCallLogs: () =>
                  n
                    .e(83)
                    .then(n.bind(null, 697))
                    .then((e) => e.default),
                clearAllCallLogs: () =>
                  n
                    .e(79)
                    .then(n.bind(null, 698))
                    .then((e) => e.default),
                queryAllGroups: () =>
                  Promise.resolve()
                    .then(n.bind(null, 231))
                    .then((e) => e.queryAllGroupsWithRetry),
                setGroupPicture: () =>
                  n
                    .e(28)
                    .then(n.bind(null, 614))
                    .then((e) => e.setGroupPictureJob),
                setProfilePicture: () =>
                  n
                    .e(28)
                    .then(n.bind(null, 614))
                    .then((e) => e.setProfilePictureJob),
                setProfileName: () =>
                  n
                    .e(132)
                    .then(n.bind(null, 699))
                    .then((e) => e.default),
                quickReplyToHsm: () =>
                  n
                    .e(109)
                    .then(n.bind(null, 700))
                    .then((e) => e.default),
                updateChatWallpaper: () =>
                  n
                    .e(152)
                    .then(n.bind(null, 701))
                    .then((e) => e.default),
                convertFutureproofMessage: () =>
                  n
                    .e(80)
                    .then(n.bind(null, 702))
                    .then((e) => e.default),
                processFutureProofMsgs: () =>
                  n
                    .e(105)
                    .then(n.bind(null, 703))
                    .then((e) => e.processFutureProofMsgs),
                downloadUserNoticeContent: () =>
                  Promise.resolve()
                    .then(n.bind(null, 455))
                    .then((e) => e.default),
                addContactToSidelist: () =>
                  Promise.resolve()
                    .then(n.bind(null, 232))
                    .then((e) => e.addContactToSidelist),
                syncUserNoticeState: () =>
                  n
                    .e(150)
                    .then(n.bind(null, 704))
                    .then((e) => e.default),
                addRecentGif: () =>
                  n
                    .e(96)
                    .then(n.bind(null, 705))
                    .then((e) => e.default),
                addFavoriteGif: () =>
                  n
                    .e(96)
                    .then(n.bind(null, 705))
                    .then((e) => e.addFavoriteGif),
                addFavoriteGifsFromChat: () =>
                  n
                    .e(96)
                    .then(n.bind(null, 705))
                    .then((e) => e.addFavoriteGifsFromChat),
                removeFavoriteGif: () =>
                  n
                    .e(96)
                    .then(n.bind(null, 705))
                    .then((e) => e.removeFavoriteGif),
                removeFavoriteGifFromId: () =>
                  n
                    .e(96)
                    .then(n.bind(null, 705))
                    .then((e) => e.removeFavoriteGifFromId),
                downloadMediaThumb: () =>
                  Promise.resolve()
                    .then(n.bind(null, 454))
                    .then((e) => e.default),
                updateTOSGatingAcceptanceStatus: () =>
                  n
                    .e(151)
                    .then(n.bind(null, 706))
                    .then((e) => e.updateTOSGatingAcceptanceStatus),
                removeCompanion: () => {
                  throw new Error("Companions not supported");
                },
                removeAllCompanions: () => {
                  throw new Error("Companions not supported");
                },
                refreshTrustedContactSenderToken: () =>
                  n
                    .e(134)
                    .then(n.bind(null, 707))
                    .then((e) => e.refreshTrustedContactSenderTokenJob),
                resendTrustedContactSenderToken: () =>
                  n
                    .e(134)
                    .then(n.bind(null, 707))
                    .then((e) => e.resendTrustedContactSenderTokenJob),
                joinSubGroupRequest: () =>
                  Promise.all([n.e(14), n.e(98)])
                    .then(n.bind(null, 715))
                    .then((e) => e.default),
                markKeepInChatNuxSeen: () =>
                  n
                    .e(102)
                    .then(n.bind(null, 708))
                    .then((e) => e.markKeepInChatNuxSeen),
                processPollUpdateOrphans: () =>
                  n
                    .e(106)
                    .then(n.bind(null, 709))
                    .then((e) => e.processPollUpdateOrphans),
                sendPollVotes: () =>
                  n
                    .e(131)
                    .then(n.bind(null, 710))
                    .then((e) => e.sendPollVotes),
                revokeQRCode: () =>
                  Promise.all([n.e(26), n.e(122)])
                    .then(n.bind(null, 711))
                    .then((e) => e.revokeQRCode),
                getPrivacySettings: void 0,
                initializeMediaFsMeta: void 0,
              }),
              (0, Dt.x)(_).forEach((e) => {
                var t = _[e];
                null != t && u.addPersistedJobImplementation(e, t);
              }),
              (0, Ue.f)({
                scheduledTimeResolver: {
                  get: (e) => {
                    var t = F.L[e];
                    return t.isDefined()
                      ? Promise.resolve(t.get())
                      : Promise.resolve(null);
                  },
                  set: (e, t) => F.L[e].set(t),
                },
              }),
              Ct.p.forEach((e) => {
                var t = (function (e) {
                  switch (e) {
                    case "sync":
                      return () => {
                        var e = F.l.get() ? "interactive" : "registration";
                        return (0, Ie.e)(
                          "page",
                          "getContactDatabaseRevision",
                          {}
                        )
                          .then((t) => {
                            var n = t.revision;
                            return (0, ze.syncAllContacts)(e, n);
                          })
                          .catch((e) => {
                            if (e instanceof Ze.a)
                              return (
                                __LOG__(
                                  2
                                )`Task 'sync' failed because it requires page, don't reschedule`,
                                Ue.a
                              );
                            throw e;
                          });
                      };
                    case "abProps":
                      return () =>
                        (0, Ie.e)("backend", "syncAbProps", {}).then((e) => {
                          var t = e.seconds;
                          return (
                            __LOG__(2)`Rescheduling syncAbProps in ${t}s`, t
                          );
                        });
                    case "serverProps":
                      return () =>
                        (0, Ie.e)("backend", "syncServerProps", {}).then(
                          () => j.b
                        );
                    case "rotateKey":
                      return (e) => {
                        var t;
                        return (
                          e
                            ? (__LOG__(2)`RotateKeyTask skip first run`,
                              (t = Promise.resolve()))
                            : (t = (0, D.b)().waitUntilCompleted(
                                U.e.rotateKey()
                              )),
                          t.then(() => 27 * j.b)
                        );
                      };
                    case "deleteExpiredDevices":
                      return () =>
                        (0, D.b)()
                          .waitUntilCompleted(U.e.deleteExpiredDevices())
                          .then(() => 1 * j.b);
                    case "deleteDeadMedia":
                      return () =>
                        (0, D.b)()
                          .waitUntilCompleted(
                            U.e.removeDeadMediaContent("routine")
                          )
                          .then(() => j.b)
                          .catch((e) => {
                            if (e instanceof Ze.a)
                              return (
                                __LOG__(
                                  2
                                )`Task 'deleteDeadMedia' failed because it requires page, don't reschedule`,
                                Ue.a
                              );
                            throw e;
                          });
                    case "sendMetrics":
                      return () =>
                        (0, D.b)()
                          .waitUntilCompleted(U.e.sendMetrics())
                          .then(() => 300);
                    case "sendAnonymousMetrics":
                      return () =>
                        (0, D.b)()
                          .waitUntilCompleted(U.e.sendAnonymousMetrics())
                          .then(() => 300);
                    case "purgeExpiredStatus":
                      return () => (0, a.Ob)().then(() => j.b);
                    case "dailyWAM":
                      return () => {
                        return ((t = (e = F.k.get()).autodownloadMobile),
                        (n = e.autodownloadWifi),
                        (r = e.autodownloadRoaming),
                        (i = {
                          autoDlAudioCellular: t.includes("audio"),
                          autoDlImageCellular: t.includes("photos"),
                          autoDlVideoCellular: t.includes("videos"),
                          autoDlAudioWifi: n.includes("audio"),
                          autoDlImageWifi: n.includes("photos"),
                          autoDlVideoWifi: n.includes("videos"),
                          autoDlAudioRoaming: r.includes("audio"),
                          autoDlImageRoaming: r.includes("photos"),
                          autoDlVideoRoaming: r.includes("videos"),
                          receiptsEnabled: "none" !== e.readReceipts,
                        }),
                        (o = (function () {
                          var e = F.i.get();
                          return {
                            languageCode: e.lg,
                            locationCode: e.lc || void 0,
                            osBuildNumber: e.osBuild,
                            simMcc: parseInt(e.mcc, 10),
                            simMnc: parseInt(e.mnc, 10),
                            networkIsRoaming: e.roaming,
                          };
                        })()),
                        (u = F.K.get().stats || {}),
                        (s = F.w.get()),
                        (l = Object.assign({}, i, o, u, s)),
                        (0, Se.a)("disappearing_mode") &&
                          (l.defaultDisappearingDuration =
                            F.k.get().disappearingMsgsDefaultTimer || $.k),
                        WAM.log("regular", 1158, void 0, [
                          108,
                          1,
                          l.accessibilityVoiceover,
                          11,
                          0,
                          l.addressbookSize,
                          12,
                          0,
                          l.addressbookWhatsappSize,
                          135,
                          2,
                          l.androidAdvertisingId,
                          139,
                          0,
                          l.androidKeystoreState,
                          103,
                          2,
                          l.appCodeHash,
                          90,
                          1,
                          l.autoDlAudioCellular,
                          91,
                          1,
                          l.autoDlAudioRoaming,
                          89,
                          1,
                          l.autoDlAudioWifi,
                          96,
                          1,
                          l.autoDlDocCellular,
                          97,
                          1,
                          l.autoDlDocRoaming,
                          95,
                          1,
                          l.autoDlDocWifi,
                          87,
                          1,
                          l.autoDlImageCellular,
                          88,
                          1,
                          l.autoDlImageRoaming,
                          86,
                          1,
                          l.autoDlImageWifi,
                          93,
                          1,
                          l.autoDlVideoCellular,
                          94,
                          1,
                          l.autoDlVideoRoaming,
                          92,
                          1,
                          l.autoDlVideoWifi,
                          10,
                          0,
                          l.backupNetworkSetting,
                          138,
                          0,
                          l.backupRestoreEncryptionVersion,
                          9,
                          0,
                          l.backupSchedule,
                          19,
                          0,
                          l.chatDatabaseSize,
                          140,
                          0,
                          l.defaultDisappearingDuration,
                          153,
                          2,
                          l.deviceLanguage,
                          134,
                          1,
                          l.entSecurityNotificationsEnabled,
                          109,
                          0,
                          l.externalStorageAvailSize,
                          110,
                          0,
                          l.externalStorageTotalSize,
                          113,
                          0,
                          l.favoritedAnimatedStickerCount,
                          112,
                          0,
                          l.favoritedFirstPartyStickerCount,
                          111,
                          0,
                          l.favoritedTotalStickerCount,
                          116,
                          0,
                          l.installedAnimatedStickerPackCount,
                          137,
                          0,
                          l.installedAnimatedThirdPartyStickerPackCount,
                          115,
                          0,
                          l.installedFirstPartyStickerPackCount,
                          114,
                          0,
                          l.installedTotalStickerPackCount,
                          123,
                          2,
                          l.ipCountry,
                          122,
                          2,
                          l.ipStr,
                          158,
                          1,
                          l.isPayTosAccepted,
                          154,
                          2,
                          l.keyboardLanguage,
                          5,
                          2,
                          l.languageCode,
                          6,
                          2,
                          l.locationCode,
                          124,
                          0,
                          l.mdPairTime,
                          21,
                          0,
                          l.mediaFolderFileCount,
                          20,
                          0,
                          l.mediaFolderSize,
                          155,
                          1,
                          l.modifiedInternalProps,
                          7,
                          1,
                          l.networkIsRoaming,
                          4,
                          2,
                          l.osBuildNumber,
                          118,
                          0,
                          l.osNotificationSetting,
                          102,
                          2,
                          l.packageName,
                          100,
                          1,
                          l.paymentsIsEnabled,
                          104,
                          1,
                          l.permissionContacts,
                          156,
                          0,
                          l.phoneCores,
                          141,
                          0,
                          l.privacySettingsAbout,
                          142,
                          0,
                          l.privacySettingsAboutExceptNum,
                          143,
                          0,
                          l.privacySettingsGroups,
                          144,
                          0,
                          l.privacySettingsGroupsExceptNum,
                          145,
                          0,
                          l.privacySettingsLastSeen,
                          146,
                          0,
                          l.privacySettingsLastSeenExceptNum,
                          147,
                          0,
                          l.privacySettingsProfilePhoto,
                          148,
                          0,
                          l.privacySettingsProfilePhotoExceptNum,
                          150,
                          0,
                          l.privacySettingsStatus,
                          151,
                          0,
                          l.privacySettingsStatusExceptNum,
                          152,
                          0,
                          l.privacySettingsStatusShareNum,
                          8,
                          1,
                          l.receiptsEnabled,
                          2,
                          0,
                          l.simMcc,
                          3,
                          0,
                          l.simMnc,
                          31,
                          0,
                          l.storageAvailSize,
                          32,
                          0,
                          l.storageTotalSize,
                          23,
                          0,
                          l.videoFolderFileCount,
                          22,
                          0,
                          l.videoFolderSize,
                        ]),
                        WAM.log("private", 2328, 113760892, []),
                        (0, Se.a)("kaios_privatestats_phase3_enabled") &&
                          (WAM.log("private", 2956, 42196056, []),
                          WAM.log("private", 3004, 0, [])),
                        (0, a.ab)()
                          .then(
                            (e) => (
                              WAM.log("regular", 1676, void 0, [
                                3,
                                0,
                                e.statusAvailableCountDaily,
                                1,
                                0,
                                e.statusAvailableRowsCountDaily,
                                4,
                                0,
                                e.statusViewedCountDaily,
                                2,
                                0,
                                e.statusViewedRowsCountDaily,
                              ]),
                              (0, a.yb)()
                            )
                          )
                          .then((e) => {})).then(() => j.b);
                        var e, t, n, r, i, o, u, s, l;
                      };
                    case "deleteExpiredPreKeys":
                      return (e) => {
                        var t;
                        return (
                          e
                            ? (__LOG__(2)`DeleteExpiredPreKeys skip first run`,
                              (t = Promise.resolve()))
                            : (t = (0, D.b)().waitUntilCompleted(
                                U.e.deleteExpiredPreKeys(
                                  F.I.get().prekeyExpirationDays
                                )
                              )),
                          t.then(() => 7 * j.b)
                        );
                      };
                    case "purgeContactsLastKnownName":
                      return () => (0, a.Mb)().then(() => j.b);
                    case "decodeFutureProofEphemeral":
                      return (e) =>
                        (e
                          ? (0, D.b)().waitUntilCompleted(
                              U.e.processFutureProofMsgs()
                            )
                          : Promise.resolve()
                        ).then(() => j.c);
                    case "timeTransitionCurrentUserNotice":
                      return () => (0, a.uc)().then(() => j.d);
                    case "rotatePrivateStatsIds":
                      return () =>
                        jt()
                          .then(() =>
                            (function () {
                              var e = [];
                              if (
                                ($.J.forEach((t) => {
                                  var n = t.keyHashInt,
                                    r = t.rotationPeriodDays;
                                  if (-1 !== r) {
                                    var i = F.B.get()[n];
                                    if (null != i) {
                                      var a = r * j.b,
                                        o = Math.floor((0, j.D)() / a) * a;
                                      if (!(i.creationTs >= o)) {
                                        var u = {
                                          value: Ut(),
                                          creationTs: (0, j.D)(),
                                        };
                                        (0, Se.a)(
                                          "kaios_privatestats_phase3_enabled"
                                        ) &&
                                          WAM.log("regular", 2862, void 0, [
                                            2,
                                            0,
                                            2,
                                            1,
                                            0,
                                            n,
                                            3,
                                            0,
                                            r,
                                          ]),
                                          e.push({ keyHashInt: n, entry: u });
                                      }
                                    }
                                  }
                                }),
                                0 === e.length)
                              )
                                return Promise.resolve();
                              var t = (0, Dt.v)(F.B.get());
                              return (
                                e.forEach((e) => {
                                  var n = e.keyHashInt,
                                    r = e.entry;
                                  t[n] = r;
                                }),
                                (0, Rt.i)($t(t)),
                                F.B.set(t).then(() => {})
                              );
                            })()
                          )
                          .then(() => j.b);
                    case "deleteExpiredOrphanedStanzas":
                      return () => {
                        return ((e = ["orphanedStanzas"]),
                        (0, i.f)("deleteExpiredOrphanedStanzas", (t) =>
                          (0, Ft.a)(t, "rw", e, (e) => {
                            var t = [],
                              n = (0, Se.a)("poll_cleanup_days");
                            t.push(() =>
                              e.orphanedStanzas
                                .where("ts")
                                .belowOrEqual((0, j.w)(n * j.b))
                                .filter((e) => "poll-update" === e.type)
                                .delete()
                            );
                            var r = (0, Se.a)("kic_orphan_cleanup_days");
                            t.push(() =>
                              e.orphanedStanzas
                                .where("ts")
                                .belowOrEqual((0, j.w)(r * j.b))
                                .filter((e) => "keep-in-chat" === e.type)
                                .delete()
                            );
                            var i = (0, Se.a)("reaction_cleanup_days");
                            return (
                              t.push(() =>
                                e.orphanedStanzas
                                  .where("ts")
                                  .belowOrEqual((0, j.w)(i * j.b))
                                  .filter((e) => "reaction" === e.type)
                                  .delete()
                              ),
                              t.push(() =>
                                e.orphanedStanzas
                                  .where("ts")
                                  .belowOrEqual((0, j.w)($.B * j.b))
                                  .filter((e) => {
                                    var t = e.type;
                                    return (
                                      "keep-in-chat" !== t &&
                                      "poll-update" !== t &&
                                      "reaction" !== t
                                    );
                                  })
                                  .delete()
                              ),
                              (0, Bt.f)(t).then(() => {})
                            );
                          })
                        )).then(() => j.b);
                        var e;
                      };
                    case "deleteExpiredPrivacyTokens":
                      return () => (0, ke.b)().then(() => j.b);
                    case "purgePastParticipants":
                      return () =>
                        (0, i.c)(
                          "purgePastParticipants",
                          (e) => {
                            return (t = e.table).transact(
                              "rw",
                              ["groupParticipantsInfo"],
                              () => {
                                var e = new Map();
                                return t.stores.groupParticipantsInfo
                                  .filter(qt)
                                  .modify((t) => {
                                    t.pastParticipants &&
                                      ((function (e) {
                                        var t = e.pastParticipants;
                                        t &&
                                          (t.forEach((e, n) => {
                                            (0, Ht.a)(e) && t.delete(n);
                                          }),
                                          0 === t.size &&
                                            delete e.pastParticipants);
                                      })(t),
                                      e.set(t.jid, t.pastParticipants));
                                  })
                                  .then(() => e);
                              }
                            );
                            var t;
                          },
                          zt
                        ).then(() => j.b);
                    default:
                      return (0, C.a)(e);
                  }
                })(e);
                (0, Ue.c)(e, t);
              }),
              (0, Pt.initializeWAMSink)("backend", "regular", () =>
                (0, Ue.e)("sendMetrics")
              ),
              (0, Pt.initializeWAMSink)("backend", "private", () =>
                (0, Ue.e)("sendAnonymousMetrics")
              ),
              setTimeout(() => {
                (function (e) {
                  var t, i, a;
                  __LOG__(2)`lazyBackendCode`,
                    e.sendAndReceive("event", "finishedBooting", {}),
                    e
                      .sendAndReceive("page", "getPushEndpoint", {})
                      .then((e) => {
                        var t, n, i;
                        (t = e.endpoint),
                          (n = e.auth),
                          (i = e.p256dh),
                          (0, r.b)(
                            (0, c.w)(
                              "iq",
                              {
                                id: (0, c.u)(),
                                to: c.l,
                                xmlns: "urn:xmpp:whatsapp:push",
                                type: "set",
                              },
                              (0, c.w)("config", {
                                platform: "kaios",
                                endpoint: (0, c.b)(t),
                                auth: (0, c.b)(n),
                                p256dh: (0, c.b)(i),
                              })
                            ),
                            Pe
                          );
                      }),
                    (0, Ie.d)() &&
                      ((0, Qe.e)() &&
                        e.fireAndForget("event", "ranOutOfStorage", {}),
                      F.l.get() &&
                        e
                          .sendAndReceive(
                            "page",
                            "getContactDatabaseRevision",
                            {}
                          )
                          .then((e) => {
                            var t = e.revision;
                            F.v.get() !== t &&
                              (0, ze.deltaSync)("interactive", t).catch((e) => {
                                throw new Qe.c("Delta sync failed", e);
                              });
                          }),
                      e.fireAndForget(
                        "backend",
                        "loadLastUnreadStatusMsg",
                        {}
                      )),
                    ("unknown" === (a = F.N.get()).status &&
                      (0, Se.a)("tos_client_state_fetch_enabled")) ||
                    (0, Se.a)("tos_client_state_fetch_iteration") >
                      a.forcedFetchIteration
                      ? n
                          .e(151)
                          .then(n.bind(null, 706))
                          .then((e) => e.fetchTOSGatingAcceptanceStatus())
                      : Promise.resolve(),
                    (t = F.x.get()) !== (i = "2.2245.7")
                      ? (__LOG__(
                          2
                        )`Update version detected: ${t} to ${i}. Running hooks.`,
                        (function (e) {
                          (0, D.b)()
                            .waitUntilPersisted(U.e.processFutureProofMsgs())
                            .then(
                              () => (
                                __LOG__(2)`Post-update hooks applied for ${e}`,
                                F.x.set(e)
                              )
                            );
                        })(i))
                      : Promise.resolve();
                })(e);
              }, 1e3));
          },
          v = (0, i.g)(
            class {
              constructor() {
                (this.table = new en.d()),
                  (this.nextMsgChecker = (e) =>
                    (0, Rn.d)(this.table.stores, e));
              }
              verifyRegisteredUser() {
                return (0, Bt.i)(
                  this.table
                    .getRegisteredUser()
                    .then((e) =>
                      e
                        ? e === F.t.get()
                        : (this.table.setRegisteredUser(F.t.get()), !0)
                    )
                );
              }
              unlinkViewOnceMsgsMedia(e) {
                return this.table.getAllMsgsFromIds(e).then((e) => {
                  var t = e.filter((e) => e && (0, _n.e)(e) && e.media);
                  if (0 !== t.length)
                    return fn
                      .Q(this.table.stores, t, !1)
                      .then(() =>
                        this.table.stores.msgs.bulkPut(
                          t.map(
                            (e) => (
                              delete e.media,
                              (0, _n.e)(e) && fn.d(e),
                              (0, vn.b)(e) && delete e.viewOnceExpiration,
                              e
                            )
                          )
                        )
                      )
                      .then(() => {});
                });
              }
              cleanViewOnceMessages() {
                return this.table.stores.msgs
                  .where("viewOnceExpiration")
                  .belowOrEqual((0, j.D)())
                  .filter((e) => (0, vn.b)(e) && "active" !== e.viewOnceState)
                  .toArray()
                  .then((e) => {
                    var t = e.map((e) => e.id);
                    return (
                      __LOG__(2)`cleanViewOnceMessages: cleaning up msgs ${t}`,
                      this.unlinkViewOnceMsgsMedia(t)
                    );
                  });
              }
              createUserChatInTransaction(e, t) {
                return this.table.stores.chats
                  .where("jid")
                  .equals(e)
                  .first()
                  .then((n) => {
                    var r = t || { jid: e };
                    if (n)
                      return (
                        __LOG__(4)`Chat created that already exists!`,
                        SEND_LOGS("createChat"),
                        [n, r, null]
                      );
                    var i = (0, Pn.h)(r);
                    return (0, Pn.g)(this, e, r, i);
                  })
                  .then((e) => {
                    var t = p()(e, 3),
                      n = t[0],
                      r = t[1],
                      i = t[2],
                      a = i ? i.map((e) => (0, Pn.q)(e, n)) : [],
                      o = Object.assign({}, r, { chatId: n.id });
                    return [n, o, a];
                  });
              }
              addSystemMsgWithResult(e, t) {
                return this.addSystemMsgToChatInTransaction(e, t).then(
                  (e) => e && (0, Pn.r)(e)
                );
              }
              addGroupSystemMsgWithResult(e, t, n) {
                return this.addSystemMsgToChatInTransaction(e, t).then(
                  (e) =>
                    e &&
                    (0, Pn.i)({ dbChat: e.dbChat, dbMsg: e.dbMsg, dbGroup: n })
                );
              }
              addSystemMsgToChatInTransaction(e, t, n) {
                return (0, Rn.a)(this.table.stores, e, t, n);
              }
              msgsInRangeInclusive(e, t) {
                return this.table.transact("r", ["msgs"], () =>
                  this.table.stores.msgs
                    .where("id")
                    .between(e, t, !0, !0)
                    .toArray()
                );
              }
              markGroupAsMessaged(e, t) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "chats", "msgs"],
                  () =>
                    this.table
                      .getGroupInfoWithParticipantsInTransaction(t)
                      .then((n) => {
                        if (n)
                          return (
                            (n.groupInfo.messaged = !0),
                            (0, Bt.c)([
                              this.table.getChatInTransaction(e),
                              this.table.setGroupInfo(n.groupInfo),
                            ]).then((e) => {
                              var t = p()(e, 1)[0];
                              return t && (0, nn.a)(t, n);
                            })
                          );
                        __LOG__(
                          3
                        )`Tried to mark non-existent group as messages: ${t}`;
                      })
                );
              }
              markChatAsRead(e, t) {
                return (
                  __LOG__(2)`markChatAsRead ${e} upTo ${t}`,
                  this.table.transact("rw", ["chats", "msgs"], () =>
                    this.table.stores.chats.get(e).then((n) => {
                      if (n) {
                        var r = n.oldestUnread;
                        if (null != r)
                          return this.table.stores.msgs
                            .where("id")
                            .between(r, (0, en.e)(n.id), !0, !1)
                            .toArray()
                            .then((e) => {
                              for (
                                var r = [], i = void 0, a = 0, o = 0;
                                o < e.length;
                                o++
                              ) {
                                var u = e[o];
                                if (
                                  u.author !== P.b &&
                                  !(0, Nn.i)(u.ack) &&
                                  u.type !== P.f.FUTUREPROOF
                                )
                                  if (u.id <= t)
                                    r.push((0, Dt.j)(u, { ack: P.a.READ }));
                                  else {
                                    var s = (0, Tn.c)(u);
                                    (0, Tn.b)(u, s) && a++,
                                      s > Tn.a.GARBAGE &&
                                        (!i || i > u.id) &&
                                        (i = u.id);
                                  }
                              }
                              var l = r.length
                                  ? this.table.stores.msgs.bulkPut(r)
                                  : null,
                                c = (0, Dt.j)(n, {
                                  oldestUnread: i,
                                  unreadMsgCount: a,
                                });
                              return (
                                delete c.importantMsgCount,
                                (0, Bt.c)([this.table.updateChat(c), l]).then(
                                  () => c
                                )
                              );
                            });
                        __LOG__(2)`markChatAsRead chat ${e} already fully read`;
                      } else
                        __LOG__(2)`markChatAsRead chat ${e} no longer exists`;
                    })
                  )
                );
              }
              getContacts(e) {
                return null == e
                  ? this.table.stores.contacts.toArray()
                  : this.table.stores.contacts.where("jid").anyOf(e).toArray();
              }
              getChatJid(e) {
                return (0, Bt.i)(
                  this.table.getChatInTransaction(e).then((e) => e && e.jid)
                );
              }
              getChatWithGroup(e) {
                return this.table.transact(
                  "rw",
                  ["chats", "groups", "groupParticipantsInfo"],
                  () =>
                    this.table.stores.chats.get(e).then((t) => {
                      if (!t)
                        return (
                          __LOG__(3)`Trying to retrieve inexisting chat ${e}`,
                          null
                        );
                      var n = (0, R.p)(t.jid);
                      return n
                        ? this.table
                            .getGroupInfoWithParticipantsInTransaction(n)
                            .then((e) => ({ dbChat: t, dbGroup: e }))
                        : { dbChat: t, dbGroup: null };
                    })
                );
              }
              getCommunityInfo(e) {
                return (0, Bt.i)(
                  this.table.stores.groups.get(e).then((e) => e && Kt.c(e))
                );
              }
              getContact(e) {
                return (0, Bt.i)(this.table.getContact(e));
              }
              getDeleteExpiredJobInfoAndContact(e) {
                return (0, Bt.i)(
                  (0, Bt.c)([
                    this.table.stores.meta.get(hn.a.DELETE_EXPIRED_DEVICES_JOB),
                    this.table.getContact(e),
                  ])
                ).then((e) => {
                  var t = p()(e, 2),
                    n = t[0];
                  return {
                    contact: t[1],
                    jobInfo: null == n ? { lastRunTs: -1 } : n.value,
                  };
                });
              }
              getSidelistJids() {
                return this.table.transact(
                  "r",
                  ["contacts", "groupParticipantsInfo"],
                  () =>
                    this.table.stores.contacts.toArray().then((e) => {
                      var t = [],
                        n = [];
                      return (
                        e.forEach((e) => {
                          var r = e.jid,
                            i = null == e.phonebookPhone,
                            a = null != e.chatId,
                            o = null != e.verifiedInfo;
                          i && (a ? t.push(r) : o && n.push(r));
                        }),
                        n.length > 0
                          ? this.table
                              .filterParticipantsInGroup(n)
                              .then((e) => [...t, ...e])
                          : t
                      );
                    })
                );
              }
              getContactsByPhonebookPhones(e) {
                return (0, Bt.i)(
                  this.table.stores.contacts
                    .where("phonebookPhone")
                    .anyOf(e)
                    .toArray()
                );
              }
              getAddressbookWhatsAppSize() {
                return (
                  performance.now(),
                  (0, Bt.i)(
                    this.table.stores.contacts
                      .orderBy("phonebookPhone")
                      .toArray()
                      .then((e) => {
                        var t = 0;
                        return (
                          e.forEach((e) => {
                            e.noWhatsApp || t++;
                          }),
                          performance.now(),
                          t
                        );
                      })
                  )
                );
              }
              purgeContactsLastKnownName() {
                return this.table.transact("rw", ["contacts"], () =>
                  this.table.stores.contacts
                    .filter(
                      (e) =>
                        null != e.lastKnownName &&
                        !(0, j.m)(e.lastKnownName.ts, $.V)
                    )
                    .modify((e) => {
                      delete e.lastKnownName;
                    })
                    .then((e) => {
                      __LOG__(
                        2
                      )`purgeContactsLastKnownName purged ${e} contacts`;
                    })
                );
              }
              updatePushname(e, t) {
                return this.table.transact("rw", ["contacts"], () =>
                  this.table.stores.contacts.get(e).then((n) => {
                    if (n && n.pushname === t) return null;
                    var r = n
                      ? Object.assign({}, n, { pushname: t })
                      : { jid: e, pushname: t };
                    return this.table.stores.contacts.put(r).then(() => r);
                  })
                );
              }
              updateContactEphemeralSettings(e, t, n) {
                return this.table.transact("rw", ["contacts"], () =>
                  this.table.stores.contacts.get(e).then((r) => {
                    var i = {
                        expiration: t,
                        ts: n,
                        initiator: I.a.CHANGED_IN_CHAT,
                        notificationTs: n,
                        deviceJid: void 0,
                      },
                      a = null == r ? void 0 : r.ephemeral;
                    if (null != a) {
                      var o = a.ts,
                        u = a.expiration,
                        s = a.deviceJid;
                      if (
                        u !== t &&
                        o === n &&
                        null != s &&
                        (0, R.e)(F.t.get()) > s
                      )
                        return null;
                      i = Object.assign({}, a, i);
                    }
                    var l = r
                      ? Object.assign({}, r, { ephemeral: i })
                      : { jid: e, ephemeral: i };
                    return this.table.stores.contacts.put(l).then(() => l);
                  })
                );
              }
              updateAbout(e, t) {
                return this.table.transact("rw", ["contacts"], () =>
                  this.table.stores.contacts.get(e).then((n) => {
                    var r = n && n.about;
                    if (r && t && (0, Dt.s)(r, t)) return null;
                    var i = Object.assign({ jid: e }, n, { about: t });
                    return this.table.stores.contacts.put(i).then(() => i);
                  })
                );
              }
              getEverything() {
                return this.table.getEverything();
              }
              loadMsgRange(e, t, n) {
                return this.table.loadDbMsgRange(e, t, n).then((e) => {
                  if (e) {
                    var t = e.dbMsgs,
                      n = e.containsOldest,
                      r = e.containsNewest;
                    return {
                      msgs: t.map(cn.c),
                      containsOldest: n,
                      containsNewest: r,
                    };
                  }
                });
              }
              doesMsgExist(e) {
                return (0, Bt.i)(
                  this.table.stores.msgs
                    .where("id")
                    .equals(e)
                    .count()
                    .then((e) => 1 === e)
                );
              }
              createUserChat(e) {
                return this.table.transact(
                  "rw",
                  ["chats", "contacts", "msgs"],
                  () =>
                    this.table.getContact(e).then((t) =>
                      t && t.chatId
                        ? { type: "exists", chatId: t.chatId }
                        : this.createUserChatInTransaction(e, t).then((e) => {
                            var t = p()(e, 3),
                              n = t[0],
                              r = t[1],
                              i = t[2];
                            return this.table.stores.contacts
                              .put(r)
                              .then(() => ({
                                type: "new",
                                chat: (0, nn.a)(n, null),
                                contact: r,
                                msgs: i,
                              }));
                          })
                    )
                );
              }
              instantiateGroupChat(e) {
                return this.table.transact(
                  "rw",
                  [
                    "groups",
                    "groupParticipantsInfo",
                    "contacts",
                    "chats",
                    "msgs",
                    "media",
                  ],
                  () => {
                    var t =
                      this.table.getGroupInfoWithParticipantsInTransaction(
                        e.jid
                      );
                    return (0, Bt.c)([
                      t,
                      this.table.getDevicesInTransaction(
                        e.participants.map((e) => e.jid)
                      ),
                    ]).then((t) => {
                      var n = p()(t, 2),
                        r = n[0],
                        i = n[1],
                        a = (function (e, t, n) {
                          var r,
                            i,
                            a,
                            o,
                            u = e.participants,
                            s = e.jid,
                            l = e.description,
                            c = e.descriptionId,
                            d = e.creatorJid,
                            f = e.creationTs,
                            _ = e.locked,
                            p = e.announcement,
                            v = e.expiration,
                            h = e.support,
                            m = e.linkedParent,
                            g = e.isCAG,
                            y = e.groupType,
                            b = [],
                            w = [],
                            O = [];
                          if (
                            (u.forEach((e) => {
                              var t = e.jid,
                                n = e.type;
                              "superadmin" === n
                                ? (b.push(t), w.push(t))
                                : "admin" === n && w.push(t),
                                O.push(t);
                            }),
                            n.delete((0, R.e)(F.t.get())),
                            (b = ne.m(b)),
                            (w = ne.m(w)),
                            (O = ne.m(O)),
                            t)
                          ) {
                            var E = t.participantsInfo,
                              I = E.knowsSenderKey;
                            Array.from(I.keys()).some((e) => !n.has(e))
                              ? ((a = !0),
                                (i = sn(n)),
                                (o = E.senderKeyTimestamp))
                              : ((a = E.rotateSenderKey),
                                (o = E.senderKeyTimestamp),
                                (i = new Map()),
                                n.forEach((e) => {
                                  i.set(e, I.get(e) || !1);
                                }));
                          } else (i = sn(n)), (a = !0), (o = j.c);
                          var S = {
                            jid: s,
                            superadmins: b,
                            admins: w,
                            participants: O,
                            invitations:
                              (null == t
                                ? void 0
                                : t.participantsInfo.invitations) || [],
                            knowsSenderKey: i,
                            rotateSenderKey: a,
                            senderKeyTimestamp: o,
                          };
                          t &&
                            t.participantsInfo.keyIncrement &&
                            (S.keyIncrement = t.participantsInfo.keyIncrement);
                          var k = e.title,
                            L = e.titleTs;
                          t &&
                            null != t.groupInfo.titleTs &&
                            t.groupInfo.titleTs > L &&
                            ((k = t.groupInfo.title),
                            (L = t.groupInfo.titleTs));
                          var G = {
                            jid: s,
                            title: k,
                            titleTs: L,
                            description: l,
                            descriptionId: c,
                            creatorJid: d,
                            creationTs: f,
                            locked: _,
                            announcement: p,
                            messaged: null != t && t.groupInfo.messaged,
                            isAdmin: (0, an.a)(S),
                            isInTheGroup: (0, an.b)(S),
                            expiration: v,
                            linkedParent: m,
                            isCAG: g,
                            groupType: y,
                          };
                          null != e.growthLocked &&
                            (G.growthLocked = e.growthLocked),
                            h && (G.support = h),
                            null !=
                              (null == t || null == (r = t.groupInfo)
                                ? void 0
                                : r.leftTs) && (G.leftTs = t.groupInfo.leftTs);
                          var M = [];
                          if (
                            (t ||
                              M.push({
                                externalId: "/create/" + s,
                                ts: f,
                                author: (0, Kt.j)(d),
                                ack: Ct.a.RECEIVED,
                                type: P.f.GROUP_NOTIFICATION,
                                subtype:
                                  g && (0, Se.a)("parent_group_view_enabled")
                                    ? "cag_create"
                                    : "create",
                                title: k,
                                altIndex: "",
                              }),
                            t &&
                              t.groupInfo.expiration !== v &&
                              (void 0 !== t.groupInfo.expiration || null !== v))
                          ) {
                            var A = {
                              externalId: "/ephemeral/" + s,
                              ts: f,
                              author: P.b,
                              ack: Ct.a.RECEIVED,
                              type: P.f.GROUP_NOTIFICATION,
                              subtype: "ephemeral_authorless",
                              expiration: v,
                              altIndex: "",
                            };
                            (0, on.b)(t && t.groupInfo.expiration, v) &&
                              (A.updated = !0),
                              M.push(A);
                          }
                          var T = e.addInfo,
                            N = F.t.get();
                          if (
                            T &&
                            T.author !== P.b &&
                            T.participants.includes(N) &&
                            (!t || !t.participantsInfo.participants.includes(N))
                          ) {
                            var C = "add";
                            if (T.reason)
                              switch (T.reason) {
                                case "invite":
                                  (C = "invite"), (G.messaged = !0);
                                  break;
                                case "accept":
                                  C = "accept";
                                  break;
                                default:
                                  T.reason;
                              }
                            M.push({
                              externalId: "/add/" + T.id,
                              ts: T.ts,
                              author: T.author,
                              ack: Ct.a.RECEIVED,
                              type: P.f.GROUP_NOTIFICATION,
                              subtype: C,
                              involvesMe: !0,
                              participants: [],
                              altIndex: "",
                            });
                          }
                          if (t) {
                            var x = t.groupInfo.growthLocked,
                              D = (0, un.c)(
                                x,
                                e.growthLocked,
                                G.isAdmin,
                                (0, R.n)(e.jid),
                                e.creationTs
                              );
                            D && D.msg && M.push(D.msg);
                          }
                          return {
                            groupInfo: G,
                            participantsInfo: S,
                            notificationMessages: M,
                          };
                        })(e, r, i),
                        o = a.groupInfo,
                        u = a.participantsInfo,
                        s = a.notificationMessages;
                      return (
                        r && "parent" !== r.groupInfo.groupType
                          ? (0, Bt.e)({ chatId: r.groupInfo.chatId })
                          : (0, Pn.f)(this, e.jid, o.expiration).then((e) => {
                              var t = p()(e, 2),
                                n = t[0],
                                r = t[1];
                              return { chatId: n.id, dbChat: n, dbMsgs: r };
                            })
                      ).then((e) => {
                        var t,
                          n = e.chatId,
                          r = Object.assign({}, o, { chatId: n }),
                          i = { groupInfo: r, participantsInfo: u };
                        if (e.dbChat) {
                          var a = e.dbChat,
                            l = e.dbMsgs;
                          t = l.map((e) => (0, Pn.q)(e, a, i));
                        }
                        var c = (0, Bt.e)([]);
                        return (
                          s.forEach((e) => {
                            c = c.then((t) =>
                              this.addGroupSystemMsgWithResult(n, e, i).then(
                                (e) => (e ? t.concat(e) : t)
                              )
                            );
                          }),
                          (0, Bt.c)([
                            c,
                            this.table.setGroupInfo(r),
                            this.table.setParticipantsInfo(u),
                          ]).then((e) => {
                            var n = p()(e, 1)[0];
                            return t ? t.concat(n) : n;
                          })
                        );
                      });
                    });
                  }
                );
              }
              instantiateParentGroup(e) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "contacts"],
                  () =>
                    this.table
                      .getDevicesInTransaction(e.participants.map((e) => e.jid))
                      .then((t) => {
                        var n = (function (e, t) {
                            var n = e.participants,
                              r = e.jid,
                              i = e.title,
                              a = e.titleTs,
                              o = e.description,
                              u = e.descriptionId,
                              s = e.creatorJid,
                              l = e.creationTs,
                              c = e.locked,
                              d = e.announcement,
                              f = [],
                              _ = [],
                              p = [];
                            return (
                              n.forEach((e) => {
                                var t = e.jid,
                                  n = e.type;
                                "superadmin" === n
                                  ? (f.push(t), _.push(t))
                                  : "admin" === n && _.push(t),
                                  p.push(t);
                              }),
                              (f = ne.m(f)),
                              (_ = ne.m(_)),
                              (p = ne.m(p)),
                              {
                                groupInfo: {
                                  jid: r,
                                  title: i,
                                  titleTs: a,
                                  description: o,
                                  descriptionId: u,
                                  creatorJid: s,
                                  creationTs: l,
                                  locked: c,
                                  announcement: d,
                                  messaged: !1,
                                  isAdmin: !1,
                                  isInTheGroup: !1,
                                  expiration: null,
                                  groupType: "parent",
                                },
                                participantsInfo: {
                                  jid: r,
                                  superadmins: f,
                                  admins: _,
                                  participants: p,
                                  invitations: [],
                                  knowsSenderKey: sn(t),
                                  rotateSenderKey: !0,
                                  senderKeyTimestamp: j.c,
                                },
                              }
                            );
                          })(e, t),
                          r = n.groupInfo,
                          i = n.participantsInfo;
                        return (0, Bt.c)([
                          this.table.setGroupInfo(r),
                          this.table.setParticipantsInfo(i),
                        ]).then((e) => {});
                      })
                );
              }
              muteChat(e, t) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "msgs", "chats"],
                  () =>
                    this.table.stores.chats.get(e).then((e) => {
                      if (!e) return null;
                      var n = Object.assign({}, e, { mutedUntil: t }),
                        r = (0, R.p)(n.jid),
                        i = r
                          ? this.table.getGroupInfoWithParticipantsInTransaction(
                              r
                            )
                          : null;
                      return (0, Bt.c)([i, this.table.updateChat(n)]).then(
                        (e) => {
                          var t = p()(e, 1)[0];
                          return (0, nn.a)(n, t);
                        }
                      );
                    })
                );
              }
              setChatArchivedState(e, t) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "chats"],
                  () =>
                    this.table.stores.chats.get(e).then((n) => {
                      if (!n)
                        return (
                          __LOG__(
                            2
                          )`setChatArchivedState chat ${e} does not exist`,
                          null
                        );
                      if (!!n.archived === t) return null;
                      var r = Object.assign({}, n, { archived: t }),
                        i = (0, R.p)(r.jid),
                        a = i
                          ? this.table.getGroupInfoWithParticipantsInTransaction(
                              i
                            )
                          : null;
                      return (0, Bt.c)([a, this.table.updateChat(r)]).then(
                        (e) => {
                          var t = p()(e, 1)[0];
                          return (0, nn.a)(r, t);
                        }
                      );
                    })
                );
              }
              markChatAsUnread(e) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "chats"],
                  () =>
                    this.table.stores.chats.get(e).then((t) => {
                      if (!t)
                        return (
                          __LOG__(2)`markChatAsUnread chat ${e} does not exist`,
                          null
                        );
                      if (0 !== t.unreadMsgCount)
                        return (
                          __LOG__(
                            2
                          )`markChatAsUnread chat ${e} is already marked unread`,
                          null
                        );
                      (t.unreadMsgCount = -1), delete t.importantMsgCount;
                      var n = (0, R.p)(t.jid),
                        r = n
                          ? this.table.getGroupInfoWithParticipantsInTransaction(
                              n
                            )
                          : null;
                      return (0, Bt.c)([r, this.table.updateChat(t)]).then(
                        (e) => {
                          var n = p()(e, 1)[0];
                          return (0, nn.a)(t, n);
                        }
                      );
                    })
                );
              }
              removeChatUnreadMark(e) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "chats"],
                  () =>
                    this.table.stores.chats.get(e).then((t) => {
                      if (!t)
                        return (
                          __LOG__(
                            2
                          )`removeChatUnreadMark chat ${e} does not exist`,
                          null
                        );
                      if (-1 !== t.unreadMsgCount)
                        return (
                          __LOG__(
                            2
                          )`removeChatUnreadMark chat ${e} is not marked unread`,
                          null
                        );
                      (t.unreadMsgCount = 0), delete t.importantMsgCount;
                      var n = (0, R.p)(t.jid),
                        r = n
                          ? this.table.getGroupInfoWithParticipantsInTransaction(
                              n
                            )
                          : null;
                      return (0, Bt.c)([r, this.table.updateChat(t)]).then(
                        (e) => {
                          var n = p()(e, 1)[0];
                          return (0, nn.a)(t, n);
                        }
                      );
                    })
                );
              }
              starMessagesFromChat(e, t) {
                return this.table.transact(
                  "rw",
                  ["msgs", "chats", "groups", "groupParticipantsInfo", "meta"],
                  () => {
                    var n = this.table
                      .getChatInTransaction(t)
                      .then(
                        (e) =>
                          e && this.table.getChatAndGroupInTransaction(e.jid)
                      );
                    return (0, Bt.c)([
                      n,
                      this.table.stores.msgs.where("id").anyOf(e).toArray(),
                    ]).then((e) => {
                      var n = p()(e, 2),
                        r = n[0],
                        i = n[1];
                      if (!r)
                        return (
                          __LOG__(3)`starMessage chat ${t} does not exist`, null
                        );
                      var a = r.dbChat,
                        o = r.dbGroup,
                        u = null != a.starredMsgCount ? a.starredMsgCount : 0,
                        s = [];
                      return (
                        i.forEach((e) => {
                          if (e.chat !== t)
                            return (
                              __LOG__(
                                3
                              )`starMessagesFromChat message ${e.id} does not belong to chat ${t}`,
                              void SEND_LOGS("starred-message-not-from-chat")
                            );
                          e.starred
                            ? __LOG__(
                                3
                              )`starMessagesFromChat message ${e.id} is already starred`
                            : e.type !== P.f.REVOKED
                            ? (0, ie.m)() &&
                              null != e.expiration &&
                              e.expiration > $.k
                              ? __LOG__(
                                  3
                                )`starMessagesFromChat message ${e.id} is ephemeral`
                              : ((e.starred = e.rowId), u++, s.push(e))
                            : __LOG__(
                                3
                              )`starMessagesFromChat message ${e.id} is revoked`;
                        }),
                        u > 0 && (a.starredMsgCount = u),
                        (0, Bt.c)([
                          this.table.stores.msgs.bulkPut(s),
                          this.table.updateChat(a),
                          (0, Pn.c)(this, a.jid, s.length),
                        ]).then(() => ({
                          msgs: s.map((e) => (0, cn.c)(e)),
                          chat: (0, nn.a)(a, o),
                        }))
                      );
                    });
                  }
                );
              }
              unstarMessagesFromChat(e, t) {
                return this.table.transact(
                  "rw",
                  ["msgs", "chats", "groups", "groupParticipantsInfo"],
                  () => {
                    var n = this.table
                      .getChatInTransaction(t)
                      .then(
                        (e) =>
                          e && this.table.getChatAndGroupInTransaction(e.jid)
                      );
                    return (0, Bt.c)([
                      n,
                      this.table.stores.msgs.where("id").anyOf(e).toArray(),
                    ]).then((e) => {
                      var n = p()(e, 2),
                        r = n[0],
                        i = n[1];
                      if (!r)
                        return (
                          __LOG__(
                            3
                          )`unstarMessagesFromChat chat ${t} does not exist`,
                          null
                        );
                      var a = r.dbChat,
                        o = r.dbGroup,
                        u = null != a.starredMsgCount ? a.starredMsgCount : 0,
                        s = [];
                      return (
                        i.forEach((e) => {
                          if (e.chat !== t)
                            return (
                              __LOG__(
                                3
                              )`unstarMessagesFromChat message ${e.id} does not belong to chat ${t}`,
                              void SEND_LOGS("starred-message-not-from-chat")
                            );
                          e.starred
                            ? (delete e.starred, u--, s.push(e))
                            : __LOG__(
                                3
                              )`unstarMessagesFromChat message ${e.id} is not starred`;
                        }),
                        u > 0
                          ? (a.starredMsgCount = u)
                          : delete a.starredMsgCount,
                        (0, Bt.c)([
                          this.table.stores.msgs.bulkPut(s),
                          this.table.updateChat(a),
                        ]).then(() => ({
                          msgs: s.map((e) => (0, cn.c)(e)),
                          chat: (0, nn.a)(a, o),
                        }))
                      );
                    });
                  }
                );
              }
              getBlocklist() {
                return (0, Bt.i)(this.table.getBlocklist());
              }
              setBlocklist(e) {
                return this.table.stores.meta.put({
                  key: hn.a.BLOCKED,
                  value: e,
                });
              }
              addToBlocklist(e) {
                return this.table.transact(
                  "rw",
                  ["chats", "contacts", "msgs", "meta"],
                  () =>
                    this.table.getBlocklist().then((t) => {
                      if ((0, ne.d)(t, (0, ne.l)(e))) return [t, null];
                      var n = (0, ne.a)(t, e);
                      return (0, Bt.c)([
                        this.setBlocklist(n),
                        this.aL(e, !0),
                      ]).then((e) => {
                        var t = p()(e, 2),
                          r = (t[0], t[1]);
                        return [n, r];
                      });
                    })
                );
              }
              removeFromBlocklist(e) {
                return this.table.transact(
                  "rw",
                  ["chats", "contacts", "msgs", "meta"],
                  () =>
                    this.table.getBlocklist().then((t) => {
                      if (!(0, ne.d)(t, (0, ne.l)(e))) return [t, null];
                      var n = (0, ne.g)(t, (t) => t !== e);
                      return (0, Bt.c)([
                        this.setBlocklist(n),
                        this.aL(e, !1),
                      ]).then((e) => {
                        var t = p()(e, 2),
                          r = (t[0], t[1]);
                        return [n, r];
                      });
                    })
                );
              }
              aL(e, t) {
                return this.table.getContact(e).then((n) => {
                  if (n) {
                    var r = n.chatId;
                    if (r) {
                      var i = {
                        type: P.f.CONTACT_BLOCK_CHANGE,
                        externalId: "/blocked/" + e,
                        ts: (0, j.D)(),
                        author: P.b,
                        ack: P.a.RECEIVED,
                        altIndex: "",
                        blocked: t,
                      };
                      return this.addSystemMsgWithResult(r, i);
                    }
                  }
                });
              }
              getMsgInfo(e) {
                return this.table.transact("r", ["receipts"], () =>
                  this.table
                    .getReceipt(e)
                    .then((e) => ({ acks: e ? (0, rn.f)(e) : null }))
                );
              }
              recordKeyChange(e, t) {
                return this.table
                  .transact(
                    "rw",
                    [
                      "contacts",
                      "groups",
                      "groupParticipantsInfo",
                      "chats",
                      "msgs",
                    ],
                    () =>
                      (0, Bt.c)([
                        this.table.getContact(e),
                        this.table.userParticipantsInfo(e),
                      ]).then((n) => {
                        var r = p()(n, 2),
                          i = r[0],
                          a = r[1],
                          o = a.groups,
                          u = a.status,
                          s = null,
                          l = null,
                          c = [];
                        if (
                          i &&
                          (t &&
                            (0, y.g)(i) &&
                            ((s = o.map(
                              (e) =>
                                "parent" !== e.groupInfo.groupType &&
                                this.addGroupSystemMsgWithResult(
                                  e.groupInfo.chatId,
                                  t,
                                  e
                                )
                            )),
                            i.chatId &&
                              s.push(this.addSystemMsgWithResult(i.chatId, t))),
                          i.devices)
                        ) {
                          var d = (0, R.e)(e);
                          (0, mn.c)(i).forEach((e) => {
                            e !== d && c.push(e);
                          }),
                            c.length > 0 &&
                              (l = this.table.stores.contacts.put(
                                Object.assign({}, i, { devices: [mn.a] })
                              ));
                        }
                        var f = o.map((e) => e.groupInfo.jid);
                        u && f.push(u.jid);
                        var _ = this.table
                          .markSenderKeysForRotationInTransaction(f)
                          .then(() =>
                            0 === c.length
                              ? null
                              : this.table.stores.groupParticipantsInfo.bulkPut(
                                  o.map((e) => {
                                    var t = e.participantsInfo;
                                    return ln.f(t, [], c);
                                  })
                                )
                          );
                        return (0, Bt.c)([s && (0, Bt.c)(s), _, l]);
                      })
                  )
                  .then((e) => {
                    var t = p()(e, 1)[0],
                      n = [];
                    return (
                      t && t.forEach((e) => null != e && n.push(e)),
                      { newMsgs: n }
                    );
                  });
              }
              markPlayed(e) {
                return this.table.transact(
                  "rw",
                  [
                    "msgs",
                    "chats",
                    "groups",
                    "groupParticipantsInfo",
                    "media",
                    "previews",
                  ],
                  () =>
                    this.table.getMsgFromId(e).then((e) => {
                      if (!e) return {};
                      var t = !1;
                      if (
                        e.type !== P.f.PTT ||
                        (e.played && (0, Nn.h)(e.ack))
                      ) {
                        if (
                          !(0, vn.b)(e) ||
                          ("viewed" === e.viewOnceState && (0, Nn.h)(e.ack))
                        )
                          return {};
                        (e.viewOnceState = "viewed"),
                          (e.viewOnceExpiration = (0, j.w)(1)),
                          (t = !0);
                      } else e.played = !0;
                      var n = this.table.stores.msgs.put(e),
                        r = this.table.stores.chats.get(e.chat).then((n) => {
                          if (
                            n &&
                            (0, tn.maybeMutateChatMsgPreviewFromMsgs)(n, [e])
                          ) {
                            var r = this.table.stores.chats.put(n),
                              i = (0, R.p)(n.jid),
                              a = (
                                i
                                  ? this.table.getGroupInfoWithParticipantsInTransaction(
                                      i
                                    )
                                  : (0, Bt.e)()
                              ).then((e) => (0, nn.a)(n, e)),
                              o = t
                                ? (0, Pn.d)(this.table.stores, n.jid)
                                : null;
                            return (0, Bt.c)([a, r, o]).then(
                              (e) => p()(e, 1)[0]
                            );
                          }
                        });
                      return (0, Bt.c)([r, n]).then((t) => {
                        var n = p()(t, 1)[0];
                        return {
                          msg: (0, cn.c)(e),
                          externalId: e.externalId,
                          updatedChat: n,
                        };
                      });
                    })
                );
              }
              updateChatLastNotified(e, t) {
                return this.table.transact("rw", ["chats"], () =>
                  this.table.stores.chats.get(e).then((n) => {
                    if (!n) return e;
                    var r = (0, Dt.j)(n, { lastNotified: t });
                    return this.table.updateChat(r);
                  })
                );
              }
              getMsgFromId(e) {
                return this.table.transact("r", ["msgs"], () =>
                  this.table.getMsgFromId(e)
                );
              }
              getChatMediaMsgs(e) {
                return this.table.transact(
                  "r",
                  ["chats", "msgs", "media"],
                  () => {
                    var t = (0, en.b)(e.chatId),
                      n = e.fromMsgId || (0, en.e)(e.chatId);
                    return this.table
                      .getMediaMsgIds(t, n, e.limit)
                      .then((e) =>
                        this.table.getAllMsgsFromOrderedIds(e).then(Pn.e)
                      );
                  }
                );
              }
              getStorageSettingMediaMsgs(e) {
                return this.table.transact("r", ["msgs", "media"], () =>
                  this.table
                    .getStorageSettingSortedMediaMsgIds(e.filter)
                    .then((t) => {
                      var n = -1;
                      e.fromMsgId && (n = t.indexOf(e.fromMsgId));
                      var r = t.slice(n + 1, n + 1 + e.limit);
                      return this.table.getAllMsgsFromOrderedIds(r).then(Pn.e);
                    })
                );
              }
              getStorageSettingChatsMediaSizes() {
                return this.table.transact("r", ["media"], () => {
                  var e = performance.now();
                  return this.table.stores.media.toArray().then((t) => {
                    var n = new Map();
                    t.forEach((e) => {
                      if ((0, en.C)(e)) {
                        var t = new Set();
                        e.msgIds.forEach((e) => {
                          var n = (0, Ct.z)(e);
                          null != n && t.add(n);
                        });
                        var r = (0, en.z)(e);
                        t.forEach((e) => {
                          var t,
                            i = null != (t = n.get(e)) ? t : 0;
                          n.set(e, i + r);
                        });
                      }
                    });
                    var r = Array.from(n.entries())
                        .map((e) => {
                          var t = p()(e, 2);
                          return { chatId: t[0], mediaSize: t[1] };
                        })
                        .sort((e, t) => t.mediaSize - e.mediaSize),
                      i = performance.now() - e;
                    return (
                      i >= 5e3 &&
                        (__LOG__(
                          2
                        )`getStorageSettingChatsMediaSizes ${i}ms, medias.length = ${t.length}`,
                        SEND_LOGS("storageSetting-slow", 0.01)),
                      { chatIdsWithMediaSize: r }
                    );
                  });
                });
              }
              getStorageSettingTotalMediaSize() {
                return this.table.transact("r", ["media"], () => {
                  var e = performance.now();
                  return this.table.stores.media.toArray().then((t) => {
                    var n = 0,
                      r = 0;
                    t.forEach((e) => {
                      if ((0, en.C)(e)) {
                        var t = (0, en.z)(e);
                        (n += t), t >= $.v && (r += t);
                      }
                    });
                    var i = performance.now() - e;
                    return (
                      i >= 5e3 &&
                        (__LOG__(
                          2
                        )`getStorageSettingTotalMediaSize ${i}ms, medias.length = ${t.length}`,
                        SEND_LOGS("storageSetting-slow", 0.01)),
                      { totalMediaSize: n, largeFilesTotalSize: r }
                    );
                  });
                });
              }
              getAllMediaMsgIds(e) {
                return this.table.transact("r", ["msgs", "media"], () =>
                  this.table.getStorageSettingSortedMediaMsgIds(e)
                );
              }
              loadMsgContentVCards(e) {
                return (0, Bt.i)(
                  this.table.getMsgFromId(e).then((t) => {
                    if (t)
                      return t.type !== P.f.VCARD
                        ? (__LOG__(
                            4
                          )`Trying to load vcard content from non-vcard msg ${e}`,
                          void SEND_LOGS("non-vcard"))
                        : t.contacts;
                    __LOG__(
                      2
                    )`Tried to load vcard content but message is gone ${e}`;
                  })
                );
              }
              loadChatStarredMsgs(e, t, n) {
                var r = [(0, en.b)(e), Ct.i],
                  i = n ? [n.msgId, n.starred] : [(0, en.e)(e), Ct.i];
                return (0, Bt.i)(
                  (0, Bt.j)(this.table.stores.msgs, ["id", "starred"])
                    .between(r, i, !1, !1)
                    .reverse()
                    .limit(t)
                    .toArray()
                    .catch(() => [])
                );
              }
              loadStarredMsgs(e, t) {
                var n = t || Ct.i;
                return (0, Bt.i)(
                  this.table.stores.msgs
                    .where("starred")
                    .below(n)
                    .reverse()
                    .limit(e)
                    .toArray()
                    .catch(() => [])
                );
              }
              purgeExpiredInvitations(e) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "chats"],
                  () =>
                    this.table.getChatAndGroupInTransaction(e).then((t) => {
                      if (!t || !t.dbGroup)
                        return (
                          __LOG__(
                            3
                          )`Trying to purge invitations for a non-group chat ${e}`,
                          void SEND_LOGS("purge-group-invitations")
                        );
                      var n = t.dbChat,
                        r = t.dbGroup,
                        i = r.participantsInfo.invitations;
                      if (!i)
                        return (
                          __LOG__(2)`No invitations to purge in ${e}`, null
                        );
                      var a = i.filter((e) => (0, j.o)(e.expiration));
                      return a.length === i.length
                        ? (__LOG__(2)`No invitations to be purged for ${e}`,
                          null)
                        : ((r.participantsInfo.invitations = a),
                          __LOG__(2)`${
                            i.length - a.length
                          } invitations removed for ${e}`,
                          this.table
                            .setParticipantsInfo(r.participantsInfo)
                            .then(() => (0, nn.a)(n, r)));
                    })
                );
              }
              getSentGroupInvitations(e, t) {
                return this.table.transact("rw", ["msgs", "meta"], () =>
                  this.table.getAllMsgsFromIds(t).then((t) =>
                    this.table
                      .getGroupInviteRevokes()
                      .then(Kt.f)
                      .then((n) => {
                        var r = n.sent,
                          i = {};
                        return (
                          t.forEach((t) => {
                            if (
                              t.author === P.b &&
                              t.type === P.f.GROUP_INVITE
                            ) {
                              var n,
                                a = null == (n = r[e]) ? void 0 : n[t.groupJid],
                                o = a && t.inviteExpiration <= a;
                              if ((0, j.o)(t.inviteExpiration) && !o) {
                                var u = i[t.groupJid];
                                (null == u ||
                                  u.expiration < t.inviteExpiration) &&
                                  (i[t.groupJid] = {
                                    jid: e,
                                    code: t.inviteCode,
                                    expiration: t.inviteExpiration,
                                  });
                              }
                            }
                          }),
                          __LOG__(2)`${
                            Object.keys(i).length
                          } group invites to be purged.`,
                          i
                        );
                      })
                  )
                );
              }
              removeGroupInvitations(e, t) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "chats", "msgs", "meta"],
                  () => {
                    var n = (0, Dt.t)(t, (e) => e.jid);
                    return this.removeGroupInvitationsInTransaction(e, (e) => {
                      var t = n[e.jid];
                      return null != t && t.code === e.code;
                    }).then((n) =>
                      this.table
                        .revokeGroupInvitesInTransaction(
                          e,
                          !0,
                          t.map((e) => ({
                            user: e.jid,
                            expiresBefore: e.expiration,
                          }))
                        )
                        .then((t) => ({
                          updatedGroup: n,
                          revokedInvites: {
                            result: "revoked_group_invites",
                            groupJid: e,
                            outgoing: !0,
                            revokes: t,
                          },
                        }))
                    );
                  }
                );
              }
              removeGroupInvitationsInTransaction(e, t) {
                return this.table.getChatAndGroupInTransaction(e).then((n) => {
                  if (!n || !n.dbGroup)
                    return (
                      __LOG__(
                        3
                      )`Tried to remove invitation from non-existent group ${e}`,
                      void SEND_LOGS("remove-group-invitations-not-exists")
                    );
                  var r = n.dbChat,
                    i = n.dbGroup,
                    a = i.participantsInfo.invitations;
                  if (a) {
                    var o = a.filter((e) => !t(e));
                    if (a.length !== o.length)
                      return (
                        (i.participantsInfo.invitations = o),
                        __LOG__(2)`${
                          a.length - o.length
                        } filtered for group ${e}`,
                        this.table
                          .setParticipantsInfo(i.participantsInfo)
                          .then(() => (0, nn.a)(r, i))
                      );
                    __LOG__(2)`No invitations to be updated. Ignoring`;
                  } else __LOG__(2)`No invitations in group. Ignoring`;
                });
              }
              revokeGroupInvites(e, t, n) {
                return (
                  __LOG__(2)`revokeGroupInvites: revoke invite for ${e}`,
                  this.table.transact(
                    "rw",
                    ["meta", "groups", "groupParticipantsInfo", "chats"],
                    () => {
                      var r;
                      if (t) {
                        var i = (0, Dt.t)(n, (e) => e.user);
                        r = this.removeGroupInvitationsInTransaction(e, (e) => {
                          var t = i[e.jid];
                          return null != t && e.expiration <= t.expiresBefore;
                        });
                      }
                      return (r || (0, Bt.e)()).then((r) =>
                        this.table
                          .revokeGroupInvitesInTransaction(e, t, n)
                          .then((n) => ({
                            updatedGroup: r,
                            revokeResult: {
                              result: "revoked_group_invites",
                              groupJid: e,
                              outgoing: t,
                              revokes: n,
                            },
                          }))
                      );
                    }
                  )
                );
              }
              updatePHashIfMatches(e, t, n) {
                return this.table.transact("rw", ["contacts"], () =>
                  this.table.stores.contacts.get(e).then((e) => {
                    if (e) {
                      var r = (0, mn.d)(e);
                      if (r.length === t.length) {
                        r.sort();
                        for (var i = t.sort(), a = 0; a < i.length; ++a)
                          if (i[a] !== r[a]) return;
                        return this.table.stores.contacts
                          .put(Object.assign({}, e, { phash: n }))
                          .then(() => {});
                      }
                    }
                  })
                );
              }
              handleDevicesInfo(e, t) {
                return this.table.transact(
                  "rw",
                  [
                    "meta",
                    "contacts",
                    "groupParticipantsInfo",
                    "msgs",
                    "chats",
                    "groups",
                  ],
                  () =>
                    (0, Bt.c)([
                      this.table.stores.meta.get(
                        hn.a.DELETE_EXPIRED_DEVICES_JOB
                      ),
                      this.table.stores.contacts.get(e),
                    ]).then((n) => {
                      var r = p()(n, 2),
                        i = r[0],
                        a = r[1],
                        o = null == i ? { lastRunTs: -1 } : i.value,
                        u = a || { jid: e };
                      return this.handleADVInTransaction(u, t, o).then((e) => {
                        var t = e.notificationMsgs,
                          n = e.updatedContact,
                          r = e.contactWasUpdated,
                          i = e.requestDeviceSync,
                          a = e.deviceVerificationWasUpdated;
                        return r || a
                          ? (r && delete n.phash,
                            this.table.stores.contacts
                              .put(n)
                              .then(() => ({
                                contactWasUpdated: r,
                                updatedContact: n,
                                notificationMsgs: t,
                                requestDeviceSync: i,
                              })))
                          : {
                              contactWasUpdated: r,
                              updatedContact: n,
                              notificationMsgs: [],
                              requestDeviceSync: i,
                            };
                      });
                    })
                );
              }
              expireContacts(e) {
                var t = [],
                  n = [];
                return this.table.transact(
                  "rw",
                  [
                    "contacts",
                    "groupParticipantsInfo",
                    "msgs",
                    "chats",
                    "groups",
                  ],
                  () => {
                    var r = e.map(
                      (e) => () =>
                        this.expireContactInTransaction(e).then((r) => {
                          var i = r.updated,
                            a = r.notificationMsgs;
                          i && t.push(e), n.push(...a);
                        })
                    );
                    return (0, Bt.f)(r).then(() => ({
                      updatedJids: t,
                      notificationMsgs: n,
                    }));
                  }
                );
              }
              expireContactInTransaction(e) {
                return this.table.stores.contacts.get(e).then((e) => {
                  var t;
                  if (null == e) return { updated: !1, notificationMsgs: [] };
                  var n = Object.assign({}, e, {
                      devices: [mn.a],
                      deviceVerification: void 0,
                      phash: void 0,
                    }),
                    r =
                      (null == (t = e.devices)
                        ? void 0
                        : t
                            .filter((e) => e.id !== x.c)
                            .map((t) => (0, R.B)(e.jid, t.id))) || [];
                  return 0 === r.length
                    ? this.table.stores.contacts
                        .put(n)
                        .then(() => ({ updated: !1, notificationMsgs: [] }))
                    : this.table
                        .userParticipantsInfo(e.jid)
                        .then((e) => {
                          var t = e.groups,
                            i = this.table.stores.groupParticipantsInfo.bulkPut(
                              t.map((e) => {
                                var t = e.participantsInfo;
                                return ln.f(t, [], r);
                              })
                            ),
                            a = this.aM(n, !1, t, 0, r.length, !1);
                          return (0, Bt.c)([a, i]);
                        })
                        .then((e) => {
                          var t = p()(e, 1)[0],
                            n = t.notificationMsgs,
                            i = t.updatedContact;
                          return this.table.stores.contacts
                            .put(i)
                            .then(() => ({
                              updated: r.length > 0,
                              notificationMsgs: n,
                            }));
                        });
                });
              }
              updateContactADVTimestamps(e, t, n, r) {
                return this.table.transact("rw", ["contacts"], () =>
                  this.table.stores.contacts.get(e).then((e) => {
                    var i = null == e ? void 0 : e.deviceVerification;
                    if (null != e && null != i) {
                      var a = Object.assign({}, e, {
                        deviceVerification: Object.assign({}, i, {
                          expectedTs: t,
                          expectedTsUpdatedTs: n,
                          deleteExpiredDeviceTs: r,
                        }),
                      });
                      return this.table.stores.contacts.put(a).then(() => {});
                    }
                  })
                );
              }
              handleADVInTransaction(e, t, n) {
                var r = t.usyncResponse
                    ? (function (e, t, n) {
                        switch (t.type) {
                          case "adv_list":
                            return (function (e, t, n, r) {
                              var i = e.deviceVerification;
                              if (i && i.timestamp > t.timestamp)
                                return gn({
                                  addedDevices: [],
                                  removedDevices: [],
                                  updatedContact: e,
                                });
                              if (!i || i.rawId !== t.rawId)
                                return gn(bn(e, t));
                              var a = !1,
                                o = !1;
                              if (
                                null != n &&
                                null != i.expectedTs &&
                                n === i.expectedTs
                              ) {
                                var u = i.deleteExpiredDeviceTs;
                                t.timestamp < i.expectedTs &&
                                  (null == u || u < r.lastRunTs) &&
                                  ((a = !0), (o = !0));
                              }
                              (null == i.expectedTs ||
                                t.timestamp >= i.expectedTs) &&
                                (o = !0);
                              var s = o ? void 0 : i.expectedTs,
                                l = o ? void 0 : i.expectedTsUpdatedTs,
                                c = o ? void 0 : i.deleteExpiredDeviceTs;
                              if (!e.devices || 0 === e.devices.length)
                                return gn(
                                  {
                                    addedDevices: [],
                                    removedDevices: [],
                                    updatedContact: Object.assign({}, e, {
                                      deviceVerification: {
                                        rawId: t.rawId,
                                        timestamp: t.timestamp,
                                        expectedTs: s,
                                        expectedTsUpdatedTs: l,
                                        deleteExpiredDeviceTs: c,
                                      },
                                    }),
                                  },
                                  a
                                );
                              var d = [],
                                f = [];
                              return (
                                e.devices.forEach((n) => {
                                  var r = n.id,
                                    i = n.index;
                                  r !== x.c
                                    ? i > t.currentIndex ||
                                      t.validIndexes.includes(i)
                                      ? f.push({ id: r, index: i })
                                      : d.push((0, R.B)(e.jid, r))
                                    : f.push({ id: r, index: i });
                                }),
                                gn(
                                  {
                                    addedDevices: [],
                                    removedDevices: d,
                                    updatedContact: Object.assign({}, e, {
                                      devices: f,
                                      deviceVerification: {
                                        rawId: t.rawId,
                                        timestamp: t.timestamp,
                                        expectedTs: s,
                                        expectedTsUpdatedTs: l,
                                        deleteExpiredDeviceTs: c,
                                      },
                                    }),
                                  },
                                  a
                                )
                              );
                            })(e, t.adv, t.expectedTs, n);
                          case "adv_list_and_devices":
                            return (function (e, t, n, r, i) {
                              var a = e.deviceVerification;
                              if (a && a.timestamp > n.timestamp)
                                return gn({
                                  addedDevices: [],
                                  removedDevices: [],
                                  updatedContact: e,
                                });
                              var o = t.filter((e) => wn(e.index, n));
                              if (!a || a.rawId !== n.rawId)
                                return gn(bn(e, n, o));
                              var u = new Map([[x.c, mn.b]]),
                                s = [],
                                l = [],
                                c = e.devices
                                  ? new Map(
                                      e.devices.map((e) => [e.id, e.index])
                                    )
                                  : new Map();
                              e.devices &&
                                e.devices.forEach((e) => {
                                  var t = e.id,
                                    r = e.index;
                                  r > n.currentIndex && u.set(t, r);
                                }),
                                o.forEach((t) => {
                                  var n = t.id,
                                    r = t.index;
                                  u.has(n) ||
                                    (u.set(n, r),
                                    c.get(n) !== r &&
                                      s.push((0, R.B)(e.jid, n)));
                                }),
                                e.devices &&
                                  e.devices.forEach((t) => {
                                    var n = t.id,
                                      r = t.index;
                                    u.get(n) !== r &&
                                      l.push((0, R.B)(e.jid, n));
                                  });
                              var d = !1,
                                f = !1;
                              if (
                                null != r &&
                                null != a.expectedTs &&
                                r === a.expectedTs
                              ) {
                                var _ = a.deleteExpiredDeviceTs;
                                n.timestamp < a.expectedTs &&
                                  (null == _ || _ < i.lastRunTs) &&
                                  ((d = !0), (f = !0));
                              }
                              (null == a.expectedTs ||
                                n.timestamp >= a.expectedTs) &&
                                (f = !0);
                              var p = f ? void 0 : a.expectedTs,
                                v = f ? void 0 : a.expectedTsUpdatedTs,
                                h = f ? void 0 : a.deleteExpiredDeviceTs;
                              return gn(
                                {
                                  addedDevices: s,
                                  removedDevices: l,
                                  updatedContact: Object.assign({}, e, {
                                    devices: On(u),
                                    deviceVerification: {
                                      rawId: n.rawId,
                                      timestamp: n.timestamp,
                                      expectedTs: p,
                                      expectedTsUpdatedTs: v,
                                      deleteExpiredDeviceTs: h,
                                    },
                                  }),
                                },
                                d
                              );
                            })(e, t.devices, t.adv, t.expectedTs, n);
                          case "primary_only":
                            return (function (e) {
                              var t = [];
                              return (
                                (0, mn.d)(e).forEach((n) => {
                                  n !== x.c && t.push((0, R.B)(e.jid, n));
                                }),
                                gn({
                                  addedDevices: [],
                                  removedDevices: t,
                                  updatedContact: Object.assign({}, e, {
                                    devices: [mn.a],
                                  }),
                                })
                              );
                            })(e);
                          case "device_added_notification":
                            return (function (e, t, n, r) {
                              var i = e.deviceVerification;
                              if (i && i.timestamp >= n.timestamp)
                                return yn(
                                  {
                                    addedDevices: [],
                                    removedDevices: [],
                                    updatedContact: e,
                                  },
                                  !1
                                );
                              var a,
                                o = i ? i.timestamp : 0,
                                u = (a =
                                  i && i.rawId === n.rawId
                                    ? (function (e, t, n) {
                                        var r = new Set([
                                            ...(0, mn.d)(e),
                                            ...t.map((e) => e.id),
                                          ]),
                                          i = [],
                                          a = [],
                                          o = new Map(),
                                          u = e.devices
                                            ? new Map(
                                                e.devices.map((e) => [
                                                  e.id,
                                                  e.index,
                                                ])
                                              )
                                            : new Map(),
                                          s = new Map(
                                            t.map((e) => [e.id, e.index])
                                          );
                                        return (
                                          r.forEach((t) => {
                                            var r = (0, R.B)(e.jid, t),
                                              l = s.get(t),
                                              c = u.get(t);
                                            (c &&
                                              !wn(c, n) &&
                                              c <= n.currentIndex &&
                                              (a.push(r),
                                              (c = null),
                                              null == l)) ||
                                              (null != c && null != l && l > c
                                                ? (a.push(r),
                                                  i.push(r),
                                                  o.set(t, l))
                                                : null == c && null != l
                                                ? (i.push(r), o.set(t, l))
                                                : c && o.set(t, c));
                                          }),
                                          {
                                            addedDevices: i,
                                            removedDevices: a,
                                            updatedContact: Object.assign(
                                              {},
                                              e,
                                              {
                                                devices: On(o),
                                                deviceVerification: {
                                                  rawId: n.rawId,
                                                  timestamp: n.timestamp,
                                                },
                                              }
                                            ),
                                          }
                                        );
                                      })(e, t, n)
                                    : bn(e, n, t)).updatedContact
                                  .deviceVerification;
                              if (!u)
                                throw (
                                  (__LOG__(
                                    4
                                  )`Expected contact to have deviceVerification info at this point`,
                                  SEND_LOGS(
                                    "adv-device-add-null-deviceverification"
                                  ),
                                  Error(
                                    "Expected contact to have deviceVerification info at this point"
                                  ))
                                );
                              u.timestamp = o;
                              var s = ee(
                                n.timestamp,
                                o,
                                null == i ? void 0 : i.expectedTs,
                                null == i ? void 0 : i.expectedTsUpdatedTs,
                                r
                              );
                              return (
                                "update" === s.type &&
                                  (a.updatedContact.deviceVerification =
                                    Object.assign({}, u, {
                                      expectedTs: s.expectedTs,
                                      expectedTsUpdatedTs:
                                        s.expectedTsUpdatedTs,
                                      deleteExpiredDeviceTs:
                                        s.expectedTsDeleteExpiredJobTs,
                                    })),
                                yn(a, "update" === s.type)
                              );
                            })(e, t.devicesToAdd, t.adv, n);
                          case "device_removed_notification":
                            return (function (e, t, n) {
                              var r = e.deviceVerification;
                              if (r && r.timestamp > n)
                                return yn(
                                  {
                                    addedDevices: [],
                                    removedDevices: [],
                                    updatedContact: e,
                                  },
                                  !1
                                );
                              var i = [],
                                a = e.devices
                                  ? new Map(
                                      e.devices.map((e) => [e.id, e.index])
                                    )
                                  : new Map();
                              t.forEach((t) => {
                                var n = t.id,
                                  r = t.index;
                                a.get(n) === r &&
                                  (i.push((0, R.B)(e.jid, n)), a.delete(n));
                              });
                              var o =
                                0 === i.length
                                  ? e
                                  : Object.assign({}, e, { devices: On(a) });
                              return yn(
                                {
                                  addedDevices: [],
                                  removedDevices: i,
                                  updatedContact: o,
                                },
                                !1
                              );
                            })(e, t.devicesToRemove, t.advTs);
                          case "adv_devices_reset":
                            return (function (e, t, n) {
                              var r = e.deviceVerification;
                              if (r && r.timestamp > n)
                                return gn({
                                  addedDevices: [],
                                  removedDevices: [],
                                  updatedContact: e,
                                });
                              var i = [];
                              return (
                                e.devices &&
                                  e.devices.forEach((t) => {
                                    var n = t.id;
                                    t.index,
                                      n !== x.c && i.push((0, R.B)(e.jid, n));
                                  }),
                                gn({
                                  addedDevices: [],
                                  removedDevices: i,
                                  updatedContact: Object.assign({}, e, {
                                    devices: [mn.a],
                                    deviceVerification: {
                                      rawId: t,
                                      timestamp: n,
                                    },
                                  }),
                                })
                              );
                            })(e, t.rawId, t.newIncomingTs);
                          default:
                            return (0, C.a)(t.type);
                        }
                      })(e, t.usyncResponse, n)
                    : (function (e, t, n) {
                        var r = t.keyIndex,
                          i = t.deviceId,
                          a = t.rawId,
                          o = t.timestamp,
                          u = e.deviceVerification;
                        if (u && u.timestamp >= o)
                          return yn(
                            {
                              addedDevices: [],
                              removedDevices: [],
                              updatedContact: e,
                            },
                            !1
                          );
                        if (u && u.rawId === a) {
                          var s = new Map();
                          if (
                            (e.devices &&
                              e.devices.forEach((e) => {
                                var t = e.id,
                                  n = e.index;
                                s.set(t, n);
                              }),
                            s.get(i) === r)
                          )
                            return yn(
                              {
                                addedDevices: [],
                                removedDevices: [],
                                updatedContact: e,
                              },
                              !1
                            );
                          var l = [],
                            c = [];
                          if (s.has(i)) {
                            var d = (0, R.B)(e.jid, i);
                            l.push(d), c.push(d), s.set(i, r);
                          } else l.push((0, R.B)(e.jid, i)), s.set(i, r);
                          var f = Object.assign({}, e, { devices: On(s) }),
                            _ = ee(
                              o,
                              u.timestamp,
                              u.expectedTs,
                              u.expectedTsUpdatedTs,
                              n
                            );
                          return (
                            "update" === _.type &&
                              (f.deviceVerification = Object.assign({}, u, {
                                expectedTs: _.expectedTs,
                                expectedTsUpdatedTs: _.expectedTsUpdatedTs,
                                deleteExpiredDeviceTs:
                                  _.expectedTsDeleteExpiredJobTs,
                              })),
                            yn(
                              {
                                addedDevices: l,
                                removedDevices: c,
                                updatedContact: f,
                              },
                              "update" === _.type
                            )
                          );
                        }
                        var p = [];
                        (0, mn.d)(e).forEach((t) => {
                          t !== x.c && p.push((0, R.B)(e.jid, t));
                        });
                        var v = null,
                          h = void 0,
                          m = void 0,
                          g = void 0;
                        if (null == u) v = 0;
                        else {
                          v = u.timestamp;
                          var y = ee(
                            o,
                            u.timestamp,
                            u.expectedTs,
                            u.expectedTsUpdatedTs,
                            n
                          );
                          "update" === y.type &&
                            ((h = y.expectedTs),
                            (m = y.expectedTsUpdatedTs),
                            (g = y.expectedTsDeleteExpiredJobTs));
                        }
                        return yn(
                          {
                            addedDevices: [(0, R.B)(e.jid, i)],
                            removedDevices: p,
                            updatedContact: Object.assign({}, e, {
                              deviceVerification: {
                                rawId: a,
                                timestamp: v,
                                expectedTs: h,
                                expectedTsUpdatedTs: m,
                                deleteExpiredDeviceTs: g,
                              },
                              devices: [mn.a, { id: i, index: r }],
                            }),
                          },
                          !0
                        );
                      })(e, t.identity, n),
                  i = r.advResult,
                  a = i.updatedContact,
                  o = i.removedDevices,
                  u = i.addedDevices,
                  s = "usync" === r.type && r.deviceVerificationFailed;
                if (o.length + u.length === 0) {
                  var l = null;
                  l = s
                    ? this.table.userParticipantsInfo(e.jid).then((e) => {
                        var n = e.groups;
                        return this.aM(
                          a,
                          t.isPkMsg || !1,
                          n,
                          u.length,
                          o.length,
                          s
                        );
                      })
                    : (0, Bt.e)({ notificationMsgs: [] });
                  var c = a.deviceVerification,
                    d = e.deviceVerification,
                    f =
                      (null == c ? void 0 : c.expectedTs) !==
                        (null == d ? void 0 : d.expectedTs) ||
                      (null == c ? void 0 : c.expectedTsUpdatedTs) !==
                        (null == d ? void 0 : d.expectedTsUpdatedTs) ||
                      (null == c ? void 0 : c.deleteExpiredDeviceTs) !==
                        (null == d ? void 0 : d.deleteExpiredDeviceTs);
                  return l.then((t) => {
                    var n = t.notificationMsgs;
                    return (0, Bt.e)({
                      notificationMsgs: n,
                      updatedContact: f ? a : e,
                      contactWasUpdated: !1,
                      deviceVerificationWasUpdated: f,
                      requestDeviceSync:
                        "device-change" === r.type && r.requestDeviceSync,
                    });
                  });
                }
                return this.table
                  .userParticipantsInfo(e.jid)
                  .then((e) => {
                    var n = e.groups,
                      r = this.table.stores.groupParticipantsInfo.bulkPut(
                        n.map((e) => {
                          var t = e.participantsInfo;
                          return ln.f(t, u, o);
                        })
                      ),
                      i = this.aM(a, t.isPkMsg || !1, n, u.length, o.length, s);
                    return (0, Bt.c)([i, r]);
                  })
                  .then((e) => {
                    var t = p()(e, 1)[0],
                      n = t.notificationMsgs;
                    return {
                      updatedContact: t.updatedContact,
                      notificationMsgs: n,
                      contactWasUpdated: !0,
                      requestDeviceSync:
                        "device-change" === r.type && r.requestDeviceSync,
                    };
                  });
              }
              aM(e, t, n, r, i, a) {
                if (!F.Q.get() || !(0, y.g)(e))
                  return (0, Bt.e)({ notificationMsgs: [], updatedContact: e });
                var o;
                if ((0, Se.a)("adv_v2_m6")) {
                  if (!a)
                    return (0, Bt.e)({
                      notificationMsgs: [],
                      updatedContact: e,
                    });
                  o = "verification-failed";
                } else if (r + i > 1) o = "coalesced";
                else if (1 === r) o = "add";
                else {
                  if (1 !== i)
                    return (0, Bt.e)({
                      notificationMsgs: [],
                      updatedContact: e,
                    });
                  o = "remove";
                }
                var u = e.jid;
                return (
                  !e.chatId && t
                    ? this.createUserChatInTransaction(u, e).then((e) => {
                        var t = p()(e, 3);
                        return t[0], [t[1], t[2]];
                      })
                    : (0, Bt.e)([e, []])
                ).then((e) => {
                  var t = p()(e, 2),
                    r = t[0],
                    i = t[1],
                    a = {
                      type: P.f.IDENTITY_CHANGE,
                      externalId: "keychange/devices/" + (0, Pn.p)(),
                      ts: (0, j.D)(),
                      author: u,
                      ack: P.a.RECEIVED,
                      altIndex: "",
                      subtype: o,
                    },
                    s = n.map((e) =>
                      "parent" !== e.groupInfo.groupType
                        ? this.addGroupSystemMsgWithResult(
                            e.groupInfo.chatId,
                            a,
                            e
                          )
                        : (0, Bt.e)(null)
                    );
                  return (
                    r.chatId &&
                      s.push(this.addSystemMsgWithResult(r.chatId, a)),
                    (0, Bt.c)(s).then((e) => ({
                      notificationMsgs: e.concat(i).filter(Boolean),
                      updatedContact: r,
                    }))
                  );
                });
              }
              getSortedCallLogs() {
                return (0, Bt.i)(this.table.getSortedCallLogs());
              }
              initializeCallLog(e, t) {
                return this.table.getOrInitializeCallLog(e, t);
              }
              createMissedCallLog(e, t) {
                return this.table.createMissedCallLog(e, t);
              }
              finalizeCallLog(e, t, n, r) {
                return this.table.finalizeCallLog(e, t, n, r);
              }
              deleteCallLogs(e) {
                return (0, Bt.i)(this.table.deleteCallLogs(e));
              }
              clearAllCallLogs() {
                return (0, Bt.i)(this.table.clearAllCallLogs());
              }
              getGroupInfoWithParticipants(e) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo"],
                  () => this.table.getGroupInfoWithParticipantsInTransaction(e)
                );
              }
              getLinkedGroupsWithParticipants(e) {
                return this.table.transact(
                  "r",
                  ["groups", "groupParticipantsInfo"],
                  () => this.table.getLinkedGroupsWithParticipants(e)
                );
              }
              getParticipantsInfo(e) {
                return this.table.transact(
                  "rw",
                  ["groupParticipantsInfo"],
                  () => this.table.getParticipantsInfoInTransaction(e)
                );
              }
              getNextExpirationTimestamp() {
                return this.table.stores.msgs
                  .orderBy("validUntil")
                  .first()
                  .then((e) => (null == e ? void 0 : e.validUntil));
              }
              getExpiredMessages() {
                return this.table.stores.msgs
                  .where("validUntil")
                  .belowOrEqual((0, j.D)())
                  .toArray()
                  .then((e) => {
                    var t = new Map();
                    return (
                      e.forEach((e) => {
                        var n = e.chat,
                          r = e.id,
                          i = t.get(n);
                        i ? i.push(r) : t.set(n, [r]);
                      }),
                      t
                    );
                  });
              }
              getNextViewOnceExpirationTimestamp() {
                return this.table.stores.msgs
                  .orderBy("viewOnceExpiration")
                  .filter((e) => (0, vn.b)(e) && "active" === e.viewOnceState)
                  .first()
                  .then((e) => (null == e ? void 0 : e.viewOnceExpiration));
              }
              deleteAllExpiredMsgsForChat(e) {
                var t = [
                  "msgs",
                  "chats",
                  "groups",
                  "groupParticipantsInfo",
                  "media",
                  "receipts",
                  "meta",
                  "previews",
                  "reactions",
                ];
                return (
                  t.push("pollUpdates"),
                  this.table.transact("rw", t, () =>
                    this.table.stores.msgs
                      .where("validUntil")
                      .belowOrEqual((0, j.D)())
                      .toArray()
                      .then((t) =>
                        t.filter((t) => t.chat === e).map((e) => e.id)
                      )
                      .then((t) => (0, Cn.c)(this, e, t))
                      .then((e) => e && e.chat)
                  )
                );
              }
              markHsmButtonPressed(e, t) {
                return this.table.transact("rw", ["msgs"], () =>
                  this.table.getMsgFromId(e).then((e) => {
                    if (e)
                      if (e.type === P.f.RICH_HSM) {
                        var n = e.buttons;
                        if (null != n)
                          if (t < 0 || t > n.length)
                            __LOG__(
                              3
                            )`markHsmButtonPressed called with button index that is out of range of the stored buttons array`;
                          else {
                            if (n[t].type === P.d.QUICK_REPLY) {
                              var r = Object.assign({}, n[t], { pressed: !0 }),
                                i = [...n];
                              i[t] = r;
                              var a = Object.assign({}, e, { buttons: i });
                              return this.table.stores.msgs
                                .put(a)
                                .then(() => (0, cn.c)(a));
                            }
                            __LOG__(
                              3
                            )`markHsmButtonPressed called for a button that is not of a quick reply type`;
                          }
                        else
                          __LOG__(
                            3
                          )`markHsmButtonPressed called for a rich HSM with no buttons defined`;
                      } else
                        __LOG__(
                          3
                        )`markHsmButtonPressed called for a non rich HSM`;
                    else
                      __LOG__(
                        3
                      )`markHsmButtonPressed called for a non existing message`;
                  })
                );
              }
              setChatWallpaper(e, t) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "chats"],
                  () =>
                    this.table.stores.chats.get(e).then((n) => {
                      if (!n)
                        return (
                          __LOG__(2)`setChatWallpaper chat ${e} does not exist`,
                          null
                        );
                      var r = (0, Dt.j)(n, t),
                        i = (0, R.p)(r.jid),
                        a = i
                          ? this.table.getGroupInfoWithParticipantsInTransaction(
                              i
                            )
                          : null;
                      return (0, Bt.c)([a, this.table.updateChat(r)]).then(
                        (e) => {
                          var t = p()(e, 1)[0];
                          return {
                            result: "updated_chat",
                            chat: (0, nn.a)(r, t),
                          };
                        }
                      );
                    })
                );
              }
              resetWallpaperInAllChats() {
                var e = [];
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "chats"],
                  () =>
                    this.table.stores.chats
                      .toCollection()
                      .filter((e) => !!e.chatBackgroundSettings)
                      .modify((t) => {
                        (t.chatBackgroundSettings = void 0), e.push(t.id);
                      })
                      .then(() =>
                        0 === e.length
                          ? []
                          : (0, Bt.c)(
                              e.map((e) =>
                                this.table
                                  .getChatInTransaction(e)
                                  .then(
                                    (e) =>
                                      e &&
                                      this.table.getChatAndGroupInTransaction(
                                        e.jid
                                      )
                                  )
                              )
                            ).then((e) =>
                              e
                                ? e.reduce((e, t) => {
                                    if (!t)
                                      return (
                                        __LOG__(
                                          4
                                        )`One of previously modified chats have not been found`,
                                        e
                                      );
                                    var n = t.dbChat,
                                      r = t.dbGroup;
                                    return e.push((0, nn.a)(n, r)), e;
                                  }, [])
                                : (__LOG__(
                                    4
                                  )`None of previously modified chats have been found`,
                                  [])
                            )
                      )
                );
              }
              getRecentEmojis() {
                return (0, Bt.i)(
                  this.table.stores.meta
                    .get(hn.a.RECENT_EMOJIS)
                    .then((e) => (null == e ? void 0 : e.value))
                );
              }
              setRecentEmojis(e) {
                return (0, Bt.i)(
                  this.table.stores.meta
                    .put({ key: hn.a.RECENT_EMOJIS, value: e })
                    .then(() => e)
                );
              }
              aN(e) {
                var t = {
                  ack: e.ack,
                  altIndex: e.altIndex,
                  ts: e.ts,
                  author: e.author,
                  externalId: e.externalId,
                  urlText: e.urlText,
                };
                null != e.deviceId && (t.deviceId = e.deviceId),
                  null != e.urlNumber && (t.urlNumber = e.urlNumber);
                var n = (0, S.a)(I.h, e.protobuf).documentMessage,
                  r = n ? (0, k.e)(n, t) : void 0,
                  i = e.rowId,
                  a = e.id,
                  o = e.chat;
                if (null == r)
                  return (0, Cn.c)(this, o, [a]).then((e) => {
                    if (null != e) {
                      var t = e.chat,
                        n = e.msgIds.find((e) => e === a);
                      return null == n
                        ? (__LOG__(4)`Message was not deleted!`,
                          void SEND_LOGS(
                            "convert-futureproof-document-delete-error"
                          ))
                        : { type: "deleted", msgId: n, chat: t };
                    }
                  });
                var u = r.msg,
                  s = r.media;
                if (u.type !== P.f.DOCUMENT)
                  throw new Error("makeMedia created non-document message!");
                var l =
                  (u.isVCard,
                  Object.assign({}, u, { rowId: i, id: a, chat: o }));
                return fn.v(this.table.stores, a, l, s).then((e) => {
                  var t = e.toStore;
                  return this.table.stores.msgs.put(t).then(() =>
                    this.table
                      .getChatInTransaction(o)
                      .then(
                        (e) =>
                          e && this.table.getChatAndGroupInTransaction(e.jid)
                      )
                      .then((e) => {
                        if (null != e) {
                          var n = e.dbChat,
                            r = e.dbGroup;
                          return (
                            (0, tn.maybeMutateChatMsgPreview)(n, t)
                              ? this.table.updateChat(n)
                              : (0, Bt.e)()
                          ).then(() => ({
                            type: "updated",
                            msg: (0, cn.c)(t),
                            recent: !1,
                            chat: (0, nn.a)(n, r),
                          }));
                        }
                        __LOG__(
                          4
                        )`Tried to convert message in an non-existing chat!`;
                      })
                  );
                });
              }
              convertFutureproofMessage(e) {
                var t = [
                  "groups",
                  "groupParticipantsInfo",
                  "chats",
                  "msgs",
                  "receipts",
                  "media",
                  "previews",
                  "reactions",
                ];
                return (
                  t.push("pollUpdates"),
                  this.table.transact("rw", t, () =>
                    this.table.getMsgFromId(e).then((e) => {
                      if (null != e)
                        if (e.type === P.f.FUTUREPROOF)
                          switch (e.subtype) {
                            case "document":
                              return this.aN(e);
                            default:
                              return (
                                __LOG__(
                                  4
                                )`Tried to convert a futureproof message that cannot be converted (subtype: ${e.subtype})!`,
                                void SEND_LOGS(
                                  "tried-convert-wrong-futureproof"
                                )
                              );
                          }
                        else
                          __LOG__(
                            3
                          )`Tried to convert non-futureproof message type ${e.type}!`;
                      else __LOG__(3)`Tried to convert non-existing message!`;
                    })
                  )
                );
              }
              recomputeSuspiciousCharacters(e) {
                return this.table.transact(
                  "rw",
                  ["groups", "groupParticipantsInfo", "chats", "msgs"],
                  () =>
                    this.table.getMsgFromId(e).then((e) => {
                      if (null != e)
                        if (e.type === P.f.TEXT) {
                          var t = e.linkPreview;
                          if (t) {
                            var n = Kt.i(e.author),
                              r =
                                null != n
                                  ? (0, pn.a)(t.matchedText, n, F.t.get(), [
                                      (0, dn.d)().lg,
                                    ])
                                  : null,
                              i = Object.assign({}, e, {
                                linkPreview: Object.assign({}, t, {
                                  suspiciousCharacters: r,
                                }),
                              });
                            return this.table.stores.msgs.put(i).then(() => {
                              var e = i.chat;
                              return this.table
                                .getChatInTransaction(e)
                                .then(
                                  (e) =>
                                    e &&
                                    this.table.getChatAndGroupInTransaction(
                                      e.jid
                                    )
                                )
                                .then((e) => {
                                  if (null != e) {
                                    var t = e.dbChat,
                                      n = e.dbGroup;
                                    return {
                                      type: "updated",
                                      chat: (0, nn.a)(t, n),
                                      msg: (0, cn.c)(i),
                                      recent: !1,
                                    };
                                  }
                                  __LOG__(
                                    4
                                  )`Tried to convert message in an non-existing chat!`;
                                });
                            });
                          }
                          __LOG__(
                            4
                          )`Tried to recompute suspicious characters in a text message with no link preview!`;
                        } else
                          __LOG__(
                            4
                          )`Tried to recompute suspicious characters in a message of type ${e.type}!`;
                      else
                        __LOG__(
                          3
                        )`Tried to recompute suspicious characters in an non-existing message!`;
                    })
                );
              }
              getRecipientsForMsgId(e) {
                return this.table.transact(
                  "rw",
                  ["groupParticipantsInfo", "contacts", "chats"],
                  () => {
                    var t = (0, Ct.v)(e);
                    return (0, en.k)(this.table.stores, t).then((e) =>
                      e ? (0, en.u)(this.table.stores, e.jid) : null
                    );
                  }
                );
              }
              getRecipientsForJid(e) {
                return this.table.transact(
                  "rw",
                  ["groupParticipantsInfo", "contacts"],
                  () => (0, en.u)(this.table.stores, e)
                );
              }
              updateDeleteExpiredDevicesJobInfo(e) {
                return (0, Bt.i)(
                  this.table.stores.meta
                    .put({ key: hn.a.DELETE_EXPIRED_DEVICES_JOB, value: e })
                    .then(() => {})
                );
              }
              getDeleteExpiredDevicesJobInfo() {
                return (0, Bt.i)(
                  this.table.stores.meta
                    .get(hn.a.DELETE_EXPIRED_DEVICES_JOB)
                    .then((e) => (null == e ? { lastRunTs: -1 } : e.value))
                );
              }
              putDbUserNotice(e) {
                return this.table.stores.meta
                  .put({ key: hn.a.USER_NOTICE, value: e })
                  .then(() => {});
              }
              deleteDbUserNotice() {
                return this.table.stores.meta.delete(hn.a.USER_NOTICE);
              }
              updateCurrentUserNotice(e) {
                var t = ["meta"];
                return F.n.set(!0).then(() =>
                  this.table
                    .transact("rw", t, () =>
                      this.table.getDbUserNotice().then((t) => {
                        var n = t,
                          r = !1;
                        if (n) {
                          var i = n.id,
                            a = e.find((e) => e.id === i);
                          if (a && a.state !== Ct.q.EXPIRED) {
                            if (a.state > n.currentState)
                              n = Object.assign({}, n, {
                                currentState: a.state,
                                transitionTs: a.ts,
                              });
                            else if (n.currentState === Ct.q.EXPIRED)
                              return (
                                __LOG__(
                                  2
                                )`updateCurrentUserNotice: current user notice in accept state. will try resending acceptance IQ. id:${i}`,
                                {
                                  id: a.id,
                                  needsSendAccept: { version: a.version },
                                  needsDownload: !1,
                                }
                              );
                            if (n.content) {
                              var o = n.content,
                                u = o.lglc,
                                s = o.version,
                                l = u.lg,
                                c = u.lc,
                                d = (0, dn.d)(),
                                f = d.lg,
                                _ = d.lc;
                              s < a.version
                                ? ((r = !0),
                                  __LOG__(
                                    2
                                  )`updateCurrentUserNotice: old version content detected ${s}, will download ${a.version}`)
                                : (l === f && c === _) ||
                                  (__LOG__(
                                    2
                                  )`updateCurrentUserNotice: content in old language detected ${l}-${c}, will download ${f}-${_}`,
                                  (r = !0));
                            } else r = !0;
                          } else {
                            var p = a ? "expired-in-ib" : "not-in-ib";
                            __LOG__(
                              2
                            )`updateCurrentUserNotice: will delete current user notice. id:${i} reason:${p}`,
                              (n = null);
                          }
                        }
                        if (null == n) {
                          var v = e
                            .filter((e) => e.state !== Ct.q.EXPIRED)
                            .map((e) => e.id);
                          if (v.length > 0) {
                            var h = Math.min(...v),
                              m = e.find((e) => e.id === h);
                            m &&
                              (__LOG__(
                                2
                              )`updateCurrentUserNotice: choosing new user notice ${m.id} to be the current user notice`,
                              (n = {
                                id: m.id,
                                currentState: m.state,
                                transitionTs: m.ts,
                              }),
                              (r = !0));
                          }
                        }
                        if (null != n) {
                          var g = n.id;
                          return this.putDbUserNotice(n).then(() => ({
                            id: g,
                            needsDownload: r,
                          }));
                        }
                        return this.deleteDbUserNotice();
                      })
                    )
                    .then((e) => F.n.set(null !== e).then(() => e))
                );
              }
              updateContentForUserNotice(e, t) {
                return this.table.transact("rw", ["meta"], () =>
                  this.table.getDbUserNotice().then((n) => {
                    if (n) {
                      if (n.id === e) {
                        var r = n.currentState,
                          i = n.transitionTs,
                          a = n.showCount,
                          o = n.snoozed,
                          u = n.timeLastShown;
                        if (
                          (r === Ct.q.TRIGGERED &&
                            ((r = Ct.q.FETCHED), (i = (0, j.D)())),
                          (function (e) {
                            switch (e) {
                              case En:
                              case In:
                              case Gn:
                                return !1;
                              case Sn:
                              case kn:
                              case Ln:
                                return !0;
                              default:
                                return (
                                  __LOG__(
                                    4
                                  )`isUIUserNoticeState: unknown state ${e}`,
                                  !1
                                );
                            }
                          })(r))
                        ) {
                          var s,
                            l = An(t, n.currentState);
                          if (!l)
                            return (
                              __LOG__(
                                4
                              )`updateContentForUserNotice: Current UI state ${r} does not have a timing object`,
                              void SEND_LOGS(
                                "user-notice-content-update-no-timing"
                              )
                            );
                          (null == (s = l.duration) ? void 0 : s.repeat) ||
                            ((a = void 0), (o = void 0), (u = void 0));
                        }
                        var c = Object.assign({}, n, {
                          content: t,
                          currentState: r,
                          transitionTs: i,
                          showCount: a,
                          snoozed: o,
                          timeLastShown: u,
                        });
                        return this.putDbUserNotice(c).then(() => c);
                      }
                      __LOG__(
                        3
                      )`Tried to update content for non-existing user notice with id ${e}`;
                    } else
                      __LOG__(4)`Could not get user notice from meta table`;
                  })
                );
              }
              getDbUserNotice() {
                return this.table.transact("r", ["meta"], () =>
                  this.table.getDbUserNotice()
                );
              }
              logUserNoticeDisplayed(e, t) {
                return this.table.transact("rw", ["meta"], () =>
                  this.table.getDbUserNotice().then((n) => {
                    var r;
                    if (n) {
                      if (n.id !== e)
                        return (
                          __LOG__(
                            3
                          )`Attempted to log user notice display for ${e} that does not exist in storage`,
                          void SEND_LOGS("log-notice-display-not-exists")
                        );
                      if (!n.content)
                        return (
                          __LOG__(
                            4
                          )`Attempted to log user notice display that has no content`,
                          void SEND_LOGS("log-notice-display-no-content")
                        );
                      if (n.snoozed)
                        __LOG__(
                          2
                        )`Attempted to log user notice display that has has been snoozed`;
                      else {
                        if (n.currentState >= Ct.q.EXPIRED)
                          return (
                            __LOG__(
                              4
                            )`Attempted to log user notice display for expired notice`,
                            void SEND_LOGS("log-notice-display-expired")
                          );
                        var i = An(n.content, n.currentState);
                        if (
                          i &&
                          (null == i || null == (r = i.duration)
                            ? void 0
                            : r.repeat)
                        ) {
                          var a = (n.showCount || 0) + 1,
                            o = Object.assign({}, n, {
                              showCount: a,
                              timeLastShown: t,
                              snoozed: !0,
                            });
                          return (
                            __LOG__(
                              2
                            )`timeTransitionUserNotice: notice with id: "${n.id}" is snoozed. showCount is: ${a}"`,
                            this.putDbUserNotice(o).then(() => o)
                          );
                        }
                        __LOG__(
                          3
                        )`Attempted to log notice display when current state has no "repeat" timing`;
                      }
                    } else
                      __LOG__(4)`Could not get user notice from meta table`;
                  })
                );
              }
              acceptUserNotice(e, t, n, r) {
                return this.table.transact("rw", ["meta"], () =>
                  this.table.getDbUserNotice().then((t) => {
                    if (!t)
                      return (
                        __LOG__(4)`Could not get user notice from meta table`,
                        !1
                      );
                    if (t.id !== e)
                      return (
                        __LOG__(
                          4
                        )`Attempted to accept a user notice that does not exist"`,
                        SEND_LOGS("accept-notice-not-exists"),
                        !1
                      );
                    if (!t.content)
                      return (
                        __LOG__(
                          4
                        )`Attempted to accept user notice that has no content`,
                        SEND_LOGS("accept-notice-no-content"),
                        !1
                      );
                    var i = t.currentState,
                      a = t.content;
                    if (i >= Ct.q.EXPIRED)
                      return (
                        __LOG__(4)`Attempted to accept expired user notice`,
                        SEND_LOGS("accept-expired-notice"),
                        !1
                      );
                    var o = null;
                    "non-blocking-modal" === r
                      ? (o = 6)
                      : "blocking-modal" === r && (o = 9);
                    var u = Object.assign({}, t, {
                      currentState: Ct.q.EXPIRED,
                      transitionTs: n,
                      snoozed: void 0,
                      showCount: void 0,
                      timeLastShown: void 0,
                    });
                    return this.putDbUserNotice(u).then(() => {
                      var t = a.version;
                      return (
                        o &&
                          WAM.log("regular", 2472, void 0, [
                            3,
                            0,
                            o,
                            1,
                            0,
                            e,
                            2,
                            0,
                            t,
                          ]),
                        !0
                      );
                    });
                  })
                );
              }
              purgeUserNotice(e) {
                return this.table
                  .transact("rw", ["meta"], () =>
                    this.table
                      .getDbUserNotice()
                      .then((t) =>
                        t
                          ? t.id !== e
                            ? (__LOG__(
                                3
                              )`purgeUserNotice: Tried to purge user notice ${t.id} when there is a different notice ${e} in storage`,
                              !0)
                            : this.deleteDbUserNotice().then(() => !1)
                          : (__LOG__(
                              2
                            )`purgeUserNotice: Tried to delete ${e} but there is no user notice to delete`,
                            !1)
                      )
                  )
                  .then((e) => F.n.set(e))
                  .then(() => {});
              }
              updateStaleUserNotice(e, t, n) {
                return this.table.transact("rw", ["meta"], () =>
                  this.table.getDbUserNotice().then((r) => {
                    if (r) {
                      if (r.id !== e)
                        return (
                          __LOG__(
                            4
                          )`updateStaleUserNotice: Attempted to update state for user notice that does not exist"`,
                          void SEND_LOGS("update-stale-user-notice-not-exist")
                        );
                      if (r.currentState >= t)
                        __LOG__(
                          3
                        )`updateStaleUserNotice: Tried to update user notice state to a previous state`;
                      else {
                        if (!(0, j.o)(n)) {
                          var i = Object.assign({}, r, {
                            currentState: t,
                            transitionTs: n,
                          });
                          return this.putDbUserNotice(i);
                        }
                        __LOG__(
                          3
                        )`updateStaleUserNotice: Tried to update user notice state to a time in the future`;
                      }
                    } else
                      __LOG__(
                        4
                      )`updateStaleUserNotice: Could not get user notice from meta table`;
                  })
                );
              }
              timeTransitionUserNotice() {
                return (
                  __LOG__(
                    2
                  )`timeTransitionUserNotice: checking if current user notice needs to change state via their timing object"`,
                  this.table.transact("rw", ["meta"], () =>
                    this.table.getDbUserNotice().then((e) => {
                      if (e) {
                        var t = void 0,
                          n = (function (e) {
                            var t,
                              n,
                              r,
                              i,
                              a = e.content;
                            if (a) {
                              for (
                                var o = a.banner,
                                  u = a.nonBlockingModal,
                                  s = a.blockingModal,
                                  l = e.currentState,
                                  c = (function (e, t) {
                                    var n = [];
                                    if (e === In && t.length > 0) {
                                      var r = t[0],
                                        i = r.state;
                                      null == r.timing.start &&
                                        n.push({
                                          state: i,
                                          type: "start",
                                          time: (0, j.D)(),
                                        });
                                    }
                                    return (
                                      t.forEach((t) => {
                                        var r = t.state,
                                          i = t.timing;
                                        r > e &&
                                          i.start &&
                                          n.push({
                                            state: r,
                                            type: "start",
                                            time: i.start.time,
                                          }),
                                          r >= e &&
                                            i.end &&
                                            n.push({
                                              state: r,
                                              type: "end",
                                              time: i.end.time,
                                            });
                                      }),
                                      n
                                    );
                                  })(
                                    l,
                                    [
                                      (null == o ? void 0 : o.timing) && {
                                        state: Sn,
                                        timing: null == o ? void 0 : o.timing,
                                      },
                                      (null == u ? void 0 : u.timing) && {
                                        state: kn,
                                        timing: null == u ? void 0 : u.timing,
                                      },
                                      (null == s ? void 0 : s.timing) && {
                                        state: Ln,
                                        timing: null == s ? void 0 : s.timing,
                                      },
                                    ].filter(Boolean)
                                  ),
                                  d = null,
                                  f = c.length - 1;
                                f >= 0;
                                f--
                              ) {
                                var _ = c[f];
                                if (!(0, j.o)(_.time)) {
                                  d = _;
                                  break;
                                }
                              }
                              if (d) {
                                var p = d,
                                  v = p.type,
                                  h = p.state;
                                return "start" === v
                                  ? {
                                      nextState: h,
                                      reason:
                                        "future-state-timing-start-elapsed",
                                    }
                                  : {
                                      nextState: Mn(h, a),
                                      reason: "future-state-timing-end-elapsed",
                                    };
                              }
                              var m = An(a, l),
                                g = Mn(l, a),
                                y = An(a, g);
                              if (
                                null == y || null == (t = y.start)
                                  ? void 0
                                  : t.time
                              )
                                return (0, j.o)(y.start.time)
                                  ? void __LOG__(
                                      2
                                    )`maybeTimeTransitionNotice: Waiting for start time to elapse at time ${y.start.time}`
                                  : {
                                      nextState: g,
                                      reason: "next-state-timing-start-elapsed",
                                    };
                              if (
                                null == m || null == (n = m.end)
                                  ? void 0
                                  : n.time
                              )
                                return (0, j.o)(m.end.time)
                                  ? void __LOG__(
                                      2
                                    )`maybeTimeTransitionNotice: Waiting for end time to elapse at time ${m.end.time}`
                                  : {
                                      nextState: g,
                                      reason:
                                        "current-state-timing-end-elapsed",
                                    };
                              if (
                                null == m || null == (r = m.duration)
                                  ? void 0
                                  : r.static
                              ) {
                                var b = (0, j.i)(
                                  e.transitionTs + j.d * m.duration.static
                                );
                                return (0, j.o)(b)
                                  ? void __LOG__(
                                      2
                                    )`maybeTimeTransitionNotice: Waiting for static duration to elapse at time ${b}`
                                  : {
                                      nextState: g,
                                      reason:
                                        "current-state-timing-duration-elapsed",
                                    };
                              }
                              if (
                                null == m || null == (i = m.duration)
                                  ? void 0
                                  : i.repeat
                              ) {
                                var w = m.duration.repeat,
                                  O = e.showCount,
                                  E = e.timeLastShown,
                                  I = e.snoozed;
                                if (null == O || null == I || null == E)
                                  return void __LOG__(
                                    2
                                  )`maybeTimeTransitionNotice: repeat timing but storage missing repeat properties`;
                                if (O > w.length)
                                  return (
                                    __LOG__(
                                      3
                                    )`maybeTimeTransitionNotice: showCount was greater than number of elements in in "repeat" timing`,
                                    {
                                      nextState: g,
                                      reason:
                                        "current-state-timing-repeat-final-complete",
                                    }
                                  );
                                var S = (0, j.i)(E + j.d * w[O - 1]);
                                if (!(0, j.o)(S) && O === w.length)
                                  return {
                                    nextState: g,
                                    reason:
                                      "current-state-timing-repeat-final-complete",
                                  };
                                __LOG__(
                                  2
                                )`maybeTimeTransitionNotice: Waiting for next repeat event at time ${S}`;
                              }
                            } else
                              __LOG__(
                                2
                              )`maybeTimeTransitionNotice: no time transition because there is no content (and hence no timings)`;
                          })(e);
                        if (n)
                          __LOG__(
                            2
                          )`timeTransitionUserNotice: notice with id: "${e.id}" time transition: "${e.currentState}" -> "${n.nextState}", reason: "${n.reason}"`,
                            (t = Object.assign({}, e, {
                              currentState: n.nextState,
                              transitionTs: (0, j.D)(),
                              snoozed: void 0,
                              showCount: void 0,
                              timeLastShown: void 0,
                            }));
                        else {
                          if (
                            !(function (e) {
                              var t,
                                n = e.currentState;
                              if (!e.content) return !1;
                              var r = An(e.content, n);
                              if (
                                !(null == r || null == (t = r.duration)
                                  ? void 0
                                  : t.repeat)
                              )
                                return !1;
                              var i = r.duration.repeat,
                                a = e.showCount,
                                o = e.timeLastShown,
                                u = e.snoozed;
                              if (
                                "number" != typeof a ||
                                "boolean" != typeof u ||
                                !o
                              )
                                return !1;
                              if (!1 === u || a <= 0 || a >= i.length)
                                return !1;
                              var s = (0, j.i)(o + j.d * i[a - 1]);
                              return !(0, j.o)(s);
                            })(e)
                          )
                            return void __LOG__(
                              2
                            )`timeTransitionUserNotice: nothing to do right now (no time transition or unsnoozing needed)`;
                          __LOG__(
                            2
                          )`timeTransitionUserNotice: notice with id: "${e.id}" is being unsnoozed`,
                            (t = Object.assign({}, e, { snoozed: !1 }));
                        }
                        if (t) {
                          var r,
                            i = {
                              id: t.id,
                              state: t.currentState,
                              version:
                                null == (r = t.content) ? void 0 : r.version,
                            };
                          return this.putDbUserNotice(t).then(() => i);
                        }
                      } else __LOG__(2)`No user notice to time transition`;
                    })
                  )
                );
              }
              aO(e) {
                return (
                  __LOG__(
                    3
                  )`manuallyAdvanceUserNoticeToNextState: Only available during development`,
                  Promise.resolve()
                );
              }
              manuallyAdvanceUserNoticeToState(e) {
                return this.aO(e);
              }
              manuallyAdvanceUserNoticeToNextState() {
                return this.aO();
              }
              manuallySetUserNoticeTiming(e, t) {
                return (
                  __LOG__(
                    3
                  )`manuallySetUserNoticeTiming: Only available during development`,
                  Promise.resolve()
                );
              }
              manuallyUnsnoozeUserNotice() {
                return (
                  __LOG__(
                    3
                  )`manuallyUnsnoozeUserNotice: Only available during development`,
                  Promise.resolve()
                );
              }
              manuallyAddDebugUserNotice(e) {
                return (
                  __LOG__(
                    3
                  )`manuallyAddDebugUserNotice: Only available during development`,
                  Promise.resolve()
                );
              }
              manuallyAddDebugUserNoticeWithContent(e) {
                var t = Ct.q.FETCHED;
                return (
                  null != e.banner
                    ? (t = Ct.q.BANNER_SHOW)
                    : null != e.nonBlockingModal
                    ? (t = Ct.q.NON_BLOCKING_MODAL_SHOW)
                    : null != e.blockingModal && (t = Ct.q.BLOCKING_MODAL_SHOW),
                  this.manuallyAddDebugUserNotice({
                    id: 1234,
                    transitionTs: (0, j.D)(),
                    currentState: t,
                    content: e,
                  })
                );
              }
              manuallyPurgeUserNotice() {
                return (
                  __LOG__(
                    3
                  )`manuallyPurgeUserNotice: Only available during development`,
                  Promise.resolve()
                );
              }
            }
          );
        ei(e), (0, u.M)();
        var h = Yr({
          onConnectionChange: (t) => {
            "in_handshake" === t
              ? v.then(() => {
                  _("socket-connection");
                })
              : (0, Ie.d)()
              ? "connected" === t
                ? e.fireAndForget("event", "commsConnected", {})
                : e.fireAndForget("event", "commsDisconnected", {})
              : (0, Mt.jobsTable)()
                  .checkAppRunId()
                  .then((e) => {
                    e && (0, Ie.j)();
                  }),
              (0, Ie.d)() && (0, Mt.jobsTable)().updateAppRunId();
          },
          onOptimisticConnectionChange: (e) => {},
          onClockSkewUpdate: (e) => {
            (0, Zr.updateClockSkew)(e);
          },
        });
        (0, r.l)(Ee, h, Jt.b);
        var m = () => (
          _("bridge-call"),
          (function (e) {
            e.setHandlers("voip", {
              startVoipCall: (e) => {
                return (
                  (t = e.jid),
                  (n = e.uiContext),
                  void It.enqueue(() => (0, l.a)()).then((e) => {
                    "idle" === e
                      ? s.p(t, n)
                      : __LOG__(
                          2
                        )`startVoipCall called while a POTS call is ongoing (${e})`;
                  })
                );
                var t, n;
              },
              acceptVoipCall() {
                It.enqueue(() => (0, l.a)()).then((e) => {
                  "idle" === e
                    ? s.a()
                    : __LOG__(
                        2
                      )`acceptVoipCall called while a POTS call is ongoing (${e})`;
                });
              },
              rejectVoipCall() {
                St().then(() => s.l());
              },
              endVoipCall() {
                St().then(() => s.b(!0));
              },
              muteVoipCall: (e) => {
                return (t = e.shouldMute), void St().then(() => s.k(t));
                var t;
              },
              interruptVoipCall: (e) => {
                return (t = e.shouldInterrupt), void St().then(() => s.i(t));
                var t;
              },
              updateVoipCallDuration() {
                s.d().then((e) => {
                  "evicted" !== e &&
                    (null == e
                      ? (0, Ie.c)("event", "callEnded", {})
                      : (0, Ie.c)("event", "callDurationChanged", {
                          duration: e.audioDuration,
                        }));
                });
              },
              updateCallNetworkMedium(e) {
                var t;
                (t = e.type), St().then(() => s.q(t));
              },
              voipCallFailed() {},
              voipConnectionAttempted: () => (0, s.r)(),
            }),
              e.setHandlers("backend", {
                networkConnected() {
                  __LOG__(
                    2
                  )`Internet connection established, trying to reconnect to whatsapp`,
                    (0, r.i)();
                },
                createChat(e) {
                  var t = e.jid;
                  return a.i(t).then((e) => ({ chatId: e }));
                },
                runJob(e) {
                  var t = e.jobId;
                  return (0, D.c)(t);
                },
                clearUiJobStatus(e) {
                  var t = e.jobId;
                  (0, D.a)(t);
                },
                muteChat(e) {
                  var t = e.chatId,
                    n = e.mutedUntil;
                  a.Lb(t, n);
                },
                muteAuthor(e) {
                  var t = e.authorJid;
                  a.Kb(t);
                },
                unmuteAuthor(e) {
                  var t = e.authorJid;
                  a.wc(t);
                },
                setChatArchivedState(e) {
                  var t = e.chatId,
                    n = e.archived;
                  a.fc(t, n);
                },
                markChatAsUnread(e) {
                  var t = e.chatId;
                  a.Bb(t);
                },
                removeChatUnreadMark(e) {
                  var t = e.chatId;
                  a.Sb(t);
                },
                sendChatState(e) {
                  (function (e, t) {
                    var n;
                    switch (t) {
                      case "idle":
                        n = (0, c.w)("paused", null);
                        break;
                      case "typing":
                        n = (0, c.w)("composing", null);
                        break;
                      case "recording_audio":
                        n = (0, c.w)("composing", { media: "audio" });
                        break;
                      default:
                        return (0, C.a)(t);
                    }
                    (0, r.a)((0, c.w)("chatstate", { to: (0, c.g)(e) }, n));
                  })(e.jid, e.type);
                },
                sendPresenceSubscription: (e) =>
                  (function (e) {
                    var t = (0, R.q)(e);
                    if (t && (0, Se.a)("trusted_contacts"))
                      return (0, ke.e)(t).then((n) => {
                        var r = n.dbContact,
                          i = n.receivedToken,
                          a = n.senderTokenTs;
                        (0, Se.a)("trusted_contacts_reciprocity")
                          ? (a || (r && ((0, Le.i)(r) || (0, y.e)(r)))) &&
                            Ge(t, i)
                          : Ge(e, i);
                      });
                    Ge(e);
                  })(e.jid),
                sendPresenceStatus(e) {
                  var t;
                  (t = e.type), (0, r.a)((0, c.w)("presence", { type: t }));
                },
                runDebugMethod(e) {
                  var t = e.name,
                    n = e.args;
                  return self.Debug[t].apply(null, n);
                },
                loadMsgRange(e) {
                  var t = e.chatId,
                    n = e.anchor,
                    r = e.range;
                  return a.tb(t, n, r);
                },
                doesMsgExist(e) {
                  var t = e.msgId;
                  return a.o(t);
                },
                loadFullsizeAvatar(e) {
                  var t;
                  (t = e.jid),
                    (0, Ye.getProfilePicTable)()
                      .getThumb(t)
                      .then((e) =>
                        e && e.dontRetryBefore && (0, j.o)(e.dontRetryBefore)
                          ? null
                          : (0, r.b)(
                              (function (e) {
                                return (0, c.w)(
                                  "iq",
                                  {
                                    to: c.l,
                                    target: (0, c.g)(e),
                                    type: "get",
                                    xmlns: "w:profile:picture",
                                    id: (0, c.u)(),
                                  },
                                  (0, c.w)("picture", {
                                    type: "image",
                                    query: "url",
                                  })
                                );
                              })(t),
                              tt
                            )
                              .then((n) => {
                                if (!n.success)
                                  switch (n.errorCode) {
                                    case 401:
                                      return (
                                        __LOG__(
                                          2
                                        )`getProfilePic for ${t}: Not authorized`,
                                        (0, R.p)(t)
                                          ? (0, Ye.getProfilePicTable)()
                                              .refreshLastUpdated(t)
                                              .then(() => null)
                                          : rt(t)
                                      );
                                    case 404:
                                    case 406:
                                      return rt(t);
                                    case 429:
                                    case 500:
                                    case 501:
                                    case 503:
                                      return (
                                        __LOG__(
                                          2
                                        )`getFullsizeAvatar error ${t}: Do not retry`,
                                        e
                                          ? (0, Ye.getProfilePicTable)()
                                              .setDontRetryBefore(
                                                t,
                                                (0, j.k)(j.d)
                                              )
                                              .then(() => null)
                                          : (0, Ye.getProfilePicTable)()
                                              .storeEmptyThumb(t, (0, j.k)(j.d))
                                              .then(() => null)
                                      );
                                    default:
                                      throw new Error(
                                        `Failed to get profile picture: ${n.errorCode} ${n.errorText}`
                                      );
                                  }
                                var r = n.result;
                                if (304 === r.code)
                                  return (
                                    __LOG__(
                                      4
                                    )`getFullsizeAvatar: code 304 received when we shouldn't`,
                                    null
                                  );
                                var i = {
                                  jid: t,
                                  avatar: { url: r.url, photoId: r.id },
                                };
                                return e && r.id !== e.photoId
                                  ? (0, Ye.getProfilePicTable)()
                                      .clearRecord(t)
                                      .then(() => {
                                        (0, Ie.c)("event", "avatarsUpdated", {
                                          cleared: [t],
                                        });
                                      })
                                      .then(() => i)
                                  : i;
                              })
                              .then((e) => {
                                null != e &&
                                  (0, Ie.c)("event", "fullsizeAvatarLoaded", {
                                    jid: e.jid,
                                    avatar: e.avatar,
                                  });
                              })
                      );
                },
                loadFullsizeAvatarV2(e) {
                  (function (e) {
                    dt.apply(this, arguments);
                  })(e.jid);
                },
                markMediaContentAsDeleted(e) {
                  var t = e.msgId;
                  return a.Fb(t);
                },
                getRecentGifs: () => (0, o.j)(),
                getFavoriteGifs(e) {
                  var t = e.fromId,
                    n = e.limit;
                  return (0, o.h)(t, n);
                },
                isFavoriteGif(e) {
                  var t = e.plaintextHash;
                  return (0, o.m)(t);
                },
                isFavoriteGifFromId(e) {
                  var t = e.gifAttribution,
                    n = e.gifId;
                  return (0, o.n)(t, n);
                },
                markGifContentAsDeleted(e) {
                  var t = e.source,
                    n = e.plaintextHash;
                  return "recents" === t ? (0, o.s)(n) : (0, o.p)(n);
                },
                loadAvatars(e) {
                  e.jids.forEach((e) =>
                    (function (e) {
                      return it(e, (t) =>
                        (function (e, t) {
                          return nt(
                            e,
                            (0, c.w)("picture", {
                              id: null != t ? (0, c.f)(t) : c.c,
                              type: "preview",
                              query: "url",
                            })
                          );
                        })(e, t)
                      );
                    })(e)
                  );
                },
                loadAvatarV2(e) {
                  var t, n;
                  (t = e.parentJid),
                    ft((n = e.subGroupJid) || t, (e) =>
                      lt({
                        parentJid: t,
                        subGroupJid: n,
                        photoId: e,
                        queryType: "blob",
                      })
                    );
                },
                loadAvatarGroupInvite(e) {
                  var t, n;
                  (t = e.jid),
                    (n = e.code),
                    it(
                      t,
                      (e) =>
                        (function (e, t, n) {
                          return nt(
                            e,
                            (0, c.w)("picture", {
                              id: null != t ? (0, c.f)(t) : c.c,
                              invite: (0, c.b)(n),
                              type: "preview",
                              query: "url",
                            })
                          );
                        })(t, e, n),
                      !0
                    );
                },
                loadAvatarGroupInviteV2(e) {
                  var t, n, r;
                  (t = e.parentJid),
                    (n = e.subGroupJid),
                    (r = e.code),
                    ft(n || t, (e) =>
                      lt({
                        parentJid: t,
                        subGroupJid: n,
                        photoId: e,
                        invite: r,
                        queryType: "blob",
                      })
                    );
                },
                loadAvatarAddRequest(e) {
                  var t, n;
                  (t = e.jid),
                    (n = e.addRequest),
                    it(
                      t,
                      (e) =>
                        (function (e, t, n) {
                          return nt(
                            e,
                            (0, c.w)(
                              "picture",
                              {
                                id: null != t ? (0, c.f)(t) : c.c,
                                type: "preview",
                                query: "url",
                              },
                              (0, c.w)("add_request", {
                                code: (0, c.b)(n.code),
                                expiration: (0, c.f)(n.expiration),
                                admin: (0, c.g)(n.admin),
                              })
                            )
                          );
                        })(t, e, n),
                      !0
                    );
                },
                getMsgInfos(e) {
                  var t = e.msgId;
                  return a.O(t);
                },
                getMsgReactions(e) {
                  var t = e.msgId;
                  return (0, w.f)(t);
                },
                getPollResults(e) {
                  var t = e.msgId;
                  return (0, O.f)(t);
                },
                getIdentityVerificationData(e) {
                  var t = e.jid;
                  return Promise.resolve()
                    .then(n.bind(null, 452))
                    .then((e) => e.default(t));
                },
                registerCompanionDevice: (e) => (e.qrString, Promise.resolve()),
                syncAllContacts(e) {
                  var t = e.type,
                    n = e.revision;
                  return (0, ze.oneTimeSyncAllContacts)(t, n);
                },
                deltaSync(e) {
                  var t = e.type,
                    n = e.revision,
                    r = e.addedPhoneToJid;
                  return (0, ze.deltaSync)(t, n, r);
                },
                startDeleteAccount: () =>
                  F.h
                    .set(!0)
                    .then(() =>
                      Promise.all([(0, i.b)(), (0, Ne.deleteTmpTables)()])
                    )
                    .then(() => {}),
                setVerboseSecurity(e) {
                  var t = e.privacySecurity;
                  F.Q.set(t);
                },
                saveAlphaJpegStickerBlob(e) {
                  var t = e.msgId,
                    n = e.blob;
                  return (0, Yt.c)(t, n).then(
                    (e) => (
                      "fail" === e.status &&
                        __LOG__(
                          2
                        )`WEBP AlphaJpeg sticker cannot be saved in a ChunkTable`,
                      e
                    )
                  );
                },
                getStickerMsgMediaRefs(e) {
                  var t = e.msgId;
                  return a
                    .fb(t)
                    .then((e) =>
                      null == e || null == e.frame || null == e.plaintext
                        ? null
                        : {
                            isNotNativeSupported: !0,
                            frame: e.frame,
                            contentRef: e.plaintext,
                          }
                    );
                },
                decodeWebPImage(e) {
                  var t = e.buffer,
                    r = e.scaleCount;
                  return n
                    .e(192)
                    .then(n.bind(null, 720))
                    .then((e) => e.decodeWebP(t, r));
                },
                receivedPush() {
                  (0, r.o)();
                },
                syncAbProps: () => (0, We.a)(),
                syncServerProps: () => (0, Je.a)(),
                chatsNotified(e) {
                  e.chatNotifications.forEach((e) => {
                    e.ts
                      ? a.Bc(e.chatId, e.ts)
                      : __LOG__(
                          4
                        )`For some reason notification was set as notified without a ts`;
                  });
                },
                cancelMedia(e) {
                  var t = e.msgId;
                  (0, Te.a)(t);
                },
                deleteAllMedia(e) {
                  var t = e.olderThan;
                  return a.k(t || void 0).then(() => {});
                },
                loadCallLogs: () => a.Z().then((e) => ({ logs: e })),
                loadChatMediaMsgs: (e) => a.pb(e),
                getStorageSettingChatsMediaSizes: () => a.gb(),
                getStorageSettingTotalMediaSize: () => a.hb(),
                loadStorageSettingMediaMsgs: (e) => a.xb(e),
                getAllMediaMsgIds(e) {
                  var t = e.filter;
                  return a.u(t);
                },
                loadChatStarredMsgs(e) {
                  var t = e.chatId,
                    n = e.limit,
                    r = e.previousLastMsgId;
                  return a.qb(t, n, r);
                },
                loadStarredMsgs(e) {
                  var t = e.limit,
                    n = e.previousLastMsgStarredId;
                  return a.vb(t, n);
                },
                loadChatKeptMessages(e) {
                  var t = e.chatId,
                    n = e.limit,
                    r = e.previousLastMsgId;
                  return (0, E.g)(t, n, r);
                },
                sendMetrics() {
                  (0, Ue.e)("sendMetrics");
                },
                sendAnonymousMetrics() {
                  (0, Ue.e)("sendAnonymousMetrics");
                },
                getGdprReportStatus() {
                  (0, ht.a)();
                },
                getTwoFactor() {
                  (0, r.b)(
                    (0, c.w)(
                      "iq",
                      {
                        to: c.l,
                        type: "get",
                        xmlns: "urn:xmpp:whatsapp:account",
                        id: (0, c.u)(),
                      },
                      new c.o("2fa")
                    ),
                    mt
                  ).then((e) => {
                    if (!e.success)
                      throw new Error(
                        `Failed to get 2fa: ${e.errorCode} ${e.errorText}`
                      );
                    return (
                      __LOG__(
                        2
                      )`getTwoFactor: response has code: ${e.result.code}, has email: ${e.result.email}`,
                      e.result
                    );
                  });
                },
                checkTwoFactor(e) {
                  var t, n;
                  (t = e.pin),
                    (0, r.b)(
                      ((n = t.join("")),
                      (0, c.w)(
                        "iq",
                        {
                          to: c.l,
                          type: "get",
                          xmlns: "urn:xmpp:whatsapp:account",
                          id: (0, c.u)(),
                        },
                        new c.o("2fa", void 0, [(0, c.w)("code", null, n)])
                      )),
                      gt
                    ).then((e) => !!e.success && e.result);
                },
                queryBusinessProfile(e) {
                  var t = e.jid;
                  return n
                    .e(174)
                    .then(n.bind(null, 721))
                    .then((e) => e.default(t));
                },
                queryQRCode: () =>
                  Promise.all([n.e(26), n.e(176)])
                    .then(n.bind(null, 619))
                    .then((e) => e.queryQRCode()),
                verifyTwoFactorReminder(e) {
                  var t, n, r;
                  (t = e.pin),
                    (r =
                      "enabled" === (n = F.O.get()).status &&
                      n.pin === t.join("")),
                    (0, yt.e)(r),
                    (0, Ie.c)("event", "twoFactorReminderVerified", {
                      success: r,
                    });
                },
                downloadGdprReport(e) {
                  (function (e, t) {
                    var n = (function (e, t) {
                      var n = t.fileLength;
                      if (!n)
                        return (
                          __LOG__(
                            4
                          )`makeEntry: protobuf metadata with bad size ${n}`,
                          null
                        );
                      var r = (0, j.D)();
                      if (t.mediaKey && t.fileEncSha256) {
                        var i = {
                          version: "mms4",
                          type: re.d.DOCUMENT,
                          cryptoKey: t.mediaKey,
                          ciphertextHash: t.fileEncSha256,
                          size: n,
                          creationTs: r,
                          mediaKeyTs: t.mediaKeyTimestamp
                            ? (0, j.i)(t.mediaKeyTimestamp)
                            : e,
                          validatedTs: r,
                        };
                        return t.directPath && (i.directPath = t.directPath), i;
                      }
                      if (t.url && t.mediaKey && !t.fileEncSha256) {
                        var a = {
                          version: "mms3",
                          type: re.d.DOCUMENT,
                          cryptoKey: t.mediaKey,
                          url: t.url,
                          size: n,
                          creationTs: (0, j.D)(),
                        };
                        return /^https:\/\/(\w|-)+\.whatsapp\.net\//.test(a.url)
                          ? a
                          : (__LOG__(
                              4
                            )`makeMedia msg has bad mms3 url ${a.url}`,
                            null);
                      }
                      return (
                        __LOG__(
                          4
                        )`makeEntry: metadata does not have enough entry info`,
                        null
                      );
                    })(e, t);
                    if (n) {
                      var r = new wt.a({
                        parts: bt.b,
                        onUpdate(e) {
                          __LOG__(2)`download ${100 * e}% finished`,
                            (0, Ie.c)("event", "gdprReportDownloading", {
                              percent: e,
                            });
                        },
                        onSuccess: () => {
                          __LOG__(2)`download finished`;
                        },
                        onError: () => {
                          __LOG__(2)`download failed`;
                        },
                      });
                      r.parts.initial.finished(),
                        (0, bt.c)("manual", n, (0, q.e)(t.fileSha256), r, {
                          overallDownloadOrigin: 6,
                          overallDownloadMode: 1,
                          overallMediaType: 8,
                        })
                          .then((e) => {
                            var n = e.result,
                              i = e.metric;
                            if (
                              (r.parts.processing.finished(),
                              "success" === n.status)
                            ) {
                              (0, Te.k)(
                                Object.assign({}, i, {
                                  overallDownloadResult: 1,
                                  overallIsFinal: !0,
                                })
                              );
                              var a = new Blob([n.plaintext], {
                                type: t.mimetype,
                              });
                              return (0, Ot.getChunkTable)()
                                .storeGdprReport(a)
                                .then(() => ({
                                  type: "success",
                                  plaintext: a,
                                }));
                            }
                            return (
                              (0, Te.k)(
                                Object.assign({}, i, {
                                  overallDownloadResult: bt.a[n.status],
                                  overallIsFinal: !0,
                                })
                              ),
                              {
                                type: "error",
                                error:
                                  "gone" === n.status
                                    ? "download_expired"
                                    : "download_failed",
                              }
                            );
                          })
                          .then((e) =>
                            (0, Ie.c)("event", "gdprReportDownloaded", {
                              result: e,
                            })
                          );
                    }
                  })(e.reportCreationTime, e.gdprReportMetadata);
                },
                queryGroupInfoFromCode(e) {
                  var t = e.code;
                  return (0, Lt.queryGroupInfoFromCode)(t);
                },
                queryGroupInviteCode(e) {
                  var t = e.groupJid;
                  return (0, Lt.queryGroupInviteCode)(t);
                },
                queryAddRequest(e) {
                  var t = e.group,
                    n = e.code,
                    r = e.expiration,
                    i = e.admin;
                  return (0, kt.queryAddRequest)(t, n, r, i);
                },
                purgeExpiredInvitations(e) {
                  var t = e.groupJid;
                  a.Nb(t);
                },
                loadStatusAuthors() {
                  a.ob();
                },
                loadStatuses(e) {
                  var t = e.statusIds;
                  return a.bb(t);
                },
                loadStatusWithAuthor(e) {
                  var t = e.statusId;
                  return a.eb(t);
                },
                loadLastUnreadStatusMsg() {
                  a.rb();
                },
                loadStatusPrivacySettings() {
                  a.wb();
                },
                loadSentStatusInfo: () => a.ub().then((e) => ({ infos: e })),
                statusTabOpened() {
                  F.J.flush().then(Et.maybeDownloadPendingStatusThumbnails);
                },
                contactQuerySync(e) {
                  var t = e.rawPhoneNumber;
                  return (0, ze.contactQuerySync)(t);
                },
                getContactsBlocklist(e) {
                  var t = e.category;
                  return (0, Me.a)(t);
                },
                getExpiredMessages: () => a.I(),
                deleteExpiredMsgs(e) {
                  var t = e.chatId,
                    n = e.msgIds;
                  return a.m(t, n, "expired");
                },
                deleteAllExpiredMsgsForChat(e) {
                  var t = e.chatId;
                  return a.j(t);
                },
                getNextExpirationTimestamp: () => a.S(),
                recomputeSuspiciousCharacters(e) {
                  var t = e.msgId;
                  a.Qb(t);
                },
                getPrivacySettings: () => (0, At.a)(),
                setActivityInProgress(e) {
                  var t = e.name;
                  (0, Nt.b)(t);
                },
                loadMsgContentVCards(e) {
                  var t = e.msgId;
                  return a.sb(t);
                },
                getRecentEmojis: () => a.U(),
                setRecentEmojis(e) {
                  var t = e.recentEmojis;
                  a.qc(t);
                },
                getUserNotice: () =>
                  a.C().then((e) => (e ? (0, Wt.b)(e) : void 0)),
                acceptUserNotice(e) {
                  var t = e.id,
                    n = e.version,
                    r = e.ts,
                    i = e.source;
                  a.a(t, n, r, i);
                },
                logUserNoticeDisplayed(e) {
                  var t = e.id,
                    n = e.ts;
                  a.zb(t, n);
                },
                downloadUserNoticeDeepLinkModal(e) {
                  var t = e.id;
                  return (0, Zt.downloadUserNoticeDeepLinkModal)(t);
                },
                ephemeralTimestamp(e) {
                  var t;
                  (t = e.validUntil),
                    Ve() ||
                      (__LOG__(2)`addNewEphemeralTimestamp invoked`,
                      Be || (Be = new Fe()),
                      Be.update(t));
                },
                syncAbCacheFromStorage: () => (0, Se.e)(),
                maybePinAbProp(e) {
                  var t = e.key,
                    n = e.val;
                  return (0, Se.d)(t, n);
                },
                getMediaMsglikelyOnServerFrom(e) {
                  var t = e.msgId;
                  return a.N(t);
                },
                viewOnceTimestamp(e) {
                  var t;
                  (t = e.validUntil), qe || (qe = new He()), qe.update(t);
                },
                setAppVisible(e) {
                  var t = e.visible;
                  (0, Qt.b)(t);
                },
                unlinkViewOnceMsgsMedia(e) {
                  var t = e.msgIds;
                  return a.vc(t);
                },
                getPrivateStatsIds: () => jt(),
                loadCompanions: () => Promise.resolve(),
                getCommunityInfo(e) {
                  var t = e.jid;
                  return a.B(t).then((e) => (e ? (0, Qr.b)(e) : null));
                },
                queryCommunitiesSubGroups(e) {
                  var t = e.jid;
                  return Promise.all([n.e(14), n.e(33), n.e(175)])
                    .then(n.bind(null, 717))
                    .then((e) => e.default(t));
                },
                querySubGroupInfo(e) {
                  var t = e.parentGroupJid,
                    r = e.subGroupJid;
                  return Promise.all([n.e(14), n.e(21), n.e(33), n.e(177)])
                    .then(n.bind(null, 716))
                    .then((e) => e.default(t, r));
                },
              });
          })(e),
          Tt.b
        );
        return (
          e.setNamespaceHandler("backend", m),
          e.setNamespaceHandler("voip", m),
          v.then(() => _)
        );
      }
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return s;
      });
      var r = n(38),
        i = n(37),
        a = n.n(i),
        o = n(121),
        u = n(35);
      function s(e) {
        var t;
        switch (e.type) {
          case r.c.TEXT:
            t = {
              type: "text",
              text: (0, o.c)(e.text),
              font: e.font,
              textColor: e.textColor,
              backgroundColor: e.backgroundColor,
            };
            break;
          case r.c.IMAGE:
            t = { type: "image", previewId: (0, u.a)(e), bg: e.bg };
            break;
          case r.c.VIDEO:
            t = { type: "video", previewId: (0, u.a)(e), bg: e.bg };
            break;
          case r.c.GIF:
            t = { type: "gif", previewId: (0, u.a)(e), bg: e.bg };
            break;
          case r.c.FUTUREPROOF:
            break;
          case r.c.REVOKED:
          case r.c.CIPHERTEXT:
            break;
          case r.c.PTT:
            t = { type: "voice", backgroundColor: e.backgroundColor };
            break;
          default:
            (0, a.a)(e);
        }
        return t ? { id: e.id, content: t, ts: e.ts } : null;
      }
    },
    ,
    function (e, t, n) {
      n.r(t),
        n.d(t, "PRIVACY_WITH_BLOCKLIST", function () {
          return v;
        }),
        n.d(t, "VISIBILITY", function () {
          return h;
        }),
        n.d(t, "ONLINE_VISIBILITY", function () {
          return m;
        }),
        n.d(t, "ALL_NONE", function () {
          return g;
        });
      var r = n(30),
        i = n(86),
        a = n(4),
        o = n(88),
        u = n(51),
        s = n(15),
        l = n(6),
        c = n(12),
        d = n(20),
        f = n(118),
        _ = n(17),
        p = n(14),
        v = {
          all: "all",
          none: "none",
          contacts: "contacts",
          contact_blacklist: "contact_blacklist",
        },
        h = { all: "all", none: "none", contacts: "contacts" },
        m = { all: "all", match_last_seen: "match_last_seen" },
        g = { all: "all", none: "none" },
        y = [
          "lastSeen",
          "profilePhoto",
          "readReceipts",
          "about",
          "groupAdd",
          "online",
        ],
        b = new u.a("setPrivacyParser", (e) => {
          var t = e.child("privacy"),
            n = l.k.get(),
            r = {};
          return (
            t.forEachChildWithTag("category", (e) => {
              var t = e.attrString("name"),
                i = "error" === e.attrString("value");
              if (t === s.n.readReceipts)
                r.readReceipts = i ? n.readReceipts : e.attrEnum("value", g);
              else if (t === s.n.lastSeen)
                if (i) r.lastSeen = n.lastSeen;
                else {
                  var a = e.attrEnum("value", v);
                  "contact_blacklist" === a
                    ? ((r.lastSeen = "contact_blacklist"),
                      (r.lastSeenBlacklistHash = e.attrString("dhash")))
                    : (r.lastSeen = a);
                }
              else if (t === s.n.online)
                r.online = i ? n.online : e.attrEnum("value", m);
              else if (t === s.n.profilePhoto)
                if (i) r.profilePhoto = n.profilePhoto;
                else {
                  var o = e.attrEnum("value", v);
                  "contact_blacklist" === o
                    ? ((r.profilePhoto = "contact_blacklist"),
                      (r.profilePhotoBlacklistHash = e.attrString("dhash")))
                    : (r.profilePhoto = o);
                }
              else if (t === s.n.about)
                if (i) r.about = n.about;
                else {
                  var u = e.attrEnum("value", v);
                  "contact_blacklist" === u
                    ? ((r.about = "contact_blacklist"),
                      (r.aboutBlacklistHash = e.attrString("dhash")))
                    : (r.about = u);
                }
              else if (t === s.n.groupAdd)
                if (i) r.groupAdd = n.groupAdd;
                else {
                  var l = e.attrEnum("value", v);
                  "contact_blacklist" === l
                    ? ((r.groupAdd = "contact_blacklist"),
                      (r.groupAddBlacklistHash = e.attrString("dhash")))
                    : (r.groupAdd = l);
                }
            }),
            r
          );
        }),
        w = new u.a("setDisappearingMsgsDefaultTimer", (e) => ({}));
      t.default = (0, o.c)()
        .step("setPrivacySettings", (e) => {
          var t = l.k.get(),
            n = [];
          y.forEach((r) => {
            var i = (function (e, t, n) {
              var r = null,
                i = null,
                a = null;
              switch (e) {
                case "groupAdd":
                  "contact_blacklist" === t.groupAdd &&
                    t.groupAddBlacklist &&
                    ((r = s.n.groupAdd),
                    (i = "groupAddBlacklist"),
                    (a = "groupAddBlacklistHash"));
                  break;
                case "lastSeen":
                  "contact_blacklist" === t.lastSeen &&
                    t.lastSeenBlacklist &&
                    ((r = s.n.lastSeen),
                    (i = "lastSeenBlacklist"),
                    (a = "lastSeenBlacklistHash"));
                  break;
                case "about":
                  "contact_blacklist" === t.about &&
                    t.aboutBlacklist &&
                    ((r = s.n.about),
                    (i = "aboutBlacklist"),
                    (a = "aboutBlacklistHash"));
                  break;
                case "profilePhoto":
                  "contact_blacklist" === t.profilePhoto &&
                    t.profilePhotoBlacklist &&
                    ((r = s.n.profilePhoto),
                    (i = "profilePhotoBlacklist"),
                    (a = "profilePhotoBlacklistHash"));
              }
              if (null != r && null != i && null != a) {
                var o = (function () {
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : (0, d.f)(),
                    t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : (0, d.f)();
                  return { added: (0, d.n)(t, e), removed: (0, d.n)(e, t) };
                })(n[i], t[i]);
                return {
                  category: r,
                  added: o.added,
                  removed: o.removed,
                  hash: n[a],
                };
              }
            })(r, e, t);
            if (null != i) {
              i.category;
              var o = i.added,
                u = i.removed,
                l = i.hash,
                c = o.map((e) =>
                  (0, a.w)("user", { action: "add", jid: (0, a.g)(e) })
                );
              u.forEach((e) => {
                c.push(
                  (0, a.w)("user", { action: "remove", jid: (0, a.g)(e) })
                );
              }),
                ("contact_blacklist" !== t[r] || c.length > 0) &&
                  n.push(
                    (0, a.w)(
                      "category",
                      {
                        name: (0, a.b)(i.category),
                        value: (0, a.b)("contact_blacklist"),
                        dhash: l ? (0, a.b)(l) : (0, a.b)("none"),
                      },
                      c
                    )
                  );
            } else
              e[r] &&
                e[r] !== t[r] &&
                n.push(
                  (0, a.w)("category", {
                    name: (0, a.b)(s.n[r]),
                    value: (0, a.b)(e[r]),
                  })
                );
          });
          var o =
              0 === n.length
                ? Promise.resolve({ success: !0, result: {} })
                : (0, r.e)(
                    (0, a.w)(
                      "iq",
                      {
                        to: a.l,
                        type: "set",
                        id: (0, a.u)(),
                        xmlns: "privacy",
                      },
                      (0, a.w)("privacy", null, n)
                    ),
                    b
                  ),
            u = Object.assign({}, e);
          return (
            (u.disappearingMsgsDefaultTimer = t.disappearingMsgsDefaultTimer),
            o
              .then((e) => {
                if (e.success) {
                  var n = e.result;
                  return (
                    l.k.set(Object.assign({}, t, u, n)),
                    (0, c.c)("page", "generalSettings", {
                      settings: l.k.get(),
                    }),
                    { status: "ok" }
                  );
                }
                return (
                  l.k.set(Object.assign({}, t, u)),
                  (0, c.c)("page", "generalSettings", { settings: l.k.get() }),
                  { status: "network_error" }
                );
              })
              .catch(
                (0, f.a)(
                  i.b,
                  () => (
                    __LOG__(2)`updateGeneralSettings disconnected error`,
                    l.k.set(Object.assign({}, t, u)),
                    (0, c.c)("page", "generalSettings", {
                      settings: l.k.get(),
                    }),
                    { status: "network_error" }
                  )
                )
              )
          );
        })
        .finalStep("updateDefaultDisappearingMode", (e, t) => {
          if ("ok" !== e.status) return e;
          if (null == t.disappearingMsgsDefaultTimer) return e;
          var n = l.k.get(),
            o = t.disappearingMsgsDefaultTimer || p.k,
            u = n.disappearingMsgsDefaultTimer || p.k;
          return (
            (0, _.a)("disappearing_mode") && o !== u
              ? (0, r.e)(
                  (0, a.w)(
                    "iq",
                    {
                      to: a.l,
                      type: "set",
                      id: (0, a.u)(),
                      xmlns: "disappearing_mode",
                    },
                    (0, a.w)("disappearing_mode", { duration: (0, a.f)(o) })
                  ),
                  w
                )
              : Promise.resolve({ success: !0, result: {} })
          )
            .then((e) =>
              e.success ? { status: "ok" } : { status: "network_error" }
            )
            .catch(
              (0, f.a)(
                i.b,
                () => (
                  __LOG__(2)`updateDefaultDisappearingMode disconnected error`,
                  { status: "network_error" }
                )
              )
            )
            .then(
              (e) => (
                l.k.set(
                  Object.assign({}, n, { disappearingMsgsDefaultTimer: o })
                ),
                (0, c.c)("page", "generalSettings", { settings: l.k.get() }),
                e
              )
            );
        })
        .end();
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "d", function () {
        return h;
      }),
        n.d(t, "g", function () {
          return g;
        }),
        n.d(t, "a", function () {
          return y;
        }),
        n.d(t, "e", function () {
          return b;
        }),
        n.d(t, "b", function () {
          return w;
        }),
        n.d(t, "c", function () {
          return E;
        }),
        n.d(t, "f", function () {
          return I;
        });
      var r = n(8),
        i = n.n(r),
        a = n(26),
        o = n.n(a),
        u = n(3),
        s = n(2),
        l = n(5),
        c = n(11),
        d = n(10),
        f = n(17),
        _ = n(263),
        p = n(39),
        v = n(16);
      function h(e, t) {
        return m.apply(this, arguments);
      }
      function m() {
        return (m = o()(function* (e, t) {
          if ((0, f.a)("trusted_contacts_sender")) {
            var n = yield E(e);
            (n && !(0, _.a)(n)) ||
              (yield (0, p.b)().waitUntilPersisted(
                v.e.refreshTrustedContactSenderToken(e, t)
              ));
          }
        })).apply(this, arguments);
      }
      function g(e, t) {
        return (0, f.a)("trusted_contacts")
          ? (0, d.c)(
              "writeReceivedPrivacyTokens",
              (n) =>
                (function (e, t, n) {
                  return e.table.transact("rw", ["privacyTokens"], () => {
                    var r = (0, c.v)(n);
                    return e.table.stores.privacyTokens
                      .where("jid")
                      .equals(t)
                      .toArray()
                      .then((n) => {
                        var a = [];
                        n.forEach((e) => {
                          if (e.type === s.g.TC_RECEIVED) {
                            var t = e.type,
                              n = r[t];
                            if (n)
                              if ((delete r[t], e.ts >= n.ts))
                                __LOG__(
                                  3
                                )`_writePrivacyToken received older ${t} token`;
                              else {
                                var i = Object.assign({}, e, {
                                  value: n.value,
                                  ts: n.ts,
                                });
                                a.push(i);
                              }
                          }
                        });
                        var o = (0, c.w)(r).map((e) => {
                          var n = i()(e, 2),
                            r = n[0],
                            a = n[1];
                          return Object.assign({ jid: t, type: r }, a);
                        });
                        return (0, l.c)([
                          e.table.stores.privacyTokens.bulkPut(a),
                          e.table.stores.privacyTokens.bulkAdd(o),
                        ]).then(() => ({ added: o.length, updated: a.length }));
                      });
                  });
                })(n, e, t),
              (t, n, r) => {
                var i = t.added,
                  a = t.updated;
                (0 === i && 0 === a) ||
                  r.fireAndForget("event", "trustedContactTokenUpdatedForJid", {
                    jid: e,
                  });
              }
            )
          : Promise.resolve();
      }
      function y(e, t) {
        return e.table.stores.privacyTokens.where("jid").equals(t).delete();
      }
      function b(e) {
        return (0, f.a)("trusted_contacts")
          ? (0, d.f)("readTrustedContactPresenceInfo", (t) =>
              (function (e, t) {
                return e.transact("rw", ["contacts", "privacyTokens"], () =>
                  (0, l.c)([e.getContact(t), S(e, t), k(e, t)]).then((t) => {
                    var n = i()(t, 3),
                      r = n[0],
                      a = n[1],
                      o = n[2],
                      u = { dbContact: r },
                      s = [];
                    return (
                      a &&
                        ((0, _.b)(a)
                          ? s.push(e.stores.privacyTokens.delete(a.id))
                          : (u.receivedToken = a.value)),
                      o &&
                        ((0, _.b)(o)
                          ? s.push(e.stores.privacyTokens.delete(o.id))
                          : (u.senderTokenTs = null == o ? void 0 : o.ts)),
                      (0, l.c)(s).then(() => u)
                    );
                  })
                );
              })(t, e)
            )
          : Promise.resolve(Object.freeze({}));
      }
      function w() {
        return (0, d.f)("deleteExpiredPrivacyTokens", (e) =>
          (function (e) {
            return e.transact("rw", ["privacyTokens"], () =>
              (0, l.c)(
                O.map((t) => {
                  var n = (0, _.c)(t);
                  return (0, l.j)(e.stores.privacyTokens, ["type", "ts"])
                    .between([t, u.c], [t, n], !1, !1)
                    .delete()
                    .then((e) => {});
                })
              ).then(() => {})
            );
          })(e)
        );
      }
      var O = (0, c.y)(s.g);
      function E(e) {
        return (0, f.a)("trusted_contacts_sender")
          ? (0, d.f)("getTrustedContactSenderToken", (t) =>
              (0, l.i)(
                (function (e, t) {
                  return k(e, t).then((e) => {
                    if (null != e && !(0, _.b)(e)) return e;
                  });
                })(t, e)
              )
            )
          : Promise.resolve();
      }
      function I(e, t) {
        return (0, f.a)("trusted_contacts_sender")
          ? (0, d.c)(
              "refreshTrustedContactSenderToken",
              (n) =>
                (function (e, t, n) {
                  return e.transact("rw", ["privacyTokens"], () =>
                    k(e, t).then((r) => {
                      if (r)
                        return r.ts > n
                          ? (__LOG__(
                              3
                            )`Tried to refresh token with older timestamp`,
                            !1)
                          : e.stores.privacyTokens
                              .put(Object.assign({}, r, { ts: n }))
                              .then(() => !0);
                      var i = { jid: t, type: s.g.TC_SENDER, ts: n };
                      return e.stores.privacyTokens.add(i).then(() => !0);
                    })
                  );
                })(n.table, e, t),
              (t, n, r) => {
                t &&
                  r.fireAndForget("event", "trustedContactTokenUpdatedForJid", {
                    jid: e,
                  });
              }
            )
          : Promise.resolve();
      }
      function S(e, t) {
        return e.stores.privacyTokens
          .where("jid")
          .equals(t)
          .toArray()
          .then((e) => {
            for (var t = 0; t < e.length; t++) {
              var n = e[t];
              if (n.type === s.g.TC_RECEIVED) return n;
            }
          });
      }
      function k(e, t) {
        return e.stores.privacyTokens
          .where("jid")
          .equals(t)
          .toArray()
          .then((e) => {
            for (var t = 0; t < e.length; t++) {
              var n = e[t];
              if (n.type === s.g.TC_SENDER) return n;
            }
          });
      }
    },
    function (e, t, n) {
      function r(e) {
        return "###";
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    ,
    ,
    ,
    function (e, t, n) {
      var r = n(11);
      t.a = class {
        constructor(e) {
          (this.ZY = 0),
            (this.Ze = 0),
            (this.Zb = e.onUpdate),
            (this.Zc = e.onSuccess),
            (this.Zd = e.onError);
          var t = () => {
            this.ZX();
          };
          (this.parts = (0, r.o)(
            e.parts,
            (e) =>
              new (class {
                constructor(e, t) {
                  (this.ZY = 0), (this.Za = !1), (this.ZX = e), (this.ZZ = t);
                }
                set(e) {
                  if (!this.Za) {
                    var t = Math.max(0, Math.min(e, 1)) * this.ZZ;
                    t >= this.ZY && ((this.ZY = t), this.ZX());
                  }
                }
                reset() {
                  this.Za || ((this.ZY = 0), this.ZX());
                }
                finished() {
                  this.Za || ((this.Za = !0), (this.ZY = this.ZZ), this.ZX());
                }
              })(t, e)
          )),
            this.ZX();
        }
        failed(e) {
          0 === this.Ze && ((this.Ze = 1), this.Zd(e));
        }
        ZX() {
          if (0 === this.Ze) {
            var e = 0,
              t = 0,
              n = !0,
              r = this.parts;
            for (var i in r) {
              var a = this.parts[i];
              (e += a.ZY), (t += a.ZZ), (n = n && a.Za);
            }
            if (n) (this.Ze = 2), (this.ZY = 1), this.Zc();
            else {
              var o = e / t;
              o > this.ZY && ((this.ZY = o), this.Zb(o));
            }
          }
        }
      };
    },
    function (e, t, n) {
      function r(e) {
        if (e.hasChild("growth_locked")) return i(e);
      }
      function i(e) {
        var t = e.child("growth_locked"),
          n = t.attrString("type");
        if ("invite" === n)
          return { type: "invite", expiration: t.attrTime("expiration") };
        throw (
          (__LOG__(4)`Unhandled growth locked state value ${n}`,
          SEND_LOGS("invalid-growth-locked-" + n),
          new Error("invalid growth locked type"))
        );
      }
      n.d(t, "b", function () {
        return r;
      }),
        n.d(t, "a", function () {
          return i;
        });
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return i;
      }),
        n.d(t, "b", function () {
          return a;
        });
      var r = n(4);
      function i(e) {
        return (0, r.w)(
          "key",
          null,
          (0, r.w)("id", null, (0, r.a)(e.id, 3)),
          (0, r.w)("value", null, e.keyPair.publicKey)
        );
      }
      function a(e) {
        return (0, r.w)(
          "skey",
          null,
          (0, r.w)("id", null, (0, r.a)(e.id, 3)),
          (0, r.w)("value", null, e.keyPair.publicKey),
          (0, r.w)("signature", null, e.signature)
        );
      }
    },
    ,
    ,
    function (e, t, n) {
      n.r(t),
        n.d(t, "default", function () {
          return w;
        }),
        n.d(t, "deregisterPhoneBanAppeal", function () {
          return O;
        }),
        n.d(t, "deregisterPhone", function () {
          return E;
        }),
        n.d(t, "deregister", function () {
          return I;
        }),
        n.d(t, "deleteTmpTables", function () {
          return S;
        });
      var r = n(114),
        i = (n(4), n(6)),
        a = n(135),
        o = n(5),
        u = n(14),
        s = n(203),
        l = n(41),
        c = n(127),
        d = n(309),
        f = n(97),
        _ = n(12),
        p = n(70),
        v = n(188),
        h = n(3),
        m = n(259),
        g = n(207),
        y =
          (n(159),
          {
            100: "100",
            101: "101",
            102: "102",
            103: "103",
            104: "104",
            106: "106",
          }),
        b = new r.b(
          "failureParser",
          (e) => (
            e.assertTag("failure"),
            {
              reason: e.attrInt("reason", 400, 599),
              location: e.attrString("location"),
              code: e.hasAttr("code")
                ? e.attrEnumOrDefault("code", y, "100")
                : null,
              expire: e.hasAttr("expire") ? e.attrInt("expire") : null,
              violationType: e.hasAttr("vt")
                ? g.c[e.attrString("vt")] || "other_harm"
                : null,
            }
          )
        );
      function w(e) {
        var t = b.parse(e);
        if (t.error) __LOG__(4)`handleFailure: failed to parse ${t.error}`;
        else
          switch (t.success.reason) {
            case 401:
              E("deregistered");
              break;
            case 402:
              var n = t.success,
                r = n.code,
                a = n.expire;
              if (null == r || null == a)
                throw (
                  (__LOG__(4)`Got incorrect temp banned data ${r} ${a}`,
                  new Error("handleFailure: wrong temp ban data"))
                );
              (function (e, t) {
                i.M.set({ code: e, duration: t, until: (0, h.k)(t) }).then(() =>
                  (0, _.c)("page", "reload", {})
                );
              })(r, a);
              break;
            case 403:
              null != t.success.violationType
                ? O(t.success.violationType)
                : E("deregistered");
              break;
            case 406:
              E("banned");
              break;
            case 405:
            case 409:
              (0, _.c)("event", "kicked", { reason: "needs_update" });
              break;
            case 400:
            case 500:
            case 501:
              __LOG__(3)`handleFailure: got failure code ${t.success.reason}`;
              break;
            default:
              __LOG__(
                4
              )`handleFailure: got unknown failure code ${t.success.reason}`;
          }
      }
      function O(e) {
        return i.t.isDefined()
          ? S()
              .then(() => I())
              .then((t) => {
                if ("noop" !== t) {
                  var n = i.t.get(),
                    r = (0, m.b)(n);
                  if (r) {
                    var a = r.country,
                      o = r.localNumber;
                    return i.E.setWithin(t, {
                      type: "BLOCKED_BAN_APPEAL_PRE",
                      country: a,
                      localNumber: o,
                      banReason: e,
                    });
                  }
                  __LOG__(4)`deregisterPhoneBanAppeal phone is invalid`;
                }
              })
              .then(() => {
                (0, _.c)("page", "reload", {});
              })
          : Promise.resolve();
      }
      function E(e) {
        return i.t.isDefined()
          ? S()
              .then(() => I(e))
              .then(() => {
                (0, _.c)("page", "reload", {});
              })
          : Promise.resolve();
      }
      function I(e) {
        return i.t.isDefined()
          ? Promise.all([(0, l.C)(), (0, i.Z)()])
              .then(() => (0, s.e)())
              .then((t) => (e ? i.D.setWithin(t, e).then(() => t) : t))
          : Promise.resolve("noop");
      }
      function S() {
        return Promise.all([
          (0, o.i)(a.a.delete(u.q)),
          (0, p.nukeProfilePicTable)(),
          (0, c.nukeLogs)(),
          (0, d.c)(),
          (0, v.d)(),
          (0, f.jobsTable)().stores.delete(),
          null,
        ]).then(() => {});
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "c", function () {
        return s;
      }),
        n.d(t, "b", function () {
          return l;
        }),
        n.d(t, "a", function () {
          return c;
        });
      var r = n(3),
        i = n(17),
        a = n(2),
        o = {
          [a.g.TC_RECEIVED]: {
            num_buckets: "tctoken_num_buckets",
            duration: "tctoken_duration",
          },
          [a.g.TC_SENDER]: {
            num_buckets: "tctoken_num_buckets_sender",
            duration: "tctoken_duration_sender",
          },
        },
        u = 180 * r.b;
      function s(e) {
        var t = (0, i.a)(o[e].duration),
          n = (0, i.a)(o[e].num_buckets),
          a = (0, r.D)(),
          s = Math.floor(a / t) - (n - 1),
          l = (0, r.i)(s * t),
          c = (0, r.w)(u, a);
        return l > c ? l : c;
      }
      function l(e) {
        return e.ts < s(e.type);
      }
      function c(e) {
        var t = (0, i.a)("tctoken_duration_sender"),
          n = Math.floor((0, r.D)() / t);
        return Math.floor(e.ts / t) < n;
      }
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return _;
      }),
        n.d(t, "b", function () {
          return p;
        }),
        n.d(t, "c", function () {
          return g;
        });
      var r = n(26),
        i = n.n(r),
        a = n(130),
        o = n(24),
        u = n(43),
        s = n(31),
        l = n(3),
        c = n(14);
      function d(e) {
        return 16 * parseInt((e + 15) / 16, 10);
      }
      var f = n(115);
      function _(e, t) {
        return v(1, e.scanLengths, e.scansSidecar, t);
      }
      function p(e, t) {
        var n = e.scanLengths,
          r = e.scansSidecar,
          i = e.midQualityFileSha256;
        if (i) {
          if (n.length === c.L) {
            var a = v(3, n, r, t);
            return {
              downloadSize: a.downloadSize,
              partialFetchOptions: a.partialFetchOptions,
              expectedPlaintextHash: (0, u.e)(i),
            };
          }
          __LOG__(
            2
          )`downloadMms skipping progressive details as those have incorrect scan number`;
        } else
          __LOG__(
            3
          )`downloadMms skipping progressive details as we are missing midQuality hash`;
      }
      function v(e, t, n, r) {
        for (
          var i = (function (e, t) {
              for (var n = [], r = 0, i = 0, a = 0, o = 0; o < e.length; ++o) {
                if (((r += e[o]), o === e.length - 1 && null != t)) {
                  r > i ? n.push(t - i) : (n.pop(), n.push(t - a));
                  break;
                }
                if (r > i) {
                  var u = d(r - i);
                  (a = i), n.push(u), (i += u);
                }
              }
              return n;
            })(t, r),
            a = 0,
            o = [],
            u = 0;
          u < e;
          u++
        )
          (a += i[u]), o.push(new Uint8Array(n, u * c.p, c.p));
        return {
          downloadSize: a,
          partialFetchOptions: {
            scans: e,
            scanLengths: t,
            alignedChunkLengths: i,
            chunkHmacs: o,
          },
        };
      }
      function h() {
        return (h = i()(function* (e, t) {
          var n, r;
          try {
            n = yield (0, s.j)(e, {
              responseType: "text",
              maxSize: t,
              keepPartial: !0,
              overrideMimeType: "text/plain; charset=x-user-defined",
            });
          } catch (e) {
            return (
              __LOG__(2)`fetchPartialPayload network error ${e}`,
              { type: "network-error" }
            );
          }
          try {
            var i = n.response,
              a = new Uint8Array(i.length);
            a.set(Array.from(i).map((e) => e.codePointAt(0))),
              (r = new o.a(a.buffer).readBuffer(t));
          } catch (e) {
            return (
              __LOG__(2)`fetchPartialPayload network error on body ${e}`,
              { type: "body-network-error" }
            );
          }
          return { type: "ok", payload: r };
        })).apply(this, arguments);
      }
      function m() {
        return (m = i()(function* (e, t, n) {
          for (
            var r = new o.a(), i = 0, s = t.iv, l = 0, c = 0;
            c < n.scans;
            c++
          ) {
            var d = n.alignedChunkLengths[c],
              _ = i + d,
              p = e.slice(i, _),
              v = new Uint8Array(p.slice(d - a.a, d)),
              h = yield (0, a.d)(
                t.cipherKey,
                v,
                t.hmacKey,
                "no-sidecar",
                new Blob([2, 2])
              ),
              m = new o.a(p);
            m.writeByteArray(h.ciphertext.slice(0, a.a));
            var g = m.readByteArray(),
              y = (yield (0, a.e)(
                t.cipherKey,
                s,
                g,
                t.hmacKey,
                n.chunkHmacs[c],
                a.a,
                2
              )).plaintext;
            r.writeBuffer(y), (i += d), (s = v), (l += n.scanLengths[c]);
          }
          var b = r.readBuffer(l);
          return (0, f.a)(b).then((e) => ({
            plaintext: b,
            plaintextHash: (0, u.e)(new Uint8Array(e)),
            downloadedScans: c,
          }));
        })).apply(this, arguments);
      }
      function g(e, t, n) {
        return (r, i) => {
          var a = (0, l.t)();
          return (function (e, t) {
            return h.apply(this, arguments);
          })(r, n).then((n) => {
            var r = (0, l.u)(a);
            if ("ok" !== n.type) return { status: n, networkTime: r };
            var s = n.payload;
            return (
              __LOG__(
                2
              )`simpleFetch received data, payload.byteLength = ${s.byteLength}`,
              {
                status: {
                  type: "done",
                  finalize: () => {
                    var n = (0, l.t)();
                    return (function (e, t, n) {
                      return m.apply(this, arguments);
                    })(new Uint8Array(s), e, t).then((e) => {
                      var t = e.plaintext,
                        r = e.plaintextHash,
                        a = e.downloadedScans,
                        s = (function (e) {
                          var t = new o.a(e);
                          return t.writeBytes(255, 217), t.readByteArray();
                        })(t);
                      return (
                        i(s),
                        (0, f.a)(s).then((e) => ({
                          plaintextHash: r,
                          decryptionTime: (0, l.u)(n),
                          progressiveDownload: {
                            partialSize: s.byteLength,
                            partialPlaintextHash: (0, u.e)(e),
                            progressiveJpegScanNumber: a,
                          },
                        }))
                      );
                    });
                  },
                },
                networkTime: r,
              }
            );
          });
        };
      }
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return s;
      }),
        n.d(t, "b", function () {
          return l;
        });
      var r = n(43),
        i = n(24),
        a = n(7),
        o = n(20),
        u = n(115);
      function s(e) {
        for (
          var t = (0, o.m)(e.map(a.j)), n = new i.a(), s = 0;
          s < t.length;
          s++
        )
          n.writeString(t[s]);
        return Promise.resolve(
          (0, u.a)(n.readByteArray()).then((e) => {
            var t = new Uint8Array(e, 0, 6);
            return "2:" + (0, r.d)(t);
          })
        );
      }
      function l(e, t) {
        return s(t.map((t) => (0, a.B)(e, t)));
      }
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return l;
      }),
        n.d(t, "a", function () {
          return f;
        });
      var r = n(167),
        i = n(6),
        a = n(68),
        o = null,
        u = new a.a();
      function s() {
        return (
          o ||
            (__LOG__(2)`TelephonyService::startTelephonyService`,
            (o = (0, r.a)("telephony", { onConnect: d, onDisconnect: c }))),
          u.promise
        );
      }
      function l() {
        s();
      }
      function c() {
        u = new a.a();
      }
      function d(e) {
        return i.o.get()
          ? "undefined" == typeof lib_telephony ||
            null == lib_telephony.TelephonyService
            ? (__LOG__(
                4
              )`TelephonyService::onSessionConnected cannot find lib_telephony.TelephonyService`,
              SEND_LOGS("daemon-telephony-service-not-found"),
              void u.resolve())
            : void lib_telephony.TelephonyService.get(e).then((e) => {
                __LOG__(2)`Got TelephonyService : #${e.service_id}`,
                  u.resolve(e);
              })
          : (__LOG__(
              2
            )`TelephonyService::onSessionConnected: VOIP service is not available`,
            void u.resolve());
      }
      function f() {
        return (
          __LOG__(2)`TelephonyService::getCallState called`,
          (0, r.c)(
            s,
            "TelephonyService",
            "getCallState",
            (e) =>
              e
                ? (__LOG__(
                    2
                  )`TelephonyService::getCallState calling telephony.callState`,
                  e.callState.then(
                    (t) => (
                      __LOG__(
                        2
                      )`TelephonyService::getCallState result ${JSON.stringify(
                        t
                      )}`,
                      t === e.CALLSTATE_IDLE ? "idle" : "busy"
                    ),
                    (e) => (
                      __LOG__(4)`TelephonyService::getCallState ${e}`, "unknown"
                    )
                  ))
                : "unknown",
            0
          )
        );
      }
    },
    function (e, t, n) {
      n.d(t, "d", function () {
        return h;
      }),
        n.d(t, "c", function () {
          return g;
        }),
        n.d(t, "b", function () {
          return E;
        }),
        n.d(t, "a", function () {
          return G;
        }),
        n.d(t, "e", function () {
          return M;
        });
      var r = n(26),
        i = n.n(r),
        a = n(2),
        o = n(12),
        u = n(89),
        s = n(22),
        l = n(90),
        c = n(87),
        d = n(119),
        f = n(50),
        _ = n(14),
        p = n(6),
        v = n(17);
      function h(e, t, n) {
        return m.apply(this, arguments);
      }
      function m() {
        return (m = i()(function* (e, t, n) {
          var r = yield (0, s.Q)(e);
          if (!r)
            return (
              __LOG__(
                2
              )`processPlaintextMedia message ${e} deleted while in finalization queue`,
              { type: "error", error: "gone" }
            );
          var i = r.dbMsg,
            a = r.dbMedia,
            o = a.mediaId,
            u = yield O(i, a, t);
          if ("ok" === u.type) {
            var l = u.plaintext;
            return (
              yield (0, s.nc)(o, u.plaintext, n), { type: "ok", plaintext: l }
            );
          }
          return u.type, { type: "error", error: u.error };
        })).apply(this, arguments);
      }
      function g(e, t) {
        return y.apply(this, arguments);
      }
      function y() {
        return (y = i()(function* (e, t) {
          var n = yield (0, s.Q)(e);
          if (!n)
            return (
              __LOG__(
                2
              )`processConvertedMedia message ${e} deleted while in finalization queue`,
              { status: "fail" }
            );
          var r = n.dbMedia.mediaId,
            i = yield (0, d.getChunkTable)().storeStickerFrame(r, t);
          return (
            yield (0, s.sc)(r, { frame: i }),
            __LOG__(
              2
            )`WEBP: new media URI ${i} for AlphaJpeg with msgId: ${e} was saved`,
            { status: "ok" }
          );
        })).apply(this, arguments);
      }
      function b(e, t) {
        var n = (0, f.e)(e);
        if (!n) return __LOG__(2)`Moving media from db and into storage`, !0;
        var r = (0, c.j)(n);
        return r
          ? (0, c.l)(r, t)
          : (__LOG__(2)`Do not move files from outside whatsapp folder`, !1);
      }
      function w(e) {
        var t = e.author === a.b;
        return void 0 === e.chat
          ? { isStatus: !0, outgoing: t }
          : t
          ? { outgoing: !0 }
          : (e.type === a.e.DOCUMENT && e.isVCard) ||
            null != e.viewOnceState ||
            (null != e.expiration &&
              e.expiration > _.k &&
              (0, v.a)("ephemeral_media_private"))
          ? { outgoing: !1, showInGallery: !1 }
          : { outgoing: !1, showInGallery: p.k.get().saveMediaToPhoneStorage };
      }
      function O(e, t, n) {
        return L(e.type)
          ? (function (e, t, n) {
              return S.apply(this, arguments);
            })(e, t, n)
          : (function (e, t) {
              return k.apply(this, arguments);
            })(t.mediaId, n);
      }
      function E(e, t, n, r) {
        return I.apply(this, arguments);
      }
      function I() {
        return (I = i()(function* (e, t, n, r) {
          if (((0, u.c)("maybeMoveMediaInStorage"), !L(e.type)))
            return { type: "ok", plaintext: n };
          var i = w(e);
          if (!b(n, i))
            return (
              __LOG__(
                2
              )`maybeMoveMediaInStorage: No need to move media file for ${e.id}`,
              { type: "ok", plaintext: n }
            );
          var a = r;
          if ((a || (a = yield (0, l.d)(n)), !a))
            return (
              __LOG__(3)`maybeMoveMediaInStorage: source blob not found`,
              { type: "error", error: "gone" }
            );
          __LOG__(2)`maybeMoveMediaInStorage: moving media file for ${t}`;
          var d = (0, l.h)(e) || _.G,
            f = (0, c.h)(d, i),
            p = (yield (0, o.e)("page", "craftMediaFilesystemPath", {
              path: f,
            })).path,
            v = yield (0, s.mc)(t, p);
          if (!v)
            return (
              __LOG__(
                3
              )`moveMediaInStorage failed to craft media ${t} filename`,
              { type: "error", error: "unknown" }
            );
          yield (0, o.e)("page", "deletePath", { path: v });
          var h = yield (0, o.e)("page", "putBlobToPhoneStorage", {
            path: v,
            blob: a,
          });
          if ("ok" === h.result) {
            yield (0, l.b)(n);
            var m = h.path;
            return (
              yield (0, s.Jc)(t, m),
              __LOG__(
                2
              )`moveMediaInStorage successfully put media ${t} content to phone storage at ${m}`,
              { type: "ok", plaintext: m }
            );
          }
          return "storage-gone" === h.result
            ? (__LOG__(
                3
              )`maybeMoveMediaInStorage: destination storage not found`,
              { type: "error", error: "gone" })
            : (h.result,
              __LOG__(2)`moveMediaInStorage not enough space to save media`,
              { type: "error", error: "not-enough-space" });
        })).apply(this, arguments);
      }
      function S() {
        return (S = i()(function* (e, t, n) {
          (0, u.c)("placeMediaInStorage");
          var r = t.plaintext;
          if (r) return E(e, t.mediaId, r, n);
          var i = (0, l.h)(e) || _.G,
            a = w(e),
            d = (0, c.h)(i, a),
            f = (yield (0, o.e)("page", "craftMediaFilesystemPath", {
              path: d,
            })).path,
            p = yield (0, s.mc)(t.mediaId, f);
          if (!p)
            return (
              __LOG__(
                3
              )`placeMediaInStorage failed to craft media ${t.mediaId} filename`,
              { type: "error", error: "unknown" }
            );
          yield (0, o.e)("page", "deletePath", { path: p });
          var v = yield (0, o.e)("page", "putBlobToPhoneStorage", {
            path: p,
            blob: n,
          });
          return "ok" === v.result
            ? (__LOG__(
                2
              )`placeMediaInStorage successfully put media ${t.mediaId} content to phone storage at ${p}`,
              { type: "ok", plaintext: v.path })
            : "storage-gone" === v.result
            ? (__LOG__(3)`placeMediaInStorage: destination storage not found`,
              { type: "error", error: "gone" })
            : (v.result,
              __LOG__(2)`placeMediaInStorage not enough space to save media`,
              { type: "error", error: "not-enough-space" });
        })).apply(this, arguments);
      }
      function k() {
        return (k = i()(function* (e, t) {
          var n = yield (0, d.getChunkTable)().storeFullContent(e, t);
          return (
            __LOG__(
              2
            )`placeMediaInDb successfully put media ${e} content to database`,
            { type: "ok", plaintext: n }
          );
        })).apply(this, arguments);
      }
      function L(e) {
        return e !== a.e.PTT;
      }
      function G(e) {
        return (
          ("video" === e.type && void 0 === e.modified) || "audio" === e.type
        );
      }
      function M(e, t) {
        return A.apply(this, arguments);
      }
      function A() {
        return (A = i()(function* (e, t) {
          __LOG__(
            2
          )`useMediaSource using source blob path as plaintext ref for media ${e.mediaId}`;
          var n = (0, f.f)(t);
          return n
            ? e.plaintext
              ? (__LOG__(2)`useMediaSource media already have plaintext`,
                { type: "ok", plaintext: e.plaintext })
              : (yield (0, s.nc)(e.mediaId, n, "dont-save"),
                { type: "ok", plaintext: n })
            : { type: "error", error: "unknown" };
        })).apply(this, arguments);
      }
    },
    function (e, t, n) {
      function r(e) {
        return n
          .e(52)
          .then(n.bind(null, 459))
          .then((t) => t.inflate(e));
      }
      function i() {
        var e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        return n
          .e(52)
          .then(n.bind(null, 459))
          .then((t) => t.createDeflate(e));
      }
      n.d(t, "b", function () {
        return r;
      }),
        n.d(t, "a", function () {
          return i;
        });
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return a;
      }),
        n.d(t, "b", function () {
          return u;
        }),
        n.d(t, "c", function () {
          return s;
        }),
        n(26);
      var r = n(24),
        i = n(241),
        a = class {
          constructor(e, t, n, r) {
            (this.aH = null),
              (this.aJ = !1),
              (this.aE = e),
              (this.aF = t),
              (this.aG = n);
            var i = { name: "AES-CBC", iv: r };
            this.aI = self.crypto.subtle
              .importKey("raw", n, "AES-CBC", !1, [t])
              .then((e) => ({ algo: i, key: e }));
          }
          append(e) {
            var t;
            this.aK("append");
            var n = this.aH;
            if (n)
              if ((n.writeByteArray(e), n.size() > 1024)) {
                var i = n.size() % 16;
                (t = n.readByteArray(n.size() - i)),
                  n.size() || (this.aH = null);
              } else t = null;
            else if (e.length > 1024) {
              var a = e.length % 16;
              a
                ? ((this.aH = new r.a(e)),
                  (t = this.aH.readByteArray(e.length - a)))
                : (t = e);
            } else (this.aH = new r.a(e)), (t = null);
            var o = t;
            return (
              o &&
                (this.aI = this.aI
                  .then((e) => {
                    var t = e.key,
                      n = e.algo;
                    if ("encrypt" === this.aF)
                      return self.crypto.subtle
                        .encrypt(n, t, o)
                        .then(
                          (e) => (
                            this.aE.writeByteArray(
                              new Uint8Array(e, 0, e.byteLength - 16)
                            ),
                            new Uint8Array(e, e.byteLength - 32, 16)
                          )
                        );
                    var r = o.slice(-16);
                    return self.crypto.subtle
                      .decrypt(n, t, o)
                      .then((e) => (this.aE.writeBuffer(e), r));
                  })
                  .then((e) => {
                    var t = { name: "AES-CBC", iv: e };
                    return self.crypto.subtle
                      .importKey("raw", this.aG, "AES-CBC", !1, [this.aF])
                      .then((e) => ({ algo: t, key: e }));
                  })),
              this.aI.then(() => {})
            );
          }
          finalize(e) {
            var t;
            if (
              (this.aK("finalize"),
              this.aH
                ? (e && this.aH.writeByteArray(e),
                  (t = this.aH.readByteArray()),
                  (this.aH = null))
                : e && (t = e),
              t)
            ) {
              var n = t;
              return this.aI
                .then((e) => {
                  var t = e.algo,
                    r = e.key;
                  return "encrypt" === this.aF
                    ? self.crypto.subtle.encrypt(t, r, n)
                    : self.crypto.subtle.decrypt(t, r, n);
                })
                .then((e) => {
                  this.aE.writeBuffer(e);
                });
            }
            return this.aI.then(() => {});
          }
          aK(e) {
            if (this.aJ)
              throw new Error(`AesCbcStream.${e} called after finalize`);
          }
        };
      function o(e) {
        return { name: "AES-CBC", iv: (0, i.a)(Uint8Array, e) };
      }
      function u(e, t, n) {
        var r = o(t);
        return Promise.resolve(
          self.crypto.subtle.importKey(
            "raw",
            (0, i.a)(Uint8Array, e),
            "AES-CBC",
            !1,
            ["decrypt"]
          )
        ).then((e) => self.crypto.subtle.decrypt(r, e, n));
      }
      function s(e, t, n) {
        return Promise.resolve().then(() => {
          var r,
            a = (function (e) {
              if (e) return (0, i.a)(Uint8Array, e);
              var t = new Uint8Array(16);
              return self.crypto.getRandomValues(t), t;
            })(n),
            u = o(a);
          return Promise.resolve(
            ((r = e),
            self.crypto.subtle.importKey(
              "raw",
              (0, i.a)(Uint8Array, r),
              "AES-CBC",
              !1,
              ["encrypt"]
            ))
          )
            .then((e) => self.crypto.subtle.encrypt(u, e, t))
            .then(
              (e) =>
                (function (e, t) {
                  var n =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : 0,
                    r = t.reduce((e, t) => e + t.length, n),
                    i = new e(r),
                    a = 0;
                  return (
                    t.forEach((e) => {
                      i.set(e, a), (a += e.length);
                    }),
                    i
                  );
                })(Uint8Array, [a, new Uint8Array(e)]).buffer
            );
        });
      }
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return a;
      }),
        n.d(t, "b", function () {
          return o;
        }),
        n.d(t, "c", function () {
          return u;
        });
      var r = n(2),
        i = n(15);
      function a(e, t) {
        var n = e.groupInfo,
          r = u(n.growthLocked, t.growthLocked, n.isAdmin, t.id, t.ts);
        if (r) {
          var i = r.msg,
            a = r.growthLocked;
          return "parent" === n.groupType
            ? null
            : {
                groupInfo: Object.assign({}, n, { growthLocked: a }),
                participantsInfo: null,
                msg: i,
              };
        }
      }
      function o(e, t) {
        var n = e.groupInfo,
          r = u(n.growthLocked, void 0, n.isAdmin, t.id, t.ts);
        if (r) {
          var i = r.msg,
            a = r.growthLocked;
          return "parent" === n.groupType
            ? null
            : {
                groupInfo: Object.assign({}, n, { growthLocked: a }),
                participantsInfo: null,
                msg: i,
              };
        }
      }
      function u(e, t, n, r, i) {
        if (null != t) {
          if (null != e && e.type === t.type) {
            var a = e.expiration;
            if (t.expiration <= a) return;
            return { growthLocked: t };
          }
          return { growthLocked: t, msg: n ? s(r, i, t) : void 0 };
        }
        if (null != e) return { growthLocked: t, msg: n ? l(r, i) : void 0 };
      }
      function s(e, t, n) {
        return {
          externalId: `/growth_locked/${n.type}/${e}`,
          ts: t,
          author: r.c,
          ack: i.a.RECEIVED,
          type: r.f.GROUP_NOTIFICATION,
          subtype: "growth_locked",
          growthLocked: n,
          altIndex: "",
        };
      }
      function l(e, t) {
        return {
          externalId: "/growth_unlocked/" + e,
          ts: t,
          author: r.c,
          ack: i.a.RECEIVED,
          type: r.f.GROUP_NOTIFICATION,
          subtype: "growth_unlocked",
          altIndex: "",
        };
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return o;
      });
      var r = n(115),
        i = n(2),
        a = n(165);
      function o(e) {
        var t = {
            msg: e.msg,
            media: e.media,
            quotedData: e.quotedData,
            contactVerification: e.contactVerification,
            pushname: e.pushname,
            isHsm: e.isHsm,
            urlNumber: e.urlNumber,
            urlText: e.urlText,
            ephSetting: e.ephSetting,
            ephemeralSharedSecret: e.ephemeralSharedSecret,
          },
          n = t.msg;
        if (n.type !== i.f.POLL) return Promise.resolve(t);
        var o = n.options,
          u = o.map(a.c).map(r.b);
        return Promise.all(u).then((e) => {
          var r = new Set(),
            i = [];
          return (
            e.forEach((e, t) => {
              r.has(e) || (r.add(e), i.push(o[t]));
            }),
            i.length < 2
              ? (__LOG__(
                  4
                )`parsePollCreationContent: poll_creation_invalid_options_count unique too few`,
                Promise.reject(new Error("parser-error")))
              : ((n.options = i), t)
          );
        });
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return o;
      }),
        n.d(t, "a", function () {
          return u;
        });
      var r = n(7);
      function i(e) {
        return "msg" === e ? 0 : "pkmsg" === e ? 1 : 2;
      }
      function a(e) {
        var t = null,
          n = null;
        if ("multicast" === e.type) {
          var i = e.to;
          n = null != (0, r.p)(i) ? 1 : (0, r.c)(i) ? 3 : 2;
        } else (n = 0), (t = (0, r.r)(e.to) ? 1 : 2);
        return { e2eDestination: n, e2eReceiverType: t };
      }
      function o(e) {
        var t = e.type,
          n = e.destination,
          r = e.e2eSuccessful,
          o = e.messageMediaType,
          u = i(t),
          s = a(n),
          l = s.e2eDestination,
          c = s.e2eReceiverType,
          d = null;
        e.retryCount && (d = e.retryCount);
        var f = {
          e2eCiphertextVersion: 2,
          e2eCiphertextType: u,
          e2eDestination: l,
          e2eSuccessful: r,
          e2eReceiverType: c,
          messageMediaType: o,
          retryCount: d,
        };
        r
          ? WAM.log("regular", 476, void 0, [
              5,
              0,
              f.e2eCiphertextType,
              6,
              0,
              f.e2eCiphertextVersion,
              4,
              0,
              f.e2eDestination,
              2,
              0,
              f.e2eFailureReason,
              8,
              0,
              f.e2eReceiverType,
              1,
              1,
              f.e2eSuccessful,
              9,
              0,
              f.encRetryCount,
              12,
              1,
              f.isLid,
              10,
              1,
              f.messageIsInvisible,
              7,
              0,
              f.messageMediaType,
              3,
              0,
              f.retryCount,
              11,
              0,
              f.revokeType,
              13,
              0,
              f.typeOfGroup,
            ])
          : 1 * Math.random() < 1 &&
            WAM.log(
              "regular",
              476,
              void 0,
              [
                5,
                0,
                f.e2eCiphertextType,
                6,
                0,
                f.e2eCiphertextVersion,
                4,
                0,
                f.e2eDestination,
                2,
                0,
                f.e2eFailureReason,
                8,
                0,
                f.e2eReceiverType,
                1,
                1,
                f.e2eSuccessful,
                9,
                0,
                f.encRetryCount,
                12,
                1,
                f.isLid,
                10,
                1,
                f.messageIsInvisible,
                7,
                0,
                f.messageMediaType,
                3,
                0,
                f.retryCount,
                11,
                0,
                f.revokeType,
                13,
                0,
                f.typeOfGroup,
              ],
              void 0,
              1
            );
      }
      function u(e) {
        var t = e.type,
          n = e.destination,
          r = e.e2eSuccessful,
          o = e.messageMediaType,
          u = e.e2eSenderType,
          s = e.e2eFailureReason,
          l = i(t),
          c = a(n).e2eDestination,
          d = null;
        e.retryCount && (d = e.retryCount);
        var f = {
          e2eCiphertextVersion: 2,
          e2eCiphertextType: l,
          e2eDestination: c,
          e2eSuccessful: r,
          e2eSenderType: u,
          e2eFailureReason: s,
          messageMediaType: o,
          retryCount: d,
        };
        r
          ? WAM.log("regular", 478, void 0, [
              5,
              0,
              f.e2eCiphertextType,
              6,
              0,
              f.e2eCiphertextVersion,
              4,
              0,
              f.e2eDestination,
              2,
              0,
              f.e2eFailureReason,
              8,
              0,
              f.e2eSenderType,
              1,
              1,
              f.e2eSuccessful,
              11,
              1,
              f.isLid,
              7,
              0,
              f.messageMediaType,
              9,
              1,
              f.offline,
              3,
              0,
              f.retryCount,
              10,
              0,
              f.revokeType,
              12,
              0,
              f.typeOfGroup,
            ])
          : 1 * Math.random() < 1 &&
            WAM.log(
              "regular",
              478,
              void 0,
              [
                5,
                0,
                f.e2eCiphertextType,
                6,
                0,
                f.e2eCiphertextVersion,
                4,
                0,
                f.e2eDestination,
                2,
                0,
                f.e2eFailureReason,
                8,
                0,
                f.e2eSenderType,
                1,
                1,
                f.e2eSuccessful,
                11,
                1,
                f.isLid,
                7,
                0,
                f.messageMediaType,
                9,
                1,
                f.offline,
                3,
                0,
                f.retryCount,
                10,
                0,
                f.revokeType,
                12,
                0,
                f.typeOfGroup,
              ],
              void 0,
              1
            );
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return a;
      }),
        n.d(t, "a", function () {
          return o;
        });
      var r = n(343),
        i = n(41);
      function a() {
        return i.a;
      }
      var o = class extends r.a {
        constructor(e) {
          super(i.a, e);
        }
      };
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return d;
      }),
        n.d(t, "a", function () {
          return f;
        });
      var r = n(24),
        i = n(9),
        a = n(84),
        o = n(112),
        u = n(149),
        s = n(3),
        l = n(4),
        c = n(74),
        d = class extends Error {
          constructor(e, t) {
            super(`XmppParsingFailure: ${e}: ${t}`),
              (this.name = "XmppParsingFailure"),
              (this.parser = e),
              (this.reason = t);
          }
        },
        f = class extends class {
          constructor(e, t) {
            (this.Du = e),
              (this.Dv = t),
              (this.Dw = Array.isArray(t.content)
                ? t.content.map((t) => new this.constructor(e, t))
                : null);
          }
          name() {
            return this.Du;
          }
          node() {
            return this.Dv;
          }
          hasAttr(e) {
            return (0, o.a)(this.Dv.attrs, e);
          }
          assertTag(e) {
            this.Dv.tag !== e && this.throw(`to be <${e}>`);
          }
          tag() {
            return this.Dv.tag;
          }
          maybeChild(e) {
            var t = this.Dw;
            if (!t) return null;
            for (var n = 0; n < t.length; n++)
              if (t[n].tag() === e) return t[n];
            return null;
          }
          hasChild(e) {
            return !!this.maybeChild(e);
          }
          child(e) {
            return this.maybeChild(e) || this.throw(`to have child <${e}>`);
          }
          assertAttr(e, t) {
            var n = this.attrString(e);
            n !== t &&
              this.throw(`to have "${e}"="${t}", but instead has "${n}"`);
          }
          attrString(e) {
            return (0, o.a)(this.Dv.attrs, e)
              ? this.decodeAsString(this.Dv.attrs[e])
              : this.throw(`to have attribute "${e}"`);
          }
          forEachAttributeKey(e) {
            var t = this.Dv.attrs;
            Object.keys(t).forEach((t) => e(t));
          }
          maybeAttrString(e) {
            return this.hasAttr(e)
              ? this.decodeAsString(this.Dv.attrs[e])
              : null;
          }
          maybeAttrInt(e, t, n) {
            return this.hasAttr(e) ? this.attrInt(e, t, n) : null;
          }
          attrEnumValues(e, t, n) {
            var r = new Set(t),
              i = this.attrString(e);
            if (!r.has(i)) {
              if (null != n) return n;
              var a = Array.from(r).join("|");
              return this.throw(`to have "${e}"={${a}} but has value "${i}"`);
            }
            return i;
          }
          attrEnum(e, t) {
            var n = this.attrString(e);
            if (!(0, o.a)(t, n)) {
              var r = Object.keys(t).join("|");
              return this.throw(`to have "${e}"={${r}} but has value "${n}"`);
            }
            return t[n];
          }
          attrEnumOrNullIfUnknown(e, t) {
            var n = this.attrString(e);
            return (0, o.a)(t, n) ? t[n] : null;
          }
          attrEnumOrDefault(e, t, n) {
            return this.hasAttr(e) ? this.attrEnum(e, t) : n;
          }
          attrInt(e, t, n) {
            var r = this.attrString(e);
            return this.Dx(r, e, t, n);
          }
          Dx(e, t, n, r) {
            var i = parseInt(e, 10);
            return Number.isNaN(i)
              ? this.throw(`to have "${t}"={integer} but has value "${e}"`)
              : void 0 !== n && i < n
              ? this.throw(`to have "${t}"={at least ${n}} but has value ${i}`)
              : void 0 !== r && i >= r
              ? this.throw(`to have "${t}"={below ${r}} but has value ${i}`)
              : i;
          }
          forEachChild(e) {
            var t = this.Dw;
            if (t) t.forEach((t) => e(t));
            else if (null != this.Dv.content)
              return this.throw("to have children");
          }
          forEachChildWithTag(e, t) {
            this.forEachChild((n) => {
              n.tag() === e && t(n);
            });
          }
          mapChildren(e) {
            var t = this.Dw;
            return t || null == this.Dv.content
              ? t
                ? t.map((t) => e(t))
                : []
              : this.throw("to have children");
          }
          mapChildrenWithTag(e, t) {
            var n = this.Dw;
            return n || null == this.Dv.content
              ? n
                ? n.filter((t) => t.tag() === e).map((e) => t(e))
                : []
              : this.throw("to have children");
          }
          mapFirstChild(e) {
            var t = this.Dw;
            return t && 0 !== t.length
              ? e(t[0])
              : this.throw("to have children");
          }
          hasContent() {
            return !this.Dw && !!this.Dv.content;
          }
          hasChildren() {
            return null != this.Dw;
          }
          getChildren() {
            return this.Dw;
          }
          mapAttrKeys(e) {
            var t = this.getAttrKeys();
            return t && t.length ? t.map(e) : [];
          }
          getAttrKeys() {
            return Object.keys(this.Dv.attrs);
          }
          hasAttrs() {
            return (this.Dv.attrs ? Object.keys(this.Dv.attrs) : []).length > 0;
          }
          getNode() {
            return this.Dv;
          }
          unsafeSetChildren(e) {
            this.Dw = e;
          }
          unsafeSetNodeContent(e) {
            this.Dv.content = e;
          }
          contentUint(e) {
            return (function (e, t) {
              for (var n = 0, r = 0; r < t; r++) n = 256 * n + e[r];
              return n;
            })(this.contentBytes(e), e);
          }
          contentBytes() {
            var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : -1;
            if (this.Dw)
              return this.throw(
                "to have binary content, but has children instead"
              );
            if (null != this.Dv.content) {
              var t = this.Dv.content;
              return -1 !== e && t.length !== e
                ? this.throw(`to be ${e} bytes, but got ${t.length} instead`)
                : t;
            }
            return this.throw("to have content");
          }
          contentString() {
            return this.Dw
              ? this.throw("to have string content, but has children instead")
              : null != this.Dv.content
              ? this.Dv.content
              : this.throw("to have content");
          }
          contentInt(e, t) {
            var n = this.contentString();
            return this.Dx(n, "content", e, t);
          }
          contentEnum(e) {
            var t = this.contentString();
            if (!(0, o.a)(e, t)) {
              var n = Object.keys(e).join("|");
              return this.throw(`to have content {${n}} but has value "${t}"`);
            }
            return e[t];
          }
          decodeAsString(e) {
            if ("string" != typeof e)
              throw new Error(
                `decodeAsString: attribute is ${typeof e} not a string: ${e}`
              );
            return e;
          }
          throw(e) {
            throw new (class {
              constructor(e, t) {
                (this.parser = e), (this.reason = t);
              }
              toString() {
                return `XmlParsingFailure: ${this.parser}: ${this.reason}`;
              }
            })(this.Du, `expected <${this.Dv.tag}> ${e}`);
          }
          toString() {
            return this.Dv.toString();
          }
        } {
          constructor(e, t) {
            super(e, t);
          }
          assertFromServer() {
            var e = this.attrString("from");
            e !== i.i &&
              this.throw(
                `to have "from"="s.whatsapp.net", but instead has "${e}"`
              );
          }
          attrUserJid(e) {
            var t = this.attrString(e),
              n = (0, i.A)(t);
            return null == n.userJid
              ? this.throw(`to have "${e}"={UserJid}, but instead has "${t}"`)
              : n.userJid;
          }
          attrPhoneUserJid(e) {
            var t = this.attrString(e),
              n = (0, i.A)(t);
            return "phoneUser" === n.jidType
              ? n.userJid
              : this.throw(
                  `to have "${e}"={PhoneUserJid}, but instead has "${t}"`
                );
          }
          attrLidUserJid(e) {
            var t = this.attrString(e),
              n = (0, i.A)(t);
            return "lidUser" === n.jidType
              ? n.userJid
              : this.throw(
                  `to have "${e}"={LidUserJid}, but instead has "${t}"`
                );
          }
          maybeAttrUserJid(e) {
            return this.hasAttr(e) ? this.attrUserJid(e) : null;
          }
          maybeAttrPhoneUserJid(e) {
            return this.hasAttr(e) ? this.attrPhoneUserJid(e) : null;
          }
          maybeAttrLidUserJid(e) {
            return this.hasAttr(e) ? this.attrLidUserJid(e) : null;
          }
          attrGroupJid(e) {
            var t = this.attrString(e),
              n = (0, i.A)(t);
            return null == n.groupJid
              ? this.throw(`to have "${e}"={GroupJid}, but instead has "${t}"`)
              : n.groupJid;
          }
          maybeAttrGroupJid(e) {
            return this.hasAttr(e) ? this.attrGroupJid(e) : null;
          }
          attrChatJid(e) {
            var t = this.attrString(e),
              n = (0, i.A)(t);
            return null != n.userJid
              ? n.userJid
              : null != n.groupJid
              ? n.groupJid
              : this.throw(`to have "${e}"={ChatJid}, but instead has "${t}"`);
          }
          attrPhoneChatJid(e) {
            var t = this.attrString(e),
              n = (0, i.A)(t);
            return "phoneUser" === n.jidType
              ? n.userJid
              : "group" === n.jidType
              ? n.groupJid
              : this.throw(`to have "${e}"={ChatJid}, but instead has "${t}"`);
          }
          attrDeviceJid(e) {
            var t = this.attrString(e),
              n = (0, i.A)(t);
            return null != n.deviceJid
              ? n.deviceJid
              : null != n.userJid
              ? (0, i.p)(n.userJid)
              : this.throw(
                  `to have "${e}"={DeviceJid}, but instead has "${t}"`
                );
          }
          attrPhoneDeviceJid(e) {
            var t = this.attrString(e),
              n = (0, i.A)(t);
            return "phoneDevice" === n.jidType
              ? n.deviceJid
              : "phoneUser" === n.jidType
              ? (0, i.r)(n.userJid)
              : this.throw(
                  `to have "${e}"={DeviceJid}, but instead has "${t}"`
                );
          }
          attrDeviceId(e) {
            var t = this.attrInt(e);
            return (0, i.B)(t);
          }
          attrFromJidChat() {
            var e = this.attrJidWithType();
            switch (e.jidType) {
              case "msgrUser":
                var t = e.userJid,
                  n = (0, i.p)(t);
                return { type: "device", chat: t, deviceJid: n, author: n };
              case "phoneUser":
                var r = e.userJid,
                  a = (0, i.p)(r);
                return { type: "device", chat: r, deviceJid: a, author: a };
              case "lidUser":
                var o = e.userJid,
                  u = (0, i.q)(o);
                return { type: "device", chat: o, deviceJid: u, author: u };
              case "phoneDevice":
                var s = e.deviceJid;
                return {
                  type: "device",
                  chat: (0, i.w)(s),
                  deviceJid: s,
                  author: s,
                };
              case "msgrDevice":
                var l = e.deviceJid;
                return {
                  type: "device",
                  chat: (0, i.w)(l),
                  deviceJid: l,
                  author: l,
                };
              case "lidDevice":
                var c = e.deviceJid;
                return {
                  type: "device",
                  chat: (0, i.w)(c),
                  deviceJid: c,
                  author: c,
                };
              case "group":
                var d = this.hasAttr("participant")
                  ? this.attrDeviceJid("participant")
                  : null;
                return null == d
                  ? this.throw("expected to have participant JID for group")
                  : {
                      type: "group",
                      chat: e.groupJid,
                      groupJid: e.groupJid,
                      author: d,
                    };
              case "broadcast":
                var f = this.hasAttr("participant")
                  ? this.attrDeviceJid("participant")
                  : null;
                return null == f
                  ? this.throw("expected to have participant JID for group")
                  : {
                      type: "broadcast",
                      broadcastJid: e.broadcastJid,
                      chat: (0, i.w)(f),
                      author: f,
                    };
              case "call":
                throw (
                  (__LOG__(
                    4
                  )`ParsableWapNode: attrFromJid() is called with ${e.callJid}`,
                  new Error(
                    "ParsableWapNode: attrFromJid() does not support CallJid"
                  ))
                );
              default:
                return (
                  e.jidType,
                  this.throw(
                    "attrFromJidChat should not be used with a status jid"
                  )
                );
            }
          }
          attrFromJidPhoneChat() {
            var e = this.attrJidWithType();
            switch (e.jidType) {
              case "phoneUser":
                var t = e.userJid,
                  n = (0, i.r)(t);
                return { type: "device", chat: t, deviceJid: n, author: n };
              case "phoneDevice":
                var r = e.deviceJid;
                return {
                  type: "device",
                  chat: (0, i.u)(r),
                  deviceJid: r,
                  author: r,
                };
              case "group":
                var a = this.hasAttr("participant")
                  ? this.attrPhoneDeviceJid("participant")
                  : null;
                return null == a
                  ? this.throw("expected to have participant JID for group")
                  : {
                      type: "group",
                      chat: e.groupJid,
                      groupJid: e.groupJid,
                      author: a,
                    };
              case "broadcast":
                var o = this.hasAttr("participant")
                  ? this.attrPhoneDeviceJid("participant")
                  : null;
                return null == o
                  ? this.throw("expected to have participant JID for group")
                  : {
                      type: "broadcast",
                      broadcastJid: e.broadcastJid,
                      chat: (0, i.u)(o),
                      author: o,
                    };
              case "call":
                throw (
                  (__LOG__(
                    4
                  )`ParsableWapNode: attrFromJid() is called with ${e.callJid}`,
                  new Error(
                    "ParsableWapNode: attrFromJid() does not support CallJid"
                  ))
                );
              default:
                return (
                  e.jidType,
                  this.throw(
                    "attrFromJidChat should not be used with jid of type " +
                      e.jidType
                  )
                );
            }
          }
          attrFromPhoneJid() {
            if ("status" === this.attrJidWithType().jidType) {
              var e = this.hasAttr("participant")
                ? this.attrPhoneDeviceJid("participant")
                : null;
              return null == e
                ? this.throw("to have participant for status msg")
                : { type: "status", author: e };
            }
            return this.attrFromJidPhoneChat();
          }
          attrFromJid() {
            if ("status" === this.attrJidWithType().jidType) {
              var e = this.hasAttr("participant")
                ? this.attrPhoneDeviceJid("participant")
                : null;
              return null == e
                ? this.throw("to have participant for status msg")
                : { type: "status", author: e };
            }
            return this.attrFromJidChat();
          }
          attrJidWithType() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "from",
              t = this.attrString(e),
              n = (0, i.A)(t);
            return "unknown" === n.jidType
              ? this.throw(`to have "${e}"={Jid}, but instead has "${t}"`)
              : n;
          }
          attrWapJid() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "from",
              t = this.attrString(e),
              n = (0, i.A)(t);
            return "unknown" === n.jidType
              ? c.c.create(null, t)
              : (0, l.g)((0, i.t)(n));
          }
          attrLongInt(e) {
            var t = this.attrString(e);
            return (0, a.a)(t);
          }
          attrTime(e) {
            return (0, s.i)(this.attrInt(e));
          }
          attrFutureTime(e) {
            var t = this.attrInt(e);
            return (0, s.k)(t);
          }
          contentString() {
            if (this.hasChildren())
              return this.throw(
                "to have string content, but has children instead"
              );
            if (this.hasContent()) {
              var e = new r.a(this.contentBytes());
              return e.readString(e.size());
            }
            return this.throw("to have content");
          }
          decodeAsString(e) {
            return (0, l.p)(e);
          }
          contentSerializedPubKey() {
            return this.hasContent()
              ? (0, u.e)(this.contentBytes())
              : this.throw("to have content");
          }
          createParseError(e) {
            return new d(this.name(), `expected <${this.tag()}> ${e}`);
          }
          throw(e) {
            throw this.createParseError(e);
          }
        };
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return a;
      });
      var r = n(165),
        i = n(74);
      function a(e, t) {
        return (
          (function (e, t) {
            var n = e.tag,
              r = t.tag;
            if ("smax$any" !== r && n !== r)
              throw new Error(`tag mismatch: ${n} != ${r}`);
          })(e, t),
          (function (e, t) {
            var n = e.attrs,
              r = t.attrs;
            Object.keys(r).forEach((e) => {
              var t,
                a,
                o = r[e],
                u = n[e];
              if (null != o && null != u) {
                if (
                  ((a = u),
                  "string" == typeof (t = o) && "string" == typeof a
                    ? t === a
                    : t instanceof i.c &&
                      a instanceof i.c &&
                      t.toString() === a.toString())
                )
                  return;
                throw new Error("conflict for key: " + e);
              }
              n[e] = o;
            });
          })(e, t),
          t.content instanceof Uint8Array
            ? (function (e, t) {
                var n = e.content;
                if (n instanceof Uint8Array) {
                  if (!(0, r.d)(n, t))
                    throw new Error(
                      "elementValue mismatch: bytes dose not equal"
                    );
                } else {
                  if (null != n)
                    throw new Error(
                      "elementValue mismatch: destination has children"
                    );
                  e.content = t;
                }
              })(e, t.content)
            : null != t.content &&
              (function (e, t) {
                var n = e.content;
                if (n instanceof Uint8Array)
                  throw new Error(
                    "children mismatch: destination has element value"
                  );
                if (null != n && 0 !== n.length) {
                  if (
                    !(function (e, t) {
                      for (
                        var n = o(t), r = o(e), i = Object.keys(n), a = 0;
                        a < i.length;
                        a++
                      ) {
                        var u = i[a],
                          s = n[u],
                          l = r[u];
                        if (null != s && null != l && s !== l) return !1;
                      }
                      return !0;
                    })(n, t)
                  )
                    throw new Error(
                      "children mismatch: child counts are not compatible"
                    );
                  var r = [],
                    i = Array.from(n);
                  t.forEach((e) => {
                    var t = i.findIndex((t) => t.tag === e.tag);
                    if (-1 === t) r.push(e);
                    else {
                      var n = a(i.splice(t, 1)[0], e);
                      r.push(n);
                    }
                  }),
                    i.forEach((e) => r.push(e)),
                    (e.content = r);
                } else e.content = t;
              })(e, t.content),
          e
        );
      }
      function o(e) {
        return e.reduce((e, t) => {
          var n = t.tag,
            r = e[n];
          return (e[n] = null == r ? 1 : r + 1), e;
        }, {});
      }
    },
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return v;
      }),
        n.d(t, "a", function () {
          return h;
        }),
        n.d(t, "c", function () {
          return m;
        }),
        n.d(t, "e", function () {
          return g;
        }),
        n.d(t, "g", function () {
          return y;
        }),
        n.d(t, "f", function () {
          return b;
        }),
        n.d(t, "d", function () {
          return O;
        });
      var r = n(9),
        i = n(7),
        a = n(101),
        o = n(4),
        u = n(320),
        s = n(56),
        l = n(297),
        c = n(215),
        d = n(287),
        f = n(117),
        _ = n(41),
        p = n(325);
      function v(e) {
        return h("none", null, e);
      }
      function h(e, t, n, r) {
        return (0, o.w)(
          "enc",
          {
            v: (0, o.b)("2"),
            type: e,
            mediatype: n || o.c,
            count: r ? (0, o.f)(r) : o.c,
          },
          t
        );
      }
      function m(e) {
        var t = (0, a.a)(s.h, e);
        return (0, u.b)(t), t.readByteArray();
      }
      function g(e, t, n) {
        var r = t.dbMsg,
          a = (0, l.e)(r),
          o = (0, i.h)(e);
        return (0, p.b)(o, t).then((t) => y(e, t, a, n));
      }
      function y(e, t, n, r) {
        var i = m(t);
        return (0, c.ensureE2eSession)(e).then(() =>
          (0, _.o)(e, i).then((i) => w(e, t, i, n, r))
        );
      }
      function b(e, t, n, r, a) {
        var o = t.dbMsg,
          u = (0, l.e)(o),
          s = (0, i.h)(e);
        return (0, p.b)(s, t).then((t) => {
          var i = m(t);
          return (0, c.ensureE2eSession)(e).then(() =>
            (0, _.p)(e, i, r, a).then((r) => {
              if (null != r) return w(e, t, r, u, n);
            })
          );
        });
      }
      function w(e, t, n, r, i) {
        var a = n.type,
          o = n.ciphertext,
          u = n.identityId;
        return (
          E(a, { type: "user", to: e }, t, i),
          { encNode: h(a, o, r, i), identityId: u }
        );
      }
      function O(e) {
        var t = (0, p.a)(e),
          n = m(t),
          i = "group" === e.type ? e.jid : r.h;
        return (0, _.n)(i, n).then((n) => {
          var r = n.type,
            a = n.ciphertext,
            o = n.senderKeyBytes,
            u = e.dbMsg.resendCount,
            s = (0, l.e)(e.dbMsg);
          return (
            E(r, { type: "multicast", to: i }, t, u),
            { encNode: h(r, a, s), senderKeyBytes: o }
          );
        });
      }
      function E(e, t, n, r) {
        (0, d.b)({
          type: e,
          destination: t,
          messageMediaType: (0, f.e)(n),
          e2eSuccessful: !0,
          retryCount: r,
        });
      }
    },
    function (e, t, n) {
      n.d(t, "e", function () {
        return u;
      }),
        n.d(t, "f", function () {
          return s;
        }),
        n.d(t, "b", function () {
          return l;
        }),
        n.d(t, "c", function () {
          return c;
        }),
        n.d(t, "d", function () {
          return d;
        }),
        n.d(t, "a", function () {
          return f;
        });
      var r = n(2),
        i = n(35),
        a = n(4),
        o = n(34);
      function u(e) {
        switch (e.type) {
          case r.f.IMAGE:
            return "image";
          case r.f.AUDIO:
            return "audio";
          case r.f.PTT:
            return "ptt";
          case r.f.VIDEO:
            return "video";
          case r.f.GIF:
            return "gif";
          case r.f.VCARD:
            return "vcard";
          case r.f.LOCATION:
            return "location";
          case r.f.DOCUMENT:
            return "document";
          case r.f.STICKER:
            return "sticker";
          case r.f.REACTION:
          default:
            return a.c;
        }
      }
      function s(e) {
        return (0, i.e)(e)
          ? "media"
          : e.type === r.f.REACTION
          ? "reaction"
          : "text";
      }
      function l(e) {
        return e.isMulticast ? (0, a.w)("multicast", null) : null;
      }
      function c(e) {
        return e.urlNumber ? (0, a.w)("url_number", null) : null;
      }
      function d(e) {
        return e.urlText ? (0, a.w)("url_text", null) : null;
      }
      function f(e) {
        return e.type === r.f.REVOKED
          ? (0, a.f)(null == e.adminJid ? o.b : o.a)
          : (e.type === r.f.REACTION && void 0 === e.text) ||
            !0 === e.senderSuperpower
          ? (0, a.f)(o.b)
          : a.c;
      }
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return u;
      }),
        n.d(t, "a", function () {
          return s;
        }),
        n(69);
      var r,
        i = 0,
        a =
          ((r = []),
          {
            subscribe: function (e) {
              r.push(e);
            },
            notify: function (e) {
              0 === r.length &&
                __LOG__(4)`[PRE] There are no subscribers to PRE events`,
                r.forEach((t) => {
                  t(e);
                });
            },
            clear: function () {
              __LOG__(3)`Removing all listeners from PRE_METRICS`,
                (r.length = 0);
            },
          }),
        o = a.notify,
        u = a.subscribe;
      function s(e, t, n, r) {
        null == n && i++;
        var a = null != n ? n : i;
        return (
          o(
            null == n
              ? {
                  name: e,
                  stage: "START",
                  instanceKey: a,
                  annotations: t,
                  nonTrackableAnnotations: r,
                }
              : { name: e, stage: "RESUME", instanceKey: a, annotations: t }
          ),
          {
            addPoint(t, n) {
              o({
                name: e,
                stage: "POINT",
                reason: t,
                instanceKey: a,
                annotations: n,
              });
            },
            endSuccess(t) {
              o({ name: e, stage: "SUCCESS", instanceKey: a, annotations: t });
            },
            endFail(t, n) {
              o({
                name: e,
                stage: "FAIL",
                reason: t,
                instanceKey: a,
                annotations: n,
              });
            },
          }
        );
      }
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "d", function () {
        return s;
      }),
        n.d(t, "a", function () {
          return l;
        }),
        n.d(t, "e", function () {
          return c;
        }),
        n.d(t, "b", function () {
          return f;
        }),
        n.d(t, "c", function () {
          return _;
        }),
        n.d(t, "f", function () {
          return p;
        });
      var r = n(3),
        i = n(11),
        a = n(10),
        o = n(46),
        u = n(36);
      function s(e, t) {
        return (0, a.f)("participantForgotKey", (n) =>
          (0, o.a)(n, "rw", ["groupParticipantsInfo"], (n) =>
            (function (e, t, n) {
              return (0, u.t)(e, t).then((t) => {
                if (t && !t.rotateSenderKey && !1 !== t.knowsSenderKey.get(n)) {
                  var r = new Map(t.knowsSenderKey);
                  r.set(n, !1);
                  var a = (0, i.j)(t, { knowsSenderKey: r });
                  return (0, u.B)(e, a).then(() => a);
                }
              });
            })(n, e, t)
          )
        );
      }
      function l(e) {
        return (0, a.f)("getParticipantsInfo", (t) =>
          (0, o.b)(t, (t) => (0, u.t)(t, e))
        );
      }
      function c(e) {
        return (0, a.f)("rotateSenderKey", (t) =>
          (0, o.a)(t, "rw", ["groupParticipantsInfo"], (t) =>
            (function (e, t) {
              return (0, u.t)(e, t).then((t) => {
                if (t) {
                  var n = new Map();
                  Array.from(t.knowsSenderKey.keys()).forEach((e) => {
                    n.set(e, !1);
                  });
                  var a = (0, i.j)(t, {
                    rotateSenderKey: !1,
                    senderKeyTimestamp: (0, r.D)(),
                    keyIncrement: (t.keyIncrement || 0) + 1,
                    knowsSenderKey: n,
                  });
                  return (0, u.B)(e, a).then(() => a);
                }
              });
            })(t, e)
          )
        );
      }
      var d = 30 * r.b;
      function f(e, t) {
        var n = new Map(e.knowsSenderKey),
          r = !1;
        return (
          t.forEach((e) => {
            n.get(e) || (n.set(e, !0), (r = !0));
          }),
          r ? Object.assign({}, e, { knowsSenderKey: n }) : null
        );
      }
      function _(e) {
        return e.rotateSenderKey || !(0, r.m)(e.senderKeyTimestamp, d);
      }
      function p(e, t, n) {
        var r = new Map(e.knowsSenderKey),
          a = !1;
        return (
          n.forEach((e) => {
            r.has(e) && ((a = !0), r.delete(e));
          }),
          t.forEach((e) => {
            r.has(e) || r.set(e, !1);
          }),
          (0, i.j)(e, {
            knowsSenderKey: r,
            rotateSenderKey: a || e.rotateSenderKey,
          })
        );
      }
    },
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "o", function () {
        return h;
      }),
        n.d(t, "l", function () {
          return m;
        }),
        n.d(t, "p", function () {
          return g;
        }),
        n.d(t, "i", function () {
          return y;
        }),
        n.d(t, "f", function () {
          return b;
        }),
        n.d(t, "g", function () {
          return w;
        }),
        n.d(t, "r", function () {
          return O;
        }),
        n.d(t, "n", function () {
          return E;
        }),
        n.d(t, "a", function () {
          return I;
        }),
        n.d(t, "h", function () {
          return S;
        }),
        n.d(t, "k", function () {
          return k;
        }),
        n.d(t, "q", function () {
          return L;
        }),
        n.d(t, "m", function () {
          return G;
        }),
        n.d(t, "e", function () {
          return A;
        }),
        n.d(t, "j", function () {
          return P;
        }),
        n.d(t, "b", function () {
          return N;
        }),
        n.d(t, "c", function () {
          return D;
        }),
        n.d(t, "d", function () {
          return U;
        });
      var r = n(15),
        i = n(2),
        a = n(6),
        o = n(40),
        u = n(148),
        s = n(92),
        l = "transparent";
      function c(e, t, n) {
        return {
          preview: e || null,
          plaintextHash: (null == t ? void 0 : t.plaintextHash) || null,
          mmsThumbInfo:
            t && t.thumbPlaintextHash
              ? { hash: t.thumbPlaintextHash, blob: n || null }
              : void 0,
        };
      }
      function d(e) {
        return e ? { preview: e } : null;
      }
      function f(e, t, n, r) {
        var i = v(e, t, r);
        return n && (i.remoteJid = n), i;
      }
      function _(e, t, n, r, i) {
        var a = f(e, t, n, i);
        return r && (a.mentionedJids = r), a;
      }
      function p(e, t, n) {
        return v(e, t, n);
      }
      function v(e, t, n) {
        var r = {
          externalId: e,
          ts: t,
          author: i.b,
          ack: i.a.CLOCK,
          altIndex: "",
        };
        return (
          n &&
            (n.isMulticast && (r.isMulticast = n.isMulticast),
            (r.forwardingScore = n.forwardingScore),
            (r.forwardOriginalTs = n.forwardOriginalTs)),
          r
        );
      }
      function h(e, t, n, r, a, o, u) {
        return {
          msg: Object.assign({ type: i.f.TEXT }, _(e, t, n, r, u), a),
          media: d(o),
        };
      }
      function m(e, t, n, r, a) {
        return {
          msg: Object.assign({ type: i.f.TEXT }, p(e, t, a), n),
          media: d(r),
        };
      }
      function g(e, t, n, r, a) {
        return {
          msg: Object.assign({ type: i.f.VCARD }, f(e, t, n, a), {
            contacts: r.contacts,
          }),
        };
      }
      function y(e, t, n, r, a, o) {
        return {
          msg: Object.assign({ type: i.f.LOCATION }, f(e, t, n, o), r),
          media: d(a),
        };
      }
      function b(e, t, n, r, a) {
        return {
          msg: Object.assign({ type: i.f.GROUP_INVITE }, f(e, t, n), {
            groupJid: r.groupJid,
            groupName: r.groupName,
            inviteExpiration: r.inviteExpiration,
            inviteCode: r.inviteCode,
            caption: r.caption,
            bg: r.bg || void 0,
          }),
          media: c(a),
        };
      }
      function w(e, t, n, r) {
        return {
          msg: Object.assign({ type: i.f.HSM_BUTTON_REPLY }, f(e, t, n), r),
        };
      }
      function O(e, t, n, r) {
        return {
          msg: Object.assign({ type: i.f.PTT }, f(e, t, n), r, {
            played: !0,
            media: null,
          }),
        };
      }
      function E(e, t, n, r) {
        return {
          msg: Object.assign(
            {
              type: i.f.PTT,
              waveform: n.waveform,
              backgroundColor: n.backgroundColor,
              duration: n.duration,
              size: n.size,
              mimetype: n.mimetype || void 0,
              played: n.played,
              media: null,
            },
            p(e, t, null)
          ),
          media: c(null, r),
        };
      }
      function I(e, t, n, r, a) {
        return {
          msg: Object.assign({ type: i.f.AUDIO }, f(e, t, n, a), r, {
            media: null,
          }),
          media: c(null, a),
        };
      }
      function S(e, t, n, r, a, o, u, s, l) {
        return {
          msg: C(
            Object.assign({ type: i.f.IMAGE }, _(e, t, n, r, u), a, {
              media: null,
              uploadSource: l,
            }),
            s
          ),
          media: c(o, u),
        };
      }
      function k(e, t, n, r, a) {
        return {
          msg: Object.assign({ type: i.f.IMAGE }, p(e, t, a), n, {
            media: null,
          }),
          media: c(r, a),
        };
      }
      function L(e, t, n, r, a, o, u, s, l) {
        return {
          msg: C(
            Object.assign({ type: i.f.VIDEO }, M(a), _(e, t, n, r, u), {
              uploadSource: l,
            }),
            s
          ),
          media: c(o, u),
        };
      }
      function G(e, t, n, r, a) {
        return {
          msg: Object.assign({ type: i.f.VIDEO }, p(e, t, a), M(n)),
          media: c(r, a),
        };
      }
      function M(e) {
        return {
          type: i.f.VIDEO,
          size: e.size,
          width: e.width || void 0,
          height: e.height || void 0,
          duration: e.duration || void 0,
          mimetype: e.mimetype || void 0,
          text: (e.text && e.text.trim()) || void 0,
          bg: e.bg || l,
          media: null,
        };
      }
      function A(e, t, n, r, i, a, o) {
        return {
          msg: Object.assign({}, T(i), _(e, t, n, r, o)),
          media: c(a, o),
        };
      }
      function P(e, t, n, r, i) {
        return { msg: Object.assign({}, T(n), p(e, t, i)), media: c(r, i) };
      }
      function T(e) {
        return {
          type: i.f.GIF,
          size: e.size,
          width: e.width || void 0,
          height: e.height || void 0,
          mimetype: e.mimetype || void 0,
          text: (e.text && e.text.trim()) || void 0,
          bg: e.bg || l,
          gifAttribution: e.gifAttribution || void 0,
          media: null,
        };
      }
      function N(e, t, n, r, a, o, u) {
        return {
          msg: Object.assign({ type: i.f.DOCUMENT }, f(e, t, n, o), r, {
            media: null,
          }),
          media: c(a, o, u),
        };
      }
      function C(e, t) {
        return null != t ? Object.assign({}, e, { viewOnceState: t }) : e;
      }
      function R(e, t, n, r, u) {
        var s = e.forwardOriginalTs;
        null == s && (s = e.ts);
        var l = e.forwardingScore;
        null == l && (l = e.isForwarded ? 1 : 0);
        var c = a.I.get(),
          d = c.frequentlyForwardedThreshold,
          f = c.frequentlyForwardedMessages;
        return (
          e.author !== i.b &&
            (f
              ? l < o.a && (l = Math.min(l + 1, o.a - 1)) >= d && (l = o.a)
              : (l = 0 === l ? 1 : l)),
          {
            forwardOriginalTs: s,
            forwardingScore: l,
            isMulticast: n,
            plaintextHash: r,
            thumbPlaintextHash: u,
          }
        );
      }
      function x(e, t) {
        return (null == t ? void 0 : t.progressiveJpegScanNumber)
          ? null == t
            ? void 0
            : t.partialSize
          : e.size;
      }
      function D(e, t, n, r) {
        var a,
          o = e.media,
          s = null == (a = e.media) ? void 0 : a.plaintextHash,
          l = R(e.msg, e.preview, r, s),
          d = e.msg;
        switch (d.type) {
          case i.f.TEXT:
            return h(
              t,
              n,
              null,
              d.mentionedJids,
              {
                text: d.text,
                linkPreview: d.linkPreview,
                bg: d.bg,
                hasPreview: d.hasPreview,
              },
              e.preview || null,
              l
            );
          case i.f.VCARD:
            return g(t, n, null, d, l);
          case i.f.LOCATION:
            return y(
              t,
              n,
              null,
              {
                degreesLatitude: d.degreesLatitude,
                degreesLongitude: d.degreesLongitude,
                name: d.name,
                address: d.address,
                url: d.url,
                bg: d.bg,
                hasPreview: d.hasPreview,
              },
              e.preview || null,
              l
            );
          case i.f.IMAGE:
            if (!s)
              return __LOG__(4)`craftForwarded no hash on image msg`, null;
            var _ = x(d, o);
            return null == _
              ? (__LOG__(
                  4
                )`craftForwarded partial size not defined in case of progressive downloads`,
                null)
              : S(
                  t,
                  n,
                  null,
                  d.mentionedJids,
                  {
                    text: null,
                    height: d.height,
                    width: d.width,
                    size: _,
                    bg: d.bg,
                    hasPreview: d.hasPreview,
                  },
                  e.preview || null,
                  l
                );
          case i.f.STICKER:
            if (!s)
              return __LOG__(4)`craftForwarded no hash on image msg`, null;
            var p = { size: d.size };
            return (
              null != d.mimetype && (p.mimetype = d.mimetype),
              null != d.isAnimated && (p.isAnimated = d.isAnimated),
              null != d.width && (p.width = d.width),
              null != d.height && (p.height = d.height),
              (function (e, t, n, r, a, o) {
                return {
                  msg: Object.assign(
                    { type: i.f.STICKER },
                    f(e, t, null, o),
                    r,
                    { media: null }
                  ),
                  media: c(a, o),
                };
              })(t, n, 0, p, e.preview || null, l)
            );
          case i.f.VIDEO:
            return s
              ? L(
                  t,
                  n,
                  null,
                  d.mentionedJids,
                  {
                    text: null,
                    height: d.height,
                    width: d.width,
                    size: d.size,
                    mimetype: d.mimetype,
                    duration: d.duration,
                    rotation: d.rotation,
                    frame: d.frame,
                    bg: d.bg,
                    hasPreview: d.hasPreview,
                  },
                  e.preview || null,
                  l
                )
              : (__LOG__(4)`craftForwarded no hash on video msg`, null);
          case i.f.GIF:
            return s
              ? A(
                  t,
                  n,
                  null,
                  d.mentionedJids,
                  {
                    text: null,
                    height: d.height,
                    width: d.width,
                    size: d.size,
                    mimetype: d.mimetype,
                    duration: d.duration,
                    rotation: d.rotation,
                    frame: d.frame,
                    gifAttribution: d.gifAttribution,
                    bg: d.bg,
                    hasPreview: d.hasPreview,
                  },
                  e.preview || null,
                  l
                )
              : (__LOG__(4)`craftForwarded no hash on gif msg`, null);
          case i.f.PTT:
          case i.f.AUDIO:
            return s
              ? I(
                  t,
                  n,
                  null,
                  {
                    duration: d.duration,
                    size: d.size,
                    mimetype: d.mimetype,
                    hasPreview: d.hasPreview,
                  },
                  l
                )
              : (__LOG__(4)`craftForwarded no hash on audio msg`, null);
          case i.f.RICH_HSM:
            var v = d.richContent;
            return v
              ? v.type === i.f.IMAGE
                ? s
                  ? S(
                      t,
                      n,
                      null,
                      null,
                      {
                        text: null,
                        height: v.height,
                        width: v.width,
                        bg: v.bg,
                        size: v.size,
                        hasPreview: v.hasPreview,
                      },
                      e.preview || null,
                      l
                    )
                  : (__LOG__(4)`craftForwarded no hash on image rich hsm msg`,
                    null)
                : v.type === i.f.VIDEO
                ? s
                  ? L(
                      t,
                      n,
                      null,
                      null,
                      {
                        text: null,
                        height: v.height,
                        width: v.width,
                        bg: v.bg,
                        size: v.size,
                        mimetype: v.mimetype,
                        duration: v.duration,
                        hasPreview: v.hasPreview,
                      },
                      e.preview || null,
                      l
                    )
                  : (__LOG__(4)`craftForwarded no hash on video rich hsm msg`,
                    null)
                : v.type === i.f.DOCUMENT
                ? s
                  ? N(
                      t,
                      n,
                      null,
                      v.isVCard
                        ? {
                            isVCard: !0,
                            mimetype: v.mimetype,
                            size: v.size,
                            fileName: v.fileName,
                            contactsCount: v.contactsCount,
                            uiVCards: v.uiVCards,
                            hasPreview: v.hasPreview,
                          }
                        : {
                            mimetype: v.mimetype,
                            size: v.size,
                            fileName: v.fileName,
                            pages: v.pages,
                            hasPreview: v.hasPreview,
                            mmsThumb: v.mmsThumb,
                          },
                      e.preview || null,
                      l
                    )
                  : (__LOG__(
                      4
                    )`craftForwarded no hash on document rich hsm msg`,
                    null)
                : (v.type,
                  y(
                    t,
                    n,
                    null,
                    {
                      degreesLatitude: v.degreesLatitude,
                      degreesLongitude: v.degreesLongitude,
                      name: v.name,
                      address: v.address,
                      url: v.url,
                      bg: v.bg,
                      hasPreview: v.hasPreview,
                    },
                    e.preview || null,
                    l
                  ))
              : h(
                  t,
                  n,
                  null,
                  null,
                  { text: (0, u.a)(d.title, d.content) },
                  null,
                  l
                );
          case i.f.HSM_BUTTON_REPLY:
            return h(
              t,
              n,
              null,
              null,
              { text: d.selectedDisplayText },
              null,
              l
            );
          case i.f.DOCUMENT:
            return s
              ? N(
                  t,
                  n,
                  null,
                  d.isVCard
                    ? {
                        isVCard: !0,
                        mimetype: d.mimetype,
                        size: d.size,
                        fileName: d.fileName,
                        contactsCount: d.contactsCount,
                        uiVCards: d.uiVCards,
                        hasPreview: d.hasPreview,
                      }
                    : {
                        mimetype: d.mimetype,
                        size: d.size,
                        fileName: d.fileName,
                        pages: d.pages,
                        hasPreview: d.hasPreview,
                        mmsThumb: d.mmsThumb,
                      },
                  e.preview || null,
                  l
                )
              : (__LOG__(4)`craftForwarded no hash on document msg`, null);
          default:
            return (
              __LOG__(4)`craftForwarded can not forward (yet) type ${d.type}`,
              null
            );
        }
      }
      function U(e, t, n, a) {
        var l,
          c = e.media,
          d = null == (l = e.media) ? void 0 : l.plaintextHash,
          f = R(e.msg, e.preview, a, d),
          _ = e.msg;
        switch (_.type) {
          case i.f.TEXT:
            var p = (0, o.h)(),
              v = r.e;
            return m(
              t,
              n,
              {
                text: (0, s.e)(_.text),
                linkPreview: _.linkPreview,
                backgroundColor: p,
                font: v,
                bg: _.bg,
                hasPreview: _.hasPreview,
              },
              e.preview || null,
              f
            );
          case i.f.PTT:
            var h = (0, o.h)();
            return E(
              t,
              n,
              {
                duration: _.duration,
                size: _.size,
                mimetype: _.mimetype,
                waveform: _.waveform,
                backgroundColor: h,
              },
              f
            );
          case i.f.IMAGE:
            if (!d)
              return (
                __LOG__(4)`craftForwardedStatus no hash on image msg`, null
              );
            var g = x(_, c);
            return null == g
              ? (__LOG__(
                  4
                )`craftForwardedStatus partial size not defined in case of progressive downloads`,
                null)
              : k(
                  t,
                  n,
                  {
                    text: null,
                    height: _.height,
                    width: _.width,
                    size: g,
                    bg: _.bg,
                    hasPreview: _.hasPreview,
                  },
                  e.preview || null,
                  f
                );
          case i.f.VIDEO:
            return d
              ? G(
                  t,
                  n,
                  {
                    text: null,
                    height: _.height,
                    width: _.width,
                    size: _.size,
                    mimetype: _.mimetype,
                    duration: _.duration,
                    frame: _.frame,
                    rotation: _.rotation,
                    bg: _.bg,
                    hasPreview: _.hasPreview,
                  },
                  e.preview || null,
                  f
                )
              : (__LOG__(4)`craftForwardedStatus no hash on video msg`, null);
          case i.f.GIF:
            return d
              ? P(
                  t,
                  n,
                  {
                    text: null,
                    height: _.height,
                    width: _.width,
                    size: _.size,
                    mimetype: _.mimetype,
                    duration: _.duration,
                    frame: _.frame,
                    rotation: _.rotation,
                    gifAttribution: _.gifAttribution,
                    bg: _.bg,
                    hasPreview: _.hasPreview,
                  },
                  e.preview || null,
                  f
                )
              : (__LOG__(4)`craftForwardedStatus no hash on gif msg`, null);
          case i.f.RICH_HSM:
            var y = _.richContent;
            if (!y) {
              var b = (0, o.h)(),
                w = r.e;
              return m(
                t,
                n,
                {
                  text: (0, s.e)((0, u.b)(_.title, _.content)),
                  backgroundColor: b,
                  font: w,
                  bg: _.bg,
                },
                null,
                f
              );
            }
            if (y.type === i.f.IMAGE)
              return d
                ? k(
                    t,
                    n,
                    {
                      text: null,
                      height: y.height,
                      width: y.width,
                      size: y.size,
                      bg: _.bg,
                      hasPreview: y.hasPreview,
                    },
                    e.preview || null,
                    f
                  )
                : (__LOG__(4)`craftForwardedStatus no hash on image msg`, null);
            if (y.type === i.f.VIDEO)
              return d
                ? G(
                    t,
                    n,
                    {
                      text: null,
                      height: y.height,
                      width: y.width,
                      size: y.size,
                      mimetype: y.mimetype,
                      duration: y.duration,
                      frame: y.frame,
                      rotation: y.rotation,
                      bg: _.bg,
                      hasPreview: y.hasPreview,
                    },
                    e.preview || null,
                    f
                  )
                : (__LOG__(4)`craftForwardedStatus no hash on video msg`, null);
            y.type;
            var O = (0, o.h)(),
              I = r.e;
            return m(
              t,
              n,
              {
                text: (0, s.e)(_.content),
                backgroundColor: O,
                font: I,
                bg: _.bg,
              },
              null,
              f
            );
          case i.f.HSM_BUTTON_REPLY:
            var S = (0, o.h)(),
              L = r.e;
            return m(
              t,
              n,
              {
                text: (0, s.e)(_.selectedDisplayText),
                backgroundColor: S,
                font: L,
                bg: _.bg,
              },
              null,
              f
            );
          default:
            return (
              __LOG__(
                4
              )`craftForwardedStatus can not forward (yet) type ${_.type}`,
              null
            );
        }
      }
    },
    function (e, t, n) {
      n.d(t, "c", function () {
        return s;
      }),
        n.d(t, "b", function () {
          return l;
        }),
        n.d(t, "f", function () {
          return c;
        }),
        n.d(t, "d", function () {
          return d;
        }),
        n.d(t, "a", function () {
          return f;
        }),
        n.d(t, "e", function () {
          return _;
        });
      var r = n(6),
        i = n(3),
        a = [0.25 * i.b, 0.5 * i.b, 1 * i.b, 1 * i.b, 3 * i.b, 7 * i.b],
        o = a.length - 1;
      function u(e) {
        return (0, i.k)(a[e]);
      }
      function s(e) {
        return l(e, o, null);
      }
      function l(e, t, n) {
        var i = Math.min(o, Math.max(0, t));
        return (
          __LOG__(2)`pinReminder: enabling at interval ${i}`,
          r.O.set({
            status: "enabled",
            pin: e.join(""),
            intervalIndex: i,
            nextTime: u(t),
            hasEmail: n,
          }).then(() => {})
        );
      }
      function c(e, t) {
        var n = r.O.get();
        return "disabled" === n.status
          ? Promise.resolve()
          : l(e, t, n.hasEmail);
      }
      function d() {
        var e = r.O.get();
        if ("disabled" !== e.status) {
          var t = e.pin,
            n = e.intervalIndex,
            i = e.nextTime;
          r.O.set({
            status: "enabled",
            pin: t,
            intervalIndex: n,
            nextTime: i,
            hasEmail: !0,
          });
        }
      }
      function f() {
        return (
          __LOG__(2)`pinReminder: disabling`,
          r.O.set({ status: "disabled" }).then(() => {})
        );
      }
      function _(e) {
        var t = r.O.get();
        if ("disabled" !== t.status) {
          var n = t.pin,
            i = t.intervalIndex,
            a = t.nextTime,
            s = t.hasEmail,
            l = e ? Math.min(i + 1, o) : Math.max(i - 1, 0),
            c = e ? u(l) : a;
          __LOG__(2)`pinReminder: scheduling at ${c} after ${
            e ? "success" : "error"
          }, interval: ${l}`,
            r.O.set({
              status: "enabled",
              pin: n,
              intervalIndex: l,
              nextTime: c,
              hasEmail: s,
            });
        }
      }
    },
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      function r(e) {
        var t = new Uint8Array(1);
        self.crypto.getRandomValues(t),
          (function (e, t) {
            for (var n = 0; n < t; n++) e.writeUint8(t);
          })(e, 1 + (15 & t[0]));
      }
      function i(e) {
        if (0 === e.length) throw new Error("unpadPkcs7 given empty bytes");
        var t = e[e.length - 1];
        if (t > e.length)
          throw new Error(
            `unpadPkcs7 given ${e.length} bytes, but pad is ${t}`
          );
        return new Uint8Array(e.buffer, e.byteOffset, e.length - t);
      }
      n.d(t, "b", function () {
        return r;
      }),
        n.d(t, "a", function () {
          return i;
        });
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return u;
      }),
        n.d(t, "b", function () {
          return s;
        });
      var r = n(2),
        i = n(11),
        a = n(10),
        o = n(52),
        u = {
          call: "call",
          sendPaymentMessage: "sendPayment",
          requestPaymentMessage: "requestPayment",
          liveLocationMessage: "liveLocation",
          stickerMessage: "sticker",
          reactionMessage: "reaction",
          pollCreationMessage: "pollCreation",
          pollUpdateMessage: "pollUpdate",
          keepInChatMessage: "keepInChat",
          viewOnceMessageV2: "viewOnceMessageV2",
          viewOnceMessageV2Disabled: "viewOnceMessageV2Disabled",
        };
      function s() {
        return (0, a.e)("getFutureProofMsgs", (e) =>
          e.table.transact("r", ["msgs", "chats"], () =>
            (function (e) {
              var t = new Set((0, i.y)(u));
              return (
                (0, o.b)() && t.delete("reaction"),
                (0, o.q)() && t.delete("pollUpdate"),
                (0, o.p)() && t.delete("pollCreation"),
                (0, o.l)() && t.delete("keepInChat"),
                e.table.stores.msgs
                  .where("type")
                  .equals(r.f.FUTUREPROOF)
                  .filter(
                    (e) =>
                      e.type === r.f.FUTUREPROOF &&
                      (null == e.subtype || !t.has(e.subtype))
                  )
                  .toArray()
                  .then((t) => {
                    var n = new Set();
                    return (
                      t.forEach((e) => {
                        var t = e.chat;
                        return n.add(t);
                      }),
                      e.table.stores.chats
                        .where("id")
                        .anyOf(Array.from(n))
                        .toArray()
                        .then((e) => {
                          var n = new Map();
                          e.forEach((e) => {
                            var t = e.id,
                              r = e.jid;
                            n.set(t, r);
                          });
                          var i = [];
                          return (
                            t.forEach((e) => {
                              if (e.type === r.f.FUTUREPROOF) {
                                var t = n.get(e.chat);
                                if (!t)
                                  return (
                                    __LOG__(
                                      3
                                    )`_getFutureProofMsgs: chat ${e.chat} not found`,
                                    void i.push([e, "deleted"])
                                  );
                                i.push([e, t]);
                              }
                            }),
                            i
                          );
                        })
                    );
                  })
              );
            })(e)
          )
        );
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return l;
      });
      var r = n(30),
        i = n(41),
        a = n(114),
        o = n(4),
        u = n(7),
        s =
          (n(215),
          new a.b("userIdentities", (e) =>
            e
              .child("list")
              .mapChildren((e) => [
                e.attrPhoneUserJid("jid"),
                e.child("identity").contentBytes(32),
              ])
          ));
      function l(e) {
        var t = e.map(u.e);
        return (0, i.v)(t).then((e) => {
          var n = t.filter((t) => !e.has(t)).map(u.h);
          if (0 !== n.length)
            return (function (e) {
              var t = (0, o.w)(
                "iq",
                { id: (0, o.u)(), xmlns: "encrypt", type: "get", to: o.l },
                (0, o.w)(
                  "identity",
                  null,
                  e.map((e) => (0, o.w)("user", { jid: (0, o.g)(e) }))
                )
              );
              return (0, r.b)(t, s).then((t) => {
                if (!t.success) {
                  if (406 === t.errorCode)
                    return void __LOG__(
                      2
                    )`getAndSaveSignalIdentities 406 error for invalid jids: ${e}`;
                  throw new Error(
                    "getAndSaveSignalIdentities bad response " + String(t)
                  );
                }
                return (0, i.J)(t.result);
              });
            })(n);
        });
      }
    },
    function (e, t, n) {
      var r = n(51),
        i = n(4),
        a = n(30),
        o = n(6),
        u = n(12),
        s = n(40),
        l = n(129),
        c = n(116),
        d = n(216),
        f = new r.a("serverProps", (e) => {
          e.assertTag("iq"), e.assertAttr("from", "s.whatsapp.net");
          var t = e.child("props"),
            n = t.maybeAttrInt("protocol"),
            r = { serverPropsVersion: t.attrInt("version") };
          return (
            2 === n &&
              ((r.hash = t.maybeAttrString("hash")),
              (r.abKey = t.maybeAttrString("key"))),
            t.forEachChildWithTag("prop", (e) => {
              switch (e.attrString("name")) {
                case "frequently_forwarded_group_setting":
                  r.frequentlyForwardedGroupSetting = 0 !== e.attrInt("value");
                  break;
                case "frequently_forwarded_max":
                  r.frequentlyForwardedMax = e.attrInt("value");
                  break;
                case "frequently_forwarded_messages":
                  r.frequentlyForwardedMessages = 0 !== e.attrInt("value");
                  break;
                case "frequently_forwarded_threshold":
                  r.frequentlyForwardedThreshold = e.attrInt("value");
                  break;
                case "gif_provider":
                  r.gifProvider = e.attrInt("value");
                  break;
                case "max_participants":
                  r.maxParticipants = e.attrInt("value");
                  break;
                case "max_subject":
                  r.maxSubject = e.attrInt("value");
                  break;
                case "max_keys":
                  r.maxKeys = e.attrInt("value");
                  break;
                case "multicast_limit_global":
                  r.multicastLimitGlobal = e.attrInt("value");
                  break;
                case "group_invite_sending":
                  r.groupInviteSending = e.attrInt("value");
                  break;
                case "group_join_permissions":
                  r.groupJoinPermissions = e.attrInt("value");
                  break;
                case "mms_hot_content_timespan_in_seconds":
                  r.mmsHotContentTimespan = e.attrInt("value");
                  break;
                case "mms_vcache_aggregation_enabled":
                  r.mmsVCacheAggregationEnabled = 0 !== e.attrInt("value");
                  break;
                case "mms_resume_check_chatd":
                  r.mmsResumeCheckChatd = 0 !== e.attrInt("value");
                  break;
                case "status_video_max_duration":
                  r.statusVideoMaxDuration = e.attrInt("value");
                  break;
                case "prekey_expiration_days":
                  var t = e.attrInt("value");
                  (t = Math.min(t, 180)),
                    (t = Math.max(t, 30)),
                    (r.prekeyExpirationDays = t);
                  break;
                case "voice_call_enabled":
                  r.kaiosVoiceCallEnabled512 = 0 !== e.attrInt("value");
                  break;
                case "kaios_voice_call_enabled_jio":
                  r.kaiosVoiceCallEnabled512Jio = 0 !== e.attrInt("value");
                  break;
                case "kaios_voice_call_enabled_256":
                  r.kaiosVoiceCallEnabled256 = 0 !== e.attrInt("value");
                  break;
                case "kaios_voice_logs_enabled":
                  r.kaiosVoiceLogsEnabled = 0 !== e.attrInt("value");
                  break;
                case "ephemeral_messages_allowed_values":
                  var n = e
                    .attrString("value")
                    .split(",")
                    .map((e) => parseInt(e, 10));
                  n.length > 0 &&
                    (r.ephemeralMessagesAllowedValues = new Set(n));
                  break;
                case "md_blocklist_v2":
                  r.mdBlocklistV2 = 0 !== e.attrInt("value");
                  break;
                case "mms_vcard_autodownload_size_kb":
                  r.mmsVcardAutodownloadSizeKb = e.attrInt("value");
                  break;
                case "vcard_as_document_size_kb":
                  r.vcardAsDocumentSizeKb = e.attrInt("value");
                  break;
                case "vcard_max_size_kb":
                  r.vcardMaxSizeKb = e.attrInt("value");
                  break;
                case "mms4_media_retry_notification_encryption_enabled":
                  r.mms4MediaRetryNotificationEncryptionEnabled =
                    0 !== e.attrInt("value");
                  break;
                case "mms4_server_error_receipt_encryption_enabled":
                  r.mms4ServerErrorReceiptEncryptionEnabled =
                    0 !== e.attrInt("value");
                  break;
                case "user_notice":
                  r.userNotice = 0 !== e.attrInt("value");
                  break;
                case "privatestats_token_max_expiry_seconds":
                  r.privateStatsTokenMaxExpirySeconds = e.attrInt("value");
              }
            }),
            { protocol: n, values: r }
          );
        });
      t.a = (0, l.a)(
        () => "serverProps",
        function () {
          var e = o.I.get(),
            t = (0, i.w)(
              "iq",
              { xmlns: "w", id: (0, i.u)(), type: "get", to: i.l },
              (0, i.w)("props", { protocol: "2", hash: (0, i.b)(e.hash || "") })
            );
          return (0, a.b)(t, f).then((t) => {
            if (t.success) {
              var n,
                r,
                i,
                a = (0, s.o)(e),
                l = t.result,
                f = l.protocol,
                _ = l.values;
              2 === f && null == _.hash
                ? (__LOG__(
                    2
                  )`syncServerProps v2: hash is empty, only updating abKey`,
                  (n = Object.assign({}, e, { abKey: _.abKey })))
                : (n = Object.assign({}, e, _)),
                (function (e, t) {
                  __LOG__(
                    2
                  )`syncServerProps updating to ${t.serverPropsVersion}`,
                    o.I.set(t);
                  var n = o.I.get(),
                    r = (0, s.o)(n),
                    i = (0, d.a)(n);
                  (0, u.c)("event", "serverPropsUpdated", { serverProps: r }),
                    e.voipCallEnabled !== i &&
                      (function (e) {
                        var t = o.o.get();
                        t && !e && (0, c.c)(),
                          (0, u.c)("event", "voipStatusChanged", {
                            hasVoip: t,
                            voipCallEnabled: e,
                          });
                      })(i);
                })(
                  a,
                  (n = Object.assign({}, n, {
                    kaiosVoiceLogsEnabled:
                      ((r = n.kaiosVoiceLogsEnabled),
                      (i = o.m.get()),
                      null != i && r && i >= 512),
                  }))
                );
            } else __LOG__(4)`syncServerProps failed ${t}`;
          });
        }
      );
    },
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return L;
      }),
        n.d(t, "b", function () {
          return G;
        }),
        n.d(t, "c", function () {
          return M;
        }),
        n.d(t, "d", function () {
          return P;
        });
      var r = n(26),
        i = n.n(r),
        a = n(229),
        o = n(43),
        u = n(56),
        s = n(38),
        l = n(9),
        c = n(95),
        d = n(17);
      function f(e, t) {
        var n = null == t ? void 0 : t.mediaEntry;
        if (
          t &&
          t.thumbPlaintextHash &&
          n &&
          "mms4" === n.version &&
          n.mmsThumb &&
          n.mmsThumb.directPath &&
          (0, d.a)("upload_status_thumb_mms_enabled")
        ) {
          var r = n.mmsThumb,
            i = r.ciphertextHash,
            a = r.directPath;
          (e.thumbnailSha256 = (0, o.c)(t.thumbPlaintextHash)),
            (e.thumbnailEncSha256 = i),
            (e.thumbnailDirectPath = a);
        }
      }
      var _ = n(134),
        p = (n(182), n(24)),
        v = (n(101), n(113), n(48), n(33), n(149), n(206), n(83));
      n(75), n(201);
      var h = n(67),
        m = n(3),
        g = n(71),
        y = n(7),
        b = n(41),
        w = n(452),
        O = n(6);
      function E(e) {
        return 0 === e.size
          ? Promise.resolve(new Map())
          : (0, h.c)(Array.from(e)).then(
              (function () {
                var e = i()(function* (e) {
                  var t = new Map();
                  if (0 === e.length) return Promise.resolve(t);
                  for (
                    var n = [],
                      r = function* (r) {
                        var i = e[r];
                        if (i.jid === O.t.get())
                          __LOG__(
                            3
                          )`getMetadataKeyHashAndTimestamp: companions not supported`;
                        else if (null == i.devices || i.devices.length <= 1) {
                          var a,
                            o =
                              null == (a = i.deviceVerification)
                                ? void 0
                                : a.timestamp;
                          if (o) {
                            var u = (0, m.i)(o);
                            (0, m.m)(u, 30 * m.b) &&
                              t.set(i.jid, {
                                hash: null,
                                timestamp: o,
                                keyIndexes: null,
                              });
                          }
                        } else
                          (0, g.d)(i).forEach((e) => {
                            n.push((0, y.B)(i.jid, e));
                          });
                      },
                      a = 0;
                    a < e.length;
                    a++
                  )
                    yield* r(a);
                  if (0 === n.length) return t;
                  var o = new Map();
                  return (
                    e.forEach((e) => {
                      var t = e.jid,
                        n = e.deviceVerification;
                      o.set(t, null == n ? void 0 : n.timestamp);
                    }),
                    (0, b.v)(n).then(
                      (function () {
                        var e = i()(function* (e) {
                          var r = new Set();
                          n.forEach((t) => {
                            e.has(t) || r.add((0, y.h)(t));
                          });
                          for (
                            var i = (function (e) {
                                var t = new Map();
                                return (
                                  e.forEach((e, n) => {
                                    var r = (0, y.h)(n),
                                      i = t.get(r);
                                    null == i && ((i = []), t.set(r, i)),
                                      i.push({
                                        deviceId: (0, y.f)(n),
                                        identity: e,
                                      });
                                  }),
                                  t
                                );
                              })(e),
                              a = Array.from(i.keys()),
                              u = 0;
                            u < a.length;
                            u++
                          ) {
                            var s = a[u],
                              l = i.get(s);
                            if (null != l) {
                              var c = yield I(l.map((e) => e.identity)),
                                d = void 0;
                              r.has(s) && (d = l.map((e) => e.deviceId).sort()),
                                t.set(s, {
                                  hash: c,
                                  timestamp: o.get(s),
                                  keyIndexes: d,
                                });
                            }
                          }
                          return t;
                        });
                        return function (t) {
                          return e.apply(this, arguments);
                        };
                      })()
                    )
                  );
                });
                return function (t) {
                  return e.apply(this, arguments);
                };
              })()
            );
      }
      function I(e) {
        var t = e.map((e) => (0, _.e)(e)),
          n = new p.a();
        return (
          t.sort(w.PublicKeyComparator).forEach((e) => {
            n.writeByteArray(e);
          }),
          self.crypto.subtle.digest("SHA-256", n.readByteArray()).then((e) => {
            var t = new Uint8Array(e);
            return (0, v.f)(t, 0, (0, d.a)("md_icdc_hash_length"));
          })
        );
      }
      n(144);
      var S = n(156),
        k = n(230);
      function L(e) {
        return "status" === e.type
          ? (function (e, t) {
              var n = (null == t ? void 0 : t.mediaEntry) || void 0,
                r = (null == t ? void 0 : t.preview) || void 0,
                i = e.forwardingScore || 0,
                d = i > 0 ? { isForwarded: !0, forwardingScore: i } : void 0;
              switch (e.type) {
                case s.c.TEXT:
                  var _ = e.linkPreview;
                  return {
                    extendedTextMessage: {
                      text: e.text,
                      contextInfo: d,
                      font: e.font,
                      backgroundArgb: e.backgroundColor,
                      jpegThumbnail: r,
                      matchedText: null == _ ? void 0 : _.matchedText,
                      canonicalUrl: null == _ ? void 0 : _.canonicalUrl,
                      description: null == _ ? void 0 : _.description,
                      title: null == _ ? void 0 : _.title,
                    },
                  };
                case s.c.IMAGE:
                  var p = (0, a.d)(e, t);
                  if (!p) throw new Error("asProtoMessage no hash for image");
                  var v = p.hash,
                    h = p.fileLength,
                    m = {
                      url: (null == n ? void 0 : n.url) || void 0,
                      mimetype: "image/jpeg",
                      caption: e.text || void 0,
                      fileSha256: (0, o.c)(v),
                      fileLength: h,
                      height: e.height || void 0,
                      width: e.width || void 0,
                      jpegThumbnail: (0, c.d)(e) ? r : void 0,
                      contextInfo: d,
                    };
                  return (0, a.e)(m, n), f(m, t), { imageMessage: m };
                case s.c.VIDEO:
                case s.c.GIF:
                  var g = null == t ? void 0 : t.plaintextHash;
                  if (!g) throw new Error("asProtoMessage no hash for video");
                  var y = {
                    url: (null == n ? void 0 : n.url) || void 0,
                    mimetype: e.mimetype || void 0,
                    fileSha256: (0, o.c)(g),
                    fileLength: e.size,
                    seconds: e.duration,
                    mediaKey: null == n ? void 0 : n.cryptoKey,
                    mediaKeyTimestamp: null == n ? void 0 : n.mediaKeyTs,
                    caption: e.text || void 0,
                    gifPlayback: e.type === s.c.GIF || void 0,
                    height: e.height || void 0,
                    width: e.width || void 0,
                    fileEncSha256: null == n ? void 0 : n.ciphertextHash,
                    directPath: null == n ? void 0 : n.directPath,
                    jpegThumbnail: (0, c.d)(e) ? r : void 0,
                    streamingSidecar:
                      (null == n ? void 0 : n.sidecar) || void 0,
                    gifAttribution:
                      (e.type === s.c.GIF && e.gifAttribution) || void 0,
                    contextInfo: d,
                  };
                  return f(y, t), { videoMessage: y };
                case s.c.REVOKED:
                  return {
                    protocolMessage: {
                      key: {
                        remoteJid: l.h,
                        fromMe: !0,
                        id: e.revokedExternalId,
                      },
                      type: u.d.REVOKE,
                    },
                  };
                case s.c.PTT:
                  var b = (0, a.c)(e, t, d);
                  return Object.assign({}, b, {
                    audioMessage: Object.assign({}, b.audioMessage, {
                      backgroundArgb: e.backgroundColor,
                    }),
                  });
                default:
                  throw new Error(`sendMsg has not implemented ${e.type} msgs`);
              }
            })(e.dbMsg, e.mediaInfo)
          : "chat" === e.msgType
          ? (0, a.a)(e.dbMsg, e.mediaInfo, e.quoteInfo)
          : "reaction" === e.msgType
          ? ((t = e.dbMsg),
            {
              reactionMessage: {
                key: (0, S.a)(t.chatJid, t.msgRef),
                text: t.text,
                senderTimestampMs: t.senderTimestampMs,
              },
            })
          : "keepInChat" === e.msgType
          ? (function (e) {
              return {
                keepInChatMessage: {
                  key: (0, S.a)(e.chatJid, e.msgRef),
                  keepType:
                    null == e.kept ? u.c.UNDO_KEEP_FOR_ALL : u.c.KEEP_FOR_ALL,
                  timestampMs: e.senderTimestampMs,
                },
              };
            })(e.dbMsg)
          : (e.msgType, (0, k.a)(e.dbMsg, e.encryptedUpdate));
        var t;
      }
      function G(e, t) {
        return M(new Set([e]), t).then((t) => {
          var n = t.get(e);
          if (!n) throw new Error("asProtoMessageWithContextForJid");
          return n;
        });
      }
      function M(e, t) {
        return P(e, L(t));
      }
      function A(e, t) {
        var n, r;
        return {
          senderKeyHash: (null == t ? void 0 : t.hash) || void 0,
          senderTimestamp:
            null != (n = null == t ? void 0 : t.timestamp) ? n : void 0,
          senderKeyIndexes: (null == t ? void 0 : t.keyIndexes) || void 0,
          recipientKeyHash: (null == e ? void 0 : e.hash) || void 0,
          recipientTimestamp:
            null != (r = null == e ? void 0 : e.timestamp) ? r : void 0,
          recipientKeyIndexes: (null == e ? void 0 : e.keyIndexes) || void 0,
        };
      }
      function P(e, t) {
        return T.apply(this, arguments);
      }
      function T() {
        return (T = i()(function* (e, t) {
          var n = new Set(e);
          n.add(O.t.get());
          var r = yield E(n),
            i = new Map();
          return (
            e.forEach((e) => {
              var n,
                a = e === O.t.get(),
                o = a ? null : r.get(e),
                u = null != o && (null != o.timestamp || null != o.hash),
                s = Object.assign({}, t);
              (a || u || (0, d.a)("md_icdc_enabled")) &&
                ((n = { deviceListMetadata: A(o, r.get(O.t.get())) }),
                (s.messageContextInfo = n)),
                i.set(e, s);
            }),
            i
          );
        })).apply(this, arguments);
      }
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return y;
      }),
        n.d(t, "a", function () {
          return b;
        });
      var r = n(8),
        i = n.n(r),
        a = n(12),
        o = n(2),
        u = n(96),
        s = (n(6), n(3)),
        l = n(14),
        c = n(66),
        d = n(58),
        f = n(36),
        _ = n(109),
        p = n(5),
        v = n(7),
        h = n(10),
        m = n(46),
        g = n(11);
      function y(e) {
        if (
          !(0, u.b)(e) ||
          "active" !== e.viewOnceState ||
          null != e.viewOnceExpiration
        )
          return e;
        __LOG__(2)`maybeUpdateViewOnceMsgInTransaction Setting expiration`;
        var t = l.j,
          n = (0, s.k)(t, e.author === o.b ? (0, s.D)() : e.ts);
        return (
          (e.viewOnceExpiration = n),
          (0, a.c)("backend", "viewOnceTimestamp", { validUntil: n }),
          e
        );
      }
      function b() {
        var e = ["msgs", "chats", "groups", "groupParticipantsInfo"];
        return (0, h.f)("expireViewOnceMessages", (t) =>
          (0, m.a)(t, "rw", e, (e) =>
            (function (e) {
              return e.msgs
                .where("viewOnceExpiration")
                .belowOrEqual((0, s.D)())
                .filter((e) => (0, u.b)(e) && "active" === e.viewOnceState)
                .toArray()
                .then((t) => {
                  if (0 === t.length)
                    return { expiredMsgs: [], updatedChats: [] };
                  var n = new Map(),
                    r = t.map((e) => {
                      var t,
                        r = e;
                      return (
                        (0, u.b)(e)
                          ? (r = (0, g.j)(e, { viewOnceState: "expired" }))
                          : __LOG__(
                              3
                            )`expireViewOnceMessages: Expected view once messages only`,
                        n.set(r.chat, [
                          ...(null != (t = n.get(r.chat)) ? t : []),
                          r,
                        ]),
                        r
                      );
                    });
                  if (0 === r.length)
                    return { expiredMsgs: [], updatedChats: [] };
                  var a = e.msgs.bulkPut(r).then(() => r.map(c.c)),
                    o = e.chats
                      .where("id")
                      .anyOf(Array.from(n.keys()))
                      .toArray()
                      .then((t) => {
                        var r = [];
                        if (
                          (t.forEach((e) => {
                            (0, _.maybeMutateChatMsgPreviewFromMsgs)(
                              e,
                              n.get(e.id) || []
                            ) && r.push(e);
                          }),
                          0 === r.length)
                        )
                          return [];
                        var a = e.chats.bulkPut(r),
                          o = (0, p.c)(
                            r.map((t) =>
                              (0, v.x)(t.jid, {
                                user: (e) =>
                                  (0, p.e)().then(() => (0, d.a)(t, null)),
                                group: (n) =>
                                  (0, f.o)(e, n).then((e) => (0, d.a)(t, e)),
                              })
                            )
                          );
                        return (0, p.c)([o, a]).then((e) => i()(e, 1)[0]);
                      });
                  return (0, p.c)([o, a]).then((e) => {
                    var t = i()(e, 2),
                      n = t[0];
                    return { expiredMsgs: t[1], updatedChats: n };
                  });
                });
            })(e)
          )
        );
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return o;
      }),
        n.d(t, "b", function () {
          return u;
        }),
        n.d(t, "c", function () {
          return s;
        }),
        n(349);
      var r = n(60),
        i = (n(75), n(101), n(165)),
        a = (n(3), n(126));
      function o(e) {
        var t = r.b.cast(e);
        if (null == t)
          throw Error(
            "No corresponding CollectionName for DbCollectionName, this should never happen"
          );
        return t;
      }
      function u(e) {
        var t = e.keyId,
          n = e.keyEpoch,
          r = e.keyData,
          o = e.timestampMs,
          u = e.fingerprint;
        return {
          keyId: (0, a.d)((0, i.c)(t)),
          keyEpoch: n,
          keyData: (0, a.c)(r),
          timestamp: o,
          fingerprint: u,
        };
      }
      function s(e) {
        var t = e.keyId,
          n = e.keyEpoch,
          r = e.keyData,
          o = e.timestamp,
          u = e.fingerprint;
        return {
          keyId: (0, i.b)((0, a.b)(t)),
          keyEpoch: n,
          keyData: (0, a.a)(r),
          timestampMs: o,
          fingerprint: u,
        };
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return c;
      });
      var r = n(26),
        i = n.n(r),
        a = n(56),
        o = n(389),
        u = n(201),
        s = n(348),
        l = n(126);
      function c(e) {
        return d.apply(this, arguments);
      }
      function d() {
        return (d = i()(function* (e) {
          var t, n;
          if (
            ("key_rotation" === e.type
              ? ((t = f(e.keys)), (n = yield (0, u.b)()))
              : "missing_key" === e.type &&
                ((t = f(e.keys, e.orphanKeys)),
                (n = [{ deviceId: e.deviceId }])),
            null == n)
          )
            return Promise.resolve();
          var r = {
              type: a.d.APP_STATE_SYNC_KEY_SHARE,
              appStateSyncKeyShare: t,
            },
            i = n.map((e) => e.deviceId),
            l = e.keys.map((e) => (0, s.e)(e.keyId));
          __LOG__(
            2
          )`syncd: send key share key id ${l} to peer deviceIds ${i} due to ${e.type}`,
            yield Promise.all(i.map((e) => (0, o.b)(e, r)));
        })).apply(this, arguments);
      }
      function f(e, t) {
        var n = e.map((e) => ({
          keyId: { keyId: (0, l.b)(e.keyId) },
          keyData: {
            keyData: (0, l.a)(e.keyData),
            fingerprint: {
              rawId: e.fingerprint.rawId,
              currentIndex: e.fingerprint.currentIndex,
              deviceIndexes: e.fingerprint.deviceIndexes,
            },
            timestamp: e.timestamp,
          },
        }));
        if (t) {
          var r = t.map((e) => ({
            keyId: { keyId: (0, l.b)(e) },
            keyData: void 0,
          }));
          n = n.concat(r);
        }
        return { keys: n };
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return v;
      });
      var r = n(30),
        i = n(86),
        a = n(4),
        o = n(51),
        u = n(6),
        s = n(12),
        l = n(72),
        c = n(20),
        d = n(118),
        f = n(137),
        _ = {
          400: (0, l.d)("bad-request"),
          404: (0, l.d)("empty-blocklist"),
          501: (0, l.d)("feature-unavailable"),
          503: (0, l.d)("service-unavailable"),
          500: (0, l.d)("unknown"),
        },
        p = new o.a("getPrivacyParser", (e) => {
          var t = e.child("privacy").maybeChild("list");
          return null == t
            ? { status: "match" }
            : {
                status: "mismatch",
                listHash: t.attrString("dhash"),
                users: (0, c.m)(
                  t.mapChildren((e) => e.attrPhoneUserJid("jid"))
                ),
              };
        });
      function v(e, t) {
        var n,
          o = u.k.get(),
          v = null,
          h = null;
        return (
          "groupAdd" === e
            ? ((n = f.e.groupAdd),
              (h = o.groupAddBlacklistHash),
              (v = o.groupAddBlacklist))
            : "about" === e
            ? ((n = f.e.about),
              (h = o.aboutBlacklistHash),
              (v = o.aboutBlacklist))
            : "profilePhoto" === e
            ? ((n = f.e.profilePhoto),
              (h = o.profilePhotoBlacklistHash),
              (v = o.profilePhotoBlacklist))
            : ((n = f.e.lastSeen),
              (h = o.lastSeenBlacklistHash),
              (v = o.lastSeenBlacklist)),
          (t ? r.b : r.e)(
            (0, a.w)(
              "iq",
              { to: a.l, type: "get", id: (0, a.u)(), xmlns: "privacy" },
              (0, a.w)(
                "privacy",
                null,
                (0, a.w)("list", {
                  name: (0, a.b)(n),
                  value: (0, a.b)("contact_blacklist"),
                  dhash: h ? (0, a.b)(h) : (0, a.b)("none"),
                })
              )
            ),
            p
          )
            .then((t) => {
              if (!t.success) return (0, l.f)(t, _);
              var n = t.result;
              return "match" === n.status
                ? { contactsBlacklist: v || (0, c.f)() }
                : ("groupAdd" === e
                    ? u.k.update({
                        groupAddBlacklistHash: n.listHash,
                        groupAddBlacklist: n.users,
                      })
                    : "about" === e
                    ? u.k.update({
                        aboutBlacklistHash: n.listHash,
                        aboutBlacklist: n.users,
                      })
                    : "profilePhoto" === e
                    ? u.k.update({
                        profilePhotoBlacklistHash: n.listHash,
                        profilePhotoBlacklist: n.users,
                      })
                    : u.k.update({
                        lastSeenBlacklistHash: n.listHash,
                        lastSeenBlacklist: n.users,
                      })
                  ).then(
                    () => (
                      (0, s.c)("page", "generalSettings", {
                        settings: u.k.get(),
                      }),
                      { contactsBlacklist: n.users }
                    )
                  );
            })
            .catch(
              (0, d.a)(
                i.b,
                () => (
                  __LOG__(2)`getContactsBlocklist disconnected error`,
                  (0, l.d)("network-error")
                )
              )
            )
        );
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return u;
      });
      var r = n(30),
        i = n(6),
        a = n(3),
        o = n(9);
      function u(e, t, n) {
        var u = i.i.get(),
          s = {
            version: "2.2245.7",
            context: e,
            os: u.osVersion,
            osBuild: u.osBuild,
            manufacturer: u.manufacturer,
            model: u.device,
            userAgent: u.userAgent,
            "sim mcc-mnc": `${u.mcc}-${u.mnc}`,
            "device iso8601": (0, a.F)().toISOString(),
            "socket conn": (0, r.h)() ? "up" : "down",
            "is rest of the world": "false",
            "Device ID": o.c,
          };
        return (
          null != n && (s.reference_file_id = "" + n),
          t && (s["Debug info"] = "+" + t),
          s
        );
      }
    },
    function (e, t, n) {
      function r(e) {
        var t;
        if (e.hasChild("parent"))
          return {
            groupType: "parent",
            numSubGroups:
              null != (t = e.child("parent").maybeAttrInt("num_sub_groups"))
                ? t
                : void 0,
          };
        var n = e.maybeChild("linked_parent");
        if (null == n) return {};
        var r = e.hasChild("default_sub_group"),
          i = n.attrGroupJid("jid");
        return Object.assign({}, r && { isCAG: r }, { linkedParent: i });
      }
      function i(e) {
        return {
          title: e.title,
          jid: e.jid,
          description: e.description,
          groupType: e.groupType,
        };
      }
      n.d(t, "a", function () {
        return r;
      }),
        n.d(t, "b", function () {
          return i;
        });
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return w;
      }),
        n.d(t, "b", function () {
          return O;
        });
      var r = n(8),
        i = n.n(r),
        a = n(30),
        o = n(86),
        u = n(4),
        s = n(51),
        l = n(15),
        c = n(6),
        d = n(12),
        f = n(11),
        _ = n(118),
        p = n(17),
        v = n(14),
        h = n(339),
        m = n(244),
        g = (0, f.x)(l.n).reduce((e, t) => ((e[l.n[t]] = l.n[t]), e), {}),
        y = new s.a("getPrivacyParser", (e) => {
          var t = e.child("privacy"),
            n = {};
          return (
            t.forEachChildWithTag("category", (e) => {
              var t = e.attrEnumOrNullIfUnknown("name", g);
              if (t)
                switch (
                  ("error" === e.attrString("value") &&
                    (function (e, t) {
                      var n = t.maybeChild("error"),
                        r = n && n.maybeAttrString("code"),
                        i = n && n.maybeAttrString("text");
                      __LOG__(4)`getPrivacy error: ${e} code ${r} text ${i}`,
                        SEND_LOGS("get-privacy");
                    })(t, e),
                  t)
                ) {
                  case "readreceipts":
                    n.readReceipts = e.attrEnum("value", m.ALL_NONE);
                    break;
                  case "last":
                    n.lastSeen = e.attrEnum("value", m.PRIVACY_WITH_BLOCKLIST);
                    break;
                  case "profile":
                    n.profilePhoto = e.attrEnum(
                      "value",
                      m.PRIVACY_WITH_BLOCKLIST
                    );
                    break;
                  case "status":
                    n.about = e.attrEnum("value", m.PRIVACY_WITH_BLOCKLIST);
                    break;
                  case "online":
                    n.online = e.attrEnum("value", m.ONLINE_VISIBILITY);
                    break;
                  default:
                    n.groupAdd = e.attrEnum("value", m.PRIVACY_WITH_BLOCKLIST);
                }
              else
                __LOG__(
                  3
                )`getPrivacyParser unrecognized privacy category ${e.maybeAttrString(
                  "name"
                )}`;
            }),
            n
          );
        }),
        b = new s.a("getPrivacyParser", (e) =>
          e.child("disappearing_mode").attrInt("duration")
        );
      function w(e) {
        var t = e ? a.b : a.e,
          n = t(
            (0, u.w)(
              "iq",
              { to: u.l, type: "get", id: (0, u.u)(), xmlns: "privacy" },
              (0, u.w)("privacy", null)
            ),
            y
          ),
          r = { success: !0, result: v.k };
        return (
          (0, p.a)("disappearing_mode") &&
            (r = t(
              (0, u.w)("iq", {
                to: u.l,
                type: "get",
                id: (0, u.u)(),
                xmlns: "disappearing_mode",
              }),
              b
            )),
          Promise.all([n, r])
            .then((t) => {
              var n = i()(t, 2),
                r = n[0],
                a = n[1];
              if (!r.success || !a.success) return { status: "network_error" };
              var o = r.result;
              c.k.update(
                Object.assign({}, o, { disappearingMsgsDefaultTimer: a.result })
              );
              var u = c.k.get();
              return (
                (0, d.c)("page", "generalSettings", { settings: u }),
                "contact_blacklist" === u.groupAdd &&
                null == u.groupAddBlacklistHash
                  ? (0, h.a)("groupAdd", e).then((e) =>
                      e.error ? { status: "network_error" } : { status: "ok" }
                    )
                  : { status: "ok" }
              );
            })
            .catch(
              (0, _.a)(
                o.b,
                () => (
                  __LOG__(2)`getPrivacySettings disconnected error`,
                  { status: "network_error" }
                )
              )
            )
        );
      }
      function O() {
        return w(!0);
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return r;
      });
      var r = class {
        constructor(e, t) {
          (this.signalDependencies = e),
            (this.keyPair = t
              ? Promise.resolve(t)
              : this.signalDependencies.generateIdentityKeyPair());
        }
        generatePublicKey() {
          return this.keyPair.then((e) => e.publicKey);
        }
        generateSharedSecret(e) {
          return this.keyPair.then((t) => {
            var n = t.privateKey;
            return (
              __LOG__(2)`Curve25519.generateSharedSecret pubkey:${e}`,
              this.signalDependencies.calculateAgreement(new Uint8Array(e), n)
            );
          });
        }
      };
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return A;
      });
      var r = n(6),
        i = n(7),
        a = n(41),
        o = n(43),
        u = n(239),
        s = n(411),
        l = n(231),
        c = n(342),
        d = n(456),
        f = n(457),
        _ = n(288),
        p = n(30),
        v = n(24),
        h = n(33),
        m = n(170),
        g = n(39),
        y = n(16),
        b = n(20),
        w = n(37),
        O = n.n(w),
        E = n(86),
        I = n(118),
        S = n(257),
        k = n(323),
        L = (n(149), n(115)),
        G = n(31),
        M = {
          UNINITIALIZED: "SAVE",
          COUNTRY_SELECT: "DELETE",
          ENTERING_PHONE_NUMBER: "DELETE",
          REQUESTING_CODE: "SAVE",
          TWO_FACTOR: "SAVE",
          QUERYING_JIO_HEADERS: "SKIP",
          CONFIRM_FOUND_PHONE_NUMBER: "SKIP",
          SENDING_SMS: "SKIP",
          SENDING_VOICE: "SKIP",
          VERIFYING: "SKIP",
          SENDING_EMAIL: "SKIP",
          RESETTING: "SKIP",
          INITIALIZING: "DELETE",
          BLOCKED: "DELETE",
          BLOCKED_BAN_APPEAL: "SAVE",
          BLOCKED_BAN_APPEAL_PRE: "SAVE",
          BAN_APPEAL: "SAVE",
          REQUESTING_CODE_BAN_APPEAL: "SAVE",
          SENDING_SMS_BAN_APPEAL: "SKIP",
          SENDING_VOICE_BAN_APPEAL: "SKIP",
          VERIFYING_SMS_BAN_APPEAL: "SKIP",
        },
        A = class {
          constructor(e, t) {
            __LOG__(2)`new RegFlow()`,
              (this.endReg = t),
              (this.An = e),
              (this.Al = Promise.all([
                T("index.html"),
                T("backendRoot.js"),
              ]).then(N)),
              (this.Am = r.E.get()),
              (this.Ak = Promise.all([
                a.x().then((e) => {
                  if (!e) return a.G();
                }),
                r.U.isDefined()
                  ? Promise.resolve()
                  : new _.a().keyPair.then((e) => {
                      var t = new Uint8Array(24);
                      self.crypto.getRandomValues(t),
                        r.U.set({ recoveryToken: t.buffer, staticKeyPair: e });
                    }),
              ])
                .then(a.E)
                .then((e) => {
                  var t = e.regId,
                    n = e.staticPublicKey,
                    i = e.signedPreKey,
                    a = r.U.get(),
                    u = a.recoveryToken,
                    s = a.staticKeyPair,
                    l = {
                      id: (0, o.e)(u),
                      authkey: (0, o.e)(s.publicKey),
                      e_regid: (0, o.e)(P(4, t)),
                      e_keytype: (0, o.e)(P(1, 5)),
                      e_ident: (0, o.e)(n),
                      e_skey_id: (0, o.e)(P(3, i.id)),
                      e_skey_val: (0, o.e)(i.keyPair.publicKey),
                      e_skey_sig: (0, o.e)(i.signature),
                    };
                  return __LOG__(2)`getSlowParams: finished`, l;
                })
                .catch((e) => {
                  throw (
                    (__LOG__(4)`RegFlow slowParams error ${e}`,
                    SEND_LOGS("regflow-slowparams-failed"),
                    e)
                  );
                }));
          }
          getToken(e) {
            return this.Al.then((t) =>
              N([(0, h.k)("aa8243c465a743c488beb4645dda63edc2ca9a58"), t, e])
            );
          }
          getSlowParams() {
            return this.Ak;
          }
          getStore() {
            return this.Am;
          }
          getStoreInState(e) {
            var t = this.getStore();
            if (t.type === e) return t;
            __LOG__(3)`Unexpected store in state ${t.type}. Expected ${e}`;
          }
          getStoreInStates2(e) {
            var t = this.getStore();
            if (e.includes(t.type)) return t;
            __LOG__(
              3
            )`Unexpected store in state ${t.type}. Expected ${e[0]} or ${e[1]}`;
          }
          getStoreInStates3(e) {
            var t = this.getStore();
            if (e.includes(t.type)) return t;
            __LOG__(
              3
            )`Unexpected store in state ${t.type}. Expected ${e[0]}, ${e[1]} or ${e[2]}`;
          }
          updateStore(e) {
            var t;
            this.Am = e;
            var n = M[e.type];
            switch (n) {
              case "SAVE":
                t = r.E.set(e);
                break;
              case "SKIP":
                t = Promise.resolve();
                break;
              case "DELETE":
                t = r.E.delete();
                break;
              default:
                return (0, O.a)(n);
            }
            return t.then(() => {
              this.An.fireAndForget("regPage", "updateReg", { newStore: e });
            });
          }
          startSmsListener() {
            return this.An.sendAndReceive("regPage", "startSmsListener", {});
          }
          stopSmsListener() {
            return this.An.sendAndReceive("regPage", "stopSmsListener", {});
          }
          finish(e) {
            var t = (0, i.C)(e.login);
            return (
              r.t.set(t),
              r.e.set("2.2245.7"),
              r.k.update({ saveMediaToPhoneStorage: !0 }),
              this.updateStore({ type: "INITIALIZING", jid: t }),
              (0, u.c)(this.An, !1, !1)
                .then((e) => {
                  e("registered");
                  var t = (0, S.a)((0, m.b)("sync"), 1e4).catch(() => null),
                    n = this.An.sendAndReceive("page", "getTotalSpace", {
                      area: "sdcard",
                    })
                      .then((e) => {
                        var t = e.result;
                        if (!(t >= 838860800))
                          return (
                            __LOG__(
                              2
                            )`Storage is low: ${t}. Autodownload only photos.`,
                            r.k.update({
                              autodownloadWifi: (0, b.l)("photos"),
                              autodownloadMobile: (0, b.l)("photos"),
                              autodownloadRoaming: (0, b.f)(),
                            })
                          );
                      })
                      .catch((e) => {
                        __LOG__(3)`Failed to check available space: ${e}`;
                      });
                  return Promise.all([
                    (0, s.default)(),
                    (0, l.queryAllGroups)()
                      .catch((0, I.a)(E.b, () => "disconnected"))
                      .then((e) => {
                        if ("success" !== e)
                          return (
                            __LOG__(
                              4
                            )`Failed to retrieve all groups during registration`,
                            SEND_LOGS("reg-failed-query-groups"),
                            (0, g.b)().waitUntilPersisted(y.e.queryAllGroups())
                          );
                      }),
                    (0, c.b)(),
                    (0, k.a)().then(() =>
                      r.I.get().mdBlocklistV2
                        ? (0, f.getBlocklistV2)()
                        : (0, d.getBlocklist)()
                    ),
                    (0, g.b)().waitUntilPersisted(y.e.getOwnAbout()),
                    n,
                    t,
                  ]);
                })
                .then(() => this.endReg())
                .then(() => {
                  (0, p.m)();
                })
            );
          }
        };
      function P(e, t) {
        for (var n = t, r = new Uint8Array(e), i = e - 1; i >= 0; i--)
          (r[i] = 255 & n), (n >>>= 8);
        return r;
      }
      function T(e) {
        return (0, G.k)(e).then((e) => e.arrayBuffer());
      }
      function N(e) {
        var t = v.a.build(...e).readByteArray();
        return (0, L.a)(t).then((e) => (0, h.n)(new Uint8Array(e)));
      }
    },
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return r;
      }),
        n.d(t, "c", function () {
          return i;
        }),
        n.d(t, "a", function () {
          return a;
        });
      var r = class extends Error {
          constructor() {
            var e;
            return (
              (e = super(...arguments)), (this.name = "SyncdMissingKeyError"), e
            );
          }
        },
        i = class extends Error {
          constructor(e, t) {
            super(e),
              (this.name = "SyncdRetryableError"),
              (this.backoff = t),
              (this.message = e);
          }
        },
        a = class extends Error {
          constructor(e) {
            super(e), (this.name = "SyncdFatalError"), (this.message = e);
          }
        };
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return a;
      }),
        n.d(t, "d", function () {
          return o;
        }),
        n.d(t, "c", function () {
          return u;
        }),
        n.d(t, "e", function () {
          return s;
        }),
        n.d(t, "a", function () {
          return l;
        }),
        n.d(t, "g", function () {
          return c;
        }),
        n.d(t, "h", function () {
          return f;
        }),
        n.d(t, "f", function () {
          return _;
        });
      var r = n(120),
        i = n(126);
      function a(e) {
        if (0 === e.length) throw new Error("buffers length is zero");
        if (1 === e.length) return e[0];
        var t,
          n = e.map((e) => e.byteLength).reduce((e, t) => e + t),
          r = new Uint8Array(n),
          i = 0;
        for (t = 0; t < e.length; t++)
          r.set(new Uint8Array(e[t]), i), (i += e[t].byteLength);
        return r.buffer;
      }
      function o(e, t, n) {
        if (t < 0 || n < 0) throw new Error("buffers length is zero");
        var r = new Array(3),
          i = new Uint8Array(e);
        return (
          (r[0] = i.slice(0, t).buffer),
          (r[1] = i.slice(t, t + n).buffer),
          (r[2] = i.slice(t + n).buffer),
          r
        );
      }
      function u(e) {
        return Uint8Array.from(e.split(" ").map((e) => parseInt(e, 16)));
      }
      function s(e) {
        return Array.from(new Uint8Array((0, i.b)(e)))
          .map((e) => e.toString(16))
          .toString()
          .replace(/,/g, " ");
      }
      function l(e) {
        return Array.from(new Uint8Array(e))
          .map((e) => e.toString(16).padStart(2, "0"))
          .join("");
      }
      function c(e) {
        var t = new ArrayBuffer(8);
        return new DataView(t).setUint32(4, e, !1), t;
      }
      var d = new TextEncoder();
      function f(e) {
        return d.encode(e);
      }
      function _(e, t) {
        return (0, r.a)((0, i.b)(e), (0, i.b)(t));
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return o;
      }),
        n.d(t, "a", function () {
          return j;
        });
      var r = n(0),
        i = Object.assign({}, null);
      i.internalSpec = {
        remoteJid: [1, r.d.STRING],
        fromMe: [2, r.d.BOOL],
        id: [3, r.d.STRING],
        participant: [4, r.d.STRING],
      };
      var a = Object.assign({}, null),
        o = Object.assign({}, null),
        u = Object.assign({}, null),
        s = Object.assign({}, null),
        l = Object.assign({}, null),
        c = Object.assign({}, null),
        d = Object.assign({}, null),
        f = Object.assign({}, null),
        _ = Object.assign({}, null),
        p = Object.assign({}, null),
        v = Object.assign({}, null),
        h = Object.assign({}, null),
        m = Object.assign({}, null),
        g = Object.assign({}, null),
        y = Object.assign({}, null),
        b = Object.assign({}, null),
        w = Object.assign({}, null),
        O = Object.assign({}, null),
        E = Object.assign({}, null),
        I = Object.assign({}, null),
        S = Object.assign({}, null),
        k = Object.assign({}, null),
        L = Object.assign({}, null),
        G = Object.assign({}, null),
        M = Object.assign({}, null),
        A = Object.assign({}, null),
        P = Object.assign({}, null),
        T = Object.assign({}, null),
        N = Object.assign({}, null),
        C = Object.assign({}, null),
        R = Object.assign({}, null),
        x = Object.assign({}, null),
        D = Object.assign({}, null),
        U = Object.assign({}, null),
        j = Object.assign({}, null);
      (a.internalSpec = { emoji: [1, r.d.STRING], weight: [2, r.d.FLOAT] }),
        (o.internalSpec = {
          timestamp: [1, r.d.INT64],
          starAction: [2, r.d.MESSAGE, U],
          contactAction: [3, r.d.MESSAGE, D],
          muteAction: [4, r.d.MESSAGE, x],
          pinAction: [5, r.d.MESSAGE, R],
          securityNotificationSetting: [6, r.d.MESSAGE, C],
          pushNameSetting: [7, r.d.MESSAGE, N],
          quickReplyAction: [8, r.d.MESSAGE, P],
          recentEmojiWeightsAction: [11, r.d.MESSAGE, G],
          labelEditAction: [14, r.d.MESSAGE, M],
          labelAssociationAction: [15, r.d.MESSAGE, A],
          localeSetting: [16, r.d.MESSAGE, T],
          archiveChatAction: [17, r.d.MESSAGE, L],
          deleteMessageForMeAction: [18, r.d.MESSAGE, k],
          keyExpiration: [19, r.d.MESSAGE, y],
          markChatAsReadAction: [20, r.d.MESSAGE, S],
          clearChatAction: [21, r.d.MESSAGE, I],
          deleteChatAction: [22, r.d.MESSAGE, E],
          unarchiveChatsSetting: [23, r.d.MESSAGE, O],
          primaryFeature: [24, r.d.MESSAGE, g],
          androidUnsupportedActions: [26, r.d.MESSAGE, m],
          agentAction: [27, r.d.MESSAGE, h],
          subscriptionAction: [28, r.d.MESSAGE, v],
          userStatusMuteAction: [29, r.d.MESSAGE, p],
          timeFormatAction: [30, r.d.MESSAGE, _],
          nuxAction: [31, r.d.MESSAGE, f],
          primaryVersionAction: [32, r.d.MESSAGE, d],
          stickerAction: [33, r.d.MESSAGE, l],
          removeRecentStickerAction: [34, r.d.MESSAGE, c],
          chatAssignment: [35, r.d.MESSAGE, s],
          chatAssignmentOpenedStatus: [36, r.d.MESSAGE, u],
        }),
        (u.internalSpec = { chatOpened: [1, r.d.BOOL] }),
        (s.internalSpec = { deviceAgentID: [1, r.d.STRING] }),
        (l.internalSpec = {
          url: [1, r.d.STRING],
          fileEncSha256: [2, r.d.BYTES],
          mediaKey: [3, r.d.BYTES],
          mimetype: [4, r.d.STRING],
          height: [5, r.d.UINT32],
          width: [6, r.d.UINT32],
          directPath: [7, r.d.STRING],
          fileLength: [8, r.d.UINT64],
          isFavorite: [9, r.d.BOOL],
          deviceIdHint: [10, r.d.UINT32],
        }),
        (c.internalSpec = { lastStickerSentTs: [1, r.d.INT64] }),
        (d.internalSpec = { version: [1, r.d.STRING] }),
        (f.internalSpec = { acknowledged: [1, r.d.BOOL] }),
        (_.internalSpec = { isTwentyFourHourFormatEnabled: [1, r.d.BOOL] }),
        (p.internalSpec = { muted: [1, r.d.BOOL] }),
        (v.internalSpec = {
          isDeactivated: [1, r.d.BOOL],
          isAutoRenewing: [2, r.d.BOOL],
          expirationDate: [3, r.d.INT64],
        }),
        (h.internalSpec = {
          name: [1, r.d.STRING],
          deviceID: [2, r.d.INT32],
          isDeleted: [3, r.d.BOOL],
        }),
        (m.internalSpec = { allowed: [1, r.d.BOOL] }),
        (g.internalSpec = { flags: [1, r.b.REPEATED | r.d.STRING] }),
        (y.internalSpec = { expiredKeyEpoch: [1, r.d.INT32] }),
        (b.internalSpec = {
          key: [1, r.d.MESSAGE, i],
          timestamp: [2, r.d.INT64],
        }),
        (w.internalSpec = {
          lastMessageTimestamp: [1, r.d.INT64],
          lastSystemMessageTimestamp: [2, r.d.INT64],
          messages: [3, r.b.REPEATED | r.d.MESSAGE, b],
        }),
        (O.internalSpec = { unarchiveChats: [1, r.d.BOOL] }),
        (E.internalSpec = { messageRange: [1, r.d.MESSAGE, w] }),
        (I.internalSpec = { messageRange: [1, r.d.MESSAGE, w] }),
        (S.internalSpec = {
          read: [1, r.d.BOOL],
          messageRange: [2, r.d.MESSAGE, w],
        }),
        (k.internalSpec = {
          deleteMedia: [1, r.d.BOOL],
          messageTimestamp: [2, r.d.INT64],
        }),
        (L.internalSpec = {
          archived: [1, r.d.BOOL],
          messageRange: [2, r.d.MESSAGE, w],
        }),
        (G.internalSpec = { weights: [1, r.b.REPEATED | r.d.MESSAGE, a] }),
        (M.internalSpec = {
          name: [1, r.d.STRING],
          color: [2, r.d.INT32],
          predefinedId: [3, r.d.INT32],
          deleted: [4, r.d.BOOL],
        }),
        (A.internalSpec = { labeled: [1, r.d.BOOL] }),
        (P.internalSpec = {
          shortcut: [1, r.d.STRING],
          message: [2, r.d.STRING],
          keywords: [3, r.b.REPEATED | r.d.STRING],
          count: [4, r.d.INT32],
          deleted: [5, r.d.BOOL],
        }),
        (T.internalSpec = { locale: [1, r.d.STRING] }),
        (N.internalSpec = { name: [1, r.d.STRING] }),
        (C.internalSpec = { showNotification: [1, r.d.BOOL] }),
        (R.internalSpec = { pinned: [1, r.d.BOOL] }),
        (x.internalSpec = {
          muted: [1, r.d.BOOL],
          muteEndTimestamp: [2, r.d.INT64],
          autoMuted: [3, r.d.BOOL],
        }),
        (D.internalSpec = {
          fullName: [1, r.d.STRING],
          firstName: [2, r.d.STRING],
          lidJid: [3, r.d.STRING],
        }),
        (U.internalSpec = { starred: [1, r.d.BOOL] }),
        (j.internalSpec = {
          index: [1, r.d.BYTES],
          value: [2, r.d.MESSAGE, o],
          padding: [3, r.d.BYTES],
          version: [4, r.d.INT32],
        });
    },
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return o;
      }),
        n.d(t, "a", function () {
          return u;
        }),
        n.d(t, "c", function () {
          return l;
        });
      var r = n(0),
        i = n(366),
        a = n(56),
        o = {
          INITIAL_BOOTSTRAP: 0,
          INITIAL_STATUS_V3: 1,
          FULL: 2,
          RECENT: 3,
          PUSH_NAME: 4,
          NON_BLOCKING_DATA: 5,
        },
        u = {
          COMPLETE_BUT_MORE_MESSAGES_REMAIN_ON_PRIMARY: 0,
          COMPLETE_AND_NO_MORE_MESSAGE_REMAIN_ON_PRIMARY: 1,
        },
        s = { DEFAULT: 0, OFF: 1, ON: 2 },
        l = Object.assign({}, null),
        c = Object.assign({}, null),
        d = Object.assign({}, null),
        f = Object.assign({}, null),
        _ = Object.assign({}, null),
        p = Object.assign({}, null),
        v = Object.assign({}, null),
        h = Object.assign({}, null),
        m = Object.assign({}, null),
        g = Object.assign({}, null),
        y = Object.assign({}, null),
        b = Object.assign({}, null);
      (l.internalSpec = {
        syncType: [1, r.b.REQUIRED | r.d.ENUM, o],
        conversations: [2, r.b.REPEATED | r.d.MESSAGE, c],
        statusV3Messages: [3, r.b.REPEATED | r.d.MESSAGE, i.c],
        chunkOrder: [5, r.d.UINT32],
        progress: [6, r.d.UINT32],
        pushnames: [7, r.b.REPEATED | r.d.MESSAGE, f],
        globalSettings: [8, r.d.MESSAGE, v],
        threadIdUserSecret: [9, r.d.BYTES],
        threadDsTimeframeOffset: [10, r.d.UINT32],
        recentStickers: [11, r.b.REPEATED | r.d.MESSAGE, m],
        pastParticipants: [12, r.b.REPEATED | r.d.MESSAGE, g],
      }),
        (c.internalSpec = {
          id: [1, r.b.REQUIRED | r.d.STRING],
          messages: [2, r.b.REPEATED | r.d.MESSAGE, d],
          newJid: [3, r.d.STRING],
          oldJid: [4, r.d.STRING],
          lastMsgTimestamp: [5, r.d.UINT64],
          unreadCount: [6, r.d.UINT32],
          readOnly: [7, r.d.BOOL],
          endOfHistoryTransfer: [8, r.d.BOOL],
          ephemeralExpiration: [9, r.d.UINT32],
          ephemeralSettingTimestamp: [10, r.d.INT64],
          endOfHistoryTransferType: [11, r.d.ENUM, u],
          conversationTimestamp: [12, r.d.UINT64],
          name: [13, r.d.STRING],
          pHash: [14, r.d.STRING],
          notSpam: [15, r.d.BOOL],
          archived: [16, r.d.BOOL],
          disappearingMode: [17, r.d.MESSAGE, a.b],
          unreadMentionCount: [18, r.d.UINT32],
          markedAsUnread: [19, r.d.BOOL],
          participant: [20, r.b.REPEATED | r.d.MESSAGE, _],
          tcToken: [21, r.d.BYTES],
          tcTokenTimestamp: [22, r.d.UINT64],
          contactPrimaryIdentityKey: [23, r.d.BYTES],
          pinned: [24, r.d.UINT32],
          muteEndTime: [25, r.d.UINT64],
          wallpaper: [26, r.d.MESSAGE, p],
          mediaVisibility: [27, r.d.ENUM, s],
          tcTokenSenderTimestamp: [28, r.d.UINT64],
          suspended: [29, r.d.BOOL],
          terminated: [30, r.d.BOOL],
          createdAt: [31, r.d.UINT64],
          createdBy: [32, r.d.STRING],
          description: [33, r.d.STRING],
          support: [34, r.d.BOOL],
          isParentGroup: [35, r.d.BOOL],
          isDefaultSubgroup: [36, r.d.BOOL],
          parentGroupId: [37, r.d.STRING],
          displayName: [38, r.d.STRING],
          pnJid: [39, r.d.STRING],
          shareOwnPn: [40, r.d.BOOL],
          pnhDuplicateLidThread: [41, r.d.BOOL],
          lidJid: [42, r.d.STRING],
        }),
        (d.internalSpec = {
          message: [1, r.d.MESSAGE, i.c],
          msgOrderId: [2, r.d.UINT64],
        }),
        (f.internalSpec = { id: [1, r.d.STRING], pushname: [2, r.d.STRING] }),
        (_.internalSpec = {
          userJid: [1, r.b.REQUIRED | r.d.STRING],
          rank: [2, r.d.ENUM, { REGULAR: 0, ADMIN: 1, SUPERADMIN: 2 }],
        }),
        (p.internalSpec = {
          filename: [1, r.d.STRING],
          opacity: [2, r.d.UINT32],
        }),
        (v.internalSpec = {
          lightThemeWallpaper: [1, r.d.MESSAGE, p],
          mediaVisibility: [2, r.d.ENUM, s],
          darkThemeWallpaper: [3, r.d.MESSAGE, p],
          autoDownloadWiFi: [4, r.d.MESSAGE, h],
          autoDownloadCellular: [5, r.d.MESSAGE, h],
          autoDownloadRoaming: [6, r.d.MESSAGE, h],
          showIndividualNotificationsPreview: [7, r.d.BOOL],
          showGroupNotificationsPreview: [8, r.d.BOOL],
          disappearingModeDuration: [9, r.d.INT32],
          disappearingModeTimestamp: [10, r.d.INT64],
          avatarUserSettings: [11, r.d.MESSAGE, b],
        }),
        (h.internalSpec = {
          downloadImages: [1, r.d.BOOL],
          downloadAudio: [2, r.d.BOOL],
          downloadVideo: [3, r.d.BOOL],
          downloadDocuments: [4, r.d.BOOL],
        }),
        (m.internalSpec = {
          url: [1, r.d.STRING],
          fileSha256: [2, r.d.BYTES],
          fileEncSha256: [3, r.d.BYTES],
          mediaKey: [4, r.d.BYTES],
          mimetype: [5, r.d.STRING],
          height: [6, r.d.UINT32],
          width: [7, r.d.UINT32],
          directPath: [8, r.d.STRING],
          fileLength: [9, r.d.UINT64],
          weight: [10, r.d.FLOAT],
          lastStickerSentTs: [11, r.d.INT64],
        }),
        (g.internalSpec = {
          groupJid: [1, r.d.STRING],
          pastParticipants: [2, r.b.REPEATED | r.d.MESSAGE, y],
        }),
        (y.internalSpec = {
          userJid: [1, r.d.STRING],
          leaveReason: [2, r.d.ENUM, { LEFT: 0, REMOVED: 1 }],
          leaveTs: [3, r.d.UINT64],
        }),
        (b.internalSpec = { fbid: [1, r.d.STRING], password: [2, r.d.STRING] });
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return y;
      });
      var r = n(8),
        i = n.n(r),
        a = n(31),
        o = n(127),
        u = n(6),
        s = n(3),
        l = n(78),
        c = n(277),
        d = n(116),
        f = n(257),
        _ = n(12),
        p = "https://graph.facebook.com",
        v = new l.a(() => {
          g(), u.r.set((0, s.D)());
        });
      function h(e, t, n) {
        var r = u.i.get(),
          i = e || "+12035555555",
          a = new FormData();
        return (
          a.append(
            "access_token",
            "1063127757113399|745146ffa34413f9dbb5469f5370b7af"
          ),
          a.append("type", "crashlog"),
          a.append("agent", r.userAgent),
          a.append("from_jid", u.t.isDefined() ? u.t.get() : "+" + i),
          a.append("build_id", 421345451),
          t &&
            a.append(
              "file",
              new Blob([t], { type: "application/x-gzip" }),
              "logs.txt.gz"
            ),
          null != n &&
            n.content.byteLength > 0 &&
            (a.append(
              "attachment",
              new Blob([n.content], { type: "application/x-gzip" }),
              "voipattachment.tar.gz"
            ),
            n.containsLog && a.append("tags", "voip"),
            n.crashCount > 0 && a.append("tags", "native")),
          { method: "POST", body: a }
        );
      }
      function m(e) {
        return (0, f.a)((0, d.e)(Boolean(e)), 1e4)
          .then((e) => {
            if ("evicted" !== e) return e;
          })
          .catch((e) => {
            __LOG__(2)`dumpVoipLogs error: ${e}`;
          });
      }
      function g(e, t) {
        var n = (0, a.c)(p, "/wa_fls_upload_check");
        return (0, a.f)(n, {}, h(e))
          .then((r) => {
            if (r.ok)
              return Promise.all([
                (0, c.a)().then((e) => {
                  var t = (t, n) => {
                      try {
                        e.push(t, n);
                      } catch (e) {
                        throw new Error(
                          "Compressor failed with error " + e.message
                        );
                      }
                    },
                    n = (e) => t(e, !1);
                  return (
                    (0, _.d)()
                      ? (0, _.e)("page", "pullInMemoryLogs", {})
                      : Promise.resolve()
                  ).then((r) =>
                    (0, o.logsEachFormatted)(
                      n,
                      null == r ? void 0 : r.logs
                    ).then(() => (t("", !0), e.result()))
                  );
                }),
                u.o.get() ? m(t) : Promise.resolve(),
              ])
                .then((t) => {
                  var n = i()(t, 2),
                    r = n[0],
                    o = n[1],
                    u = (0, a.c)(p, "/wa_clb_data");
                  return (
                    __LOG__(2)`uploadLogs: gzipped logs size ${r.byteLength}`,
                    null != o &&
                      __LOG__(
                        2
                      )`uploadLogs: voip logs size ${o.content.byteLength}`,
                    (0, a.f)(u, {}, h(e, r, o))
                  );
                })
                .then((e) => e.json())
                .then((e) => parseInt(e.reference_file_id, 10) || -1);
            throw new Error(
              "Error while trying to check if logs can be sent: " + n
            );
          })
          .catch((e) => (__LOG__(4)`Error while sending logs: ${e}`, -1));
      }
      function y(e, t) {
        return e
          ? (v.cancel(),
            (0, o.enableLoggingToTable)(),
            (0, _.c)("page", "enableLoggingToTable", {}),
            g(t, !0))
          : ((0, s.m)(u.r.get(), 3600)
              ? __LOG__(3)`sendLogs too soon since last upload`
              : v.debounceAndCap(500, 5e3),
            Promise.resolve(-1));
      }
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return o;
      }),
        n.d(t, "a", function () {
          return s;
        });
      var r = n(26),
        i = n.n(r),
        a = n(24);
      function o(e, t, n, r) {
        return u.apply(this, arguments);
      }
      function u() {
        return (u = i()(function* (e, t, n, r) {
          var i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 16,
            a = { name: "AES-GCM", iv: d(t), tagLength: 8 * i };
          return (
            null != r && (a.additionalData = d(r)),
            self.crypto.subtle.encrypt(a, yield c(e), n)
          );
        })).apply(this, arguments);
      }
      function s(e, t, n, r) {
        return l.apply(this, arguments);
      }
      function l() {
        return (l = i()(function* (e, t, n, r) {
          var i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : 16,
            a = { name: "AES-GCM", iv: d(t), tagLength: 8 * i };
          return (
            null != r && (a.additionalData = d(r)),
            self.crypto.subtle.decrypt(a, yield c(e), n)
          );
        })).apply(this, arguments);
      }
      function c(e) {
        return self.crypto.subtle.importKey("raw", e, "AES-GCM", !1, [
          "encrypt",
          "decrypt",
        ]);
      }
      function d(e) {
        if (e instanceof Uint8Array) return e;
        if ("string" == typeof e) {
          var t = new a.a();
          return t.writeString(e), t.readByteArray();
        }
        return new Uint8Array(e);
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return u;
      }),
        n.d(t, "c", function () {
          return s;
        }),
        n.d(t, "a", function () {
          return l;
        });
      var r = n(114),
        i = n(7),
        a = n(74),
        o = (0, i.m)();
      function u(e) {
        var t = e.hasChildren() ? e.mapChildren(u) : [],
          n = [];
        return (
          e.forEachAttributeKey((t) => {
            n.push(
              (function (e, t) {
                return { key: e, value: t };
              })(t, e.attrString(t))
            );
          }),
          {
            tag: e.tag(),
            content: e.hasContent() ? e.contentBytes() : new Uint8Array(0),
            attrs: n,
            children: t,
          }
        );
      }
      function s(e) {
        if (e.subType === a.b.JID) {
          var t = e.user,
            n = e.domain;
          return a.c.create(t, n);
        }
        var r = e.user,
          i = e.agent,
          o = e.device;
        return a.c.createAD(r, i >= 0 ? i : null, o >= 0 ? o : null);
      }
      (0, i.l)(), (0, i.k)(), o.slice(1);
      var l = new r.b(
        "callAckParser",
        (e) => (e.assertTag("ack"), { stanzaObject: u(e) })
      );
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return o;
      }),
        n.d(t, "a", function () {
          return u;
        }),
        n.d(t, "c", function () {
          return l;
        });
      var r = n(0),
        i = n(56),
        a = n(136),
        o = {
          UNKNOWN: 0,
          REVOKE: 1,
          CIPHERTEXT: 2,
          FUTUREPROOF: 3,
          NON_VERIFIED_TRANSITION: 4,
          UNVERIFIED_TRANSITION: 5,
          VERIFIED_TRANSITION: 6,
          VERIFIED_LOW_UNKNOWN: 7,
          VERIFIED_HIGH: 8,
          VERIFIED_INITIAL_UNKNOWN: 9,
          VERIFIED_INITIAL_LOW: 10,
          VERIFIED_INITIAL_HIGH: 11,
          VERIFIED_TRANSITION_ANY_TO_NONE: 12,
          VERIFIED_TRANSITION_ANY_TO_HIGH: 13,
          VERIFIED_TRANSITION_HIGH_TO_LOW: 14,
          VERIFIED_TRANSITION_HIGH_TO_UNKNOWN: 15,
          VERIFIED_TRANSITION_UNKNOWN_TO_LOW: 16,
          VERIFIED_TRANSITION_LOW_TO_UNKNOWN: 17,
          VERIFIED_TRANSITION_NONE_TO_LOW: 18,
          VERIFIED_TRANSITION_NONE_TO_UNKNOWN: 19,
          GROUP_CREATE: 20,
          GROUP_CHANGE_SUBJECT: 21,
          GROUP_CHANGE_ICON: 22,
          GROUP_CHANGE_INVITE_LINK: 23,
          GROUP_CHANGE_DESCRIPTION: 24,
          GROUP_CHANGE_RESTRICT: 25,
          GROUP_CHANGE_ANNOUNCE: 26,
          GROUP_PARTICIPANT_ADD: 27,
          GROUP_PARTICIPANT_REMOVE: 28,
          GROUP_PARTICIPANT_PROMOTE: 29,
          GROUP_PARTICIPANT_DEMOTE: 30,
          GROUP_PARTICIPANT_INVITE: 31,
          GROUP_PARTICIPANT_LEAVE: 32,
          GROUP_PARTICIPANT_CHANGE_NUMBER: 33,
          BROADCAST_CREATE: 34,
          BROADCAST_ADD: 35,
          BROADCAST_REMOVE: 36,
          GENERIC_NOTIFICATION: 37,
          E2E_IDENTITY_CHANGED: 38,
          E2E_ENCRYPTED: 39,
          CALL_MISSED_VOICE: 40,
          CALL_MISSED_VIDEO: 41,
          INDIVIDUAL_CHANGE_NUMBER: 42,
          GROUP_DELETE: 43,
          GROUP_ANNOUNCE_MODE_MESSAGE_BOUNCE: 44,
          CALL_MISSED_GROUP_VOICE: 45,
          CALL_MISSED_GROUP_VIDEO: 46,
          PAYMENT_CIPHERTEXT: 47,
          PAYMENT_FUTUREPROOF: 48,
          PAYMENT_TRANSACTION_STATUS_UPDATE_FAILED: 49,
          PAYMENT_TRANSACTION_STATUS_UPDATE_REFUNDED: 50,
          PAYMENT_TRANSACTION_STATUS_UPDATE_REFUND_FAILED: 51,
          PAYMENT_TRANSACTION_STATUS_RECEIVER_PENDING_SETUP: 52,
          PAYMENT_TRANSACTION_STATUS_RECEIVER_SUCCESS_AFTER_HICCUP: 53,
          PAYMENT_ACTION_ACCOUNT_SETUP_REMINDER: 54,
          PAYMENT_ACTION_SEND_PAYMENT_REMINDER: 55,
          PAYMENT_ACTION_SEND_PAYMENT_INVITATION: 56,
          PAYMENT_ACTION_REQUEST_DECLINED: 57,
          PAYMENT_ACTION_REQUEST_EXPIRED: 58,
          PAYMENT_ACTION_REQUEST_CANCELLED: 59,
          BIZ_VERIFIED_TRANSITION_TOP_TO_BOTTOM: 60,
          BIZ_VERIFIED_TRANSITION_BOTTOM_TO_TOP: 61,
          BIZ_INTRO_TOP: 62,
          BIZ_INTRO_BOTTOM: 63,
          BIZ_NAME_CHANGE: 64,
          BIZ_MOVE_TO_CONSUMER_APP: 65,
          BIZ_TWO_TIER_MIGRATION_TOP: 66,
          BIZ_TWO_TIER_MIGRATION_BOTTOM: 67,
          OVERSIZED: 68,
          GROUP_CHANGE_NO_FREQUENTLY_FORWARDED: 69,
          GROUP_V4_ADD_INVITE_SENT: 70,
          GROUP_PARTICIPANT_ADD_REQUEST_JOIN: 71,
          CHANGE_EPHEMERAL_SETTING: 72,
          E2E_DEVICE_CHANGED: 73,
          VIEWED_ONCE: 74,
          E2E_ENCRYPTED_NOW: 75,
          BLUE_MSG_BSP_FB_TO_BSP_PREMISE: 76,
          BLUE_MSG_BSP_FB_TO_SELF_FB: 77,
          BLUE_MSG_BSP_FB_TO_SELF_PREMISE: 78,
          BLUE_MSG_BSP_FB_UNVERIFIED: 79,
          BLUE_MSG_BSP_FB_UNVERIFIED_TO_SELF_PREMISE_VERIFIED: 80,
          BLUE_MSG_BSP_FB_VERIFIED: 81,
          BLUE_MSG_BSP_FB_VERIFIED_TO_SELF_PREMISE_UNVERIFIED: 82,
          BLUE_MSG_BSP_PREMISE_TO_SELF_PREMISE: 83,
          BLUE_MSG_BSP_PREMISE_UNVERIFIED: 84,
          BLUE_MSG_BSP_PREMISE_UNVERIFIED_TO_SELF_PREMISE_VERIFIED: 85,
          BLUE_MSG_BSP_PREMISE_VERIFIED: 86,
          BLUE_MSG_BSP_PREMISE_VERIFIED_TO_SELF_PREMISE_UNVERIFIED: 87,
          BLUE_MSG_CONSUMER_TO_BSP_FB_UNVERIFIED: 88,
          BLUE_MSG_CONSUMER_TO_BSP_PREMISE_UNVERIFIED: 89,
          BLUE_MSG_CONSUMER_TO_SELF_FB_UNVERIFIED: 90,
          BLUE_MSG_CONSUMER_TO_SELF_PREMISE_UNVERIFIED: 91,
          BLUE_MSG_SELF_FB_TO_BSP_PREMISE: 92,
          BLUE_MSG_SELF_FB_TO_SELF_PREMISE: 93,
          BLUE_MSG_SELF_FB_UNVERIFIED: 94,
          BLUE_MSG_SELF_FB_UNVERIFIED_TO_SELF_PREMISE_VERIFIED: 95,
          BLUE_MSG_SELF_FB_VERIFIED: 96,
          BLUE_MSG_SELF_FB_VERIFIED_TO_SELF_PREMISE_UNVERIFIED: 97,
          BLUE_MSG_SELF_PREMISE_TO_BSP_PREMISE: 98,
          BLUE_MSG_SELF_PREMISE_UNVERIFIED: 99,
          BLUE_MSG_SELF_PREMISE_VERIFIED: 100,
          BLUE_MSG_TO_BSP_FB: 101,
          BLUE_MSG_TO_CONSUMER: 102,
          BLUE_MSG_TO_SELF_FB: 103,
          BLUE_MSG_UNVERIFIED_TO_BSP_FB_VERIFIED: 104,
          BLUE_MSG_UNVERIFIED_TO_BSP_PREMISE_VERIFIED: 105,
          BLUE_MSG_UNVERIFIED_TO_SELF_FB_VERIFIED: 106,
          BLUE_MSG_UNVERIFIED_TO_VERIFIED: 107,
          BLUE_MSG_VERIFIED_TO_BSP_FB_UNVERIFIED: 108,
          BLUE_MSG_VERIFIED_TO_BSP_PREMISE_UNVERIFIED: 109,
          BLUE_MSG_VERIFIED_TO_SELF_FB_UNVERIFIED: 110,
          BLUE_MSG_VERIFIED_TO_UNVERIFIED: 111,
          BLUE_MSG_BSP_FB_UNVERIFIED_TO_BSP_PREMISE_VERIFIED: 112,
          BLUE_MSG_BSP_FB_UNVERIFIED_TO_SELF_FB_VERIFIED: 113,
          BLUE_MSG_BSP_FB_VERIFIED_TO_BSP_PREMISE_UNVERIFIED: 114,
          BLUE_MSG_BSP_FB_VERIFIED_TO_SELF_FB_UNVERIFIED: 115,
          BLUE_MSG_SELF_FB_UNVERIFIED_TO_BSP_PREMISE_VERIFIED: 116,
          BLUE_MSG_SELF_FB_VERIFIED_TO_BSP_PREMISE_UNVERIFIED: 117,
          E2E_IDENTITY_UNAVAILABLE: 118,
          GROUP_CREATING: 119,
          GROUP_CREATE_FAILED: 120,
          GROUP_BOUNCED: 121,
          BLOCK_CONTACT: 122,
          EPHEMERAL_SETTING_NOT_APPLIED: 123,
          SYNC_FAILED: 124,
          SYNCING: 125,
          BIZ_PRIVACY_MODE_INIT_FB: 126,
          BIZ_PRIVACY_MODE_INIT_BSP: 127,
          BIZ_PRIVACY_MODE_TO_FB: 128,
          BIZ_PRIVACY_MODE_TO_BSP: 129,
          DISAPPEARING_MODE: 130,
          E2E_DEVICE_FETCH_FAILED: 131,
          ADMIN_REVOKE: 132,
          GROUP_INVITE_LINK_GROWTH_LOCKED: 133,
          COMMUNITY_LINK_PARENT_GROUP: 134,
          COMMUNITY_LINK_SIBLING_GROUP: 135,
          COMMUNITY_LINK_SUB_GROUP: 136,
          COMMUNITY_UNLINK_PARENT_GROUP: 137,
          COMMUNITY_UNLINK_SIBLING_GROUP: 138,
          COMMUNITY_UNLINK_SUB_GROUP: 139,
          GROUP_PARTICIPANT_ACCEPT: 140,
          GROUP_PARTICIPANT_LINKED_GROUP_JOIN: 141,
          COMMUNITY_CREATE: 142,
          EPHEMERAL_KEEP_IN_CHAT: 143,
          GROUP_MEMBERSHIP_JOIN_APPROVAL_REQUEST: 144,
          GROUP_MEMBERSHIP_JOIN_APPROVAL_MODE: 145,
          INTEGRITY_UNLINK_PARENT_GROUP: 146,
          COMMUNITY_PARTICIPANT_PROMOTE: 147,
          COMMUNITY_PARTICIPANT_DEMOTE: 148,
          COMMUNITY_PARENT_GROUP_DELETED: 149,
          COMMUNITY_LINK_PARENT_GROUP_MEMBERSHIP_APPROVAL: 150,
          GROUP_PARTICIPANT_JOINED_GROUP_AND_PARENT_GROUP: 151,
          MASKED_THREAD_CREATED: 152,
          MASKED_THREAD_UNMASKED: 153,
          BIZ_CHAT_ASSIGNMENT: 154,
          CHAT_PSA: 155,
          CHAT_POLL_CREATION_MESSAGE: 156,
          CAG_MASKED_THREAD_CREATED: 157,
          COMMUNITY_PARENT_GROUP_SUBJECT_CHANGED: 158,
          CAG_INVITE_AUTO_ADD: 159,
          BIZ_CHAT_ASSIGNMENT_UNASSIGN: 160,
          CAG_INVITE_AUTO_JOINED: 161,
        },
        u = {
          ERROR: 0,
          PENDING: 1,
          SERVER_ACK: 2,
          DELIVERY_ACK: 3,
          READ: 4,
          PLAYED: 5,
        },
        s = { NOT_STARTED: 0, FORCE_UPGRADE: 1, DEVELOPMENT: 2, PRODUCTION: 3 },
        l = Object.assign({}, null),
        c = Object.assign({}, null),
        d = Object.assign({}, null),
        f = Object.assign({}, null),
        _ = Object.assign({}, null),
        p = Object.assign({}, null),
        v = Object.assign({}, null),
        h = Object.assign({}, null),
        m = Object.assign({}, null),
        g = Object.assign({}, null),
        y = Object.assign({}, null),
        b = Object.assign({}, null),
        w = Object.assign({}, null);
      (l.internalDefaults = { status: u.PENDING }),
        (l.internalSpec = {
          key: [1, r.b.REQUIRED | r.d.MESSAGE, a.a],
          message: [2, r.d.MESSAGE, i.h],
          messageTimestamp: [3, r.d.UINT64],
          status: [4, r.d.ENUM, u],
          participant: [5, r.d.STRING],
          messageC2STimestamp: [6, r.d.UINT64],
          ignore: [16, r.d.BOOL],
          starred: [17, r.d.BOOL],
          broadcast: [18, r.d.BOOL],
          pushName: [19, r.d.STRING],
          mediaCiphertextSha256: [20, r.d.BYTES],
          multicast: [21, r.d.BOOL],
          urlText: [22, r.d.BOOL],
          urlNumber: [23, r.d.BOOL],
          messageStubType: [24, r.d.ENUM, o],
          clearMedia: [25, r.d.BOOL],
          messageStubParameters: [26, r.b.REPEATED | r.d.STRING],
          duration: [27, r.d.UINT32],
          labels: [28, r.b.REPEATED | r.d.STRING],
          paymentInfo: [29, r.d.MESSAGE, c],
          finalLiveLocation: [30, r.d.MESSAGE, i.f],
          quotedPaymentInfo: [31, r.d.MESSAGE, c],
          ephemeralStartTimestamp: [32, r.d.UINT64],
          ephemeralDuration: [33, r.d.UINT32],
          ephemeralOffToOn: [34, r.d.BOOL],
          ephemeralOutOfSync: [35, r.d.BOOL],
          bizPrivacyStatus: [
            36,
            r.d.ENUM,
            { E2EE: 0, FB: 2, BSP: 1, BSP_AND_FB: 3 },
          ],
          verifiedBizName: [37, r.d.STRING],
          mediaData: [38, r.d.MESSAGE, p],
          photoChange: [39, r.d.MESSAGE, v],
          userReceipt: [40, r.b.REPEATED | r.d.MESSAGE, m],
          reactions: [41, r.b.REPEATED | r.d.MESSAGE, g],
          quotedStickerData: [42, r.d.MESSAGE, p],
          futureproofData: [43, r.d.BYTES],
          statusPsa: [44, r.d.MESSAGE, h],
          pollUpdates: [45, r.b.REPEATED | r.d.MESSAGE, y],
          pollAdditionalMetadata: [46, r.d.MESSAGE, b],
          agentId: [47, r.d.STRING],
          statusAlreadyViewed: [48, r.d.BOOL],
          messageSecret: [49, r.d.BYTES],
          keepInChat: [50, r.d.MESSAGE, w],
          originalSelfAuthorUserJidString: [51, r.d.STRING],
          revokeMessageTimestamp: [52, r.d.UINT64],
        }),
        (c.internalSpec = {
          currencyDeprecated: [1, r.d.ENUM, { UNKNOWN_CURRENCY: 0, INR: 1 }],
          amount1000: [2, r.d.UINT64],
          receiverJid: [3, r.d.STRING],
          status: [
            4,
            r.d.ENUM,
            {
              UNKNOWN_STATUS: 0,
              PROCESSING: 1,
              SENT: 2,
              NEED_TO_ACCEPT: 3,
              COMPLETE: 4,
              COULD_NOT_COMPLETE: 5,
              REFUNDED: 6,
              EXPIRED: 7,
              REJECTED: 8,
              CANCELLED: 9,
              WAITING_FOR_PAYER: 10,
              WAITING: 11,
            },
          ],
          transactionTimestamp: [5, r.d.UINT64],
          requestMessageKey: [6, r.d.MESSAGE, a.a],
          expiryTimestamp: [7, r.d.UINT64],
          futureproofed: [8, r.d.BOOL],
          currency: [9, r.d.STRING],
          txnStatus: [
            10,
            r.d.ENUM,
            {
              UNKNOWN: 0,
              PENDING_SETUP: 1,
              PENDING_RECEIVER_SETUP: 2,
              INIT: 3,
              SUCCESS: 4,
              COMPLETED: 5,
              FAILED: 6,
              FAILED_RISK: 7,
              FAILED_PROCESSING: 8,
              FAILED_RECEIVER_PROCESSING: 9,
              FAILED_DA: 10,
              FAILED_DA_FINAL: 11,
              REFUNDED_TXN: 12,
              REFUND_FAILED: 13,
              REFUND_FAILED_PROCESSING: 14,
              REFUND_FAILED_DA: 15,
              EXPIRED_TXN: 16,
              AUTH_CANCELED: 17,
              AUTH_CANCEL_FAILED_PROCESSING: 18,
              AUTH_CANCEL_FAILED: 19,
              COLLECT_INIT: 20,
              COLLECT_SUCCESS: 21,
              COLLECT_FAILED: 22,
              COLLECT_FAILED_RISK: 23,
              COLLECT_REJECTED: 24,
              COLLECT_EXPIRED: 25,
              COLLECT_CANCELED: 26,
              COLLECT_CANCELLING: 27,
              IN_REVIEW: 28,
              REVERSAL_SUCCESS: 29,
              REVERSAL_PENDING: 30,
              REFUND_PENDING: 31,
            },
          ],
          useNoviFiatFormat: [11, r.d.BOOL],
          primaryAmount: [12, r.d.MESSAGE, i.i],
          exchangeAmount: [13, r.d.MESSAGE, i.i],
        }),
        (d.internalSpec = {
          timestamp: [2, r.d.UINT64],
          unreadChats: [3, r.d.UINT32],
          notifyMessageCount: [4, r.d.UINT32],
          notifyMessages: [5, r.b.REPEATED | r.d.MESSAGE, l],
        }),
        (f.internalSpec = {
          key: [1, r.d.MESSAGE, a.a],
          message: [2, r.d.MESSAGE, i.h],
          messageTimestamp: [3, r.d.UINT64],
          participant: [4, r.d.STRING],
        }),
        (_.internalSpec = {
          labelsDisplay: [1, r.d.ENUM, s],
          voipIndividualOutgoing: [2, r.d.ENUM, s],
          groupsV3: [3, r.d.ENUM, s],
          groupsV3Create: [4, r.d.ENUM, s],
          changeNumberV2: [5, r.d.ENUM, s],
          queryStatusV3Thumbnail: [6, r.d.ENUM, s],
          liveLocations: [7, r.d.ENUM, s],
          queryVname: [8, r.d.ENUM, s],
          voipIndividualIncoming: [9, r.d.ENUM, s],
          quickRepliesQuery: [10, r.d.ENUM, s],
          payments: [11, r.d.ENUM, s],
          stickerPackQuery: [12, r.d.ENUM, s],
          liveLocationsFinal: [13, r.d.ENUM, s],
          labelsEdit: [14, r.d.ENUM, s],
          mediaUpload: [15, r.d.ENUM, s],
          mediaUploadRichQuickReplies: [18, r.d.ENUM, s],
          vnameV2: [19, r.d.ENUM, s],
          videoPlaybackUrl: [20, r.d.ENUM, s],
          statusRanking: [21, r.d.ENUM, s],
          voipIndividualVideo: [22, r.d.ENUM, s],
          thirdPartyStickers: [23, r.d.ENUM, s],
          frequentlyForwardedSetting: [24, r.d.ENUM, s],
          groupsV4JoinPermission: [25, r.d.ENUM, s],
          recentStickers: [26, r.d.ENUM, s],
          catalog: [27, r.d.ENUM, s],
          starredStickers: [28, r.d.ENUM, s],
          voipGroupCall: [29, r.d.ENUM, s],
          templateMessage: [30, r.d.ENUM, s],
          templateMessageInteractivity: [31, r.d.ENUM, s],
          ephemeralMessages: [32, r.d.ENUM, s],
          e2ENotificationSync: [33, r.d.ENUM, s],
          recentStickersV2: [34, r.d.ENUM, s],
          recentStickersV3: [36, r.d.ENUM, s],
          userNotice: [37, r.d.ENUM, s],
          support: [39, r.d.ENUM, s],
          groupUiiCleanup: [40, r.d.ENUM, s],
          groupDogfoodingInternalOnly: [41, r.d.ENUM, s],
          settingsSync: [42, r.d.ENUM, s],
          archiveV2: [43, r.d.ENUM, s],
          ephemeralAllowGroupMembers: [44, r.d.ENUM, s],
          ephemeral24HDuration: [45, r.d.ENUM, s],
          mdForceUpgrade: [46, r.d.ENUM, s],
          disappearingMode: [47, r.d.ENUM, s],
          externalMdOptInAvailable: [48, r.d.ENUM, s],
          noDeleteMessageTimeLimit: [49, r.d.ENUM, s],
        }),
        (p.internalSpec = { localPath: [1, r.d.STRING] }),
        (v.internalSpec = {
          oldPhoto: [1, r.d.BYTES],
          newPhoto: [2, r.d.BYTES],
          newPhotoId: [3, r.d.UINT32],
        }),
        (h.internalSpec = {
          campaignId: [44, r.b.REQUIRED | r.d.UINT64],
          campaignExpirationTimestamp: [45, r.d.UINT64],
        }),
        (m.internalSpec = {
          userJid: [1, r.b.REQUIRED | r.d.STRING],
          receiptTimestamp: [2, r.d.INT64],
          readTimestamp: [3, r.d.INT64],
          playedTimestamp: [4, r.d.INT64],
          pendingDeviceJid: [5, r.b.REPEATED | r.d.STRING],
          deliveredDeviceJid: [6, r.b.REPEATED | r.d.STRING],
        }),
        (g.internalSpec = {
          key: [1, r.d.MESSAGE, a.a],
          text: [2, r.d.STRING],
          groupingKey: [3, r.d.STRING],
          senderTimestampMs: [4, r.d.INT64],
          unread: [5, r.d.BOOL],
        }),
        (y.internalSpec = {
          pollUpdateMessageKey: [1, r.d.MESSAGE, a.a],
          vote: [2, r.d.MESSAGE, i.g],
          senderTimestampMs: [3, r.d.INT64],
        }),
        (b.internalSpec = { pollInvalidated: [1, r.d.BOOL] }),
        (w.internalSpec = {
          keepType: [1, r.d.ENUM, i.c],
          serverTimestamp: [2, r.d.INT64],
          key: [3, r.d.MESSAGE, a.a],
          deviceJid: [4, r.d.STRING],
          clientTimestampMs: [5, r.d.INT64],
          serverTimestampMs: [6, r.d.INT64],
        });
    },
    function (e, t, n) {
      n.r(t),
        n.d(t, "parseUSyncDevices", function () {
          return m;
        }),
        n.d(t, "syncDeviceList", function () {
          return y;
        }),
        n.d(t, "getDevicesNode", function () {
          return w;
        });
      var r = n(88),
        i = n(41),
        a = n(22),
        o = n(67),
        u = n(4),
        s = n(30),
        l = n(51),
        c = n(9),
        d = n(6),
        f = n(272),
        _ = n(71),
        p = n(134),
        v = n(322),
        h = n(17);
      function m(e) {
        var t = e.maybeChild("device-list"),
          n = e.maybeChild("key-index-list");
        if (n && n.hasContent())
          try {
            var r = n.attrTime("ts"),
              i = n.maybeAttrInt("expected_ts");
            return null == t
              ? {
                  type: "adv_list",
                  adv: (0, p.c)(n.contentBytes()),
                  stanzaTs: r,
                  expectedTs: i,
                }
              : {
                  type: "adv_list_and_devices",
                  devices: t.mapChildrenWithTag("device", (e) => ({
                    id: e.attrDeviceId("id"),
                    index: (0, _.g)(e, "key-index") || _.b,
                  })),
                  adv: (0, p.c)(n.contentBytes()),
                  stanzaTs: r,
                  expectedTs: i,
                };
          } catch (e) {
            return (
              __LOG__(4)`Error while processing usync devices: ${e}`,
              SEND_LOGS("usync-devices"),
              null
            );
          }
        else if (t) {
          var a = t.mapChildrenWithTag("device", (e) => e.attrDeviceId("id"));
          if (0 === a.length || (1 === a.length && a[0] === c.c))
            return { type: "primary_only" };
        }
        return null;
      }
      var g = new l.a("syncDeviceListResponse", (e) => {
        return (
          e.assertAttr("type", "result"),
          (t = e.child("usync")),
          (n = new Map()),
          t.child("list").forEachChildWithTag("user", (e) => {
            if (e.hasChild("devices")) {
              var t = m(e.child("devices"));
              t && n.set(e.attrPhoneUserJid("jid"), t);
            }
          }),
          n
        );
        var t, n;
      });
      function y(e) {
        var t = (0, v.a)(Array.from(e));
        return (0, o.c)(e)
          .then((t) => {
            var n = d.t.get(),
              r = new Map(t.map((e) => [e.jid, e]));
            return Promise.all(
              e.map((e) => {
                if (e !== n)
                  return (function (e, t) {
                    return t
                      ? Promise.resolve(w(t)).then((t) =>
                          (0, u.w)("user", { jid: (0, u.g)(e) }, t)
                        )
                      : (0, u.w)("user", { jid: (0, u.g)(e) });
                  })(e, r.get(e));
              })
            );
          })
          .then((n) => {
            var r = (0, u.w)(
              "iq",
              { to: u.l, id: (0, u.u)(), type: "get", xmlns: "usync" },
              (0, u.w)(
                "usync",
                {
                  sid: (0, u.u)(),
                  index: "0",
                  last: "true",
                  mode: "full",
                  context: "background",
                },
                (0, u.w)("query", null, (0, u.w)("devices", { version: "2" })),
                (0, u.w)("list", null, n)
              )
            );
            return (0, s.b)(r, g).then((n) => {
              if (!n.success)
                throw (
                  (__LOG__(4)`Error while syncing device list for ${e}`,
                  new Error("Error while syncing device list"))
                );
              return t.then(() =>
                (0, p.i)(n.result).then((e) => {
                  var t = [];
                  return (
                    e.forEach((e, n) => {
                      t.push(
                        (0, i.w)(n, e).then(() =>
                          (0, a.jb)(n, { usyncResponse: e })
                        )
                      );
                    }),
                    Promise.all(t).then(() => {})
                  );
                })
              );
            });
          });
      }
      function b(e, t, n) {
        var r;
        return (
          (r = (0, h.a)("adv_v2_m4_m5") && t && n && n > t ? (0, u.f)(n) : u.c),
          (0, u.w)("devices", {
            device_hash: (0, u.b)(e),
            ts: t ? (0, u.f)(t) : u.c,
            expected_ts: r,
          })
        );
      }
      function w(e) {
        var t = e.deviceVerification ? e.deviceVerification.timestamp : null,
          n = e.deviceVerification ? e.deviceVerification.expectedTs : null;
        if (e.phash) return Promise.resolve(b(e.phash, t, n));
        var r = (0, _.c)(e);
        return (0, f.a)(r).then((e) => b(e, t, n));
      }
      t.default = (0, r.c)()
        .finalStep("syncDeviceList", (e) => y(e.users))
        .end();
    },
    ,
    function (e, t, n) {
      n.d(t, "b", function () {
        return u;
      }),
        n.d(t, "a", function () {
          return c;
        });
      var r = n(26),
        i = n.n(r);
      function a(e, t, n) {
        for (
          var r = [],
            a = [],
            o = 0,
            u = (function () {
              var n = i()(function* () {
                for (; o < e; ) {
                  var n = o;
                  o++, (a[n] = yield t(n));
                }
              });
              return function () {
                return n.apply(this, arguments);
              };
            })(),
            s = Math.min(e, n),
            l = 0;
          l < s;
          l++
        )
          r.push(u());
        return Promise.all(r).then(() => a);
      }
      var o = n(144);
      function u(e) {
        return "video" === e;
      }
      var s = 10,
        l = 65536;
      function c(e, t) {
        var n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
          r = t.buffer.byteLength,
          i = Math.ceil((r - 16) / l),
          u = new Uint8Array(s * i);
        return a(
          i,
          (n) => {
            var r = n * l,
              i = r + 16 + l,
              a = t.subarray(r, i);
            return (0, o.f)(e, a).then((e) => {
              var t = new Uint8Array(e, 0, s);
              u.set(t, n * s);
            });
          },
          n
        ).then(() => u.buffer);
      }
    },
    ,
    ,
    function (e, t, n) {
      n.r(t),
        n.d(t, "queryGroupInfoFromCode", function () {
          return p;
        }),
        n.d(t, "queryGroupInviteCode", function () {
          return g;
        }),
        n.d(t, "resetGroupInviteCode", function () {
          return w;
        });
      var r = n(30),
        i = n(4),
        a = n(88),
        o = n(51),
        u = n(256),
        s = n(72),
        l = n(231),
        c = n(186),
        d = n(3),
        f = { "growth-locked": ["436", u.a] },
        _ = (0, s.a)(
          "errorJoinGroupViaInviteParser",
          {
            401: "removed",
            404: "group-not-found",
            406: "invalid-link",
            410: "invite-link-reset",
            419: "too-many-participants",
            500: "unknown",
          },
          f
        );
      function p(e) {
        var t = (0, i.w)(
          "iq",
          { to: i.e, type: "get", xmlns: "w:g2", id: (0, i.u)() },
          (0, i.w)("invite", { code: (0, i.b)(e) })
        );
        return (0, r.c)(t, l.simpleQueryGroupParser, _).then((e) =>
          e.success ? (0, l.buildSimpleGroupResult)(e.result) : e.customError
        );
      }
      var v = { "growth-locked": ["436", u.a] },
        h = (0, s.a)(
          "inviteCodeErrorParser",
          {
            400: "bad-request",
            404: "group-not-found",
            401: "not-admin",
            403: "not-participant",
            423: "locked",
            500: "unknown",
          },
          v
        ),
        m = new o.a("queryGroupInviteCodeParser", (e) => ({
          code: e.child("invite").attrString("code"),
        }));
      function g(e) {
        var t = (0, i.u)(),
          n = (0, i.w)(
            "iq",
            { to: (0, i.g)(e), type: "get", xmlns: "w:g2", id: t },
            (0, i.w)("invite", null)
          );
        return (0, r.c)(n, m, h).then((n) => {
          if (!n.success) {
            var r = n.customError;
            if ("growth-locked" === r.error.reason) {
              var i = r.error;
              return (0, c.p)(e, {
                id: t,
                ts: (0, d.D)(),
                growthLocked: i.extra,
              }).then(() => r);
            }
            return r;
          }
          var a = n.result;
          return (0, c.q)(e, { id: t, ts: (0, d.D)() }).then(() => ({
            result: { code: a.code },
          }));
        });
      }
      var y = { "growth-locked": ["436", u.a] },
        b = (0, s.a)(
          "revokeInviteCodeErrorParser",
          {
            400: "bad-request",
            404: "group-not-found",
            401: "not-admin",
            403: "not-participant",
            423: "locked",
            429: "rate-limited",
            500: "unknown",
          },
          y
        ),
        w = (0, a.c)()
          .finalStep("revokeGroupInviteCode", (e) => {
            return (
              (t = e.groupJid),
              (n = (0, i.u)()),
              (a = (0, i.w)(
                "iq",
                { to: (0, i.g)(t), type: "set", xmlns: "w:g2", id: n },
                (0, i.w)("invite", null)
              )),
              (0, r.c)(a, m, b).then((e) => {
                if (!e.success) {
                  var r = e.customError;
                  if ("growth-locked" === r.error.reason) {
                    var i = r.error;
                    return (0, c.p)(t, {
                      id: n,
                      ts: (0, d.D)(),
                      growthLocked: i.extra,
                    }).then(() => r);
                  }
                  return e.customError;
                }
                var a = e.result;
                return (0, c.q)(t, { id: n, ts: (0, d.D)() }).then(() => ({
                  result: { code: a.code },
                }));
              })
            );
            var t, n, a;
          })
          .end();
    },
    function (e, t, n) {
      n.r(t),
        n.d(t, "default", function () {
          return s;
        }),
        n.d(t, "updateClockSkew", function () {
          return l;
        });
      var r = n(114),
        i = n(3),
        a = n(6),
        o = n(12),
        u =
          (n(4),
          new r.b(
            "successParser",
            (e) => (
              e.assertTag("success"),
              { ts: e.attrTime("t"), props: e.attrInt("props") }
            )
          ));
      function s(e) {
        var t = u.parse(e);
        if (t.error) __LOG__(4)`handleSuccess: failed to parse ${t.error}`;
        else {
          var n = t.success;
          l(Math.round(Date.now() / 1e3 - n.ts)),
            a.I.get().serverPropsVersion < n.props &&
              (0, o.c)("backend", "syncServerProps", {});
        }
        return "NO_ACK";
      }
      function l(e) {
        (0, i.z)(e),
          a.g.set(e),
          (0, o.c)("event", "clockSkewUpdated", { clockSkew: e });
      }
    },
    function (e, t, n) {
      n.d(t, "c", function () {
        return o;
      }),
        n.d(t, "a", function () {
          return u;
        }),
        n.d(t, "b", function () {
          return s;
        });
      var r = n(9),
        i = n(28),
        a = n(29);
      function o(e, t) {
        return (0, a.g)(e, t, r.X, "UserJid");
      }
      function u(e, t) {
        return (0, a.g)(e, t, r.V, "GroupJid");
      }
      function s(e, t, n) {
        var r = (0, a.e)(e, t);
        if (!r.success) return r;
        for (var o = n.validators, u = n.typeName, s = 0; s < o.length; s++) {
          var l = o[s](r.value);
          if (null != l) return (0, i.c)(l);
        }
        return (0, a.i)(
          e,
          `to have "${t}"={${u}}, but instead has "${r.value}"`
        );
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return r;
      });
      var r = class extends Error {
        constructor() {
          var e;
          return (
            (e = super(...arguments)), (this.name = "SmaxParsingFailure"), e
          );
        }
      };
    },
    function (e, t, n) {
      function r(e, t) {
        return `Failed to parse the response of <rpc name="${e}">. ${Object.keys(
          t
        )
          .map(
            (e) =>
              `Tried <response name="${e}">, but failed with ${t[e].error}.`
          )
          .join(" ")}`;
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      function r(e) {
        var t = new Error(e);
        if (void 0 === t.stack)
          try {
            throw t;
          } catch (e) {}
        return t;
      }
      n.d(t, "e", function () {
        return a;
      }),
        n.d(t, "c", function () {
          return u;
        }),
        n.d(t, "b", function () {
          return s;
        }),
        n.d(t, "a", function () {
          return l;
        }),
        n.d(t, "d", function () {
          return c;
        });
      var i = null;
      function a(e) {
        i = e;
      }
      function o() {
        if (null == i) throw r("Trying to access WAGlobals before being set");
        return i;
      }
      function u() {
        var e,
          t = null == (e = o().myJids) ? void 0 : e.deviceJid;
        if (null == t)
          throw r("Trying to access myDeviceJid, but it's not set");
        return t;
      }
      function s() {
        return o().db;
      }
      function l() {
        return o().config;
      }
      function c(e, t) {
        return o().runInTransaction(e, t);
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return i;
      }),
        n.d(t, "b", function () {
          return a;
        });
      var r = n(4);
      function i(e, t) {
        return null == t ? r.c : e(t);
      }
      function a(e, t) {
        return t ? e : r.c;
      }
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return f;
      }),
        n.d(t, "c", function () {
          return _;
        }),
        n.d(t, "b", function () {
          return p;
        });
      var r = n(4),
        i = n(6),
        a = n(355),
        o = n(56),
        u = n(7),
        s = n(296),
        l = n(40),
        c = n(33),
        d = n(30);
      function f() {
        return i.d.get();
      }
      function _(e) {
        var t = i.d.get();
        return !!t && t.stanzaId === e;
      }
      function p(e, t, n) {
        var f = { protocolMessage: t },
          _ = (0, u.B)(i.t.get(), e);
        return (0, s.g)(_, f).then((u) => {
          var s = u.encNode,
            f = (0, l.e)((0, c.l)(7)),
            p = (0, r.w)(
              "message",
              { id: (0, r.b)(f), to: (0, r.g)(_), type: (0, r.b)("text") },
              s
            );
          return (0, d.g)(p, {
            id: f,
            class: "message",
            from: _,
            participant: null,
          }).then(() => {
            if (t.type === o.d.HISTORY_SYNC_NOTIFICATION) {
              var r,
                u =
                  null == (r = t.historySyncNotification) ? void 0 : r.syncType,
                s = {
                  deviceId: e,
                  stanzaId: f,
                  syncStage: "historySync",
                  syncType: u,
                };
              return (
                u === a.b.RECENT && (s = Object.assign({}, s, n)),
                (function (e) {
                  var t = i.d.get();
                  return t && t.deviceId === e.deviceId
                    ? i.d.set(Object.assign({}, e))
                    : Promise.resolve();
                })(s).then(() => {})
              );
            }
          });
        });
      }
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      function r(e) {
        return (
          self.simpleVerifyMp4FileIntegrity
            ? Promise.resolve()
            : n.e(191).then(n.t.bind(null, 485, 7))
        )
          .then(() => self.simpleVerifyMp4FileIntegrity("file.bin", e))
          .then(
            (e) => {
              if (null != e.error)
                return (
                  __LOG__(3)`mp4Check error code: ${e.error}`,
                  { type: "error", error: "format_error" }
                );
              var t = e.info.video || null;
              if (t) {
                var n = t.rotation % 360;
                n < 0 && (n += 360), (t.rotation = n);
              }
              return (
                t &&
                  t.rotation % 90 != 0 &&
                  (__LOG__(4)`mp4Check video has non-90 rotation ${t.rotation}`,
                  (t.rotation = null)),
                { type: "success", info: { video: t, audio: null } }
              );
            },
            (e) => (
              __LOG__(3)`mp4Check internal error: ${e}`,
              { type: "error", error: "format_error" }
            )
          );
      }
      n.d(t, "a", function () {
        return r;
      });
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return a;
      }),
        n.d(t, "b", function () {
          return o;
        });
      var r = n(6),
        i = n(2);
      function a(e, t) {
        var n = e.attrString(t);
        n !== r.t.get() &&
          e.throw(`to have "${t}"={me} (${r.t.get()}), but instead has "${n}"`);
      }
      function o(e, t) {
        if (!e.hasAttr(t)) return i.c;
        var n = e.attrPhoneUserJid(t);
        return n === r.t.get() ? i.b : n;
      }
      n(112);
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return a;
      });
      var r = n(0),
        i = Object.assign({}, null),
        a = Object.assign({}, null);
      (i.internalSpec = {
        publicKey: [1, r.d.BYTES],
        identifier: [2, r.d.BYTES],
      }),
        (a.internalSpec = {
          version: [1, r.d.UINT32],
          localFingerprint: [2, r.d.MESSAGE, i],
          remoteFingerprint: [3, r.d.MESSAGE, i],
        });
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return a;
      }),
        n.d(t, "a", function () {
          return o;
        });
      var r = n(12),
        i = "unknown";
      function a(e) {
        i = e;
      }
      function o() {
        return "unknown" === i ? (0, r.d)() : i;
      }
    },
    function (e, t, n) {
      n.r(t),
        n.d(t, "handlePreKeysLow", function () {
          return b;
        });
      var r = n(8),
        i = n.n(r),
        a = n(114),
        o = n(4),
        u = n(30),
        s = n(41),
        l = n(129),
        c = n(86),
        d = n(249),
        f = n(258),
        _ = n(118),
        p = new Set(),
        v = { error: !1, result: !0 },
        h = { algo: { type: "fibonacci", first: 1e3, second: 2e3 }, max: 61e4 },
        m = new a.b("setPreKeysResult", (e) => {
          e.assertTag("iq"), e.assertFromServer();
          var t = e.attrEnum("type", v);
          if (t) return { success: t };
          var n = e.child("error");
          return {
            success: !1,
            errorCode: n.attrInt("code"),
            errorMsg: n.maybeAttrString("text") || "",
          };
        }),
        g = (0, l.b)(() => {
          var e = new d.a({
            name: "uploadPreKeys",
            timer: h,
            code: (e) => (
              __LOG__(2)`uploadPreKeys running`,
              ((0, s.r)(),
              Promise.all([(0, s.E)(), (0, s.b)()]).then((e) => {
                var t = i()(e, 2),
                  n = t[0],
                  r = n.regId,
                  a = n.staticPublicKey,
                  l = n.signedPreKey,
                  d = t[1],
                  p = d.preKeys,
                  v = d.lastId,
                  h = (0, o.w)(
                    "iq",
                    { id: (0, o.u)(), xmlns: "encrypt", type: "set", to: o.l },
                    (0, o.w)("registration", null, (0, o.a)(r)),
                    (0, o.w)("type", null, ""),
                    (0, o.w)("identity", null, a),
                    (0, o.w)("list", null, p.map(f.a)),
                    (0, f.b)(l)
                  );
                return (0, u.o)()
                  .then(() => (0, s.B)(v))
                  .then(() => (0, u.e)(h, m))
                  .then((e) => {
                    if (e.success) return __LOG__(2)`uploadPreKeys success`, !0;
                    var t = e.errorCode;
                    return (
                      t >= 500
                        ? __LOG__(
                            2
                          )`uploadPreKeys server requested backoff ${t}`
                        : 406 === t
                        ? __LOG__(4)`uploadPreKeys uploaded invalid keys`
                        : __LOG__(4)`uploadPreKeys unrecognized error ${t}`,
                      !1
                    );
                  })
                  .catch(
                    (0, _.a)(
                      c.b,
                      () => (
                        __LOG__(
                          2
                        )`_uploadPreKeys disconnected, unclear if on server`,
                        !1
                      )
                    )
                  );
              })).then((t) => {
                t && e(), __LOG__(2)`uploadPreKeys retrying (after delay)`;
              })
            ),
          });
          return e.start(), e.promise();
        });
      t.default = g;
      var y = new a.b(
          "preKeysLow",
          (e) => (
            e.assertTag("notification"),
            e.assertAttr("type", "encrypt"),
            e.assertFromServer(),
            {
              stanzaId: e.attrString("id"),
              numRemaining: e.child("count").attrInt("value"),
            }
          )
        ),
        b = (0, a.c)("handlePreKeysLow", y, (e, t) => {
          var n = e.stanzaId,
            r = (0, o.w)("ack", {
              to: o.l,
              id: (0, o.b)(n),
              class: "notification",
            });
          return p.has(t)
            ? r
            : (p.add(t),
              g()
                .then(() => r)
                .finally(() => {
                  p.delete(t);
                }));
        });
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return v;
      }),
        n.d(t, "c", function () {
          return h;
        }),
        n.d(t, "b", function () {
          return m;
        });
      var r = n(26),
        i = n.n(r),
        a = n(3),
        o = n(31),
        u = n(43),
        s = n(30),
        l = n(4),
        c = new (n(51).a)("resumeCheck", (e) => {
          var t = e.child("resume");
          return "complete" === t.attrString("resume")
            ? {
                status: "found",
                url: t.maybeAttrString("url") || void 0,
                directPath: t.maybeAttrString("direct_path") || void 0,
              }
            : { status: "not-found" };
        }),
        d = n(90),
        f = n(6),
        _ = n(173),
        p = n(28);
      function v(e) {
        e &&
          null != e.overallUploadResult &&
          null != e.overallMediaType &&
          WAM.log("regular", 1588, void 0, [
            43,
            0,
            e.connectionType,
            34,
            2,
            e.debugMediaException,
            32,
            2,
            e.debugMediaIp,
            33,
            2,
            e.debugUrl,
            45,
            3,
            e.estimatedBandwidth,
            28,
            0,
            e.finalizeConnectT,
            31,
            0,
            e.finalizeHttpCode,
            30,
            1,
            e.finalizeIsReuse,
            29,
            0,
            e.finalizeNetworkT,
            49,
            1,
            e.isViewOnce,
            46,
            0,
            e.mediaId,
            42,
            0,
            e.networkStack,
            4,
            0,
            e.overallAttemptCount,
            10,
            0,
            e.overallConnBlockFetchT,
            41,
            2,
            e.overallConnectionClass,
            37,
            0,
            e.overallCumT,
            38,
            0,
            e.overallCumUserVisibleT,
            5,
            2,
            e.overallDomain,
            50,
            0,
            e.overallEncryptT,
            36,
            1,
            e.overallIsFinal,
            16,
            1,
            e.overallIsForward,
            13,
            1,
            e.overallIsManual,
            11,
            0,
            e.overallLastUploadRetryPhase,
            40,
            0,
            e.overallMediaKeyReuse,
            7,
            3,
            e.overallMediaSize,
            1,
            0,
            e.overallMediaType,
            6,
            0,
            e.overallMmsVersion,
            12,
            0,
            e.overallOptimisticFlag,
            9,
            0,
            e.overallQueueT,
            3,
            0,
            e.overallRetryCount,
            8,
            0,
            e.overallT,
            15,
            0,
            e.overallTranscodeT,
            39,
            0,
            e.overallUploadMode,
            44,
            0,
            e.overallUploadOrigin,
            35,
            0,
            e.overallUploadResult,
            14,
            0,
            e.overallUserVisibleT,
            17,
            0,
            e.resumeConnectT,
            20,
            0,
            e.resumeHttpCode,
            19,
            1,
            e.resumeIsReuse,
            18,
            0,
            e.resumeNetworkT,
            27,
            3,
            e.uploadBytesTransferred,
            22,
            0,
            e.uploadConnectT,
            25,
            0,
            e.uploadHttpCode,
            24,
            1,
            e.uploadIsReuse,
            26,
            1,
            e.uploadIsStreaming,
            23,
            0,
            e.uploadNetworkT,
            21,
            0,
            e.uploadResumePoint,
            48,
            0,
            e.uploadSource,
            47,
            2,
            e.usedFallbackHint,
          ]);
      }
      function h(e, t, n, r, u) {
        return (function () {
          var s = i()(function* (i, s, l, c) {
            var d = (0, a.t)(),
              f = g(e, n, r, i.domain, s),
              h = Object.assign({}, c, {
                overallDomain: i.domain,
                overallConnectionClass: i.class,
                overallRetryCount: l,
              }),
              m = yield (0, o.d)(f, { body: t }),
              y = (0, a.u)(d);
            if ("ok" === m.type)
              return (0, p.c)({
                result: {
                  type: "ok",
                  directPath: m.json.direct_path,
                  url: m.json.url,
                  handle: m.json.handle,
                },
                metric: Object.assign({}, h, {
                  uploadNetworkT: y,
                  uploadHttpCode: o.a.OK,
                  overallCumT: u.cumulative(),
                  overallT: u.elapsed(),
                }),
              });
            if ("http-error" === m.type) {
              var b,
                w = m.code;
              if (w === o.a.UNSUPPORTED_MEDIA_TYPE) b = "invalid-hash";
              else if (w === o.a.PAYLOAD_TOO_LARGE) b = "payload-too-large";
              else if (w === o.a.INSUFFICIENT_STORAGE) b = "throttled";
              else {
                if (w === o.a.REQUEST_TIMEOUT || w >= 500)
                  return (
                    v(
                      Object.assign({}, h, {
                        overallUploadResult: w >= 500 ? 13 : 2,
                        overallIsFinal: l === _.b - 1,
                        uploadHttpCode: w,
                        uploadNetworkT: y,
                      })
                    ),
                    u.reset(),
                    (0, p.b)({ progressMade: !0 })
                  );
                if (!(w >= 400 && w < 500))
                  throw new Error("upload: unexpected http code " + w);
                b = "request-error";
              }
              return (0, p.c)({
                result: { type: "error", error: b },
                metric: Object.assign({}, h, {
                  overallCumT: u.cumulative(),
                  overallT: u.elapsed(),
                  uploadNetworkT: y,
                  uploadHttpCode: w,
                }),
              });
            }
            v(
              Object.assign({}, h, {
                overallUploadResult: 14,
                overallCumT: u.cumulative(),
                overallT: u.elapsed(),
                overallIsFinal: l === _.b - 1,
                uploadNetworkT: y,
              })
            ),
              u.reset();
            var O = "body-network-error" === m.type;
            return (0, p.b)({ progressMade: O });
          });
          return function (e, t, n, r) {
            return s.apply(this, arguments);
          };
        })();
      }
      function m(e, t, n, r) {
        var h = f.I.get().mmsResumeCheckChatd;
        return (function () {
          var f = i()(function* (i, f, m, y) {
            var b = (0, a.t)();
            if (h) {
              var w = yield (function (e, t, n, r) {
                var i = (0, u.e)(t),
                  a = (0, u.e)(n),
                  o = (0, l.w)(
                    "iq",
                    { to: l.l, xmlns: "w:m", type: "get", id: (0, l.u)() },
                    (0, l.w)("resume_check", {
                      media_type: (0, l.b)(e),
                      hash: (0, l.b)(i),
                      token: (0, l.b)(a),
                      auth: (0, l.b)(r),
                      resume: (0, l.f)(0),
                    })
                  );
                return (0, s.b)(o, c).then((e) =>
                  e.success
                    ? e.result
                    : 401 === e.errorCode
                    ? { status: "auth-expired" }
                    : (__LOG__(
                        3
                      )`resumeCheck failed to perform resume check through chat server`,
                      null)
                );
              })((0, d.f)(n), e, t, f);
              if (null != w)
                return (0, p.c)({
                  result: w,
                  metric: Object.assign({}, y, {
                    resumeNetworkT: (0, a.u)(b),
                    overallT: r.elapsed(),
                    overallCumT: r.cumulative(),
                    overallRetryCount: m,
                  }),
                });
            }
            var O = g(n, t, e, i.domain, f, "resume"),
              E = Object.assign({}, y, {
                overallRetryCount: m,
                overallDomain: i.domain,
                overallConnectionClass: i.class,
              }),
              I = yield (0, o.d)(O),
              S = (0, a.u)(b);
            if ("ok" === I.type) {
              var k =
                "complete" === I.json.resume
                  ? {
                      status: "found",
                      directPath: I.json.direct_path,
                      url: I.json.url,
                    }
                  : { status: "not-found" };
              return (0, p.c)({
                result: k,
                metric: Object.assign({}, E, {
                  resumeNetworkT: (0, a.u)(b),
                  resumeHttpCode: o.a.OK,
                  overallCumT: r.cumulative(),
                  overallT: r.elapsed(),
                }),
              });
            }
            if ("http-error" === I.type) {
              var L,
                G = I.code;
              if (G === o.a.NOT_FOUND || G === o.a.GONE)
                L = { status: "not-found" };
              else if (G === o.a.UNAUTHORIZED) L = { status: "auth-expired" };
              else if (G === o.a.INSUFFICIENT_STORAGE)
                L = { status: "throttled" };
              else {
                if (G === o.a.REQUEST_TIMEOUT || G >= 500)
                  return (
                    v(
                      Object.assign({}, E, {
                        overallUploadResult: G >= 500 ? 13 : 2,
                        overallIsFinal: m === _.b - 1,
                        resumeHttpCode: G,
                        resumeNetworkT: S,
                      })
                    ),
                    r.reset(),
                    (0, p.b)({ progressMade: !0 })
                  );
                if (!(G >= 400 && G < 500))
                  throw new Error("resumeCheck: unexpected http code " + G);
                L = { status: "request-error" };
              }
              return (0, p.c)({
                result: L,
                metric: Object.assign({}, E, {
                  resumeHttpCode: G,
                  resumeNetworkT: S,
                }),
              });
            }
            v(
              Object.assign({}, E, {
                overallUploadResult: 14,
                overallIsFinal: m === _.b - 1,
                uploadNetworkT: S,
              })
            ),
              r.reset();
            var M = "body-network-error" === I.type;
            return (0, p.b)({ progressMade: M });
          });
          return function (e, t, n, r) {
            return f.apply(this, arguments);
          };
        })();
      }
      function g(e, t, n, r, i, a) {
        var s = (0, u.e)(n),
          l = { auth: i, token: (0, u.e)(t) };
        return (
          "resume" === a && (l.resume = 1),
          (0, o.c)("https://" + r, `${(0, d.c)(e)}/${s}`, l)
        );
      }
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.d(t, "a", function () {
        return i;
      }),
        n.d(t, "b", function () {
          return a;
        }),
        n.d(t, "c", function () {
          return o;
        });
      var r = n(0),
        i = { GENERAL_ERROR: 0, SUCCESS: 1, NOT_FOUND: 2, DECRYPTION_ERROR: 3 },
        a = Object.assign({}, null),
        o = Object.assign({}, null);
      (a.internalSpec = {
        stanzaId: [1, r.d.STRING],
        directPath: [2, r.d.STRING],
        result: [3, r.d.ENUM, i],
      }),
        (o.internalSpec = { stanzaId: [1, r.d.STRING] });
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return o;
      });
      var r = n(7),
        i = n(34),
        a = n(156);
      function o(e, t) {
        var n = t.text,
          o = t.senderTimestampMs,
          u = t.groupingKey,
          s = t.key;
        if (o && s && s.id) {
          var l = "" === n ? void 0 : n;
          if (void 0 === l || l.length <= 30)
            if (e.edit === i.b || e.edit === i.c)
              if (e.edit !== i.b || void 0 === l) {
                var c = e.jid,
                  d = (0, r.h)(e.author),
                  f = (0, a.b)(c, d, s);
                if (f) {
                  var _ = f.msgAuthor;
                  return {
                    msgRef: { msgExternalId: f.msgExternalId, msgAuthor: _ },
                    content: {
                      externalId: e.externalId,
                      ts: e.ts,
                      chatJid: c,
                      author: d,
                      text: l,
                      groupingKey: u,
                      senderTimestampMs: o,
                    },
                  };
                }
              } else __LOG__(4)`Received revoked reaction with content`;
            else __LOG__(4)`Received reaction with invalid edit`;
          else __LOG__(4)`Invalid reaction content`;
        } else __LOG__(4)`Received reaction without enough data`;
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return o;
      });
      var r = n(56),
        i = n(156),
        a = n(7);
      function o(e, t) {
        var n = t.key,
          o = t.keepType,
          u = t.timestampMs;
        if (null != n && null != o && null != u)
          if (o !== r.c.UNKNOWN) {
            var s = e.jid,
              l = e.author,
              c = (0, a.h)(l),
              d = (0, i.b)(s, c, n);
            if (d) {
              var f = d.msgAuthor;
              return {
                msgRef: { msgExternalId: d.msgExternalId, msgAuthor: f },
                content: {
                  externalId: e.externalId,
                  ts: e.ts,
                  chatJid: s,
                  author: c,
                  keepType: o,
                  senderTimestampMs: u,
                },
              };
            }
            __LOG__(
              4
            )`keepInChatProtoMsgToUnstoredReceivedKeepInChatInfo: invalid key`;
          } else
            __LOG__(
              4
            )`keepInChatProtoMsgToUnstoredReceivedKeepInChatInfo: received unknown type`;
        else
          __LOG__(
            4
          )`keepInChatProtoMsgToUnstoredReceivedKeepInChatInfo: missing data`;
      }
    },
    function (e, t, n) {
      n.d(t, "a", function () {
        return g;
      });
      var r = n(56),
        i = n(9),
        a = n(7),
        o = n(2),
        u = n(3),
        s = n(34),
        l = n(42),
        c = n(11),
        d = n(150),
        f = n(321),
        _ = n(99),
        p = n(38),
        v = n(54),
        h = n(33),
        m = n(43);
      function g(e, t, n) {
        var u = e.proto,
          l = (0, _.f)(u);
        if (!l) return null;
        var c,
          m = (function (e, t) {
            var n = e.ts,
              r = "@psa" === e.author ? "@psa" : (0, a.h)(e.author),
              u = "@psa" === e.author ? i.c : (0, a.f)(e.author),
              s = {
                externalId: e.externalId,
                ts: n,
                author: r,
                deviceId: u,
                ack: o.a.RECEIVED,
                altIndex: "",
                campaignId: e.campaignId,
                campaignDuration: e.campaignDuration,
              },
              l = (0, _.b)(t);
            if (l) {
              var c = l.actionLink;
              return (
                c &&
                  c.url &&
                  c.buttonTitle &&
                  (s.actionLink = { url: c.url, buttonTitle: c.buttonTitle }),
                (0, d.c)(s, l)
              );
            }
            return s;
          })(e, l),
          g = null;
        switch (l.type) {
          case "conversation":
            c = Object.assign({ type: p.c.TEXT, text: l.value }, m);
            break;
          case "extendedTextMessage":
            var O = (function (e, t, n) {
              var r = (0, v.i)(t.author),
                i = (0, d.f)(e, r);
              if (i) {
                var a = i.content,
                  o = i.preview,
                  u = Object.assign({ type: p.c.TEXT }, a, t, {
                    font: e.font,
                    textColor: e.textArgb,
                    backgroundColor: y(e.backgroundArgb),
                  });
                return (
                  n && (u.fromFb = !0),
                  { msg: u, media: o ? { preview: o } : void 0 }
                );
              }
            })(l.value, m, n);
            O && ((c = O.msg), (g = O.media));
            break;
          case "imageMessage":
            var E = (function (e, t, n) {
              var r = (0, d.g)(e, t.ts, w);
              if (r) {
                var i = Object.assign({}, r.content, t, { media: void 0 }),
                  a = {
                    entry: r.media.mediaEntry,
                    plaintextHash: r.media.plaintextHash,
                    preview: r.preview || null,
                  };
                return (
                  n && (i.text = n),
                  e.interactiveAnnotations &&
                    (i.interactiveAnnotations = e.interactiveAnnotations),
                  b(a, e),
                  { msg: i, media: a }
                );
              }
            })(l.value, m, t);
            E && ((c = E.msg), (g = E.media));
            break;
          case "videoMessage":
            var I = l.value;
            if (I.gifPlayback) {
              var S = (function (e, t, n) {
                var r = (0, d.h)(e, t.ts, s.d.GIF, w);
                if (r) {
                  var i = Object.assign({ type: p.c.GIF }, r.content, t, {
                      media: void 0,
                    }),
                    a = {
                      entry: r.media.mediaEntry,
                      plaintextHash: r.media.plaintextHash,
                      preview: r.preview || null,
                    };
                  return (
                    n && (i.text = n),
                    e.interactiveAnnotations &&
                      (i.interactiveAnnotations = e.interactiveAnnotations),
                    b(a, e),
                    { msg: i, media: a }
                  );
                }
              })(I, m, t);
              S && ((c = S.msg), (g = S.media));
            } else {
              var k = (function (e, t, n) {
                var r = (0, d.h)(e, t.ts, s.d.VIDEO, w);
                if (r) {
                  var i = Object.assign({ type: p.c.VIDEO }, r.content, t, {
                      media: void 0,
                    }),
                    a = {
                      entry: r.media.mediaEntry,
                      plaintextHash: r.media.plaintextHash,
                      preview: r.preview || null,
                    };
                  return (
                    n && (i.text = n),
                    e.interactiveAnnotations &&
                      (i.interactiveAnnotations = e.interactiveAnnotations),
                    b(a, e),
                    { msg: i, media: a }
                  );
                }
              })(I, m, t);
              k && ((c = k.msg), (g = k.media));
            }
            break;
          case "protocolMessage":
            var L = l.value.key;
            e.edit === s.b &&
            l.value.type === r.d.REVOKE &&
            (null == L ? void 0 : L.fromMe) &&
            L.remoteJid === i.h
              ? (c = Object.assign({ type: p.c.REVOKED }, m, {
                  externalId: L.id,
                  revokedExternalId: L.id,
                }))
              : __LOG__(4)`recv'd invalid revoke key ${L} for ${e.author}`;
            break;
          case "audioMessage":
            var G = (function (e, t) {
              var n = (0, d.d)(e, t.ts, s.d.PTT);
              if (n)
                return {
                  msg: Object.assign({ type: o.f.PTT }, n.content, t, {
                    media: void 0,
                    waveform: (0, d.j)(e.waveform),
                    backgroundColor: y(e.backgroundArgb),
                  }),
                  media: {
                    entry: n.media.mediaEntry,
                    plaintextHash: n.media.plaintextHash,
                    preview: n.preview || null,
                  },
                };
            })(l.value, m);
            G && ((c = G.msg), (g = G.media));
            break;
          default:
            var M = f.a[l.type] || null;
            c = Object.assign(
              {
                type: p.c.FUTUREPROOF,
                protobuf: (0, h.b)(e.bytes),
                subtype: M,
                altIndex: "futureproof-" + (M || "unknown"),
              },
              m
            );
        }
        return c ? { msg: c, media: g, pushname: e.pushname } : null;
      }
      function y(e) {
        return e
          ? ((0, c.y)(l.e).includes(e) ||
              __LOG__(3)`Unrecognized color value for status ${e}`,
            e)
          : (__LOG__(4)`Unexpected empty background argb for status`,
            void SEND_LOGS("empty-background-argb"));
      }
      function b(e, t) {
        var n = e.entry;
        "mms4" === n.version &&
          t.thumbnailEncSha256 &&
          t.thumbnailDirectPath &&
          null != t.thumbnailSha256 &&
          ((n.mmsThumb = {
            directPath: t.thumbnailDirectPath,
            ciphertextHash: t.thumbnailEncSha256,
          }),
          (e.mmsThumbInfo = {
            hash: (0, m.e)(new Uint8Array(t.thumbnailSha256)),
          }));
      }
      function w(e, t, n, r) {
        if (!e.staticUrl) return (0, d.b)(e, t, n, r);
        var i = e.staticUrl;
        if (e.mediaKey && e.fileEncSha256)
          return {
            version: "static",
            type: t,
            cryptoKey: e.mediaKey,
            ciphertextHash: e.fileEncSha256,
            size: n,
            creationTs: (0, u.D)(),
            staticUrl: i,
            sidecar: e.streamingSidecar || void 0,
          };
        __LOG__(
          4
        )`Expected mediaKey and fileEncSha256 when staticUrl is provided`;
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return s;
      }),
        n.d(t, "a", function () {
          return l;
        });
      var r = n(5),
        i = n(159),
        a = n(165),
        o = n(337),
        u = n(126);
      function s(e) {
        var t = (0, a.b)((0, u.b)(e));
        return (0, r.i)(
          (0, i.a)()
            .stores.syncKeys.get(t)
            .then((e) => {
              if (e) return (0, o.b)(e);
            })
        );
      }
      function l(e) {
        return (0, r.i)(
          (0, i.a)()
            .stores.pendingMutations.bulkPut(e)
            .then(() => {})
        );
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return _;
      }),
        n.d(t, "a", function () {
          return v;
        });
      var r = n(30),
        i = n(4),
        a = n(51),
        o = n(12),
        u = n(56),
        s = n(75),
        l = n(119),
        c = n(43),
        d = n(11),
        f = n(115);
      function _(e) {
        e.assertTag("document");
        var t = (0, s.a)(u.h, e.contentBytes()).documentMessage;
        return {
          status: "available",
          creationDate: e.attrTime("creation"),
          expirationDate: e.attrTime("expiration"),
          size: null == t ? void 0 : t.fileLength,
          metadata: t,
        };
      }
      var p = new a.a("parseGpdrReportStatusResponse", (e) => {
        var t = e.child("gdpr");
        return t.hasChild("document")
          ? _(t.child("document"))
          : { status: "pending", availabilityDate: t.attrTime("timestamp") };
      });
      function v() {
        return (0, r.b)(
          (0, i.w)(
            "iq",
            {
              xmlns: "urn:xmpp:whatsapp:account",
              to: i.l,
              type: "get",
              id: (0, i.u)(),
            },
            (0, i.w)("gdpr", { action: "status" })
          ),
          p
        ).then((e) => {
          if (e.success)
            "available" === e.result.status
              ? (function (e) {
                  if ("available" === e.status) {
                    var t = (0, c.e)(e.metadata.fileSha256);
                    return (0, l.getChunkTable)()
                      .getGdprReportBlob()
                      .then((e) => {
                        if (e)
                          return (0, d.h)(e)
                            .then((e) => (0, f.a)(e))
                            .then((n) => {
                              if ((0, c.e)(n) === t) return e;
                            });
                      });
                  }
                  return Promise.resolve();
                })(e.result).then((t) => {
                  t
                    ? "available" === e.result.status &&
                      (0, o.c)("event", "gdprReportUpdated", {
                        gdprReport: {
                          status: "downloaded",
                          creationDate: e.result.creationDate,
                          expirationDate: e.result.expirationDate,
                          size: e.result.size,
                          metadata: e.result.metadata,
                          blob: t,
                        },
                      })
                    : (0, o.c)("event", "gdprReportUpdated", {
                        gdprReport: e.result,
                      });
                })
              : (0, o.c)("event", "gdprReportUpdated", {
                  gdprReport: e.result,
                });
          else
            switch (e.errorCode) {
              case 404:
                return void (0, o.c)("event", "gdprReportUpdated", {
                  gdprReport: { status: "none" },
                });
              default:
                return void __LOG__(
                  2
                )`getGdprReportStatus: unhandled error code ${e.errorCode} : ${e.errorText}`;
            }
        });
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return i;
      }),
        n.d(t, "a", function () {
          return a;
        });
      var r = null;
      function i(e) {
        __LOG__(2)`setActivityInProgress: ${e || "activity finished"}`, (r = e);
      }
      function a() {
        return r;
      }
    },
    function (e, t, n) {
      n.d(t, "b", function () {
        return v;
      }),
        n.d(t, "a", function () {
          return h;
        });
      var r = n(26),
        i = n.n(r),
        a = n(130),
        o = n(93),
        u = n(412),
        s = n(33),
        l = n(3),
        c = n(34),
        d = n(151),
        f = n(43),
        _ = n(255),
        p = n(347);
      function v(e, t) {
        return (function (e, t) {
          var n = (0, s.k)((0, s.l)(32));
          return (0, a.c)(n, t).then((r) => {
            var i = r.iv,
              o = r.cipherKey,
              u = r.hmacKey;
            return (0, a.d)(o, i, u, t, e).then((e) => ({
              ciphertext: e.ciphertext,
              ciphertextHash: e.ciphertextHash,
              mediaKey: n,
            }));
          });
        })(e instanceof Blob ? e : new Blob([e]), t).then(
          (function () {
            var e = i()(function* (e) {
              var n = e.ciphertext,
                r = e.ciphertextHash,
                i = e.mediaKey,
                a = yield (function (e, t, n) {
                  var r = (0, s.k)((0, s.l)(32)),
                    i = (0, u.c)(n, e, r, t, new l.e());
                  return (0, o.b)(n)
                    .then((e) => {
                      if ("no-hosts" === e || "disconnected" === e)
                        throw new Error("Failed to upload media: " + e);
                      var t = { overallMmsVersion: 4, overallMediaType: m(n) };
                      return e.run(i, t);
                    })
                    .then((e) => {
                      if (!e) throw new Error("Failed to upload media");
                      var t = e.result;
                      if ("ok" !== t.type)
                        throw new Error("Failed to upload media");
                      var n = t.directPath,
                        r = t.handle;
                      if (!n)
                        throw new Error(
                          "Upload result does not have direct path"
                        );
                      return { directPath: n, handle: r };
                    });
                })(n, r, t);
              return {
                fileEncSha256: r,
                mediaKey: i,
                directPath: a.directPath,
                handle: a.handle,
              };
            });
            return function (t) {
              return e.apply(this, arguments);
            };
          })()
        );
      }
      function h(e) {
        var t = e.mediaKey,
          n = e.directPath,
          r = e.fileSha256,
          i = e.fileEncSha256;
        if (t && i && r) {
          var a = {
              version: "mms4",
              type: c.d.MD_APP_STATE,
              cryptoKey: t instanceof ArrayBuffer ? t : t.buffer,
              ciphertextHash: i instanceof ArrayBuffer ? i : i.buffer,
              directPath: n,
              size: "unknown",
            },
            u = new _.a({
              parts: d.b,
              onUpdate(e) {
                __LOG__(2)`download ${100 * e}% finished`;
              },
              onSuccess: () => {
                __LOG__(2)`download finished`;
              },
              onError: () => {
                __LOG__(2)`download failed`;
              },
            });
          return (0, d.c)("auto", a, (0, f.e)(r), u, {
            overallMmsVersion: 4,
            overallMediaType: 20,
          }).then((e) => {
            var t = e.result,
              n = e.metric;
            if ("success" === t.status)
              return (
                u.parts.processing.finished(),
                (0, o.k)(
                  Object.assign({}, n, {
                    overallDownloadResult: 1,
                    overallIsFinal: !0,
                  })
                ),
                t.plaintext
              );
            throw (
              ((0, o.k)(
                Object.assign({}, n, {
                  overallDownloadResult: d.a[t.status],
                  overallIsFinal: !0,
                })
              ),
              __LOG__(4)`syncd:downloadblob ${t.status}`,
              new p.a("external patch expired"))
            );
          });
        }
        throw new p.a("external patch expired");
      }
      function m(e) {
        switch (Object.keys(c.d).find((t) => c.d[t] === e)) {
          case "MD_HISTORY":
            return 21;
          case "MD_APP_STATE":
            return 20;
          default:
            return 1;
        }
      }
    },
    function (e, t, n) {
      var r = n(26),
        i = n.n(r),
        a = n(181),
        o = n(169),
        u = n(28),
        s = n(30),
        l = n(29),
        c = n(208);
      function d(e, t) {
        var n = (0, l.a)(e, "iq");
        if (!n.success) return n;
        var r = (0, c.b)(t, ["id"]);
        if (!r.success) return r;
        var i = (0, l.l)(l.e, e, "id", r.value);
        if (!i.success) return i;
        var a = (0, c.b)(t, ["to"]);
        if (!a.success) return a;
        var o = (0, l.l)(l.e, e, "from", a.value);
        if (!o.success) return o;
        var s = (0, l.l)(l.e, e, "type", "error");
        return s.success ? (0, u.c)({ type: s.value }) : s;
      }
      function f(e, t) {
        var n = (0, l.a)(e, "iq");
        if (!n.success) return n;
        var r = (0, l.k)(e, "error");
        if (!r.success) return r;
        var i = d(e, t);
        if (!i.success) return i;
        var a = (function (e) {
          var t = (function (e) {
            var t = (0, l.a)(e, "error");
            if (!t.success) return t;
            var n = (0, l.l)(l.e, e, "text", "bad-request");
            if (!n.success) return n;
            var r = (0, l.l)(l.e, e, "code", "400");
            return r.success ? (0, u.c)({ text: n.value, code: r.value }) : r;
          })(e);
          if (t.success)
            return (0, u.c)({ name: "IQErrorBadRequest", value: t.value });
          var n = (function (e) {
            var t = (0, l.a)(e, "error");
            if (!t.success) return t;
            var n = (0, l.l)(l.e, e, "text", "feature-not-implemented");
            if (!n.success) return n;
            var r = (0, l.l)(l.e, e, "code", "501");
            return r.success ? (0, u.c)({ text: n.value, code: r.value }) : r;
          })(e);
          return n.success
            ? (0, u.c)({ name: "IQErrorFeatureNotImplemented", value: n.value })
            : (0, l.j)(
                e,
                ["IQErrorBadRequest", "IQErrorFeatureNotImplemented"],
                [t, n]
              );
        })(r.value);
        return a.success
          ? (0, u.c)(Object.assign({}, i.value, { _: a.value }))
          : a;
      }
      function _(e, t) {
        var n = (0, l.a)(e, "iq");
        if (!n.success) return n;
        var r = (0, l.k)(e, "error");
        if (!r.success) return r;
        var i = (function (e) {
          var t = (0, l.a)(e, "error");
          if (!t.success) return t;
          var n = (0, l.l)(l.e, e, "text", "internal-server-error");
          if (!n.success) return n;
          var r = (0, l.l)(l.e, e, "code", "500");
          return r.success ? (0, u.c)({ text: n.value, code: r.value }) : r;
        })(r.value);
        if (!i.success) return i;
        var a = d(e, t);
        return a.success
          ? (0, u.c)(
              Object.assign(
                { errorIQErrorInternalServerErrorMixin: i.value },
                a.value
              )
            )
          : a;
      }
      function p(e) {
        var t = (0, l.a)(e, "prop");
        if (!t.success) return t;
        var n = (function (e) {
          var t = (function (e) {
            var t = (0, l.a)(e, "prop");
            if (!t.success) return t;
            var n = (0, l.c)(e, "config_code", 1, void 0);
            if (!n.success) return n;
            var r = (0, l.e)(e, "config_value");
            if (!r.success) return r;
            var i = (0, l.o)(l.c, e, "config_expo_key", 0, void 0);
            return i.success
              ? (0, u.c)({
                  configCode: n.value,
                  configValue: r.value,
                  configExpoKey: i.value,
                })
              : i;
          })(e);
          if (t.success)
            return (0, u.c)({ name: "ExperimentConfig", value: t.value });
          var n = (function (e) {
            var t = (0, l.a)(e, "prop");
            if (!t.success) return t;
            var n = (0, l.c)(e, "event_code", 1, void 0);
            if (!n.success) return n;
            var r = (0, l.c)(e, "sampling_weight", -1e4, 1e4);
            return r.success
              ? (0, u.c)({ eventCode: n.value, samplingWeight: r.value })
              : r;
          })(e);
          return n.success
            ? (0, u.c)({ name: "SamplingConfig", value: n.value })
            : (0, l.j)(e, ["ExperimentConfig", "SamplingConfig"], [t, n]);
        })(e);
        return n.success ? (0, u.c)({ $: n.value }) : n;
      }
      function v(e, t) {
        var n = (0, l.a)(e, "iq");
        if (!n.success) return n;
        var r = (0, l.k)(e, "props");
        if (!r.success) return r;
        var i = (0, l.l)(l.e, r.value, "protocol", "1");
        if (!i.success) return i;
        var a = (0, l.o)(l.e, r.value, "ab_key");
        if (!a.success) return a;
        var o = (0, l.o)(l.e, r.value, "hash");
        if (!o.success) return o;
        var s = (0, l.o)(l.c, r.value, "refresh", 0, void 0);
        if (!s.success) return s;
        var d = (0, l.o)(l.c, r.value, "refresh_id", 0, void 0);
        if (!d.success) return d;
        var f = (function (e, t) {
          var n = (0, l.a)(e, "iq");
          if (!n.success) return n;
          var r = (0, c.b)(t, ["id"]);
          if (!r.success) return r;
          var i = (0, l.l)(l.e, e, "id", r.value);
          if (!i.success) return i;
          var a = (0, c.b)(t, ["to"]);
          if (!a.success) return a;
          var o = (0, l.l)(l.e, e, "from", a.value);
          if (!o.success) return o;
          var s = (0, l.l)(l.e, e, "type", "result");
          return s.success ? (0, u.c)({ type: s.value }) : s;
        })(e, t);
        if (!f.success) return f;
        var _ = (0, l.n)(r.value, "prop", 0, 1 / 0, p);
        return _.success
          ? (0, u.c)(
              Object.assign(
                {
                  propsProtocol: i.value,
                  propsAbKey: a.value,
                  propsHash: o.value,
                  propsRefresh: s.value,
                  propsRefreshId: d.value,
                },
                f.value,
                { propsProp: _.value }
              )
            )
          : _;
      }
      var h = n(378),
        m = n(193),
        g = n(294),
        y = n(4);
      function b(e) {
        var t,
          n,
          r = e.propsHash;
        return (
          (t = (0, m.a)(
            "iq",
            { xmlns: "abt", to: y.l },
            (0, m.a)("props", { protocol: "1", hash: (0, h.a)(y.b, r) })
          )),
          (n = (0, m.a)("iq", { id: (0, y.u)(), type: "get" })),
          (0, g.a)(t, n)
        );
      }
      var w = n(375),
        O = n(376);
      function E(e, t) {
        return I.apply(this, arguments);
      }
      function I() {
        return (I = i()(function* (e, t) {
          var n = b(e),
            r = yield (0, s.k)(n, t),
            i = v(r, n);
          if (i.success)
            return {
              name: "GetExperimentConfigResponseSuccess",
              value: i.value,
            };
          var a = f(r, n);
          if (a.success)
            return {
              name: "GetExperimentConfigResponseErrorNoRetry",
              value: a.value,
            };
          var o = _(r, n);
          if (o.success)
            return {
              name: "GetExperimentConfigResponseErrorRetry",
              value: o.value,
            };
          throw new w.a(
            (0, O.a)("GetExperimentConfig", {
              Success: i,
              ErrorNoRetry: a,
              ErrorRetry: o,
            })
          );
        })).apply(this, arguments);
      }
      function S(e) {
        return k.apply(this, arguments);
      }
      function k() {
        return (k = i()(function* (e) {
          var t = yield E({ propsHash: e });
          if ("GetExperimentConfigResponseSuccess" === t.name) {
            var n = t.value,
              r = n.propsAbKey,
              i = n.propsHash,
              a = n.propsRefresh,
              o = n.propsRefreshId,
              s = n.propsProp;
            return (0, u.c)({
              abKey: r,
              hash: i,
              refresh: a,
              refreshId: o,
              props: L(s),
            });
          }
          return __LOG__(3)`getAbPropsProtocol failed ${t.value}`, (0, u.b)();
        })).apply(this, arguments);
      }
      function L(e) {
        var t = [];
        return (
          e.forEach((e) => {
            var n,
              r = e.$;
            "ExperimentConfig" === r.name &&
              t.push({
                configCode: r.value.configCode,
                configValue: r.value.configValue,
                configExpoKey:
                  null == (n = r.value.configExpoKey) ? void 0 : n.toString(),
              });
          }),
          t
        );
      }
      var G = n(129),
        M = n(3),
        A = (0, G.a)(
          () => "abProps",
          function () {
            var e =
              !(arguments.length > 0 && void 0 !== arguments[0]) ||
              arguments[0];
            return null == e || !1 === e
              ? P(null)
              : (0, a.c)().then((e) => P(e));
          }
        );
      function P(e) {
        return T.apply(this, arguments);
      }
      function T() {
        return (T = i()(function* (e) {
          var t = yield S(e);
          if (t.success) {
            var n = t.value,
              r = n.abKey,
              i = n.hash,
              u = n.refresh,
              s = n.props,
              l = (0, o.g)((0, a.b)(), s),
              c = yield N(r, i, u, l);
            !1 === c.success &&
              (c.error, __LOG__(2)`syncAbProps: detected no hash`);
          } else __LOG__(4)`fetchAbProps failed`;
          return { seconds: yield (0, a.d)() };
        })).apply(this, arguments);
      }
      function N(e, t, n, r) {
        return C.apply(this, arguments);
      }
      function C() {
        return (C = i()(function* (e, t, n, r) {
          var i = yield (0, a.a)(),
            s = {
              abKey: null != e ? e : i.abKey,
              hash: null != t ? t : i.hash,
              refresh: (0, o.f)(n),
              lastSyncTime: (0, M.D)(),
              propValues: i.propValues,
              propExpoKeys: i.propExpoKeys,
              internalExpoKeys: i.internalExpoKeys,
              expoKeyStr: i.expoKeyStr,
            };
          if (null == t)
            return (
              yield (0, a.e)(s),
              __LOG__(2)`WAAbProps.update: detected no hash`,
              (0, u.b)("noHash")
            );
          __LOG__(2)`WAAbProps.update: updating ab configs`;
          var l,
            c,
            d = r.values,
            f = r.expoKeys,
            _ = (0, o.e)(d, i.propValues, (0, a.b)()),
            p = (0, o.c)(f, i.propExpoKeys, (0, a.b)()),
            v = p.propExpoKeys,
            h = p.expoKeysToDelete,
            m = (0, o.d)(h, i.internalExpoKeys);
          return (
            null != m && ((l = m.internalExpoKeys), (c = m.expoKeyStr)),
            yield (0, a.e)(
              Object.assign({}, s, {
                propValues: _,
                propExpoKeys: v,
                internalExpoKeys: l,
                expoKeyStr: c,
              })
            ),
            (0, u.c)()
          );
        })).apply(this, arguments);
      }
      var R = n(12),
        x = n(39),
        D = n(16),
        U = n(6);
      function j(e, t) {
        (null == e ? void 0 : e.reactions_receive) &&
          !(null == t ? void 0 : t.reactions_receive) &&
          (0, x.b)().fireAndForget(D.e.processFutureProofMsgs());
      }
      t.a = function () {
        var e =
          !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
        if (!(0, R.d)())
          return (
            __LOG__(2)`syncAbProps: ignoring updates for service worker`,
            Promise.resolve({ seconds: 60 })
          );
        var t = U.b.get();
        return A(e).then((e) => {
          var n = U.b.get();
          return j(t.propValues, n.propValues), e;
        });
      };
    },
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.r(t),
        n.d(t, "PublicKeyComparator", function () {
          return g;
        });
      var r = n(8),
        i = n.n(r),
        a = n(24),
        o = n(101),
        u = n(409),
        s = n(9),
        l = n(7),
        c = n(6),
        d = n(41),
        f = n(129),
        _ = n(67),
        p = n(71),
        v =
          /^([17]|2[07]|3[0123469]|4[013456789]|5[12345678]|6[0123456]|8[1246]|9[0123458]|\d{3})\d*?(\d{4,6})$/;
      function h(e) {
        var t = v.exec((0, l.u)(e));
        return a.a.build(t ? t[1] + t[2] : e).readByteArray();
      }
      function m(e, t) {
        return ("00000" + (256 * e.getUint32(t, !1) + e.getUint8(t + 4))).slice(
          -5
        );
      }
      function g(e, t) {
        for (var n = 0; n < e.length && n < t.length; ++n)
          if (e[n] !== t[n]) return e[n] - t[n];
        return e.length - t.length;
      }
      function y(e, t) {
        for (
          var n = Promise.resolve(a.a.build(0, 0, t, e).readByteArray()), r = 0;
          r < 5200;
          r++
        )
          n = n.then((e) =>
            self.crypto.subtle.digest(
              "SHA-512",
              a.a.build(e, t).readByteArray()
            )
          );
        return n.then((e) => {
          var t = new DataView(e.slice(0, 30));
          return [
            m(t, 0),
            m(t, 5),
            m(t, 10),
            m(t, 15),
            m(t, 20),
            m(t, 25),
          ].join("");
        });
      }
      function b(e, t, n, r) {
        return Promise.all([y(e, t), y(n, r)]).then((e) => e.sort().join(""));
      }
      function w(e, t, n, r) {
        var i = {
          version: 0,
          localFingerprint: { publicKey: t, identifier: e },
          remoteFingerprint: { publicKey: r, identifier: n },
        };
        return (0, o.a)(u.a, i).readByteArray();
      }
      t.default = (0, f.a)(
        (e) => e,
        function (e) {
          var t = (0, l.e)(e);
          return Promise.all([(0, d.u)(t), (0, d.E)()])
            .then((t) => {
              var n = i()(t, 2),
                r = n[0],
                o = n[1];
              if (null == r)
                return (
                  __LOG__(
                    2
                  )`getIdentityVerificationData returned no remotePrimaryPublicKey`,
                  null
                );
              var u = a.a.build(5, o.staticPublicKey).readByteArray(),
                f = h(c.t.get()),
                v = h(e);
              return (function (e, t) {
                return (0, _.b)(e).then((n) => {
                  var r = [];
                  return (
                    n &&
                      (0, p.d)(n).forEach((t) => {
                        t !== s.c && r.push((0, l.B)(e, t));
                      }),
                    0 === r.length
                      ? t
                      : (0, d.v)(r).then((e) => {
                          var n = new Set(r),
                            i = [t];
                          if (
                            (e.forEach((e, t) => {
                              n.delete(t), i.push(e);
                            }),
                            n.size > 0)
                          )
                            return null;
                          var o = new a.a();
                          return (
                            i.sort(g).forEach((e) => {
                              o.writeByteArray(e);
                            }),
                            o.readByteArray()
                          );
                        })
                  );
                });
              })(e, r).then((e) =>
                e
                  ? Promise.all([b(f, u, v, e), w(f, u, v, e), w(v, e, f, u)])
                  : null
              );
            })
            .then((e) => {
              if (null == e) return null;
              var t = i()(e, 3),
                n = t[0];
              return {
                qrCodeData: t[1],
                remoteQRCodeData: t[2],
                digitsCodeData: n,
              };
            });
        }
      );
    },
    function (e, t) {
      function n() {
        return (
          (e.exports = n =
            Object.assign ||
            function (e) {
              for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                  Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
              }
              return e;
            }),
          n.apply(this, arguments)
        );
      }
      e.exports = n;
    },
    function (e, t, n) {
      n.r(t),
        n.d(t, "maybeDownloadPendingStatusThumbnails", function () {
          return g;
        });
      var r = n(26),
        i = n.n(r),
        a = n(32),
        o = n(88),
        u = n(22),
        s = n(93),
        l = n(3),
        c = n(151),
        d = n(90),
        f = n(255),
        _ = n(117),
        p = n(95),
        v = n(14),
        h = n(266),
        m = n(130);
      function g() {
        return (0, u.cb)().then((e) => {
          if (e) {
            var t = e.previewMsgIds,
              n = e.otherMmsThumbnails;
            return Promise.all(t.map(y)).then(() => Promise.all(n.map(y)));
          }
        });
      }
      function y(e) {
        return b.apply(this, arguments);
      }
      function b() {
        return (b = i()(function* (e) {
          var t = yield (0, u.M)(e);
          if (t) {
            var n = t.dbMsg;
            if (n.media) {
              var r = n.media;
              if ((yield (0, u.Kc)(r), (0, p.c)(n))) {
                var i = yield (0, u.L)(r);
                if (i)
                  if ((0, p.b)(i, e)) {
                    var o = i.mediaEntries[e];
                    if (!o)
                      return (
                        __LOG__(
                          4
                        )`downloadMsgThumb no entry for media preview ${r}`,
                        void SEND_LOGS("no-entry-for-media-msg")
                      );
                    if (!o.validatedTs || (0, l.m)(o.validatedTs, v.E)) {
                      if (yield (0, u.kb)(r))
                        return (
                          __LOG__(
                            2
                          )`downloadMsgThumb mms preview already downloaded`,
                          void (yield (0, u.Hb)(e))
                        );
                      var c = (0, a.B)(r),
                        d = (0, l.t)();
                      return (0, s.i)(c, (t) =>
                        w(0, e, d).catch((e) => {
                          throw e;
                        })
                      ).then(() => {});
                    }
                    __LOG__(
                      3
                    )`downloadMsgThumb: media was downloaded long ago. Thumb probaly no longer in server`;
                  } else
                    __LOG__(
                      2
                    )`downloadMsgThumb: Not enough info to download thumb`;
                else __LOG__(2)`downloadMsgThumb media ${r} is gone`;
              } else __LOG__(2)`downloadMsgThumb: No need to download thumb`;
            } else __LOG__(3)`downloadMsgThumb: msg without media`;
          } else __LOG__(2)`downloadMsgThumb: Msg is gone`;
        })).apply(this, arguments);
      }
      function w(e, t, n) {
        var r = (0, l.u)(n);
        return (0, u.Q)(t).then((e) => {
          if (!e)
            return (
              __LOG__(
                2
              )`_doDownloadMsgThumb message ${t} is not a valid media message`,
              { result: "error", error: "gone" }
            );
          var n = e.dbMsg,
            i = e.dbMedia;
          if (!(0, p.c)(n))
            return (
              __LOG__(2)`_doDownloadMsgThumb no need to download mms thumb`,
              { result: "skip" }
            );
          if (!n.media)
            return (
              __LOG__(
                2
              )`_doDownloadMsgThumb message ${t} is not a valid media message`,
              { result: "error", error: "invalid" }
            );
          if (!i)
            return (
              __LOG__(2)`_doDownloadMsgThumb media is gone`,
              { result: "error", error: "gone" }
            );
          if (!(0, p.b)(i, t))
            return (
              __LOG__(
                2
              )`_doDownloadMsgThumb not enough info to download mms thumb`,
              { result: "skip" }
            );
          var a,
            o = i.mediaEntries[t];
          if (!o || "mms4" !== o.version)
            return (
              __LOG__(4)`downloadThumbMedia no valid entry version ${
                null == o ? void 0 : o.version
              } for media preview`,
              SEND_LOGS("no-entry-for-media-msg"),
              { result: "error", error: "failed" }
            );
          switch (e.type) {
            case "user":
              a = 1;
              break;
            case "group":
              a = 2;
              break;
            default:
              e.type, (a = 3);
          }
          var u = {
              overallMmsVersion: 4,
              overallDownloadOrigin: a,
              overallDownloadMode: 5,
              overallMediaType: _.a[n.type],
              overallIsFinal: !1,
              overallQueueT: r,
            },
            s = new f.a({
              parts: c.b,
              onUpdate(e) {
                __LOG__(2)`download thumb ${100 * e}% finished`;
              },
              onSuccess: () => {
                __LOG__(2)`download thumb finished`;
              },
              onError: (e) => {
                __LOG__(2)`download thumb failed ${e}`;
              },
            });
          return (function (e, t, n, r, i) {
            return O.apply(this, arguments);
          })(i, o, n.type, s, u);
        });
      }
      function O() {
        return (O = i()(function* (e, t, n, r, i) {
          var a,
            o,
            l,
            f = e.mediaId;
          if (
            (__LOG__(2)`downloadThumbMedia for media ${f}, type = ${n}`,
            null != t.progressiveJpeg)
          ) {
            if (
              (__LOG__(
                2
              )`downloadThumbMedia msg got no thumb info, but progressive jpeg info.`,
              !t.directPath)
            )
              return (
                __LOG__(
                  3
                )`downloadThumbMedia had some invalid progressiveJpeg info`,
                (0, s.k)(
                  Object.assign({}, i, {
                    overallDownloadResult: 2,
                    overallIsFinal: !0,
                  })
                ),
                { result: "error", error: "failed" }
              );
            var _ = t.ciphertextHash,
              p = t.directPath,
              v = t.size,
              m = t.progressiveJpeg,
              g = t.cryptoKey,
              y = t.type,
              b = (0, h.a)(m, v),
              w = yield I(_, p, b, g, y, r, i);
            if ("success" !== w.result.status) return E(w.result, w.metric);
            (l = w.result.partialPlaintextHash), (a = w.result), (o = w.metric);
          } else {
            if (
              null == e.mmsThumb ||
              null == t.mmsThumb ||
              null == t.mmsThumb.directPath
            )
              return (
                __LOG__(2)`downloadThumbMedia got msg without mms thumb info`,
                (0, s.k)(
                  Object.assign({}, i, {
                    overallDownloadResult: 16,
                    overallIsFinal: !0,
                  })
                ),
                { result: "error", error: "failed" }
              );
            var O = t.mmsThumb,
              S = O.directPath,
              k = O.ciphertextHash,
              L = e.mmsThumb;
            if (null != L.hasPreview)
              return (
                __LOG__(
                  2
                )`downloadThumbMedia: Thumb already downloaded for media ${f}`,
                { result: "success" }
              );
            var G = yield (0, c.c)(
              "auto",
              {
                version: "mms4",
                type: (0, d.j)(n),
                cryptoKey: t.cryptoKey,
                directPath: S,
                ciphertextHash: k,
                size: "unknown",
              },
              L.thumbPlaintextHash,
              r,
              i
            );
            if ("success" !== G.result.status) return E(G.result, G.metric);
            (l = L.thumbPlaintextHash), (a = G.result), (o = G.metric);
          }
          return (
            (0, s.k)(
              Object.assign({}, o, {
                overallIsFinal: !0,
                overallDownloadResult: 1,
              })
            ),
            yield (0, u.bc)(f, a.plaintext, l),
            __LOG__(
              2
            )`downloadThumbMedia successfully stored full content to storage`,
            r.parts.processing.finished(),
            __LOG__(2)`downloadThumbMedia successfully finalized media ${f}`,
            { result: "success" }
          );
        })).apply(this, arguments);
      }
      function E(e, t) {
        return "gone" === e.status
          ? ((0, s.k)(
              Object.assign({}, t, {
                overallDownloadResult: 6,
                overallIsFinal: !0,
              })
            ),
            { result: "error", error: "gone" })
          : "daemon-disconnected" === e.status
          ? ((0, s.k)(
              Object.assign({}, t, {
                overallDownloadResult: 20,
                overallIsFinal: !0,
              })
            ),
            { result: "error", error: "disconnected" })
          : (__LOG__(
              2
            )`downloadThumbMedia failed to download media ${e.status}`,
            (0, s.k)(
              Object.assign({}, t, {
                overallDownloadResult: c.a[e.status],
                overallIsFinal: !0,
              })
            ),
            { result: "error", error: "failed" });
      }
      function I(e, t, n, r, i, a, o) {
        return S.apply(this, arguments);
      }
      function S() {
        return (S = i()(function* (e, t, n, r, i, a, o) {
          var u = yield (0, m.c)(r, i),
            s = { cipherKey: u.cipherKey, iv: u.iv, hmacKey: u.hmacKey },
            l = n.downloadSize,
            d = (0, h.c)(s, n.partialFetchOptions, l);
          return (0, c.f)(
            { version: "mms4", ciphertextHash: e, directPath: t, type: i },
            "auto",
            void 0,
            l,
            c.e,
            d,
            a,
            o
          ).then((e) => {
            var t = e.result,
              n = e.metric;
            if ("success" !== t.status)
              return { result: { status: t.status }, metric: n };
            if (!t.progressiveDownload)
              return (
                __LOG__(
                  4
                )`Expected progressiveDownload info when downloading progressive jpeg thumbnail`,
                { result: { status: "request-error" }, metric: n }
              );
            var r = t.progressiveDownload.partialPlaintextHash;
            return {
              result: {
                status: "success",
                plaintext: t.result,
                partialPlaintextHash: r,
              },
              metric: n,
            };
          });
        })).apply(this, arguments);
      }
      t.default = (0, o.c)()
        .finalStep("download", {
          requirements: [o.d],
          code: (e) => y(e.msgId),
          stopRetryIf: {
            timePassedSeconds: l.b,
            appCrashed: !0,
            onStopRetry: (e) => {
              e.msgId;
            },
          },
        })
        .end();
    },
    function (e, t, n) {
      n.r(t),
        n.d(t, "extractUserNoticeContent", function () {
          return y;
        }),
        n.d(t, "downloadUserNoticeDeepLinkModal", function () {
          return O;
        });
      var r = n(8),
        i = n.n(r),
        a = n(88),
        o = n(22),
        u = n(212),
        s = n(31),
        l = n(21),
        c = n(6),
        d = n(259),
        f = n(3),
        _ = 0.01;
      function p(e, t) {
        t.forEach((t) => {
          if (!e[t])
            throw (
              (__LOG__(
                4
              )`downloadUserNoticeContent: invalid payload, field [${t}] is missing`,
              SEND_LOGS("download-user-notice-content-invalid-payload", _),
              __LOG__(
                2
              )`downloadUserNoticeContent: field ${t} is missing in payload: ${JSON.stringify(
                e
              )}`,
              new Error(
                `downloadUserNoticeContent: Invalid Payload: ${t} is missing`
              ))
            );
        });
      }
      function v(e, t) {
        var n = new Date(e).getTime() / 1e3;
        return (
          "local" === t && (n += 60 * new Date().getTimezoneOffset()),
          (0, f.p)(n) &&
            __LOG__(
              3
            )`downloadUserNoticeContent: Tried to use date outside valid range: ${n}.
Date: ${e}, Timezone Offset: ${new Date().getTimezoneOffset()}`,
          (0, f.i)(n)
        );
      }
      function h(e) {
        if (!e)
          throw (
            (__LOG__(4)`downloadUserNoticeContent: no timing object found`,
            SEND_LOGS("download-user-notice-content-no-timing", _),
            new Error("downloadUserNoticeContent: no timing object found"))
          );
        var t, n, r;
        if (
          (e.start &&
            (p(e.start, ["time", "reference"]),
            (t = {
              time: v(e.start.time, e.start.reference),
              reference: e.start.reference,
            })),
          e.end &&
            (p(e.end, ["time", "reference"]),
            (n = {
              time: v(e.end.time, e.end.reference),
              reference: e.end.reference,
            })),
          e.duration)
        ) {
          var i = e.duration.repeat && e.duration.static,
            a = !e.duration.repeat && !e.duration.static;
          if (i || a)
            throw (
              (__LOG__(
                4
              )`downloadUserNoticeContent: timing "duration" object must contain either just "repeat" or just "static"`,
              SEND_LOGS(
                "download-user-notice-content-timing-invalid-duration",
                _
              ),
              new Error(
                'downloadUserNoticeContent: timing "duration" object must contain either just "repeat" or just "static"'
              ))
            );
          r = e.duration;
        }
        return { start: t, end: n, duration: r };
      }
      function m(e) {
        if (e)
          return (
            p(e, ["text", "icon", "timing", "action"]),
            {
              text: e.text,
              icon: { url: e.icon.light },
              actionURL: e.action,
              timing: h(e.timing),
            }
          );
      }
      function g(e) {
        if (e)
          return (
            p(e, ["icon", "title", "bullets", "buttonText", "timing"]),
            {
              icon: { url: e.icon.light },
              title: e.title,
              body: e.body,
              bullets: e.bullets.map((e) => e.text),
              footer: e.footer,
              acceptLabel: e.buttonText,
              timing: h(e.timing),
            }
          );
      }
      function y(e, t, n) {
        if (!n.policyVersion)
          throw (
            (__LOG__(4)`Missing "policyVersion" in payload: ${JSON.stringify(
              n
            )}`,
            SEND_LOGS("download-user-notice-content-invalid-policy-version", _),
            new Error(
              `User Notice Content Invalid Payload for notice id "${e}". Field is missing: "policyVersion" in payload`
            ))
          );
        return {
          version: n.policyVersion,
          lglc: t,
          banner: m(n.banner) || void 0,
          nonBlockingModal: g(n.modal) || void 0,
          blockingModal: g(n["blocking-modal"]) || void 0,
        };
      }
      function b(e, t, n) {
        return (
          __LOG__(2)`downloadUserNoticeContent: fetching ${t} ${n}`,
          (0, s.f)(e)
            .catch((e) => {
              throw (
                (__LOG__(
                  4
                )`Could not complete user notice request. Max retry attempts reached.`,
                SEND_LOGS("download-user-notice-content-max-retry"),
                __LOG__(2)`User notice request retry error: ${e.toString()}`,
                new Error("Fetch Retry error: " + e.toString()))
              );
            })
            .then((e) => {
              if (!e.ok) {
                var t = e.status;
                return e.text().then((e) => {
                  switch (t) {
                    case s.a.NOT_FOUND:
                    case s.a.GONE:
                    case s.a.INTERNAL_SERVER_ERROR:
                      __LOG__(
                        4
                      )`User notice request returned unexpected server error.`,
                        SEND_LOGS("download-user-notice-content-failed-server"),
                        __LOG__(
                          2
                        )`Server returned http status: ${t} response body: ${e}`;
                      break;
                    default:
                      __LOG__(
                        4
                      )`User notice request returned unknown server error.`,
                        SEND_LOGS(
                          "download-user-notice-content-failed-unknown"
                        ),
                        __LOG__(
                          2
                        )`Server returned http status: ${t} response body: ${e}`;
                  }
                  throw new Error("User Notice Request Error " + t);
                });
              }
              return e;
            })
        );
      }
      function w(e) {
        if (!(0, u.b)())
          return (
            __LOG__(
              2
            )`downloadUserNoticeContent: User Notice Framework is disabled`,
            Promise.resolve()
          );
        var t = "https://www.whatsapp.com";
        __LOG__(
          2
        )`downloadUserNoticeContent: downloading User Notice Content for User Notice with id "${e}"`,
          __LOG__(
            2
          )`downloadUserNoticeContent: attempting to fetch from host: "${t}"`;
        var n = (0, l.d)(),
          r = n.lg,
          a = n.lc;
        return b(
          (0, s.c)(t, "/user-notice/v1/", {
            id: e,
            lg: r,
            lc: null != a ? a : "ZZ",
            cc: (0, d.a)(c.t.get()) || "US",
            platform: "kaios",
          }),
          e,
          "json"
        )
          .then((e) => e.json())
          .then((t) => {
            var n;
            try {
              n = y(e, { lg: r, lc: a }, t);
            } catch (t) {
              return (
                __LOG__(4)`Received invalid User Notice content for id ${e}`,
                __LOG__(
                  2
                )`downloadUserNoticeContent: validation error ${t.message.toString()}`,
                void WAM.log("regular", 2474, void 0, [3, 0, 3, 1, 0, e])
              );
            }
            return (function (e, t) {
              var n,
                r,
                a,
                o = [
                  null == (n = t.banner) ? void 0 : n.icon.url,
                  null == (r = t.nonBlockingModal) ? void 0 : r.icon.url,
                  null == (a = t.blockingModal) ? void 0 : a.icon.url,
                ].map((t) =>
                  t
                    ? b((0, s.h)(t), e, "svg").then((e) => e.text())
                    : Promise.resolve(null)
                );
              return Promise.all(o).then((e) => {
                var n = i()(e, 3),
                  r = n[0],
                  a = n[1],
                  o = n[2],
                  u = t.banner,
                  s = t.nonBlockingModal,
                  l = t.blockingModal;
                return (
                  u && r && (u.icon.svg = r),
                  s && a && (s.icon.svg = a),
                  l && o && (l.icon.svg = o),
                  t
                );
              });
            })(e, n).catch(
              () => (
                WAM.log("regular", 2474, void 0, [3, 0, 4, 1, 0, e]),
                __LOG__(4)`Could not download user notice content icons`,
                SEND_LOGS("download-user-notice-icon-failed"),
                n
              )
            );
          })
          .catch((t) => {
            throw (
              (__LOG__(
                4
              )`User notice json fetch request failed: ${t.toString()}`,
              WAM.log("regular", 2474, void 0, [3, 0, 2, 1, 0, e]),
              t)
            );
          });
      }
      function O(e) {
        return w(e).then((t) => {
          if (null == t || null == t.nonBlockingModal)
            throw (
              (__LOG__(
                4
              )`downloadUserNoticeDeepLinkModal: Expected payload for ${e} to contain field "nonBlockingModal"`,
              SEND_LOGS(
                "download-user-notice-deep-link-content-missing-non-blocking-modal-field",
                _
              ),
              new Error(
                `downloadUserNoticeDeepLinkModal: Expected payload for ${e} to contain field "nonBlockingModal"`
              ))
            );
          var n = t.nonBlockingModal,
            r = (0, l.f)(t.lglc.lg) ? "rtl" : "ltr";
          return {
            type: "deep-link-modal",
            id: e,
            version: t.version,
            content: {
              svgIcon: n.icon.svg || void 0,
              title: n.title,
              body: n.body,
              bullets: n.bullets,
              footer: n.footer,
              acceptLabel: n.acceptLabel,
            },
            direction: r,
          };
        });
      }
      t.default = (0, a.c)()
        .finalStep("downloadContent", (e) => {
          var t = e.id;
          return w(t).then((e) => {
            if (e) return o.Ec(t, e);
          });
        })
        .end();
    },
    function (e, t, n) {
      n.r(t),
        n.d(t, "getBlocklist", function () {
          return c;
        });
      var r = n(30),
        i = n(4),
        a = n(22),
        o = n(88),
        u = n(51),
        s = n(20),
        l = new u.a("getBlocklistReplyParser", (e) =>
          e.hasChild("error") && 404 === e.child("error").attrInt("code")
            ? { jids: [] }
            : {
                jids: e
                  .child("query")
                  .child("list")
                  .mapChildrenWithTag("item", (e) =>
                    e.attrPhoneUserJid("value")
                  ),
              }
        );
      function c() {
        return (0, r.b)(
          (0, i.w)(
            "iq",
            { xmlns: "jabber:iq:privacy", type: "get", id: (0, i.u)() },
            (0, i.w)("query", null, (0, i.w)("list", { name: "default" }))
          ),
          l
        ).then((e) => {
          __LOG__(2)`getBlocklist from server ${e}`,
            e.success
              ? (0, a.dc)((0, s.m)(e.result.jids))
              : 404 === e.errorCode && (0, a.dc)((0, s.f)());
        });
      }
      t.default = (0, o.c)().finalStep("requestBlockList", c).end();
    },
    function (e, t, n) {
      n.r(t),
        n.d(t, "getBlocklistV2", function () {
          return v;
        });
      var r = n(30),
        i = n(4),
        a = n(88),
        o = n(51),
        u = n(20),
        s = n(22),
        l = n(37),
        c = n.n(l),
        d = n(6),
        f = n(72),
        _ = {
          400: (0, f.d)("bad-request"),
          500: (0, f.d)("internal-server-error"),
        },
        p = new o.a("getBlocklistV2Parser", (e) => {
          if (e.hasChild("list")) {
            var t = e.child("list");
            return {
              type: "list",
              dhash: t.maybeAttrString("dhash"),
              list: (0, u.m)(
                t.mapChildrenWithTag("item", (e) => e.attrPhoneUserJid("jid"))
              ),
            };
          }
          return { type: "hashMatched" };
        });
      function v() {
        return (
          d.I.get().mdBlocklistV2 ||
            (__LOG__(2)`getBlocklistV2 requires md_blocklist_v2 server prop`,
            Promise.reject({ error: { reason: "server-prop-disabled" } })),
          (0, s.x)().then((e) => {
            var t = (0, i.w)(
              "iq",
              { xmlns: "blocklist", type: "get", to: i.l, id: (0, i.u)() },
              e ? (0, i.w)("item", { dhash: (0, i.b)(e) }) : null
            );
            return (0, r.b)(t, p).then((t) => {
              if (!t.success)
                return (
                  __LOG__(
                    4
                  )`getBlocklistV2 error with code ${t.errorCode}, text ${t.errorText}`,
                  (0, f.f)(t, _)
                );
              var n = t.result;
              switch (n.type) {
                case "list":
                  return (0, s.ec)(n.list, n.dhash, e).then(() => ({
                    result: "success-new-list",
                  }));
                case "hashMatched":
                  return { result: "success-hash-matched" };
                default:
                  return (0, c.a)(n.type), { error: { reason: "unknown" } };
              }
            });
          })
        );
      }
      t.default = (0, a.c)().finalStep("getBlocklistV2", v).end();
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    function (e, t, n) {
      n.r(t);
      var r = n(57),
        i = n(7),
        a = n(437),
        o = lib_libsignal.libsignal.SessionStore;
      t.default = class extends o {
        constructor(e, t, n) {
          super(e, t), (this.br = n);
        }
        load(e) {
          var t = (0, r.encodeAddress)(e);
          return this.br.stores.sessions
            .get(t)
            .then((e) => (e ? e.session : null));
        }
        get_sub_device_sessions(e) {
          return this.br.stores.sessions
            .where("jid")
            .equals(e)
            .toArray()
            .then((e) => e.map((e) => e.deviceId));
        }
        store(e, t) {
          var n = (0, r.encodeAddress)(e);
          return this.br.stores.sessions.put({
            address: n,
            jid: e.name,
            deviceId: e.deviceId,
            session: (0, a.a)(t).session,
          });
        }
        contains(e) {
          var t = (0, r.encodeAddress)(e);
          return this.br.stores.sessions.get(t).then((e) => !!e);
        }
        bulkGetJidsWithSessions(e) {
          var t = e.map((e) => (0, r.encodeAddress)(e));
          return this.br.stores.sessions
            .where("address")
            .anyOf(t)
            .toArray()
            .then((e) => e.map((e) => (0, i.B)(e.jid, e.deviceId)));
        }
        delete(e) {
          var t = e.map((e) => (0, r.encodeAddress)(e));
          return this.br.stores.sessions.bulkDelete(t);
        }
        delete_all_sessions(e) {
          return this.br.stores.sessions.where("jid").equals(e).delete();
        }
      };
    },
    function (e, t, n) {
      n.r(t);
      var r = n(8),
        i = n.n(r),
        a = n(57),
        o = n(5),
        u = n(81),
        s = n(3),
        l = n(172),
        c = (n(149), lib_libsignal.libsignal.PreKeyStore);
      function d(e, t) {
        return (0, l.c)(e, t).then((e) =>
          e.map((e) => {
            var t = e.plainObject,
              n = e.record;
            return { id: t.id, keyPair: t.keyPair, record: n };
          })
        );
      }
      t.default = class extends c {
        constructor(e, t, n) {
          super(e, t), (this.bt = new u.a()), (this.bs = n);
        }
        bu() {
          return this.bs.stores.meta
            .get(a.LATEST_PREKEY_ID)
            .then((e) => (e ? e.value + 1 : 1));
        }
        bv() {
          return this.bs.stores.meta
            .get(a.EARLIEST_UNUPLOADED_PREKEY_ID)
            .then((e) => (e ? e.value : null));
        }
        bw() {
          return this.bs.stores.meta
            .get(a.LATEST_PREKEY_GENERATION)
            .then((e) => (e ? e.value : 0));
        }
        latestPreKeyId() {
          return this.bs.stores.meta
            .get(a.LATEST_PREKEY_ID)
            .then((e) => (e ? e.value : null));
        }
        getLatestPreKeyInfo() {
          return this.bt.enqueue(() =>
            this.bs
              .transact("r", ["meta"], () =>
                (0, o.c)([this.bw(), this.latestPreKeyId()])
              )
              .then((e) => {
                var t = i()(e, 2),
                  n = t[0],
                  r = t[1];
                return null == r
                  ? null
                  : { latestPreKeyGenerationId: n, latestPreKeyId: r };
              })
          );
        }
        getAllPreKeyGenerations() {
          return this.bs.stores.meta
            .get(a.PREKEY_GENERATIONS)
            .then((e) => (e ? e.value : []));
        }
        generatePreKeys(e) {
          return this.bt.enqueue(() =>
            this.bs
              .transact("r", ["meta"], () =>
                (0, o.c)([
                  this.bv(),
                  this.bu(),
                  this.bw(),
                  this.getAllPreKeyGenerations(),
                ])
              )
              .then((t) => {
                var n = i()(t, 4),
                  r = n[0],
                  a = n[1],
                  o = n[2],
                  u = n[3],
                  s = e - (null == r ? 0 : a - r);
                if (!(s <= 0))
                  return (
                    __LOG__(2)`generatePreKeys must make ${s} keys (from ${a})`,
                    d(a, s).then((e) => this.bx(e, null == r, o, u))
                  );
                __LOG__(2)`generatePreKeys all keys generated earlier`;
              })
          );
        }
        bx(e, t, n, r) {
          __LOG__(2)`PreKeyStore._putAll ${e.length} new keys`;
          var i = this.bs;
          return i.transact("rw", ["meta", "preKeys"], () => {
            if (0 === e.length)
              return __LOG__(4)`_putAll given 0 keys`, (0, o.e)();
            var u = e.reduce((e, t) => Math.max(e, t.id), 0),
              l = e.reduce((e, t) => Math.min(e, t.id), u),
              c = {
                generation: n + 1,
                firstPreKeyId: l,
                lastPreKeyId: u,
                timestamp: (0, s.D)(),
              },
              d = [
                i.stores.meta.put({ key: a.LATEST_PREKEY_ID, value: u }),
                i.stores.preKeys.bulkPut(e),
                i.stores.meta.put({
                  key: a.PREKEY_GENERATIONS,
                  value: r.concat(c),
                }),
                i.stores.meta.put({
                  key: a.LATEST_PREKEY_GENERATION,
                  value: c.generation,
                }),
              ];
            if (t) {
              var f = e.reduce((e, t) => Math.min(e, t.id), e[0].id);
              d.push(
                i.stores.meta.put({
                  key: a.EARLIEST_UNUPLOADED_PREKEY_ID,
                  value: f,
                })
              );
            }
            return (0, o.c)(d);
          });
        }
        allRemainingPreKeys() {
          return this.bt.enqueue(() =>
            this.bs.transact("r", ["meta", "preKeys"], () =>
              this.bv()
                .then((e) => {
                  if (null == e) throw new Error("allRemainingPreKeys no keys");
                  return this.bs.stores.preKeys
                    .where("id")
                    .aboveOrEqual(e)
                    .toArray();
                })
                .then((e) => ({
                  preKeys: e,
                  lastId: e.reduce((e, t) => Math.max(e, t.id), 0),
                }))
            )
          );
        }
        markUploadedUpToKey(e) {
          return this.bt.enqueue(() =>
            this.bs
              .transact("r", ["meta"], () => (0, o.c)([this.bv(), this.bu()]))
              .then((t) => {
                var n = i()(t, 2),
                  r = n[0],
                  u = n[1],
                  s = e + 1;
                return s >= u
                  ? (__LOG__(2)`markUploadedUpToKey all keys uploaded`,
                    (0, o.i)(
                      this.bs.stores.meta.delete(
                        a.EARLIEST_UNUPLOADED_PREKEY_ID
                      )
                    ))
                  : null == r || s >= r
                  ? (__LOG__(2)`markUploadedUpToKey ${u - s} remaining`,
                    (0, o.i)(
                      this.bs.stores.meta.put({
                        key: a.EARLIEST_UNUPLOADED_PREKEY_ID,
                        value: s,
                      })
                    ))
                  : void __LOG__(4)`markUploadedUpToKey outdated id given ${e}`;
              })
          );
        }
        loadFullKeys(e) {
          return (
            __LOG__(2)`PreKeyStore.loadFullKeys`,
            this.bs.stores.preKeys.where("id").anyOf(e).toArray()
          );
        }
        loadFullKey(e) {
          return (
            __LOG__(2)`PreKeyStore.loadFullKey ${e}`,
            this.bs.stores.preKeys.get(e)
          );
        }
        load(e) {
          return this.loadFullKey(e).then((t) =>
            t
              ? (__LOG__(2)`PreKeyStore.load success ${e}`, t.record)
              : void __LOG__(3)`PreKeyStore.load failure ${e}`
          );
        }
        contains(e) {
          return (
            __LOG__(2)`PreKeyStore.contains`, this.load(e).then((e) => !!e)
          );
        }
        remove(e) {
          return (
            __LOG__(2)`PreKeyStore.remove`, this.bs.stores.preKeys.delete(e)
          );
        }
        unusedPreKey() {
          return this.bt.enqueue(() =>
            this.bs
              .transact("r", ["meta"], () => (0, o.c)([this.bv(), this.bu()]))
              .then((e) => {
                var t = i()(e, 2),
                  n = t[0],
                  r = t[1],
                  u = this.bs,
                  s = ["meta", "preKeys"];
                return null != n
                  ? u.transact("rw", s, () =>
                      u.stores.preKeys.get(n).then((e) => {
                        if (!e)
                          throw (
                            (__LOG__(
                              4
                            )`EARLIEST_UNUPLOADED_PREKEY_ID has incorrect value`,
                            SEND_LOGS(
                              "incorrect-earliest-unuploaded-prekey-id"
                            ),
                            new Error(
                              "EARLIEST_UNUPLOADED_PREKEY_ID has incorrect value"
                            ))
                          );
                        return (
                          n + 1 < r
                            ? u.stores.meta.put({
                                key: a.EARLIEST_UNUPLOADED_PREKEY_ID,
                                value: n + 1,
                              })
                            : u.stores.meta.delete(
                                a.EARLIEST_UNUPLOADED_PREKEY_ID
                              )
                        ).then(() => e);
                      })
                    )
                  : d(r, 1).then((e) => {
                      var t = i()(e, 1)[0];
                      return u
                        .transact("rw", s, () =>
                          (0, o.c)([
                            u.stores.preKeys.put(t),
                            u.stores.meta.put({
                              key: a.LATEST_PREKEY_ID,
                              value: r,
                            }),
                          ])
                        )
                        .then(() => t);
                    });
              })
          );
        }
        deletePreKeysBelowOrEqual(e) {
          return this.bt.enqueue(() =>
            this.bs.transact("rw", ["meta", "preKeys"], () =>
              (0, o.c)([
                this.bv(),
                this.bs.stores.preKeys.where("id").belowOrEqual(e).delete(),
              ]).then((t) => {
                var n = i()(t, 1)[0];
                if (null != n)
                  return n <= e
                    ? this.bs.stores.preKeys
                        .orderBy("id")
                        .first()
                        .then((e) => {
                          e
                            ? this.bs.stores.meta.put({
                                key: a.EARLIEST_UNUPLOADED_PREKEY_ID,
                                value: e.id,
                              })
                            : this.bs.stores.meta.delete(
                                a.EARLIEST_UNUPLOADED_PREKEY_ID
                              );
                        })
                    : void 0;
              })
            )
          );
        }
      };
    },
    function (e, t, n) {
      n.r(t);
      var r = n(57),
        i = n(5),
        a = lib_libsignal.libsignal.PreKeyStore;
      t.default = class extends a {
        constructor(e, t, n) {
          super(e, t), (this.bq = n);
        }
        nextSignedPreKeyId() {
          return this.bq.stores.meta
            .get(r.LATEST_SIGNED_PREKEY_ID)
            .then((e) => (e ? e.value + 1 : 1));
        }
        loadLatestSignedPreKeyInTransaction() {
          return this.bq.stores.meta
            .get(r.LATEST_SIGNED_PREKEY_ID)
            .then((e) => {
              if (!e) throw new Error("No SignedPreKey");
              var t = e.value;
              return this.loadFullKey(t).then((e) => {
                if (!e) throw new Error(`SignedPreKey ${t} gone`);
                return e;
              });
            });
        }
        loadLatestSignedPreKey() {
          throw new Error(
            "loadLatestSignedPreKey is not implemented for daemon-based signal"
          );
        }
        hasSignedPreKeys() {
          return this.bq.stores.meta
            .get(r.LATEST_SIGNED_PREKEY_ID)
            .then((e) => !!e);
        }
        putAll(e) {
          var t = this.bq;
          return t.transact("rw", ["meta", "signedPreKeys"], () => {
            var n = e.reduce((e, t) => Math.max(e, t.id), 0);
            return (0, i.c)([
              t.stores.meta.put({ key: r.LATEST_SIGNED_PREKEY_ID, value: n }),
              t.stores.signedPreKeys.bulkPut(e),
            ]);
          });
        }
        putInTransaction(e) {
          throw new Error(
            "putInTransaction should only be used with new Signal implementation"
          );
        }
        loadFullKey(e) {
          return (
            __LOG__(2)`SignedPreKeyStore.loadFullKey`,
            this.bq.stores.signedPreKeys.get(e)
          );
        }
        load(e) {
          return this.loadFullKey(e).then((e) =>
            e
              ? (__LOG__(2)`SignedPreKeyStore.load success`, e.record)
              : void __LOG__(3)`SignedPreKeyStore.load failure`
          );
        }
        contains(e) {
          return (
            __LOG__(2)`SignedPreKeyStore.contains`,
            this.load(e).then((e) => !!e)
          );
        }
        remove(e) {
          return (
            __LOG__(2)`SignedPreKeyStore.remove`,
            this.bq.stores.signedPreKeys.delete(e)
          );
        }
      };
    },
    function (e, t, n) {
      n.r(t);
      var r = n(57),
        i = lib_libsignal.libsignal.SenderKeyStore;
      t.default = class extends i {
        constructor(e, t, n) {
          super(e, t), (this.Cz = n);
        }
        load(e) {
          return this.Cz.stores.senderKeys
            .get((0, r.encodeSender)(e))
            .then((e) =>
              e
                ? (__LOG__(2)`SenderKeyStore.load success`, e.record)
                : (__LOG__(2)`SenderKeyStore.load failure`, null)
            );
        }
        store(e, t) {
          return this.Cz.stores.senderKeys.put({
            id: (0, r.encodeSender)(e),
            context: e.groupId,
            sender: e.sender.name,
            deviceId: e.sender.deviceId,
            record: t,
          });
        }
        delete(e) {
          return this.Cz.stores.senderKeys.delete((0, r.encodeSender)(e));
        }
      };
    },
    ,
    ,
    function (e, t, n) {
      n.r(t),
        n.d(t, "startInPageBackend", function () {
          return B;
        }),
        n.d(t, "startInWorkerBackend", function () {
          return V;
        });
      var r = n(30),
        i = n(41),
        a = n(12),
        o = n(3),
        u = n(6),
        s = n(239),
        l = n(344),
        c = n(8),
        d = n.n(c),
        f = n(313),
        _ = n(24),
        p = n(43),
        v = n(279),
        h = n(110),
        m = n(14),
        g = n(31),
        y = !1,
        b = n(100),
        w = "https://v-k.whatsapp.net";
      function O(e, t, n, r, i) {
        var a, s;
        __LOG__(2)`RegFlow.requestCode(${t})`;
        var l,
          c = e.getStore(),
          f = !1;
        switch (c.type) {
          case "BAN_APPEAL":
          case "ENTERING_PHONE_NUMBER":
          case "CONFIRM_FOUND_PHONE_NUMBER":
            f = !0;
            break;
          case "REQUESTING_CODE":
            f =
              null ==
                (l =
                  "sms" === i
                    ? null == (a = c.state)
                      ? void 0
                      : a.smsWait
                    : null == (s = c.state)
                    ? void 0
                    : s.voiceWait) || !(0, o.o)(l);
        }
        if (f) {
          "sms" === i
            ? e.updateStore({
                type: "SENDING_SMS",
                country: t,
                localNumber: n,
                maskedPhoneNumber: r,
              })
            : e.updateStore({ type: "SENDING_VOICE" });
          var _ = t.cc;
          return (
            __LOG__(2)`setUser sending request`,
            (function (e, t, n, r) {
              var i;
              i = "sms" === r ? e.startSmsListener() : Promise.resolve();
              var a = t.cc;
              return (
                __LOG__(2)`setUser sending request`,
                Promise.all([e.getToken(n), e.getSlowParams(), i]).then((e) => {
                  var t = d()(e, 2),
                    i = t[0],
                    o = t[1],
                    s = u.i.get(),
                    l = null != s.lc ? { lc: s.lc } : null,
                    c = (0, g.c)(
                      w,
                      "/v2/code",
                      Object.assign(
                        {
                          cc: a,
                          in: n,
                          mcc: s.mcc,
                          mnc: s.mnc,
                          lg: s.lg,
                          method: r,
                          token: i,
                          "x-whatsapp-ua": s.userAgent,
                        },
                        l,
                        o
                      )
                    );
                  return (0, g.k)(c)
                    .then((e) => e.json())
                    .catch(() => ({ status: "network_error" }));
                })
              );
            })(e, t, n, i).then((a) => {
              switch ((__LOG__(2)`reg result`, a.status)) {
                case "sent":
                  return void (0, h.a)(5e3).then(() => {
                    var i = e.getStore();
                    if (
                      "SENDING_SMS" === i.type ||
                      "SENDING_VOICE" === i.type
                    ) {
                      var u = {
                        type: "CODE_PENDING",
                        method: a.method,
                        smsWait: k(a.sms_wait),
                        voiceWait: k(a.voice_wait),
                        requestTime: (0, o.D)(),
                      };
                      e.updateStore({
                        type: "REQUESTING_CODE",
                        country: t,
                        localNumber: n,
                        maskedPhoneNumber: r,
                        state: u,
                      });
                    }
                  });
                case "ok":
                  return (
                    __LOG__(2)`RegFlow.requestCode already done`,
                    void e.finish(a)
                  );
                case "network_error":
                  return void e.updateStore({
                    type: "ENTERING_PHONE_NUMBER",
                    prefill: { country: t, localNumber: n },
                    state: {
                      type: "CODE_REQUEST_ERROR",
                      reason: "network_error",
                      localNumber: n,
                      cc: _,
                    },
                  });
                case "fail":
                  return void (function (e, t, n) {
                    var r = t.localNumber,
                      i = t.country,
                      a = t.method,
                      u = t.maskedPhoneNumber,
                      s = n.reason;
                    if ((0, b.b)(s))
                      e.updateStore(
                        (0, b.a)(e, t, s, "CODE_REQUEST_ERROR", n.param)
                      );
                    else
                      switch (s) {
                        case "too_many_guesses":
                        case "too_many_all_methods":
                          var l = s;
                          e.updateStore({
                            type: "ENTERING_PHONE_NUMBER",
                            prefill: { country: i, localNumber: r },
                            state: {
                              type: "CODE_REQUEST_ERROR",
                              reason: l,
                              localNumber: r,
                              cc: i.cc,
                              retryAfter: k(n.retry_after) || void 0,
                            },
                          });
                          break;
                        case "bad_token":
                          return void e.updateStore({
                            type: "BLOCKED",
                            error: { reason: s, localNumber: r, cc: i.cc },
                          });
                        case "too_recent":
                        case "too_many":
                        case "temporarily_unavailable":
                        case "next_method":
                        case "provider_timeout":
                        case "provider_unroutable":
                        case "no_routes":
                          var c = {
                            type: "CODE_REQUEST_ERROR",
                            reason: s,
                            retryAfter: k(n.retry_after),
                            smsWait: k(n.sms_wait),
                            voiceWait: k(n.voice_wait),
                            method: a,
                            localNumber: r,
                            cc: i.cc,
                            requestTime: (0, o.D)(),
                          };
                          return void e.updateStore({
                            type: "REQUESTING_CODE",
                            country: i,
                            localNumber: r,
                            maskedPhoneNumber: u,
                            state: c,
                          });
                        default:
                          __LOG__(
                            4
                          )`requestCode: Unexpected result reason ${s} `,
                            e.updateStore((0, b.c)(r, i, "CODE_REQUEST_ERROR"));
                      }
                  })(
                    e,
                    {
                      method: i,
                      maskedPhoneNumber: r,
                      country: t,
                      localNumber: n,
                    },
                    a
                  );
                default:
                  __LOG__(
                    4
                  )`requestCode: Unexpected result status ${a.status} `,
                    a.status,
                    e.updateStore((0, b.c)(n, t, "CODE_REQUEST_ERROR"));
              }
            })
          );
        }
        __LOG__(
          4
        )`unexpected call to RegFlow.requestCode with store.type ${c.type}`;
      }
      function E(e, t, n) {
        __LOG__(2)`RegFlow.registerWithCode`;
        var r = e.getStoreInStates2(["REQUESTING_CODE", "SENDING_SMS"]);
        if (r) {
          var i = r.country,
            a = r.localNumber,
            o = r.maskedPhoneNumber,
            s = r.state,
            l = i.cc;
          return (
            e.updateStore({ type: "VERIFYING" }),
            (function (e, t, n, r, i) {
              __LOG__(2)`RegFlow.register`;
              var a = t.cc;
              return e.getSlowParams().then((t) => {
                var o = u.i.get(),
                  s = null != o.lc ? { lc: o.lc } : null,
                  l = (0, g.c)(
                    w,
                    "/v2/register",
                    Object.assign(
                      {
                        cc: a,
                        in: n,
                        lg: o.lg,
                        code: r.join(""),
                        entered: i,
                        "x-whatsapp-ua": o.userAgent,
                      },
                      s,
                      t
                    )
                  );
                return e
                  .stopSmsListener()
                  .then((e) => (0, g.k)(l))
                  .then((e) => e.json())
                  .catch(() => ({ status: "network_error" }));
              });
            })(e, i, a, t, n).then((n) => {
              switch (n.status) {
                case "ok":
                  return (
                    __LOG__(2)`RegFlow: Registration success, ${n}`,
                    void e.finish(n)
                  );
                case "network_error":
                  return void e.updateStore({
                    type: "REQUESTING_CODE",
                    country: i,
                    localNumber: a,
                    maskedPhoneNumber: o,
                    state: {
                      type: "CODE_VERIFY_ERROR",
                      reason: "network_error",
                      retryAfter: null == s ? void 0 : s.retryAfter,
                      smsWait: null == s ? void 0 : s.smsWait,
                      voiceWait: null == s ? void 0 : s.voiceWait,
                      code: t,
                      localNumber: a,
                      cc: l,
                      requestTime: null == s ? void 0 : s.requestTime,
                    },
                  });
                case "fail":
                  return (
                    __LOG__(3)`RegFlow: Failed to register`,
                    "security_code" === n.reason
                      ? void e.updateStore({
                          type: "TWO_FACTOR",
                          country: i,
                          localNumber: a,
                          code: t,
                          state: {
                            type: "TWO_FACTOR_PENDING",
                            guessWait: k(n.guess_wait),
                            emailWait: k(n.email_wait),
                            wipeWait: k(n.wipe_wait),
                            wipeType: n.wipe_type,
                            wipeToken: n.wipe_token,
                            guessesLeft: n.guesses_left,
                          },
                        })
                      : void (function (e, t, n) {
                          var r = t.code,
                            i = t.localNumber,
                            a = t.country,
                            o = t.maskedPhoneNumber;
                          if ((0, b.b)(n.reason))
                            e.updateStore(
                              (0, b.a)(
                                e,
                                t,
                                n.reason,
                                "CODE_VERIFY_ERROR",
                                n.param
                              )
                            );
                          else {
                            var u = n.reason;
                            switch (u) {
                              case "too_many_guesses":
                                return void e.updateStore({
                                  type: "ENTERING_PHONE_NUMBER",
                                  prefill: { country: a, localNumber: i },
                                  state: {
                                    type: "CODE_VERIFY_ERROR",
                                    reason: "too_many_guesses",
                                    localNumber: i,
                                    cc: a.cc,
                                    retryAfter: k(n.retry_after) || void 0,
                                  },
                                });
                              case "missing":
                              case "stale":
                              case "guessed_too_fast":
                              case "mismatch":
                              case "temporarily_unavailable":
                                var s,
                                  l,
                                  c,
                                  d = {
                                    type: "CODE_VERIFY_ERROR",
                                    reason: u,
                                    code: r,
                                    localNumber: i,
                                    cc: a.cc,
                                    retryAfter: k(n.retry_after),
                                    smsWait:
                                      null == (s = t.prev) ? void 0 : s.smsWait,
                                    voiceWait:
                                      null == (l = t.prev)
                                        ? void 0
                                        : l.voiceWait,
                                    requestTime:
                                      null == (c = t.prev)
                                        ? void 0
                                        : c.requestTime,
                                  };
                                return void e.updateStore({
                                  type: "REQUESTING_CODE",
                                  country: a,
                                  localNumber: i,
                                  maskedPhoneNumber: o,
                                  state: d,
                                });
                              default:
                                __LOG__(
                                  4
                                )`registerWithCode: Unexpected result reason ${u}`,
                                  e.updateStore(
                                    (0, b.c)(i, a, "CODE_VERIFY_ERROR")
                                  );
                            }
                          }
                        })(
                          e,
                          {
                            code: t,
                            maskedPhoneNumber: o,
                            localNumber: a,
                            country: i,
                            prev: s,
                          },
                          n
                        )
                  );
                default:
                  __LOG__(
                    4
                  )`registerWithCodeCode: Unexpected result status ${n.status}`,
                    n.status,
                    e.updateStore((0, b.c)(a, i, "CODE_VERIFY_ERROR"));
              }
            })
          );
        }
      }
      function I(e, t, n, r) {
        __LOG__(2)`RegFlow.security response ${t}`;
        var i = n.country,
          a = n.localNumber,
          o = n.code,
          u = n.state;
        switch (t.status) {
          case "ok":
            return (
              __LOG__(2)`RegFlow: two-factor auth success, ${t}`,
              r ? (0, f.c)(r).then(() => e.finish(t)) : e.finish(t)
            );
          case "sent":
            return void e.updateStore({
              type: "TWO_FACTOR",
              country: i,
              localNumber: a,
              code: o,
              state: {
                type: "TWO_FACTOR_ERROR",
                reason: "email_sent",
                guessWait: k(t.guess_wait),
                emailWait: k(t.email_wait),
                wipeWait: k(t.wipe_wait),
                wipeType: t.wipe_type,
                wipeToken: t.wipe_token,
                guessesLeft: t.guesses_left,
                localNumber: a,
                cc: i.cc,
              },
            });
          case "network_error":
            return (
              __LOG__(
                3
              )`RegFlow: Network error while verifying two-factor, ${t}`,
              void e.updateStore({
                type: "TWO_FACTOR",
                country: i,
                localNumber: a,
                code: o,
                state: {
                  type: "TWO_FACTOR_ERROR",
                  reason: "network_error",
                  guessWait: u.guessWait,
                  guessesLeft: u.guessesLeft,
                  emailWait: u.emailWait,
                  wipeWait: u.wipeWait,
                  wipeType: u.wipeType,
                  wipeToken: u.wipeToken,
                  localNumber: a,
                  cc: i.cc,
                },
              })
            );
          case "fail":
            var s = t.reason;
            if ((0, b.b)(s))
              return void e.updateStore(
                (0, b.a)(
                  e,
                  { localNumber: a, country: i },
                  s,
                  "TWO_FACTOR_ERROR",
                  t.param
                )
              );
            __LOG__(3)`RegFlow: Failed to verify two-factor`;
            var l = {
              type: "TWO_FACTOR_ERROR",
              reason: s,
              guessWait: k(t.guess_wait),
              emailWait: k(t.email_wait),
              wipeWait: k(t.wipe_wait),
              wipeType: t.wipe_type,
              wipeToken: t.wipe_token,
              guessesLeft: t.guesses_left,
              localNumber: a,
              cc: i.cc,
            };
            switch (s) {
              case "guessed_too_fast":
              case "incorrect":
              case "mismatch":
              case "reset_too_soon":
              case "stale":
              case "temporarily_unavailable":
              case "too_many_guesses":
                return void e.updateStore({
                  type: "TWO_FACTOR",
                  country: i,
                  localNumber: a,
                  code: o,
                  state: l,
                });
              default:
                return (
                  __LOG__(4)`registerWithCode: Unexpected fail reason ${s}`,
                  void e.updateStore(S(i, a, o, t))
                );
            }
          default:
            __LOG__(4)`registerWithCode: Unexpected fail status ${t.status}`,
              t.status,
              e.updateStore(S(i, a, o, t));
        }
      }
      function S(e, t, n, r) {
        return {
          type: "TWO_FACTOR",
          country: e,
          localNumber: t,
          code: n,
          state: {
            type: "TWO_FACTOR_ERROR",
            reason: "unknown",
            guessWait: k(r.guess_wait),
            emailWait: k(r.email_wait),
            wipeWait: k(r.wipe_wait),
            wipeType: r.wipe_type,
            wipeToken: r.wipe_token,
            guessesLeft: r.guesses_left,
            localNumber: t,
            cc: e.cc,
          },
        };
      }
      function k(e) {
        return null == e || -1 === e ? null : (0, o.k)(e);
      }
      var L = n(207),
        G = n(174);
      function M(e) {
        return 6 === e.filter((e) => null != e && e > -1 && e < 10).length;
      }
      var A = n(146),
        P = n(22),
        T = n(145),
        N = n(377),
        C = n(9),
        R = n(201),
        x = n(446),
        D = n(338),
        U = {
          downloadSyncBlob: x.a,
          getDeviceFingerprint: function () {
            return (0, R.a)().then((e) => {
              if (null == e)
                throw new Error("syncd: primary has no companions");
              var t = e.currentIndex,
                n = e.devices,
                r = e.rawId;
              if (null == n) throw new Error("syncd: devices list is empty");
              return {
                currentIndex: t,
                deviceIndexes: n.map((e) => e.keyIndex),
                rawId: r,
              };
            });
          },
          handleSyncBeforeApplyPatch: () => Promise.resolve(),
          handleSyncCompleted: () => Promise.resolve(),
          handleSyncDelayApplyingPatchUntilUIUnblocks: () => Promise.resolve(),
          handleSyncdFatal: () => Promise.resolve(),
          sendSyncdKeyRequest: () => Promise.resolve([]),
          sendSyncdKeyRotation: (e) =>
            (0, D.a)({ type: "key_rotation", keys: e }),
          uploadSyncExternalPatch: () => {
            throw Error("uploadSyncExternalPatch is not implemented");
          },
        },
        j = n(69),
        $ = n(302);
      function F(e) {
        switch (e.name) {
          case j.a.SYNCD_FATAL_ERROR:
          case j.a.APP_STATE_SYNC_DAILY:
          case j.a.SYNCD_CRITICAL_EVENT:
          case j.a.SYNCD_CRITICAL_BOOTSTRAP_STAGE:
          case j.a.SYNCD_BOOTSTRAP_APP_STATE_DOWNLOAD:
          case j.a.SYNCD_DECRYPT_MUTATIONS:
          case j.a.SYNCD_BOOTSTRAP_DATA_APPLIED:
          case j.a.SYNCD_KEY_ROTATION:
          case j.a.SYNCD:
          case j.a.DECRYPT_MESSAGE_FINAL:
          case j.a.DELETE_THREAD:
          case j.a.DOWNLOAD_AND_DECRYPT:
          case j.a.FRANKING_VALIDATION:
          case j.a.GET_DEVICES:
          case j.a.MEDIA_DOWNLOAD:
          case j.a.MEDIA_UPLOAD:
          case j.a.MESSAGE_DECRYPTION:
          case j.a.MESSAGE_ENCRYPTION:
          case j.a.OFFLINE_QUEUE:
          case j.a.OFFLINE_RETRY:
          case j.a.QUERY_GROUP:
          case j.a.QUERY_GROUPS:
          case j.a.RETRY_RECEIPTS_SENT:
          case j.a.SAVE_SESSION_RETRIES:
          case j.a.SAVE_SIGNAL_SESSION_RETRIES:
          case j.a.SEND_MESSAGE:
          case j.a.REMOVE_PARTICIPANTS:
          case j.a.CREATE_GROUP:
          case j.a.RECEIVE_MESSAGE:
          case j.a.TEST_MAW_ENCRYPT_MESSAGE:
          case j.a.TEST_MAW_WA_SEND_MESSAGE:
          case j.a.TEST_RECEIVE_MESSAGE:
          case j.a.WA_FAILURE_STANZA:
          case j.a.ICDC_ERROR:
          case j.a.WA_DISCONNECT:
          case j.a.WA_JOBS_ORCHESTRATOR:
        }
      }
      function B(e, t, n, r) {
        return (0, a.h)(!0), K(e, t, n, r);
      }
      function V(e, t) {
        var n = (0, T.makeBridge)();
        return K(e, n, !1, t).then(() => n);
      }
      function K(e, t, n, c) {
        var f;
        switch (
          (__LOG__(2)`startBackend invoked`,
          (f = {
            config: { orchestratorVersion: () => "default" },
            jidUtils: (0, C.o)({ platform: "whatsapp" }),
            myJids: null,
            db: U,
            runInTransaction: () => {
              throw new Error("Not implemented yet");
            },
          }),
          (0, N.e)(f),
          (0, a.f)(t),
          (0, $.b)(F),
          e.mode)
        ) {
          case "main":
            return (
              (0, o.z)(u.g.get()),
              (0, s.c)(t, n, c).then(() => {
                (0, r.m)();
              })
            );
          case "reg":
            (0, i.M)(),
              (function (e, t) {
                var n = null,
                  r = () =>
                    (0, P.H)()
                      .then(A.c)
                      .then((t) => {
                        (n = null),
                          e.fireAndForget("regPage", "regEnded", {
                            appInfo: t,
                          });
                      });
                (0, s.a)(e),
                  e.setHandlers("registration", {
                    initReg() {
                      n || (n = new l.a(e, r));
                    },
                    acceptRegAlert() {
                      if (!n) throw new Error("acceptRegAlert without initReg");
                      u.D.set(null);
                    },
                    goToWelcomeScreen() {
                      if (!n)
                        throw new Error("goToWelcomeScreen without initReg");
                      var e;
                      (e = n).getStoreInState("ENTERING_PHONE_NUMBER") &&
                        e.updateStore({ type: "UNINITIALIZED" });
                    },
                    acceptPolicy(e) {
                      var t = e.queryJioHeaders;
                      if (!n) throw new Error("acceptPolicy without initReg");
                      (function (e, t) {
                        if (e.getStoreInState("UNINITIALIZED")) {
                          y = !0;
                          var n = () => {
                            e.updateStore({ type: "ENTERING_PHONE_NUMBER" });
                          };
                          t
                            ? e
                                .updateStore({ type: "QUERYING_JIO_HEADERS" })
                                .then(() => {
                                  var t, r;
                                  "QUERYING_JIO_HEADERS" ===
                                    e.getStore().type &&
                                    ((t = (0, g.k)(
                                      "https://kaios.whatsapp.net/static/v4/conf/prod/jioheaders.json"
                                    )
                                      .then((e) => e.json())
                                      .catch(() => null)
                                      .then((e) => {
                                        if (null != e) {
                                          var t = e.APIKey,
                                            n = e.DecryptionKeyEndpoint,
                                            r = e.APIEndpoint,
                                            i = e.WaitingTimeMs,
                                            a = e.MasterKeyId,
                                            o = e.TestMsisdn,
                                            u = e.TestMmeIP,
                                            s = e.TestImsi;
                                          if ("string" != typeof t)
                                            return (
                                              __LOG__(
                                                4
                                              )`Jio headers configuration call: API key is not a string`,
                                              void SEND_LOGS(
                                                "jio-phone-api-headers"
                                              )
                                            );
                                          if ("string" != typeof n)
                                            return (
                                              __LOG__(
                                                4
                                              )`Jio headers configuration call: decryption key endpoint is not a string`,
                                              void SEND_LOGS(
                                                "jio-phone-api-headers"
                                              )
                                            );
                                          if ("string" != typeof r)
                                            return (
                                              __LOG__(
                                                4
                                              )`Jio headers configuration call: API endpoint key is not a string`,
                                              void SEND_LOGS(
                                                "jio-phone-api-headers"
                                              )
                                            );
                                          if ("string" != typeof a)
                                            return (
                                              __LOG__(
                                                4
                                              )`Jio headers configuration call: master key id is not a string`,
                                              void SEND_LOGS(
                                                "jio-phone-api-headers"
                                              )
                                            );
                                          if ("number" != typeof i)
                                            return (
                                              __LOG__(
                                                4
                                              )`Jio headers configuration call: waiting time is not a number`,
                                              void SEND_LOGS(
                                                "jio-phone-api-headers"
                                              )
                                            );
                                          if (i < 0)
                                            return (
                                              __LOG__(
                                                4
                                              )`Jio headers configuration call: waiting time is lesser than zero`,
                                              void SEND_LOGS(
                                                "jio-phone-api-headers"
                                              )
                                            );
                                          var l = {
                                            apiKey: t,
                                            decryptionKeyEndpoint: n,
                                            apiEndpoint: r,
                                            masterKeyId: a,
                                            waitingTimeMs: i,
                                          };
                                          return (
                                            o &&
                                              u &&
                                              s &&
                                              (l.staging = {
                                                msisdn: o,
                                                mmeIP: u,
                                                imsi: s,
                                              }),
                                            l
                                          );
                                        }
                                        __LOG__(
                                          4
                                        )`Jio headers configuration call failed`;
                                      })),
                                    (r = (0, h.a)(1500)),
                                    Promise.race([t, r]))
                                      .then((t) => {
                                        if (
                                          "QUERYING_JIO_HEADERS" ===
                                            e.getStore().type &&
                                          t
                                        )
                                          return (function (e) {
                                            if (!y)
                                              return (
                                                __LOG__(
                                                  4
                                                )`findUserPhoneNumberViaJioHeaders called without accepting the terms`,
                                                SEND_LOGS(
                                                  "jio-headers-terms-not-accepted"
                                                ),
                                                Promise.resolve()
                                              );
                                            var t = (0, o.D)().toString(),
                                              n = {
                                                "x-api-key": e.apiKey,
                                                version: "2",
                                                info: t,
                                              },
                                              r = e.staging;
                                            r &&
                                              ((n["x-msisdn"] = r.msisdn),
                                              (n["x-mme-ip"] = r.mmeIP),
                                              (n["x-imsi"] = r.imsi));
                                            var i = (0, g.j)(e.apiEndpoint, {
                                                responseType: "json",
                                                headers: n,
                                              })
                                                .catch(() => null)
                                                .then((n) => {
                                                  if (null != n) {
                                                    var r = n.response,
                                                      i = r.msisdn,
                                                      a = r.unique1,
                                                      o = r.unique2,
                                                      u = r.unique3,
                                                      s = r.unique4,
                                                      l = r.signature1,
                                                      c = r.signature2,
                                                      d = r.info,
                                                      f = r.maskedPhoneNumber;
                                                    if (d === t)
                                                      if ("string" == typeof a)
                                                        if (
                                                          "string" == typeof u
                                                        )
                                                          if (u.length > 100)
                                                            __LOG__(
                                                              4
                                                            )`Jio headers API call: sensitive mac salt is suspiciously long`;
                                                          else if (
                                                            "string" == typeof o
                                                          )
                                                            if (o.length > 100)
                                                              __LOG__(
                                                                4
                                                              )`Jio headers API call: insensitive mac salt is suspiciously long`;
                                                            else if (
                                                              "string" ==
                                                              typeof c
                                                            )
                                                              if (
                                                                c.length > 100
                                                              )
                                                                __LOG__(
                                                                  4
                                                                )`Jio headers API call: sensitive mac is suspiciously long`;
                                                              else if (
                                                                "string" ==
                                                                typeof i
                                                              )
                                                                if (
                                                                  "string" ==
                                                                  typeof f
                                                                )
                                                                  if (
                                                                    "string" ==
                                                                    typeof l
                                                                  )
                                                                    if (
                                                                      l.length >
                                                                      100
                                                                    )
                                                                      __LOG__(
                                                                        4
                                                                      )`Jio headers API call: insensitive mac is suspiciously long`;
                                                                    else {
                                                                      var _;
                                                                      try {
                                                                        _ = (0,
                                                                        p.b)(i);
                                                                      } catch (e) {
                                                                        return void __LOG__(
                                                                          4
                                                                        )`Jio headers API call: msisdn is not a valid base64 string`;
                                                                      }
                                                                      var v =
                                                                        _.byteLength;
                                                                      if (
                                                                        v < 16
                                                                      )
                                                                        __LOG__(
                                                                          4
                                                                        )`Jio headers API call: msisdn is too short (${v})`;
                                                                      else {
                                                                        var h;
                                                                        try {
                                                                          h =
                                                                            (0,
                                                                            p.b)(
                                                                              s
                                                                            );
                                                                        } catch (e) {
                                                                          return void __LOG__(
                                                                            4
                                                                          )`Jio headers API call: iv is not a valid base64 string`;
                                                                        }
                                                                        var m =
                                                                          h.byteLength;
                                                                        if (
                                                                          !(
                                                                            m <
                                                                            16
                                                                          )
                                                                        ) {
                                                                          var y =
                                                                            new FormData();
                                                                          return (
                                                                            y.append(
                                                                              "pcdex",
                                                                              (function (
                                                                                e,
                                                                                t,
                                                                                n,
                                                                                r,
                                                                                i,
                                                                                a,
                                                                                o,
                                                                                u,
                                                                                s,
                                                                                l
                                                                              ) {
                                                                                return [
                                                                                  "pcdex",
                                                                                  e,
                                                                                  t,
                                                                                  n,
                                                                                  r,
                                                                                  i,
                                                                                  a,
                                                                                  o,
                                                                                  u,
                                                                                  s,
                                                                                  l,
                                                                                ].join(
                                                                                  "|"
                                                                                );
                                                                              })(
                                                                                e.masterKeyId,
                                                                                a,
                                                                                t,
                                                                                f,
                                                                                o,
                                                                                l,
                                                                                s,
                                                                                i,
                                                                                u,
                                                                                c
                                                                              )
                                                                            ),
                                                                            (0,
                                                                            g.k)(
                                                                              e.decryptionKeyEndpoint,
                                                                              {
                                                                                method:
                                                                                  "POST",
                                                                                body: y,
                                                                              }
                                                                            )
                                                                              .then(
                                                                                (
                                                                                  e
                                                                                ) =>
                                                                                  e.json()
                                                                              )
                                                                              .then(
                                                                                (
                                                                                  e
                                                                                ) => [
                                                                                  e,
                                                                                  _,
                                                                                  h,
                                                                                  f,
                                                                                ]
                                                                              )
                                                                              .catch(
                                                                                () =>
                                                                                  null
                                                                              )
                                                                          );
                                                                        }
                                                                        __LOG__(
                                                                          4
                                                                        )`Jio headers API call: iv is too short (${m})`;
                                                                      }
                                                                    }
                                                                  else
                                                                    __LOG__(
                                                                      4
                                                                    )`Jio headers API call: insensitive mac is not a string`;
                                                                else
                                                                  __LOG__(
                                                                    4
                                                                  )`Jio headers API call: masked phone number is not a string`;
                                                              else
                                                                __LOG__(
                                                                  4
                                                                )`Jio headers API call: msisdn is not a string`;
                                                            else
                                                              __LOG__(
                                                                4
                                                              )`Jio headers API call: sensitive mac is not a string`;
                                                          else
                                                            __LOG__(
                                                              4
                                                            )`Jio headers API call: insensitive mac salt is not a string`;
                                                        else
                                                          __LOG__(
                                                            4
                                                          )`Jio headers API call: sensitive mac salt is not a string`;
                                                      else
                                                        __LOG__(
                                                          4
                                                        )`Jio headers API call: encryption salt is not a string`;
                                                    else
                                                      __LOG__(
                                                        4
                                                      )`Jio headers API call: incorrect device verification info`;
                                                  } else
                                                    __LOG__(
                                                      4
                                                    )`Jio headers API call failed`;
                                                })
                                                .then((e) => {
                                                  if (null != e) {
                                                    var n = d()(e, 4),
                                                      r = n[0],
                                                      i = n[1],
                                                      a = n[2],
                                                      o = n[3],
                                                      u = r.DecryptionKey;
                                                    if (r.Info === t)
                                                      if (
                                                        "string" == typeof u
                                                      ) {
                                                        var s;
                                                        try {
                                                          s = new Uint8Array(
                                                            (0, p.b)(u)
                                                          );
                                                        } catch (e) {
                                                          return void __LOG__(
                                                            4
                                                          )`Decryption Key API: failed to base64 decode the decryption key`;
                                                        }
                                                        var l = s.byteLength;
                                                        if (32 === l) {
                                                          var c =
                                                              new Uint8Array(
                                                                a.slice(0, 16)
                                                              ),
                                                            f = new Uint8Array(
                                                              i.slice(0, 16)
                                                            );
                                                          return (0, v.b)(
                                                            s,
                                                            c,
                                                            f
                                                          ).then((e) => [
                                                            _.a
                                                              .build(e)
                                                              .readString(
                                                                e.byteLength
                                                              ),
                                                            o,
                                                          ]);
                                                        }
                                                        __LOG__(
                                                          4
                                                        )`Decryption Key API call: the decryption key has incorrect length: ${l}`;
                                                      } else
                                                        __LOG__(
                                                          4
                                                        )`Decryption Key API call: decryption key is not a string`;
                                                    else
                                                      __LOG__(
                                                        4
                                                      )`Decryption Key API call: incorrect device verification info`;
                                                  } else
                                                    __LOG__(
                                                      4
                                                    )`Decryption Key API call failed`;
                                                })
                                                .then((e) => {
                                                  if (null != e) {
                                                    var t = d()(e, 2),
                                                      n = t[0],
                                                      r = t[1];
                                                    if (n.startsWith(m.r.cc))
                                                      return [
                                                        n.slice(m.r.cc.length),
                                                        r,
                                                      ];
                                                    __LOG__(
                                                      4
                                                    )`Decrypted phone number does not start with INDIA prefix`;
                                                  } else
                                                    __LOG__(
                                                      4
                                                    )`Decryption of phone number failed`;
                                                })
                                                .catch(() => {
                                                  __LOG__(
                                                    4
                                                  )`Failed to decrypt phone number from JIO headers response`;
                                                }),
                                              a = (0, h.a)(e.waitingTimeMs);
                                            return Promise.race([i, a]);
                                          })(t);
                                      })
                                      .then((t) => {
                                        if (
                                          "QUERYING_JIO_HEADERS" ===
                                          e.getStore().type
                                        )
                                          if (t) {
                                            var r = d()(t, 2),
                                              i = r[0],
                                              a = r[1];
                                            e.updateStore({
                                              type: "CONFIRM_FOUND_PHONE_NUMBER",
                                              localNumber: i,
                                              maskedPhoneNumber: a,
                                              country: m.r,
                                            });
                                          } else n();
                                      });
                                })
                            : n();
                        }
                      })(n, t);
                    },
                    rejectFoundPhoneNumber() {
                      if (!n)
                        throw new Error(
                          "rejectFoundPhoneNumber without initReg"
                        );
                      var e;
                      ("CONFIRM_FOUND_PHONE_NUMBER" !==
                        (e = n).getStore().type &&
                        "QUERYING_JIO_HEADERS" !== e.getStore().type) ||
                        e.updateStore({ type: "ENTERING_PHONE_NUMBER" });
                    },
                    acceptFoundPhoneNumber(e) {
                      var t = e.country,
                        r = e.localNumber,
                        i = e.maskedPhoneNumber;
                      if (!n)
                        throw new Error(
                          "acceptFoundPhoneNumber without initReg"
                        );
                      (function (e, t, n, r) {
                        "CONFIRM_FOUND_PHONE_NUMBER" === e.getStore().type &&
                          O(e, t, n, r, "sms");
                      })(n, t, r, i);
                    },
                    updateCountry(e) {
                      var t = e.country;
                      if (!n) throw new Error("updateCountry without initReg");
                      (function (e, t) {
                        var n = e.getStore();
                        "COUNTRY_SELECT" === n.type &&
                          e.updateStore({
                            type: "ENTERING_PHONE_NUMBER",
                            prefill: { country: t, localNumber: n.localNumber },
                          });
                      })(n, t);
                    },
                    goToCountrySelect(e) {
                      var t,
                        r,
                        i,
                        a,
                        o = e.phoneNumber;
                      if (!n)
                        throw new Error("goToCountrySelect without initReg");
                      (r = o),
                        "ENTERING_PHONE_NUMBER" ===
                          (a = (t = n).getStore()).type &&
                          t.updateStore({
                            type: "COUNTRY_SELECT",
                            country:
                              null == (i = a.prefill) ? void 0 : i.country,
                            localNumber: r,
                          });
                    },
                    clearPhoneNumberStatus() {
                      if (!n)
                        throw new Error(
                          "clearPhoneNumberStatus without initReg"
                        );
                      var e, t, r, i;
                      "ENTERING_PHONE_NUMBER" ===
                        (i = (e = n).getStore()).type &&
                        e.updateStore({
                          type: "ENTERING_PHONE_NUMBER",
                          prefill: {
                            country:
                              null == (t = i.prefill) ? void 0 : t.country,
                            localNumber:
                              null == (r = i.prefill) ? void 0 : r.localNumber,
                          },
                        });
                    },
                    goToEditPhoneNumber() {
                      if (!n)
                        throw new Error("goToEditPhoneNumber without initReg");
                      (function (e) {
                        var t = e.getStore();
                        if ("COUNTRY_SELECT" === t.type)
                          e.updateStore({
                            type: "ENTERING_PHONE_NUMBER",
                            prefill: {
                              country: t.country,
                              localNumber: t.localNumber,
                            },
                          });
                        else if ("REQUESTING_CODE" === t.type) {
                          var n = t.maskedPhoneNumber ? "" : t.localNumber;
                          e.updateStore({
                            type: "ENTERING_PHONE_NUMBER",
                            prefill: { country: t.country, localNumber: n },
                          });
                        } else if ("BLOCKED" === t.type)
                          e.updateStore({ type: "ENTERING_PHONE_NUMBER" });
                        else if ("REQUESTING_CODE_BAN_APPEAL" === t.type) {
                          var r = t.country,
                            i = t.localNumber;
                          e.updateStore({
                            type: "ENTERING_PHONE_NUMBER",
                            prefill: { country: r, localNumber: i },
                          });
                        } else
                          "BLOCKED_BAN_APPEAL_PRE" === t.type ||
                          "BAN_APPEAL" === t.type ||
                          "BLOCKED_BAN_APPEAL" === t.type
                            ? e.updateStore({ type: "ENTERING_PHONE_NUMBER" })
                            : __LOG__(
                                3
                              )`Tried to go to edit phone number from unexpected screen ${t.type}`;
                      })(n);
                    },
                    verifyPhoneExists(e) {
                      var t = e.country,
                        r = e.localNumber;
                      if (!n)
                        throw new Error("verifyPhoneExists without initReg");
                      (function (e, t, n) {
                        var r = e.getStoreInState("ENTERING_PHONE_NUMBER");
                        r
                          ? (function (e, t, n) {
                              return e.getSlowParams().then((e) => {
                                __LOG__(
                                  2
                                )`verifyPhoneExists sending exists request`;
                                var r = u.i.get(),
                                  i = null != r.lc ? { lc: r.lc } : null,
                                  a = t.cc,
                                  o = (0, g.c)(
                                    w,
                                    "/v2/exist",
                                    Object.assign(
                                      {
                                        cc: a,
                                        in: n,
                                        lg: r.lg,
                                        "x-whatsapp-ua": r.userAgent,
                                      },
                                      i,
                                      e
                                    )
                                  );
                                return (0, g.k)(o)
                                  .then((e) => e.json())
                                  .catch(
                                    (e) => (
                                      __LOG__(4)`verifyPhoneExists fetch error`,
                                      { status: "network_error" }
                                    )
                                  );
                              });
                            })(e, t, n).then((i) => {
                              switch (i.status) {
                                case "ok":
                                  e.updateStore({
                                    type: "ENTERING_PHONE_NUMBER",
                                    prefill: { country: t, localNumber: n },
                                    regExistResult: { result: "skip" },
                                  });
                                  break;
                                case "network_error":
                                  e.updateStore({
                                    type: "ENTERING_PHONE_NUMBER",
                                    prefill: { country: t, localNumber: n },
                                    regExistResult: {
                                      result: "error",
                                      reason: "network_error",
                                    },
                                  });
                                  break;
                                case "fail":
                                  (function (e, t, n) {
                                    var r = t.country,
                                      i = t.localNumber,
                                      a = n.reason;
                                    if (
                                      "blocked" === n.reason &&
                                      n.in_app_ban_appeal &&
                                      n.in_app_ban_appeal > 0
                                    )
                                      e.updateStore({
                                        type: "ENTERING_PHONE_NUMBER",
                                        prefill: { country: r, localNumber: i },
                                        regExistResult: { result: "banned" },
                                      });
                                    else if ((0, b.b)(a))
                                      e.updateStore(
                                        (0, b.a)(
                                          e,
                                          t,
                                          a,
                                          "EXISTS_ERROR",
                                          n.param
                                        )
                                      );
                                    else
                                      switch (a) {
                                        case "incorrect":
                                          return void e.updateStore({
                                            type: "ENTERING_PHONE_NUMBER",
                                            prefill: {
                                              country: r,
                                              localNumber: i,
                                            },
                                            regExistResult: { result: "code" },
                                          });
                                        case "length_long":
                                        case "length_short":
                                        case "format_wrong":
                                        case "temporarily_unavailable":
                                          return void e.updateStore({
                                            type: "ENTERING_PHONE_NUMBER",
                                            prefill: {
                                              country: r,
                                              localNumber: i,
                                            },
                                            regExistResult: {
                                              result: "error",
                                              reason: a,
                                              retryAfter:
                                                k(n.retry_after) || void 0,
                                            },
                                          });
                                        default:
                                          __LOG__(
                                            4
                                          )`verifyPhoneExists: Unexpected result reason ${a}`,
                                            e.updateStore(
                                              (0, b.c)(i, r, "EXISTS_ERROR")
                                            );
                                      }
                                  })(
                                    e,
                                    { country: t, localNumber: n, store: r },
                                    i
                                  );
                                  break;
                                default:
                                  __LOG__(
                                    4
                                  )`verifyPhoneExists: Unexpected result status ${i.status}`,
                                    i.status,
                                    e.updateStore(
                                      (0, b.c)(n, t, "EXISTS_ERROR")
                                    );
                              }
                            })
                          : Promise.resolve();
                      })(n, t, r);
                    },
                    requestCode(e) {
                      var t = e.country,
                        r = e.localNumber,
                        i = e.maskedPhoneNumber,
                        a = e.method;
                      if (!n) throw new Error("requestCode without initReg");
                      O(n, t, r, i, a);
                    },
                    registerWithCode(e) {
                      var t = e.code;
                      if (!M(t))
                        throw new Error(
                          "registerWithCode called with fewer than 6 single digits"
                        );
                      if (!n)
                        throw new Error("registerWithCode without initReg");
                      E(n, t, L.b);
                    },
                    verifyTwoFactor(e) {
                      var t = e.pin;
                      if (!n)
                        throw new Error("verifyTwoFactor without initReg");
                      (function (e, t) {
                        __LOG__(2)`RegFlow.verifyTwoFactor`;
                        var n = e.getStore();
                        if ("TWO_FACTOR" === n.type) {
                          var r = n.country,
                            i = n.localNumber;
                          e.updateStore({ type: "VERIFYING" }),
                            (function (e, t, n, r) {
                              return (
                                __LOG__(2)`RegFlow.verifyTwoFactor`,
                                e.getSlowParams().then((e) => {
                                  var i = u.i.get(),
                                    a = t.cc,
                                    o = (0, g.c)(
                                      w,
                                      "/v2/security",
                                      Object.assign(
                                        {
                                          cc: a,
                                          in: n,
                                          code: r.join(""),
                                          "x-whatsapp-ua": i.userAgent,
                                        },
                                        e
                                      )
                                    );
                                  return (0, g.k)(o)
                                    .then((e) => e.json())
                                    .catch(() => ({ status: "network_error" }));
                                })
                              );
                            })(e, r, i, t).then((r) => I(e, r, n, t));
                        }
                      })(n, t);
                    },
                    sendForgotPINEmail() {
                      if (!n)
                        throw new Error("sendForgotPINEmail without initReg");
                      (function (e) {
                        __LOG__(2)`RegFlow.sendForgotPINEmail`;
                        var t = e.getStore();
                        if ("TWO_FACTOR" === t.type) {
                          var n = t.country,
                            r = t.localNumber;
                          e.updateStore({ type: "SENDING_EMAIL" }),
                            (function (e, t, n) {
                              return (
                                __LOG__(2)`RegFlow.sendForgotPINEmail`,
                                e.getSlowParams().then((e) => {
                                  var r = t.cc,
                                    i = u.i.get(),
                                    a = (0, g.c)(
                                      w,
                                      "/v2/security",
                                      Object.assign(
                                        {
                                          cc: r,
                                          in: n,
                                          reset: "email",
                                          "x-whatsapp-ua": i.userAgent,
                                        },
                                        e
                                      )
                                    );
                                  return (0, g.k)(a)
                                    .then((e) => e.json())
                                    .catch(() => ({ status: "network_error" }));
                                })
                              );
                            })(e, n, r).then((n) => I(e, n, t));
                        }
                      })(n);
                    },
                    resetAccount(e) {
                      var t = e.token;
                      if (!n)
                        throw new Error("sendForgotPINEmail without initReg");
                      (function (e, t) {
                        __LOG__(2)`RegFlow.resetAccount`;
                        var n = e.getStoreInState("TWO_FACTOR");
                        if (n) {
                          var r = n.country,
                            i = n.localNumber;
                          e.updateStore({ type: "RESETTING" }),
                            (function (e, t, n, r) {
                              return e.getSlowParams().then((e) => {
                                var i = u.i.get(),
                                  a = t.cc,
                                  o = (0, g.c)(
                                    w,
                                    "/v2/security",
                                    Object.assign(
                                      {
                                        cc: a,
                                        in: n,
                                        reset: "wipe",
                                        wipe_token: r,
                                        "x-whatsapp-ua": i.userAgent,
                                      },
                                      e
                                    )
                                  );
                                return (0, g.k)(o)
                                  .then((e) => e.json())
                                  .catch(() => ({ status: "network_error" }));
                              });
                            })(e, r, i, t).then((t) => I(e, t, n));
                        }
                      })(n, t);
                    },
                    smsCodeDetected(e) {
                      var t = e.code;
                      if (n) {
                        var r = n,
                          i = r.getStore();
                        "REQUESTING_CODE_BAN_APPEAL" === i.type ||
                        "SENDING_SMS_BAN_APPEAL" === i.type
                          ? (0, G.g)(r, t, L.a)
                          : E(r, t, L.a);
                      }
                    },
                    requestCodeBanAppeal(e) {
                      var t = e.country,
                        r = e.localNumber,
                        i = e.method,
                        a = e.banInfo;
                      n && (0, G.e)(n, t, r, i, a);
                    },
                    registerWithCodeBanAppeal(e) {
                      var t = e.code;
                      if (!M(t))
                        throw new Error(
                          "registerWithCodeBanAppeal called with fewer than 6 single digits"
                        );
                      n && (0, G.g)(n, t, L.b);
                    },
                    fetchBanAppealStatus() {
                      n && (0, G.b)(n);
                    },
                    submitBanAppeal(e) {
                      var t = e.content;
                      if (n) return (0, G.f)(n, t);
                    },
                    goToBanAppealBlocked(e) {
                      var t = e.content;
                      if (n) return (0, G.d)(n, t);
                    },
                    goToBanAppeal() {
                      if (n) return (0, G.c)(n);
                    },
                    clearBanAppealErrorStatus() {
                      if (n) return (0, G.a)(n);
                    },
                  }),
                  e.fireAndForget("regPage", "initPushEndpoint", {}),
                  e.setNamespaceHandler("backend", (e, t, r) => {
                    var i;
                    n && "receivedPush" === e && (i = (0, G.b)(n)), r && r(i);
                  });
              })(t);
            break;
          case "deleting":
            (0, s.b)(t);
            break;
          default:
            e.mode;
        }
        return Promise.resolve();
      }
    },
    ,
    ,
    function (e, t, n) {
      n.r(t);
      var r = n(57),
        i = n(12),
        a = n(120),
        o = n(39),
        u = n(16),
        s = n(81),
        l = n(5),
        c = n(6),
        d = n(9),
        f = n(24),
        _ = lib_libsignal.libsignal.IdentityKeyStore;
      t.default = class extends _ {
        constructor(e, t, n) {
          super(e, t), (this.bz = new s.a()), (this.by = n);
        }
        get_key_pair() {
          return this.by.getMyStaticKeyPair();
        }
        get_local_registration_id() {
          return this.by.getMyRegId();
        }
        cA() {
          return this.by.stores.meta
            .get(r.LATEST_IDENTITY_ID)
            .then((e) => (e ? e.value + 1 : 1));
        }
        save_identity(e, t, n) {
          var s = 33 === t.length;
          s &&
            5 !== t[0] &&
            (__LOG__(4)`IdentityKeyStore unknown key type ${t[0]}`,
            SEND_LOGS("signal-unknown-key-type"));
          var _ = s ? t : f.a.build(5, t).readByteArray(),
            p = e.deviceId === d.c;
          return this.bz
            .enqueue(() => {
              var t = (0, r.encodeAddress)(e);
              return (0, l.i)(this.by.stores.identities.get(t))
                .then((t) => {
                  if (!p) {
                    if (n) return !t || !(0, a.c)(t.identity, _);
                    if (t && (0, a.c)(t.identity, _)) return !1;
                    throw new Error(
                      "Signal tried to override existing identity for companion device"
                    );
                  }
                  return t && !(0, a.c)(t.identity, _)
                    ? ((0, i.c)("event", "identityVerificationChanged", {
                        jid: e.name,
                      }),
                      (0, o.b)()
                        .waitUntilPersisted(
                          u.e.saveKeyChange(e.name, _, c.Q.get())
                        )
                        .then(() => !0))
                    : !t;
                })
                .then((i) => {
                  if (i)
                    return this.by.transact("rw", ["meta", "identities"], () =>
                      this.cA().then((i) => {
                        var a = {
                          address: t,
                          jid: e.name,
                          deviceId: e.deviceId,
                          identityId: i,
                          identity: _,
                        };
                        if (n) {
                          var o = n.rawId,
                            u = n.keyIndex;
                          a = Object.assign({}, a, { rawId: o, keyIndex: u });
                        }
                        return (0, l.c)([
                          this.by.stores.identities.put(a),
                          this.by.stores.meta.put({
                            key: r.LATEST_IDENTITY_ID,
                            value: i,
                          }),
                        ]);
                      })
                    );
                });
            })
            .then(() => {});
        }
        is_trusted_identity(e, t) {
          return Promise.resolve(!0);
        }
        getPublicKey(e) {
          return this.bz.enqueue(() => {
            var t = (0, r.encodeAddress)(e);
            return (0, l.i)(this.by.stores.identities.get(t)).then((e) =>
              e ? e.identity : null
            );
          });
        }
        getPublicKeys(e) {
          return this.bz.enqueue(() => {
            var t = e.map(r.encodeAddress);
            return (0, l.i)(
              this.by.stores.identities.where("address").anyOf(t).toArray()
            ).then((e) =>
              e.map((e) => ({
                jid: e.jid,
                deviceId: e.deviceId,
                publicKey: e.identity,
              }))
            );
          });
        }
        getIdentityId(e) {
          return this.bz.enqueue(() => {
            var t = (0, r.encodeAddress)(e);
            return (0, l.i)(this.by.stores.identities.get(t)).then((e) =>
              e ? e.identityId : null
            );
          });
        }
        getKnownIdentityIds(e) {
          return this.bz.enqueue(() => {
            var t = e.map(r.encodeAddress);
            return (0, l.i)(
              this.by.stores.identities.where("address").anyOf(t).toArray()
            ).then((e) => {
              var t = [];
              return (
                e.forEach((e) => {
                  var n = e.jid,
                    r = e.deviceId,
                    i = e.identityId;
                  null != i && t.push({ jid: n, deviceId: r, identityId: i });
                }),
                t
              );
            });
          });
        }
      };
    },
  ],
]);
